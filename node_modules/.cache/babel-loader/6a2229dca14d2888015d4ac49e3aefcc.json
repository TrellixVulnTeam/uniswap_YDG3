{"ast":null,"code":"import _styled from \"styled-components\";\n\nvar _jsxFileName = \"/Users/safahi/Downloads/interface-4.30.1/src/components/vote/DelegateModal.tsx\",\n    _s = $RefreshSig$();\n\nimport { Trans } from \"@lingui/react\";\nimport { isAddress } from '@ethersproject/address';\nimport { useState } from 'react';\nimport { X } from 'react-feather';\nimport { formatCurrencyAmount } from 'utils/formatCurrencyAmount';\nimport { UNI } from '../../constants/tokens';\nimport useENS from '../../hooks/useENS';\nimport { useActiveWeb3React } from '../../hooks/web3';\nimport { useDelegateCallback } from '../../state/governance/hooks';\nimport { useTokenBalance } from '../../state/wallet/hooks';\nimport { ThemedText } from '../../theme';\nimport AddressInputPanel from '../AddressInputPanel';\nimport { ButtonPrimary } from '../Button';\nimport { AutoColumn } from '../Column';\nimport Modal from '../Modal';\nimport { LoadingView, SubmittedView } from '../ModalViews';\nimport { RowBetween } from '../Row';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContentWrapper = _styled(AutoColumn).withConfig({\n  displayName: \"DelegateModal__ContentWrapper\",\n  componentId: \"sc-1t2p2c9-0\"\n})([\"width:100%;padding:24px;\"]);\n\nconst StyledClosed = _styled(X).withConfig({\n  displayName: \"DelegateModal__StyledClosed\",\n  componentId: \"sc-1t2p2c9-1\"\n})([\":hover{cursor:pointer;}\"]);\n\nconst TextButton = _styled.div.withConfig({\n  displayName: \"DelegateModal__TextButton\",\n  componentId: \"sc-1t2p2c9-2\"\n})([\":hover{cursor:pointer;}\"]);\n\nexport default function DelegateModal({\n  isOpen,\n  onDismiss,\n  title\n}) {\n  _s();\n\n  const {\n    account,\n    chainId\n  } = useActiveWeb3React(); // state for delegate input\n\n  const [usingDelegate, setUsingDelegate] = useState(false);\n  const [typed, setTyped] = useState('');\n\n  function handleRecipientType(val) {\n    setTyped(val);\n  } // monitor for self delegation or input for third part delegate\n  // default is self delegation\n\n\n  const activeDelegate = usingDelegate ? typed : account;\n  const {\n    address: parsedAddress\n  } = useENS(activeDelegate); // get the number of votes available to delegate\n\n  const uniBalance = useTokenBalance(account !== null && account !== void 0 ? account : undefined, chainId ? UNI[chainId] : undefined);\n  const delegateCallback = useDelegateCallback(); // monitor call to help UI loading state\n\n  const [hash, setHash] = useState();\n  const [attempting, setAttempting] = useState(false); // wrapper to reset state on modal close\n\n  function wrappedOndismiss() {\n    setHash(undefined);\n    setAttempting(false);\n    onDismiss();\n  }\n\n  async function onDelegate() {\n    var _delegateCallback;\n\n    setAttempting(true); // if callback not returned properly ignore\n\n    if (!delegateCallback) return; // try delegation and store hash\n\n    const hash = await ((_delegateCallback = delegateCallback(parsedAddress !== null && parsedAddress !== void 0 ? parsedAddress : undefined)) === null || _delegateCallback === void 0 ? void 0 : _delegateCallback.catch(error => {\n      setAttempting(false);\n      console.log(error);\n    }));\n\n    if (hash) {\n      setHash(hash);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onDismiss: wrappedOndismiss,\n    maxHeight: 90,\n    children: [!attempting && !hash && /*#__PURE__*/_jsxDEV(ContentWrapper, {\n      gap: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n        gap: \"lg\",\n        justify: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n          children: [/*#__PURE__*/_jsxDEV(ThemedText.MediumHeader, {\n            fontWeight: 500,\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledClosed, {\n            stroke: \"black\",\n            onClick: wrappedOndismiss\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ThemedText.Body, {\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Earned UNI tokens represent voting shares in Uniswap governance.\"\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ThemedText.Body, {\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"You can either vote on each proposal yourself or delegate your votes to a third party.\"\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), usingDelegate && /*#__PURE__*/_jsxDEV(AddressInputPanel, {\n          value: typed,\n          onChange: handleRecipientType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n          disabled: !isAddress(parsedAddress !== null && parsedAddress !== void 0 ? parsedAddress : ''),\n          onClick: onDelegate,\n          children: /*#__PURE__*/_jsxDEV(ThemedText.MediumHeader, {\n            color: \"white\",\n            children: usingDelegate ? /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"Delegate Votes\"\n            }, void 0, false, void 0, this) : /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"Self Delegate\"\n            }, void 0, false, void 0, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextButton, {\n          onClick: () => setUsingDelegate(!usingDelegate),\n          children: /*#__PURE__*/_jsxDEV(ThemedText.Blue, {\n            children: usingDelegate ? /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"Remove Delegate\"\n            }, void 0, false, void 0, this) : /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"Add Delegate +\"\n            }, void 0, false, void 0, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), attempting && !hash && /*#__PURE__*/_jsxDEV(LoadingView, {\n      onDismiss: wrappedOndismiss,\n      children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n        gap: \"12px\",\n        justify: 'center',\n        children: [/*#__PURE__*/_jsxDEV(ThemedText.LargeHeader, {\n          children: usingDelegate ? /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Delegating votes\"\n          }, void 0, false, void 0, this) : /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Unlocking Votes\"\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ThemedText.Main, {\n          fontSize: 36,\n          children: [\" \", formatCurrencyAmount(uniBalance, 4)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this), hash && /*#__PURE__*/_jsxDEV(SubmittedView, {\n      onDismiss: wrappedOndismiss,\n      hash: hash,\n      children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n        gap: \"12px\",\n        justify: 'center',\n        children: [/*#__PURE__*/_jsxDEV(ThemedText.LargeHeader, {\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Transaction Submitted\"\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ThemedText.Main, {\n          fontSize: 36,\n          children: formatCurrencyAmount(uniBalance, 4)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DelegateModal, \"R3Cl1jWaaAajHUdrJpmuczdfw7I=\", false, function () {\n  return [useActiveWeb3React, useENS, useTokenBalance, useDelegateCallback];\n});\n\n_c = DelegateModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"DelegateModal\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/components/vote/DelegateModal.tsx"],"names":["isAddress","useState","X","formatCurrencyAmount","UNI","useENS","useActiveWeb3React","useDelegateCallback","useTokenBalance","ThemedText","AddressInputPanel","ButtonPrimary","AutoColumn","Modal","LoadingView","SubmittedView","RowBetween","ContentWrapper","styled","StyledClosed","TextButton","div","DelegateModal","isOpen","onDismiss","title","account","chainId","usingDelegate","setUsingDelegate","typed","setTyped","handleRecipientType","val","activeDelegate","address","parsedAddress","uniBalance","undefined","delegateCallback","hash","setHash","attempting","setAttempting","wrappedOndismiss","onDelegate","catch","error","console","log"],"mappings":"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","sourcesContent":["import { isAddress } from '@ethersproject/address'\nimport { Trans } from '@lingui/macro'\nimport { ReactNode, useState } from 'react'\nimport { X } from 'react-feather'\nimport styled from 'styled-components/macro'\nimport { formatCurrencyAmount } from 'utils/formatCurrencyAmount'\n\nimport { UNI } from '../../constants/tokens'\nimport useENS from '../../hooks/useENS'\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport { useDelegateCallback } from '../../state/governance/hooks'\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { ThemedText } from '../../theme'\nimport AddressInputPanel from '../AddressInputPanel'\nimport { ButtonPrimary } from '../Button'\nimport { AutoColumn } from '../Column'\nimport Modal from '../Modal'\nimport { LoadingView, SubmittedView } from '../ModalViews'\nimport { RowBetween } from '../Row'\n\nconst ContentWrapper = styled(AutoColumn)`\n  width: 100%;\n  padding: 24px;\n`\n\nconst StyledClosed = styled(X)`\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst TextButton = styled.div`\n  :hover {\n    cursor: pointer;\n  }\n`\n\ninterface VoteModalProps {\n  isOpen: boolean\n  onDismiss: () => void\n  title: ReactNode\n}\n\nexport default function DelegateModal({ isOpen, onDismiss, title }: VoteModalProps) {\n  const { account, chainId } = useActiveWeb3React()\n\n  // state for delegate input\n  const [usingDelegate, setUsingDelegate] = useState(false)\n  const [typed, setTyped] = useState('')\n  function handleRecipientType(val: string) {\n    setTyped(val)\n  }\n\n  // monitor for self delegation or input for third part delegate\n  // default is self delegation\n  const activeDelegate = usingDelegate ? typed : account\n  const { address: parsedAddress } = useENS(activeDelegate)\n\n  // get the number of votes available to delegate\n  const uniBalance = useTokenBalance(account ?? undefined, chainId ? UNI[chainId] : undefined)\n\n  const delegateCallback = useDelegateCallback()\n\n  // monitor call to help UI loading state\n  const [hash, setHash] = useState<string | undefined>()\n  const [attempting, setAttempting] = useState(false)\n\n  // wrapper to reset state on modal close\n  function wrappedOndismiss() {\n    setHash(undefined)\n    setAttempting(false)\n    onDismiss()\n  }\n\n  async function onDelegate() {\n    setAttempting(true)\n\n    // if callback not returned properly ignore\n    if (!delegateCallback) return\n\n    // try delegation and store hash\n    const hash = await delegateCallback(parsedAddress ?? undefined)?.catch((error) => {\n      setAttempting(false)\n      console.log(error)\n    })\n\n    if (hash) {\n      setHash(hash)\n    }\n  }\n\n  return (\n    <Modal isOpen={isOpen} onDismiss={wrappedOndismiss} maxHeight={90}>\n      {!attempting && !hash && (\n        <ContentWrapper gap=\"lg\">\n          <AutoColumn gap=\"lg\" justify=\"center\">\n            <RowBetween>\n              <ThemedText.MediumHeader fontWeight={500}>{title}</ThemedText.MediumHeader>\n              <StyledClosed stroke=\"black\" onClick={wrappedOndismiss} />\n            </RowBetween>\n            <ThemedText.Body>\n              <Trans>Earned UNI tokens represent voting shares in Uniswap governance.</Trans>\n            </ThemedText.Body>\n            <ThemedText.Body>\n              <Trans>You can either vote on each proposal yourself or delegate your votes to a third party.</Trans>\n            </ThemedText.Body>\n            {usingDelegate && <AddressInputPanel value={typed} onChange={handleRecipientType} />}\n            <ButtonPrimary disabled={!isAddress(parsedAddress ?? '')} onClick={onDelegate}>\n              <ThemedText.MediumHeader color=\"white\">\n                {usingDelegate ? <Trans>Delegate Votes</Trans> : <Trans>Self Delegate</Trans>}\n              </ThemedText.MediumHeader>\n            </ButtonPrimary>\n            <TextButton onClick={() => setUsingDelegate(!usingDelegate)}>\n              <ThemedText.Blue>\n                {usingDelegate ? <Trans>Remove Delegate</Trans> : <Trans>Add Delegate +</Trans>}\n              </ThemedText.Blue>\n            </TextButton>\n          </AutoColumn>\n        </ContentWrapper>\n      )}\n      {attempting && !hash && (\n        <LoadingView onDismiss={wrappedOndismiss}>\n          <AutoColumn gap=\"12px\" justify={'center'}>\n            <ThemedText.LargeHeader>\n              {usingDelegate ? <Trans>Delegating votes</Trans> : <Trans>Unlocking Votes</Trans>}\n            </ThemedText.LargeHeader>\n            <ThemedText.Main fontSize={36}> {formatCurrencyAmount(uniBalance, 4)}</ThemedText.Main>\n          </AutoColumn>\n        </LoadingView>\n      )}\n      {hash && (\n        <SubmittedView onDismiss={wrappedOndismiss} hash={hash}>\n          <AutoColumn gap=\"12px\" justify={'center'}>\n            <ThemedText.LargeHeader>\n              <Trans>Transaction Submitted</Trans>\n            </ThemedText.LargeHeader>\n            <ThemedText.Main fontSize={36}>{formatCurrencyAmount(uniBalance, 4)}</ThemedText.Main>\n          </AutoColumn>\n        </SubmittedView>\n      )}\n    </Modal>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}