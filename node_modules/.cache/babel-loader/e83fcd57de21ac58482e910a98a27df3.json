{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Downloads/interface-4.30.1/src/components/SearchModal/CurrencySearchModal.tsx\",\n    _s = $RefreshSig$();\n\nimport usePrevious from 'hooks/usePrevious';\nimport { useCallback, useEffect, useState } from 'react';\nimport useLast from '../../hooks/useLast';\nimport { WrappedTokenInfo } from '../../state/lists/wrappedTokenInfo';\nimport Modal from '../Modal';\nimport { CurrencySearch } from './CurrencySearch';\nimport { ImportList } from './ImportList';\nimport { ImportToken } from './ImportToken';\nimport Manage from './Manage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let CurrencyModalView;\n\n(function (CurrencyModalView) {\n  CurrencyModalView[CurrencyModalView[\"search\"] = 0] = \"search\";\n  CurrencyModalView[CurrencyModalView[\"manage\"] = 1] = \"manage\";\n  CurrencyModalView[CurrencyModalView[\"importToken\"] = 2] = \"importToken\";\n  CurrencyModalView[CurrencyModalView[\"importList\"] = 3] = \"importList\";\n})(CurrencyModalView || (CurrencyModalView = {}));\n\nexport default function CurrencySearchModal({\n  isOpen,\n  onDismiss,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n  showCommonBases = false,\n  showCurrencyAmount = true,\n  disableNonToken = false\n}) {\n  _s();\n\n  const [modalView, setModalView] = useState(CurrencyModalView.manage);\n  const lastOpen = useLast(isOpen);\n  useEffect(() => {\n    if (isOpen && !lastOpen) {\n      setModalView(CurrencyModalView.search);\n    }\n  }, [isOpen, lastOpen]);\n  const handleCurrencySelect = useCallback(currency => {\n    onCurrencySelect(currency);\n    onDismiss();\n  }, [onDismiss, onCurrencySelect]); // for token import view\n\n  const prevView = usePrevious(modalView); // used for import token flow\n\n  const [importToken, setImportToken] = useState(); // used for import list\n\n  const [importList, setImportList] = useState();\n  const [listURL, setListUrl] = useState();\n  const showImportView = useCallback(() => setModalView(CurrencyModalView.importToken), [setModalView]);\n  const showManageView = useCallback(() => setModalView(CurrencyModalView.manage), [setModalView]);\n  const handleBackImport = useCallback(() => setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search), [setModalView, prevView]); // change min height if not searching\n\n  const minHeight = modalView === CurrencyModalView.importToken || modalView === CurrencyModalView.importList ? 40 : 80;\n  let content = null;\n\n  switch (modalView) {\n    case CurrencyModalView.search:\n      content = /*#__PURE__*/_jsxDEV(CurrencySearch, {\n        isOpen: isOpen,\n        onDismiss: onDismiss,\n        onCurrencySelect: handleCurrencySelect,\n        selectedCurrency: selectedCurrency,\n        otherSelectedCurrency: otherSelectedCurrency,\n        showCommonBases: showCommonBases,\n        showCurrencyAmount: showCurrencyAmount,\n        disableNonToken: disableNonToken,\n        showImportView: showImportView,\n        setImportToken: setImportToken,\n        showManageView: showManageView\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this);\n      break;\n\n    case CurrencyModalView.importToken:\n      if (importToken) {\n        content = /*#__PURE__*/_jsxDEV(ImportToken, {\n          tokens: [importToken],\n          onDismiss: onDismiss,\n          list: importToken instanceof WrappedTokenInfo ? importToken.list : undefined,\n          onBack: handleBackImport,\n          handleCurrencySelect: handleCurrencySelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this);\n      }\n\n      break;\n\n    case CurrencyModalView.importList:\n      if (importList && listURL) {\n        content = /*#__PURE__*/_jsxDEV(ImportList, {\n          list: importList,\n          listURL: listURL,\n          onDismiss: onDismiss,\n          setModalView: setModalView\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 19\n        }, this);\n      }\n\n      break;\n\n    case CurrencyModalView.manage:\n      content = /*#__PURE__*/_jsxDEV(Manage, {\n        onDismiss: onDismiss,\n        setModalView: setModalView,\n        setImportToken: setImportToken,\n        setImportList: setImportList,\n        setListUrl: setListUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this);\n      break;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onDismiss: onDismiss,\n    maxHeight: 80,\n    minHeight: minHeight,\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CurrencySearchModal, \"PVnnOUViP1ibVUs9o07OPEjZbm8=\", false, function () {\n  return [useLast, usePrevious];\n});\n\n_c = CurrencySearchModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrencySearchModal\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/components/SearchModal/CurrencySearchModal.tsx"],"names":["usePrevious","useCallback","useEffect","useState","useLast","WrappedTokenInfo","Modal","CurrencySearch","ImportList","ImportToken","Manage","CurrencyModalView","CurrencySearchModal","isOpen","onDismiss","onCurrencySelect","selectedCurrency","otherSelectedCurrency","showCommonBases","showCurrencyAmount","disableNonToken","modalView","setModalView","manage","lastOpen","search","handleCurrencySelect","currency","prevView","importToken","setImportToken","importList","setImportList","listURL","setListUrl","showImportView","showManageView","handleBackImport","minHeight","content","list","undefined"],"mappings":"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","sourcesContent":["import { Currency, Token } from '@uniswap/sdk-core'\nimport { TokenList } from '@uniswap/token-lists'\nimport usePrevious from 'hooks/usePrevious'\nimport { useCallback, useEffect, useState } from 'react'\n\nimport useLast from '../../hooks/useLast'\nimport { WrappedTokenInfo } from '../../state/lists/wrappedTokenInfo'\nimport Modal from '../Modal'\nimport { CurrencySearch } from './CurrencySearch'\nimport { ImportList } from './ImportList'\nimport { ImportToken } from './ImportToken'\nimport Manage from './Manage'\n\ninterface CurrencySearchModalProps {\n  isOpen: boolean\n  onDismiss: () => void\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n  showCurrencyAmount?: boolean\n  disableNonToken?: boolean\n}\n\nexport enum CurrencyModalView {\n  search,\n  manage,\n  importToken,\n  importList,\n}\n\nexport default function CurrencySearchModal({\n  isOpen,\n  onDismiss,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n  showCommonBases = false,\n  showCurrencyAmount = true,\n  disableNonToken = false,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.manage)\n  const lastOpen = useLast(isOpen)\n\n  useEffect(() => {\n    if (isOpen && !lastOpen) {\n      setModalView(CurrencyModalView.search)\n    }\n  }, [isOpen, lastOpen])\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      onDismiss()\n    },\n    [onDismiss, onCurrencySelect]\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const showImportView = useCallback(() => setModalView(CurrencyModalView.importToken), [setModalView])\n  const showManageView = useCallback(() => setModalView(CurrencyModalView.manage), [setModalView])\n  const handleBackImport = useCallback(\n    () => setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    [setModalView, prevView]\n  )\n\n  // change min height if not searching\n  const minHeight = modalView === CurrencyModalView.importToken || modalView === CurrencyModalView.importList ? 40 : 80\n  let content = null\n  switch (modalView) {\n    case CurrencyModalView.search:\n      content = (\n        <CurrencySearch\n          isOpen={isOpen}\n          onDismiss={onDismiss}\n          onCurrencySelect={handleCurrencySelect}\n          selectedCurrency={selectedCurrency}\n          otherSelectedCurrency={otherSelectedCurrency}\n          showCommonBases={showCommonBases}\n          showCurrencyAmount={showCurrencyAmount}\n          disableNonToken={disableNonToken}\n          showImportView={showImportView}\n          setImportToken={setImportToken}\n          showManageView={showManageView}\n        />\n      )\n      break\n    case CurrencyModalView.importToken:\n      if (importToken) {\n        content = (\n          <ImportToken\n            tokens={[importToken]}\n            onDismiss={onDismiss}\n            list={importToken instanceof WrappedTokenInfo ? importToken.list : undefined}\n            onBack={handleBackImport}\n            handleCurrencySelect={handleCurrencySelect}\n          />\n        )\n      }\n      break\n    case CurrencyModalView.importList:\n      if (importList && listURL) {\n        content = <ImportList list={importList} listURL={listURL} onDismiss={onDismiss} setModalView={setModalView} />\n      }\n      break\n    case CurrencyModalView.manage:\n      content = (\n        <Manage\n          onDismiss={onDismiss}\n          setModalView={setModalView}\n          setImportToken={setImportToken}\n          setImportList={setImportList}\n          setListUrl={setListUrl}\n        />\n      )\n      break\n  }\n  return (\n    <Modal isOpen={isOpen} onDismiss={onDismiss} maxHeight={80} minHeight={minHeight}>\n      {content}\n    </Modal>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}