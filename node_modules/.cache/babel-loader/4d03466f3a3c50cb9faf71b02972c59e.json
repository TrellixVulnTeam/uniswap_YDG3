{"ast":null,"code":"import { ThemeContext as _ThemeContext } from \"styled-components\";\nimport _styled from \"styled-components\";\n\nvar _jsxFileName = \"/Users/safahi/Downloads/interface-4.30.1/src/components/swap/TradePrice.tsx\",\n    _s = $RefreshSig$();\n\nimport { Trans } from \"@lingui/react\";\nimport useUSDCPrice from 'hooks/useUSDCPrice';\nimport { useCallback, useContext } from 'react';\nimport { Text } from 'rebass';\nimport { ThemedText } from 'theme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StyledPriceContainer = _styled.button.withConfig({\n  displayName: \"TradePrice__StyledPriceContainer\",\n  componentId: \"sc-19ug97y-0\"\n})([\"background-color:transparent;border:none;cursor:pointer;align-items:center justify-content:flex-start;padding:0;grid-template-columns:1fr auto;grid-gap:0.25rem;display:flex;flex-direction:row;text-align:left;flex-wrap:wrap;padding:8px 0;user-select:text;\"]);\n\nexport default function TradePrice({\n  price,\n  showInverted,\n  setShowInverted\n}) {\n  _s();\n\n  var _price$quoteCurrency, _price$baseCurrency, _price$baseCurrency2, _price$quoteCurrency2, _ref;\n\n  const theme = useContext(_ThemeContext);\n  const usdcPrice = useUSDCPrice(showInverted ? price.baseCurrency : price.quoteCurrency);\n  let formattedPrice;\n\n  try {\n    var _price$invert;\n\n    formattedPrice = showInverted ? price.toSignificant(4) : (_price$invert = price.invert()) === null || _price$invert === void 0 ? void 0 : _price$invert.toSignificant(4);\n  } catch (error) {\n    formattedPrice = '0';\n  }\n\n  const label = showInverted ? `${(_price$quoteCurrency = price.quoteCurrency) === null || _price$quoteCurrency === void 0 ? void 0 : _price$quoteCurrency.symbol}` : `${(_price$baseCurrency = price.baseCurrency) === null || _price$baseCurrency === void 0 ? void 0 : _price$baseCurrency.symbol} `;\n  const labelInverted = showInverted ? `${(_price$baseCurrency2 = price.baseCurrency) === null || _price$baseCurrency2 === void 0 ? void 0 : _price$baseCurrency2.symbol} ` : `${(_price$quoteCurrency2 = price.quoteCurrency) === null || _price$quoteCurrency2 === void 0 ? void 0 : _price$quoteCurrency2.symbol}`;\n  const flipPrice = useCallback(() => setShowInverted(!showInverted), [setShowInverted, showInverted]);\n  const text = `${(_ref = '1 ' + labelInverted + ' = ' + formattedPrice) !== null && _ref !== void 0 ? _ref : '-'} ${label}`;\n  return /*#__PURE__*/_jsxDEV(StyledPriceContainer, {\n    onClick: e => {\n      e.stopPropagation(); // dont want this click to affect dropdowns / hovers\n\n      flipPrice();\n    },\n    title: text,\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      fontWeight: 500,\n      color: theme.text1,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), ' ', usdcPrice && /*#__PURE__*/_jsxDEV(ThemedText.DarkGray, {\n      children: /*#__PURE__*/_jsxDEV(Trans, {\n        id: \"(${0})\",\n        values: {\n          0: usdcPrice.toSignificant(6, {\n            groupSeparator: ','\n          })\n        }\n      }, void 0, false, void 0, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TradePrice, \"C/ExF7lSZg9cISHA/KshKsAebNI=\", false, function () {\n  return [useUSDCPrice];\n});\n\n_c = TradePrice;\n\nvar _c;\n\n$RefreshReg$(_c, \"TradePrice\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/components/swap/TradePrice.tsx"],"names":["useUSDCPrice","useCallback","useContext","Text","ThemedText","StyledPriceContainer","styled","button","TradePrice","price","showInverted","setShowInverted","theme","ThemeContext","usdcPrice","baseCurrency","quoteCurrency","formattedPrice","toSignificant","invert","error","label","symbol","labelInverted","flipPrice","text","e","stopPropagation","text1","groupSeparator"],"mappings":";;;;;;;AAEA,OAAOA,YAAP,MAAyB,oBAAzB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,SAASC,IAAT,QAAqB,QAArB;AAEA,SAASC,UAAT,QAA2B,OAA3B;;;AAQA,MAAMC,oBAAoB,GAAGC,OAAM,CAACC,MAAV;AAAA;AAAA;AAAA,sQAA1B;;AAiBA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,YAAT;AAAuBC,EAAAA;AAAvB,CAApB,EAA+E;AAAA;;AAAA;;AAC5F,QAAMC,KAAK,GAAGV,UAAU,CAACW,aAAD,CAAxB;AAEA,QAAMC,SAAS,GAAGd,YAAY,CAACU,YAAY,GAAGD,KAAK,CAACM,YAAT,GAAwBN,KAAK,CAACO,aAA3C,CAA9B;AAEA,MAAIC,cAAJ;;AACA,MAAI;AAAA;;AACFA,IAAAA,cAAc,GAAGP,YAAY,GAAGD,KAAK,CAACS,aAAN,CAAoB,CAApB,CAAH,oBAA4BT,KAAK,CAACU,MAAN,EAA5B,kDAA4B,cAAgBD,aAAhB,CAA8B,CAA9B,CAAzD;AACD,GAFD,CAEE,OAAOE,KAAP,EAAc;AACdH,IAAAA,cAAc,GAAG,GAAjB;AACD;;AAED,QAAMI,KAAK,GAAGX,YAAY,GAAI,GAAD,wBAAGD,KAAK,CAACO,aAAT,yDAAG,qBAAqBM,MAAO,EAAlC,GAAuC,GAAD,uBAAGb,KAAK,CAACM,YAAT,wDAAG,oBAAoBO,MAAO,GAA9F;AACA,QAAMC,aAAa,GAAGb,YAAY,GAAI,GAAD,wBAAGD,KAAK,CAACM,YAAT,yDAAG,qBAAoBO,MAAO,GAAjC,GAAuC,GAAD,yBAAGb,KAAK,CAACO,aAAT,0DAAG,sBAAqBM,MAAO,EAAvG;AACA,QAAME,SAAS,GAAGvB,WAAW,CAAC,MAAMU,eAAe,CAAC,CAACD,YAAF,CAAtB,EAAuC,CAACC,eAAD,EAAkBD,YAAlB,CAAvC,CAA7B;AAEA,QAAMe,IAAI,GAAI,GAAD,QAAG,OAAOF,aAAP,GAAuB,KAAvB,GAA+BN,cAAlC,uCAAoD,GAAI,IAAGI,KAAM,EAA9E;AAEA,sBACE,QAAC,oBAAD;AACE,IAAA,OAAO,EAAGK,CAAD,IAAO;AACdA,MAAAA,CAAC,CAACC,eAAF,GADc,CACM;;AACpBH,MAAAA,SAAS;AACV,KAJH;AAKE,IAAA,KAAK,EAAEC,IALT;AAAA,4BAOE,QAAC,IAAD;AAAM,MAAA,UAAU,EAAE,GAAlB;AAAuB,MAAA,KAAK,EAAEb,KAAK,CAACgB,KAApC;AAAA,gBACGH;AADH;AAAA;AAAA;AAAA;AAAA,YAPF,EASU,GATV,EAUGX,SAAS,iBACR,QAAC,UAAD,CAAY,QAAZ;AAAA,6BACE;AAAA;AAAA;AAAA,aAAUA,SAAS,CAACI,aAAV,CAAwB,CAAxB,EAA2B;AAAEW,YAAAA,cAAc,EAAE;AAAlB,WAA3B;AAAV;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GApCuBrB,U;UAGJR,Y;;;KAHIQ,U","sourcesContent":["import { Trans } from '@lingui/macro'\nimport { Currency, Price } from '@uniswap/sdk-core'\nimport useUSDCPrice from 'hooks/useUSDCPrice'\nimport { useCallback, useContext } from 'react'\nimport { Text } from 'rebass'\nimport styled, { ThemeContext } from 'styled-components/macro'\nimport { ThemedText } from 'theme'\n\ninterface TradePriceProps {\n  price: Price<Currency, Currency>\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nconst StyledPriceContainer = styled.button`\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  align-items: center\n  justify-content: flex-start;\n  padding: 0;\n  grid-template-columns: 1fr auto;\n  grid-gap: 0.25rem;\n  display: flex;\n  flex-direction: row;\n  text-align: left;\n  flex-wrap: wrap;\n  padding: 8px 0;\n  user-select: text;\n`\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const theme = useContext(ThemeContext)\n\n  const usdcPrice = useUSDCPrice(showInverted ? price.baseCurrency : price.quoteCurrency)\n\n  let formattedPrice: string\n  try {\n    formattedPrice = showInverted ? price.toSignificant(4) : price.invert()?.toSignificant(4)\n  } catch (error) {\n    formattedPrice = '0'\n  }\n\n  const label = showInverted ? `${price.quoteCurrency?.symbol}` : `${price.baseCurrency?.symbol} `\n  const labelInverted = showInverted ? `${price.baseCurrency?.symbol} ` : `${price.quoteCurrency?.symbol}`\n  const flipPrice = useCallback(() => setShowInverted(!showInverted), [setShowInverted, showInverted])\n\n  const text = `${'1 ' + labelInverted + ' = ' + formattedPrice ?? '-'} ${label}`\n\n  return (\n    <StyledPriceContainer\n      onClick={(e) => {\n        e.stopPropagation() // dont want this click to affect dropdowns / hovers\n        flipPrice()\n      }}\n      title={text}\n    >\n      <Text fontWeight={500} color={theme.text1}>\n        {text}\n      </Text>{' '}\n      {usdcPrice && (\n        <ThemedText.DarkGray>\n          <Trans>(${usdcPrice.toSignificant(6, { groupSeparator: ',' })})</Trans>\n        </ThemedText.DarkGray>\n      )}\n    </StyledPriceContainer>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}