{"ast":null,"code":"import{i18n}from\"@lingui/core\";import{Trans}from\"@lingui/react\";import HoverInlineText from'components/HoverInlineText';import{useMemo}from'react';import useTheme from'../../hooks/useTheme';import{ThemedText}from'../../theme';import{warningSeverity}from'../../utils/prices';import{MouseoverTooltip}from'../Tooltip';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export function FiatValue(_ref){var fiatValue=_ref.fiatValue,priceImpact=_ref.priceImpact;var theme=useTheme();var priceImpactColor=useMemo(function(){if(!priceImpact)return undefined;if(priceImpact.lessThan('0'))return theme.green1;var severity=warningSeverity(priceImpact);if(severity<1)return theme.text3;if(severity<3)return theme.yellow1;return theme.red1;},[priceImpact,theme.green1,theme.red1,theme.text3,theme.yellow1]);return/*#__PURE__*/_jsxs(ThemedText.Body,{fontSize:14,color:fiatValue?theme.text3:theme.text4,children:[fiatValue?/*#__PURE__*/_jsx(Trans,{id:\"$<0/>\",components:{0:/*#__PURE__*/_jsx(HoverInlineText,{text:fiatValue===null||fiatValue===void 0?void 0:fiatValue.toSignificant(6,{groupSeparator:','}),textColor:fiatValue?theme.text3:theme.text4})}}):'',priceImpact?/*#__PURE__*/_jsxs(\"span\",{style:{color:priceImpactColor},children:[' ',/*#__PURE__*/_jsxs(MouseoverTooltip,{text:/*i18n*/i18n._(\"The estimated difference between the USD values of input and output amounts.\"),children:[\"(\",/*#__PURE__*/_jsx(Trans,{id:\"{0}%\",values:{0:priceImpact.multiply(-1).toSignificant(3)}}),\")\"]})]}):null]});}","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/components/CurrencyInputPanel/FiatValue.tsx"],"names":["HoverInlineText","useMemo","useTheme","ThemedText","warningSeverity","MouseoverTooltip","FiatValue","fiatValue","priceImpact","theme","priceImpactColor","undefined","lessThan","green1","severity","text3","yellow1","red1","text4","toSignificant","groupSeparator","color","multiply"],"mappings":"gEAIA,MAAOA,CAAAA,eAAP,KAA4B,4BAA5B,CACA,OAASC,OAAT,KAAwB,OAAxB,CAEA,MAAOC,CAAAA,QAAP,KAAqB,sBAArB,CACA,OAASC,UAAT,KAA2B,aAA3B,CACA,OAASC,eAAT,KAAgC,oBAAhC,CACA,OAASC,gBAAT,KAAiC,YAAjC,C,wFAEA,MAAO,SAASC,CAAAA,SAAT,MAMJ,IALDC,CAAAA,SAKC,MALDA,SAKC,CAJDC,WAIC,MAJDA,WAIC,CACD,GAAMC,CAAAA,KAAK,CAAGP,QAAQ,EAAtB,CACA,GAAMQ,CAAAA,gBAAgB,CAAGT,OAAO,CAAC,UAAM,CACrC,GAAI,CAACO,WAAL,CAAkB,MAAOG,CAAAA,SAAP,CAClB,GAAIH,WAAW,CAACI,QAAZ,CAAqB,GAArB,CAAJ,CAA+B,MAAOH,CAAAA,KAAK,CAACI,MAAb,CAC/B,GAAMC,CAAAA,QAAQ,CAAGV,eAAe,CAACI,WAAD,CAAhC,CACA,GAAIM,QAAQ,CAAG,CAAf,CAAkB,MAAOL,CAAAA,KAAK,CAACM,KAAb,CAClB,GAAID,QAAQ,CAAG,CAAf,CAAkB,MAAOL,CAAAA,KAAK,CAACO,OAAb,CAClB,MAAOP,CAAAA,KAAK,CAACQ,IAAb,CACD,CAP+B,CAO7B,CAACT,WAAD,CAAcC,KAAK,CAACI,MAApB,CAA4BJ,KAAK,CAACQ,IAAlC,CAAwCR,KAAK,CAACM,KAA9C,CAAqDN,KAAK,CAACO,OAA3D,CAP6B,CAAhC,CASA,mBACE,MAAC,UAAD,CAAY,IAAZ,EAAiB,QAAQ,CAAE,EAA3B,CAA+B,KAAK,CAAET,SAAS,CAAGE,KAAK,CAACM,KAAT,CAAiBN,KAAK,CAACS,KAAtE,WACGX,SAAS,cACR,kDAEE,KAAC,eAAD,EACE,IAAI,CAAEA,SAAF,SAAEA,SAAF,iBAAEA,SAAS,CAAEY,aAAX,CAAyB,CAAzB,CAA4B,CAAEC,cAAc,CAAE,GAAlB,CAA5B,CADR,CAEE,SAAS,CAAEb,SAAS,CAAGE,KAAK,CAACM,KAAT,CAAiBN,KAAK,CAACS,KAF7C,EAFF,GADQ,CASR,EAVJ,CAYGV,WAAW,cACV,cAAM,KAAK,CAAE,CAAEa,KAAK,CAAEX,gBAAT,CAAb,WACG,GADH,cAEE,MAAC,gBAAD,EAAkB,IAAI,SAAE,sFAAxB,4BACG,gCAAQF,WAAW,CAACc,QAAZ,CAAqB,CAAC,CAAtB,EAAyBH,aAAzB,CAAuC,CAAvC,CAAR,GADH,OAFF,GADU,CAOR,IAnBN,GADF,CAuBD","sourcesContent":["import { Trans } from '@lingui/macro'\n// eslint-disable-next-line no-restricted-imports\nimport { t } from '@lingui/macro'\nimport { Currency, CurrencyAmount, Percent } from '@uniswap/sdk-core'\nimport HoverInlineText from 'components/HoverInlineText'\nimport { useMemo } from 'react'\n\nimport useTheme from '../../hooks/useTheme'\nimport { ThemedText } from '../../theme'\nimport { warningSeverity } from '../../utils/prices'\nimport { MouseoverTooltip } from '../Tooltip'\n\nexport function FiatValue({\n  fiatValue,\n  priceImpact,\n}: {\n  fiatValue: CurrencyAmount<Currency> | null | undefined\n  priceImpact?: Percent\n}) {\n  const theme = useTheme()\n  const priceImpactColor = useMemo(() => {\n    if (!priceImpact) return undefined\n    if (priceImpact.lessThan('0')) return theme.green1\n    const severity = warningSeverity(priceImpact)\n    if (severity < 1) return theme.text3\n    if (severity < 3) return theme.yellow1\n    return theme.red1\n  }, [priceImpact, theme.green1, theme.red1, theme.text3, theme.yellow1])\n\n  return (\n    <ThemedText.Body fontSize={14} color={fiatValue ? theme.text3 : theme.text4}>\n      {fiatValue ? (\n        <Trans>\n          $\n          <HoverInlineText\n            text={fiatValue?.toSignificant(6, { groupSeparator: ',' })}\n            textColor={fiatValue ? theme.text3 : theme.text4}\n          />\n        </Trans>\n      ) : (\n        ''\n      )}\n      {priceImpact ? (\n        <span style={{ color: priceImpactColor }}>\n          {' '}\n          <MouseoverTooltip text={t`The estimated difference between the USD values of input and output amounts.`}>\n            (<Trans>{priceImpact.multiply(-1).toSignificant(3)}%</Trans>)\n          </MouseoverTooltip>\n        </span>\n      ) : null}\n    </ThemedText.Body>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}