{"ast":null,"code":"import _styled from \"styled-components\";\n\nvar _jsxFileName = \"/Users/safahi/Downloads/interface-4.30.1/src/components/SearchModal/CommonBases.tsx\",\n    _s = $RefreshSig$();\n\nimport { AutoColumn } from 'components/Column';\nimport CurrencyLogo from 'components/CurrencyLogo';\nimport { AutoRow } from 'components/Row';\nimport { COMMON_BASES } from 'constants/routing';\nimport { useTokenInfoFromActiveList } from 'hooks/useTokenInfoFromActiveList';\nimport { Text } from 'rebass';\nimport { currencyId } from 'utils/currencyId';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MobileWrapper = _styled(AutoColumn).withConfig({\n  displayName: \"CommonBases__MobileWrapper\",\n  componentId: \"sc-jm24e0-0\"\n})([\"\", \";\"], ({\n  theme\n}) => theme.mediaWidth.upToSmall`\n    display: none;\n  `);\n\nconst BaseWrapper = _styled.div.withConfig({\n  displayName: \"CommonBases__BaseWrapper\",\n  componentId: \"sc-jm24e0-1\"\n})([\"border:1px solid \", \";border-radius:10px;display:flex;padding:6px;align-items:center;:hover{cursor:\", \";background-color:\", \";}color:\", \";background-color:\", \";filter:\", \";\"], ({\n  theme,\n  disable\n}) => disable ? 'transparent' : theme.bg3, ({\n  disable\n}) => !disable && 'pointer', ({\n  theme,\n  disable\n}) => !disable && theme.bg2, ({\n  theme,\n  disable\n}) => disable && theme.text3, ({\n  theme,\n  disable\n}) => disable && theme.bg3, ({\n  disable\n}) => disable && 'grayscale(1)');\n\nexport default function CommonBases({\n  chainId,\n  onSelect,\n  selectedCurrency\n}) {\n  var _COMMON_BASES$chainId;\n\n  const bases = typeof chainId !== 'undefined' ? (_COMMON_BASES$chainId = COMMON_BASES[chainId]) !== null && _COMMON_BASES$chainId !== void 0 ? _COMMON_BASES$chainId : [] : [];\n  return bases.length > 0 ? /*#__PURE__*/_jsxDEV(MobileWrapper, {\n    gap: \"md\",\n    children: /*#__PURE__*/_jsxDEV(AutoRow, {\n      gap: \"4px\",\n      children: bases.map(currency => {\n        const isSelected = selectedCurrency === null || selectedCurrency === void 0 ? void 0 : selectedCurrency.equals(currency);\n        return /*#__PURE__*/_jsxDEV(BaseWrapper, {\n          onClick: () => !isSelected && onSelect(currency),\n          disable: isSelected,\n          children: [/*#__PURE__*/_jsxDEV(CurrencyLogoFromList, {\n            currency: currency\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            fontWeight: 500,\n            fontSize: 16,\n            children: currency.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, currencyId(currency), true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this) : null;\n}\n/** helper component to retrieve a base currency from the active token lists */\n\n_c = CommonBases;\n\nfunction CurrencyLogoFromList({\n  currency\n}) {\n  _s();\n\n  const token = useTokenInfoFromActiveList(currency);\n  return /*#__PURE__*/_jsxDEV(CurrencyLogo, {\n    currency: token,\n    style: {\n      marginRight: 8\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 10\n  }, this);\n}\n\n_s(CurrencyLogoFromList, \"5FgWZHgKwf2E7zSLbmAwtACRYNU=\", false, function () {\n  return [useTokenInfoFromActiveList];\n});\n\n_c2 = CurrencyLogoFromList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CommonBases\");\n$RefreshReg$(_c2, \"CurrencyLogoFromList\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/components/SearchModal/CommonBases.tsx"],"names":["AutoColumn","CurrencyLogo","AutoRow","COMMON_BASES","useTokenInfoFromActiveList","Text","currencyId","MobileWrapper","styled","theme","mediaWidth","upToSmall","BaseWrapper","div","disable","bg3","bg2","text3","CommonBases","chainId","onSelect","selectedCurrency","bases","length","map","currency","isSelected","equals","symbol","CurrencyLogoFromList","token","marginRight"],"mappings":"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","sourcesContent":["import { Currency } from '@uniswap/sdk-core'\nimport { AutoColumn } from 'components/Column'\nimport CurrencyLogo from 'components/CurrencyLogo'\nimport { AutoRow } from 'components/Row'\nimport { COMMON_BASES } from 'constants/routing'\nimport { useTokenInfoFromActiveList } from 'hooks/useTokenInfoFromActiveList'\nimport { Text } from 'rebass'\nimport styled from 'styled-components/macro'\nimport { currencyId } from 'utils/currencyId'\n\nconst MobileWrapper = styled(AutoColumn)`\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    display: none;\n  `};\n`\n\nconst BaseWrapper = styled.div<{ disable?: boolean }>`\n  border: 1px solid ${({ theme, disable }) => (disable ? 'transparent' : theme.bg3)};\n  border-radius: 10px;\n  display: flex;\n  padding: 6px;\n\n  align-items: center;\n  :hover {\n    cursor: ${({ disable }) => !disable && 'pointer'};\n    background-color: ${({ theme, disable }) => !disable && theme.bg2};\n  }\n\n  color: ${({ theme, disable }) => disable && theme.text3};\n  background-color: ${({ theme, disable }) => disable && theme.bg3};\n  filter: ${({ disable }) => disable && 'grayscale(1)'};\n`\n\nexport default function CommonBases({\n  chainId,\n  onSelect,\n  selectedCurrency,\n}: {\n  chainId?: number\n  selectedCurrency?: Currency | null\n  onSelect: (currency: Currency) => void\n}) {\n  const bases = typeof chainId !== 'undefined' ? COMMON_BASES[chainId] ?? [] : []\n\n  return bases.length > 0 ? (\n    <MobileWrapper gap=\"md\">\n      <AutoRow gap=\"4px\">\n        {bases.map((currency: Currency) => {\n          const isSelected = selectedCurrency?.equals(currency)\n          return (\n            <BaseWrapper\n              onClick={() => !isSelected && onSelect(currency)}\n              disable={isSelected}\n              key={currencyId(currency)}\n            >\n              <CurrencyLogoFromList currency={currency} />\n              <Text fontWeight={500} fontSize={16}>\n                {currency.symbol}\n              </Text>\n            </BaseWrapper>\n          )\n        })}\n      </AutoRow>\n    </MobileWrapper>\n  ) : null\n}\n\n/** helper component to retrieve a base currency from the active token lists */\nfunction CurrencyLogoFromList({ currency }: { currency: Currency }) {\n  const token = useTokenInfoFromActiveList(currency)\n\n  return <CurrencyLogo currency={token} style={{ marginRight: 8 }} />\n}\n"]},"metadata":{},"sourceType":"module"}