{"ast":null,"code":"import{parse}from'qs';import{useEffect}from'react';import{useAppDispatch}from'state/hooks';import{updateUserDarkMode}from'../state/user/actions';export default function DarkModeQueryParamReader(_ref){var search=_ref.location.search;var dispatch=useAppDispatch();useEffect(function(){if(!search)return;if(search.length<2)return;var parsed=parse(search,{parseArrays:false,ignoreQueryPrefix:true});var theme=parsed.theme;if(typeof theme!=='string')return;if(theme.toLowerCase()==='light'){dispatch(updateUserDarkMode({userDarkMode:false}));}else if(theme.toLowerCase()==='dark'){dispatch(updateUserDarkMode({userDarkMode:true}));}},[dispatch,search]);return null;}","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/theme/DarkModeQueryParamReader.tsx"],"names":["parse","useEffect","useAppDispatch","updateUserDarkMode","DarkModeQueryParamReader","search","location","dispatch","length","parsed","parseArrays","ignoreQueryPrefix","theme","toLowerCase","userDarkMode"],"mappings":"AAAA,OAASA,KAAT,KAAsB,IAAtB,CACA,OAASC,SAAT,KAA0B,OAA1B,CAEA,OAASC,cAAT,KAA+B,aAA/B,CAEA,OAASC,kBAAT,KAAmC,uBAAnC,CAEA,cAAe,SAASC,CAAAA,wBAAT,MAAuF,IAAvCC,CAAAA,MAAuC,MAAnDC,QAAmD,CAAvCD,MAAuC,CACpG,GAAME,CAAAA,QAAQ,CAAGL,cAAc,EAA/B,CAEAD,SAAS,CAAC,UAAM,CACd,GAAI,CAACI,MAAL,CAAa,OACb,GAAIA,MAAM,CAACG,MAAP,CAAgB,CAApB,CAAuB,OAEvB,GAAMC,CAAAA,MAAM,CAAGT,KAAK,CAACK,MAAD,CAAS,CAC3BK,WAAW,CAAE,KADc,CAE3BC,iBAAiB,CAAE,IAFQ,CAAT,CAApB,CAKA,GAAMC,CAAAA,KAAK,CAAGH,MAAM,CAACG,KAArB,CAEA,GAAI,MAAOA,CAAAA,KAAP,GAAiB,QAArB,CAA+B,OAE/B,GAAIA,KAAK,CAACC,WAAN,KAAwB,OAA5B,CAAqC,CACnCN,QAAQ,CAACJ,kBAAkB,CAAC,CAAEW,YAAY,CAAE,KAAhB,CAAD,CAAnB,CAAR,CACD,CAFD,IAEO,IAAIF,KAAK,CAACC,WAAN,KAAwB,MAA5B,CAAoC,CACzCN,QAAQ,CAACJ,kBAAkB,CAAC,CAAEW,YAAY,CAAE,IAAhB,CAAD,CAAnB,CAAR,CACD,CACF,CAlBQ,CAkBN,CAACP,QAAD,CAAWF,MAAX,CAlBM,CAAT,CAoBA,MAAO,KAAP,CACD","sourcesContent":["import { parse } from 'qs'\nimport { useEffect } from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useAppDispatch } from 'state/hooks'\n\nimport { updateUserDarkMode } from '../state/user/actions'\n\nexport default function DarkModeQueryParamReader({ location: { search } }: RouteComponentProps): null {\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (!search) return\n    if (search.length < 2) return\n\n    const parsed = parse(search, {\n      parseArrays: false,\n      ignoreQueryPrefix: true,\n    })\n\n    const theme = parsed.theme\n\n    if (typeof theme !== 'string') return\n\n    if (theme.toLowerCase() === 'light') {\n      dispatch(updateUserDarkMode({ userDarkMode: false }))\n    } else if (theme.toLowerCase() === 'dark') {\n      dispatch(updateUserDarkMode({ userDarkMode: true }))\n    }\n  }, [dispatch, search])\n\n  return null\n}\n"]},"metadata":{},"sourceType":"module"}