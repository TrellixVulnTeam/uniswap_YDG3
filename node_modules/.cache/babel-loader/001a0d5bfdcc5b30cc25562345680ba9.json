{"ast":null,"code":"import _regeneratorRuntime from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _defineProperty from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{ThemeContext as _ThemeContext}from\"styled-components\";import{Trans}from\"@lingui/react\";import{BigNumber}from'@ethersproject/bignumber';import{Percent}from'@uniswap/sdk-core';import UnsupportedCurrencyFooter from'components/swap/UnsupportedCurrencyFooter';import{SwitchLocaleLink}from'components/SwitchLocaleLink';import{useCallback,useContext,useState}from'react';import{Plus}from'react-feather';import ReactGA from'react-ga';import{Text}from'rebass';import{ButtonError,ButtonLight,ButtonPrimary}from'../../components/Button';import{BlueCard,LightCard}from'../../components/Card';import{AutoColumn,ColumnCenter}from'../../components/Column';import CurrencyInputPanel from'../../components/CurrencyInputPanel';import DoubleCurrencyLogo from'../../components/DoubleLogo';import{AddRemoveTabs}from'../../components/NavigationTabs';import{MinimalPositionCard}from'../../components/PositionCard';import Row,{RowBetween,RowFlat}from'../../components/Row';import TransactionConfirmationModal,{ConfirmationModalContent}from'../../components/TransactionConfirmationModal';import{ZERO_PERCENT}from'../../constants/misc';import{WRAPPED_NATIVE_CURRENCY}from'../../constants/tokens';import{useCurrency}from'../../hooks/Tokens';import{ApprovalState,useApproveCallback}from'../../hooks/useApproveCallback';import{useV2RouterContract}from'../../hooks/useContract';import{useIsSwapUnsupported}from'../../hooks/useIsSwapUnsupported';import useTransactionDeadline from'../../hooks/useTransactionDeadline';import{PairState}from'../../hooks/useV2Pairs';import{useActiveWeb3React}from'../../hooks/web3';import{useWalletModalToggle}from'../../state/application/hooks';import{Field}from'../../state/mint/actions';import{useDerivedMintInfo,useMintActionHandlers,useMintState}from'../../state/mint/hooks';import{TransactionType}from'../../state/transactions/actions';import{useTransactionAdder}from'../../state/transactions/hooks';import{useIsExpertMode,useUserSlippageToleranceWithDefault}from'../../state/user/hooks';import{ThemedText}from'../../theme';import{calculateGasMargin}from'../../utils/calculateGasMargin';import{calculateSlippageAmount}from'../../utils/calculateSlippageAmount';import{currencyId}from'../../utils/currencyId';import{maxAmountSpend}from'../../utils/maxAmountSpend';import AppBody from'../AppBody';import{Dots,Wrapper}from'../Pool/styleds';import{ConfirmAddModalBottom}from'./ConfirmAddModalBottom';import{PoolPriceBar}from'./PoolPriceBar';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var DEFAULT_ADD_V2_SLIPPAGE_TOLERANCE=new Percent(50,10000);export default function AddLiquidity(_ref){var _parsedAmounts$depend,_parsedAmounts$depend2,_formattedAmounts,_parsedAmounts$Field$,_currencies$Field$CUR5,_parsedAmounts$Field$2,_currencies$Field$CUR6,_currencies$Field$CUR7,_currencies$Field$CUR8,_currencies$Field$CUR9,_currencies$Field$CUR10,_currencies$Field$CUR11,_currencies$Field$CUR12;var _ref$match$params=_ref.match.params,currencyIdA=_ref$match$params.currencyIdA,currencyIdB=_ref$match$params.currencyIdB,history=_ref.history;var _useActiveWeb3React=useActiveWeb3React(),account=_useActiveWeb3React.account,chainId=_useActiveWeb3React.chainId,library=_useActiveWeb3React.library;var theme=useContext(_ThemeContext);var currencyA=useCurrency(currencyIdA);var currencyB=useCurrency(currencyIdB);var oneCurrencyIsWETH=Boolean(chainId&&(currencyA&&currencyA.equals(WRAPPED_NATIVE_CURRENCY[chainId])||currencyB&&currencyB.equals(WRAPPED_NATIVE_CURRENCY[chainId])));var toggleWalletModal=useWalletModalToggle();// toggle wallet when disconnected\nvar expertMode=useIsExpertMode();// mint state\nvar _useMintState=useMintState(),independentField=_useMintState.independentField,typedValue=_useMintState.typedValue,otherTypedValue=_useMintState.otherTypedValue;var _useDerivedMintInfo=useDerivedMintInfo(currencyA!==null&&currencyA!==void 0?currencyA:undefined,currencyB!==null&&currencyB!==void 0?currencyB:undefined),dependentField=_useDerivedMintInfo.dependentField,currencies=_useDerivedMintInfo.currencies,pair=_useDerivedMintInfo.pair,pairState=_useDerivedMintInfo.pairState,currencyBalances=_useDerivedMintInfo.currencyBalances,parsedAmounts=_useDerivedMintInfo.parsedAmounts,price=_useDerivedMintInfo.price,noLiquidity=_useDerivedMintInfo.noLiquidity,liquidityMinted=_useDerivedMintInfo.liquidityMinted,poolTokenPercentage=_useDerivedMintInfo.poolTokenPercentage,error=_useDerivedMintInfo.error;var _useMintActionHandler=useMintActionHandlers(noLiquidity),onFieldAInput=_useMintActionHandler.onFieldAInput,onFieldBInput=_useMintActionHandler.onFieldBInput;var isValid=!error;// modal and loading\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),showConfirm=_useState2[0],setShowConfirm=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),attemptingTxn=_useState4[0],setAttemptingTxn=_useState4[1];// clicked confirm\n// txn values\nvar deadline=useTransactionDeadline();// custom from users settings\nvar allowedSlippage=useUserSlippageToleranceWithDefault(DEFAULT_ADD_V2_SLIPPAGE_TOLERANCE);// custom from users\nvar _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),txHash=_useState6[0],setTxHash=_useState6[1];// get formatted amounts\nvar formattedAmounts=(_formattedAmounts={},_defineProperty(_formattedAmounts,independentField,typedValue),_defineProperty(_formattedAmounts,dependentField,noLiquidity?otherTypedValue:(_parsedAmounts$depend=(_parsedAmounts$depend2=parsedAmounts[dependentField])===null||_parsedAmounts$depend2===void 0?void 0:_parsedAmounts$depend2.toSignificant(6))!==null&&_parsedAmounts$depend!==void 0?_parsedAmounts$depend:''),_formattedAmounts);// get the max amounts user can add\nvar maxAmounts=[Field.CURRENCY_A,Field.CURRENCY_B].reduce(function(accumulator,field){return _objectSpread(_objectSpread({},accumulator),{},_defineProperty({},field,maxAmountSpend(currencyBalances[field])));},{});var atMaxAmounts=[Field.CURRENCY_A,Field.CURRENCY_B].reduce(function(accumulator,field){var _maxAmounts$field,_parsedAmounts$field;return _objectSpread(_objectSpread({},accumulator),{},_defineProperty({},field,(_maxAmounts$field=maxAmounts[field])===null||_maxAmounts$field===void 0?void 0:_maxAmounts$field.equalTo((_parsedAmounts$field=parsedAmounts[field])!==null&&_parsedAmounts$field!==void 0?_parsedAmounts$field:'0')));},{});var router=useV2RouterContract();// check whether the user has approved the router on the tokens\nvar _useApproveCallback=useApproveCallback(parsedAmounts[Field.CURRENCY_A],router===null||router===void 0?void 0:router.address),_useApproveCallback2=_slicedToArray(_useApproveCallback,2),approvalA=_useApproveCallback2[0],approveACallback=_useApproveCallback2[1];var _useApproveCallback3=useApproveCallback(parsedAmounts[Field.CURRENCY_B],router===null||router===void 0?void 0:router.address),_useApproveCallback4=_slicedToArray(_useApproveCallback3,2),approvalB=_useApproveCallback4[0],approveBCallback=_useApproveCallback4[1];var addTransaction=useTransactionAdder();function onAdd(){return _onAdd.apply(this,arguments);}function _onAdd(){_onAdd=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _amountsMin;var parsedAmountA,parsedAmountB,amountsMin,estimate,method,args,value,_wrapped$address,_ref2,_ref2$wrapped,tokenBIsETH,_currencyA$wrapped$ad,_currencyA$wrapped,_currencyB$wrapped$ad,_currencyB$wrapped;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(!chainId||!library||!account||!router)){_context.next=2;break;}return _context.abrupt(\"return\");case 2:parsedAmountA=parsedAmounts[Field.CURRENCY_A],parsedAmountB=parsedAmounts[Field.CURRENCY_B];if(!(!parsedAmountA||!parsedAmountB||!currencyA||!currencyB||!deadline)){_context.next=5;break;}return _context.abrupt(\"return\");case 5:amountsMin=(_amountsMin={},_defineProperty(_amountsMin,Field.CURRENCY_A,calculateSlippageAmount(parsedAmountA,noLiquidity?ZERO_PERCENT:allowedSlippage)[0]),_defineProperty(_amountsMin,Field.CURRENCY_B,calculateSlippageAmount(parsedAmountB,noLiquidity?ZERO_PERCENT:allowedSlippage)[0]),_amountsMin);if(currencyA.isNative||currencyB.isNative){tokenBIsETH=currencyB.isNative;estimate=router.estimateGas.addLiquidityETH;method=router.addLiquidityETH;args=[(_wrapped$address=(_ref2=tokenBIsETH?currencyA:currencyB)===null||_ref2===void 0?void 0:(_ref2$wrapped=_ref2.wrapped)===null||_ref2$wrapped===void 0?void 0:_ref2$wrapped.address)!==null&&_wrapped$address!==void 0?_wrapped$address:'',// token\n(tokenBIsETH?parsedAmountA:parsedAmountB).quotient.toString(),// token desired\namountsMin[tokenBIsETH?Field.CURRENCY_A:Field.CURRENCY_B].toString(),// token min\namountsMin[tokenBIsETH?Field.CURRENCY_B:Field.CURRENCY_A].toString(),// eth min\naccount,deadline.toHexString()];value=BigNumber.from((tokenBIsETH?parsedAmountB:parsedAmountA).quotient.toString());}else{estimate=router.estimateGas.addLiquidity;method=router.addLiquidity;args=[(_currencyA$wrapped$ad=currencyA===null||currencyA===void 0?void 0:(_currencyA$wrapped=currencyA.wrapped)===null||_currencyA$wrapped===void 0?void 0:_currencyA$wrapped.address)!==null&&_currencyA$wrapped$ad!==void 0?_currencyA$wrapped$ad:'',(_currencyB$wrapped$ad=currencyB===null||currencyB===void 0?void 0:(_currencyB$wrapped=currencyB.wrapped)===null||_currencyB$wrapped===void 0?void 0:_currencyB$wrapped.address)!==null&&_currencyB$wrapped$ad!==void 0?_currencyB$wrapped$ad:'',parsedAmountA.quotient.toString(),parsedAmountB.quotient.toString(),amountsMin[Field.CURRENCY_A].toString(),amountsMin[Field.CURRENCY_B].toString(),account,deadline.toHexString()];value=null;}setAttemptingTxn(true);_context.next=10;return estimate.apply(void 0,_toConsumableArray(args).concat([value?{value:value}:{}])).then(function(estimatedGasLimit){return method.apply(void 0,_toConsumableArray(args).concat([_objectSpread(_objectSpread({},value?{value:value}:{}),{},{gasLimit:calculateGasMargin(estimatedGasLimit)})])).then(function(response){var _parsedAmounts$Field$3,_parsedAmounts$Field$4,_parsedAmounts$Field$5,_parsedAmounts$Field$6,_currencies$Field$CUR13,_currencies$Field$CUR14;setAttemptingTxn(false);addTransaction(response,{type:TransactionType.ADD_LIQUIDITY_V2_POOL,baseCurrencyId:currencyId(currencyA),expectedAmountBaseRaw:(_parsedAmounts$Field$3=(_parsedAmounts$Field$4=parsedAmounts[Field.CURRENCY_A])===null||_parsedAmounts$Field$4===void 0?void 0:_parsedAmounts$Field$4.quotient.toString())!==null&&_parsedAmounts$Field$3!==void 0?_parsedAmounts$Field$3:'0',quoteCurrencyId:currencyId(currencyB),expectedAmountQuoteRaw:(_parsedAmounts$Field$5=(_parsedAmounts$Field$6=parsedAmounts[Field.CURRENCY_B])===null||_parsedAmounts$Field$6===void 0?void 0:_parsedAmounts$Field$6.quotient.toString())!==null&&_parsedAmounts$Field$5!==void 0?_parsedAmounts$Field$5:'0'});setTxHash(response.hash);ReactGA.event({category:'Liquidity',action:'Add',label:[(_currencies$Field$CUR13=currencies[Field.CURRENCY_A])===null||_currencies$Field$CUR13===void 0?void 0:_currencies$Field$CUR13.symbol,(_currencies$Field$CUR14=currencies[Field.CURRENCY_B])===null||_currencies$Field$CUR14===void 0?void 0:_currencies$Field$CUR14.symbol].join('/')});});}).catch(function(error){setAttemptingTxn(false);// we only care if the error is something _other_ than the user rejected the tx\n// we only care if the error is something _other_ than the user rejected the tx\nif((error===null||error===void 0?void 0:error.code)!==4001){console.error(error);}});case 10:case\"end\":return _context.stop();}}},_callee);}));return _onAdd.apply(this,arguments);}var modalHeader=function modalHeader(){var _currencies$Field$CUR,_currencies$Field$CUR2,_currencies$Field$CUR3,_currencies$Field$CUR4;return noLiquidity?/*#__PURE__*/_jsx(AutoColumn,{gap:\"20px\",children:/*#__PURE__*/_jsx(LightCard,{mt:\"20px\",$borderRadius:\"20px\",children:/*#__PURE__*/_jsxs(RowFlat,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"48px\",fontWeight:500,lineHeight:\"42px\",marginRight:10,children:((_currencies$Field$CUR=currencies[Field.CURRENCY_A])===null||_currencies$Field$CUR===void 0?void 0:_currencies$Field$CUR.symbol)+'/'+((_currencies$Field$CUR2=currencies[Field.CURRENCY_B])===null||_currencies$Field$CUR2===void 0?void 0:_currencies$Field$CUR2.symbol)}),/*#__PURE__*/_jsx(DoubleCurrencyLogo,{currency0:currencies[Field.CURRENCY_A],currency1:currencies[Field.CURRENCY_B],size:30})]})})}):/*#__PURE__*/_jsxs(AutoColumn,{gap:\"20px\",children:[/*#__PURE__*/_jsxs(RowFlat,{style:{marginTop:'20px'},children:[/*#__PURE__*/_jsx(Text,{fontSize:\"48px\",fontWeight:500,lineHeight:\"42px\",marginRight:10,children:liquidityMinted===null||liquidityMinted===void 0?void 0:liquidityMinted.toSignificant(6)}),/*#__PURE__*/_jsx(DoubleCurrencyLogo,{currency0:currencies[Field.CURRENCY_A],currency1:currencies[Field.CURRENCY_B],size:30})]}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Text,{fontSize:\"24px\",children:((_currencies$Field$CUR3=currencies[Field.CURRENCY_A])===null||_currencies$Field$CUR3===void 0?void 0:_currencies$Field$CUR3.symbol)+'/'+((_currencies$Field$CUR4=currencies[Field.CURRENCY_B])===null||_currencies$Field$CUR4===void 0?void 0:_currencies$Field$CUR4.symbol)+' Pool Tokens'})}),/*#__PURE__*/_jsx(ThemedText.Italic,{fontSize:12,textAlign:\"left\",padding:'8px 0 0 0 ',children:/*#__PURE__*/_jsx(Trans,{id:\"Output is estimated. If the price changes by more than {0}% your transaction will revert.\",values:{0:allowedSlippage.toSignificant(4)}})})]});};var modalBottom=function modalBottom(){return/*#__PURE__*/_jsx(ConfirmAddModalBottom,{price:price,currencies:currencies,parsedAmounts:parsedAmounts,noLiquidity:noLiquidity,onAdd:onAdd,poolTokenPercentage:poolTokenPercentage});};var pendingText=/*#__PURE__*/_jsx(Trans,{id:\"Supplying {0} {1} and {2} {3}\",values:{0:(_parsedAmounts$Field$=parsedAmounts[Field.CURRENCY_A])===null||_parsedAmounts$Field$===void 0?void 0:_parsedAmounts$Field$.toSignificant(6),1:(_currencies$Field$CUR5=currencies[Field.CURRENCY_A])===null||_currencies$Field$CUR5===void 0?void 0:_currencies$Field$CUR5.symbol,2:(_parsedAmounts$Field$2=parsedAmounts[Field.CURRENCY_B])===null||_parsedAmounts$Field$2===void 0?void 0:_parsedAmounts$Field$2.toSignificant(6),3:(_currencies$Field$CUR6=currencies[Field.CURRENCY_B])===null||_currencies$Field$CUR6===void 0?void 0:_currencies$Field$CUR6.symbol}});var handleCurrencyASelect=useCallback(function(currencyA){var newCurrencyIdA=currencyId(currencyA);if(newCurrencyIdA===currencyIdB){history.push(\"/add/v2/\".concat(currencyIdB,\"/\").concat(currencyIdA));}else{history.push(\"/add/v2/\".concat(newCurrencyIdA,\"/\").concat(currencyIdB));}},[currencyIdB,history,currencyIdA]);var handleCurrencyBSelect=useCallback(function(currencyB){var newCurrencyIdB=currencyId(currencyB);if(currencyIdA===newCurrencyIdB){if(currencyIdB){history.push(\"/add/v2/\".concat(currencyIdB,\"/\").concat(newCurrencyIdB));}else{history.push(\"/add/v2/\".concat(newCurrencyIdB));}}else{history.push(\"/add/v2/\".concat(currencyIdA?currencyIdA:'ETH',\"/\").concat(newCurrencyIdB));}},[currencyIdA,history,currencyIdB]);var handleDismissConfirmation=useCallback(function(){setShowConfirm(false);// if there was a tx hash, we want to clear the input\nif(txHash){onFieldAInput('');}setTxHash('');},[onFieldAInput,txHash]);var isCreate=history.location.pathname.includes('/create');var addIsUnsupported=useIsSwapUnsupported(currencies===null||currencies===void 0?void 0:currencies.CURRENCY_A,currencies===null||currencies===void 0?void 0:currencies.CURRENCY_B);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(AppBody,{children:[/*#__PURE__*/_jsx(AddRemoveTabs,{creating:isCreate,adding:true,defaultSlippage:DEFAULT_ADD_V2_SLIPPAGE_TOLERANCE}),/*#__PURE__*/_jsxs(Wrapper,{children:[/*#__PURE__*/_jsx(TransactionConfirmationModal,{isOpen:showConfirm,onDismiss:handleDismissConfirmation,attemptingTxn:attemptingTxn,hash:txHash,content:function content(){return/*#__PURE__*/_jsx(ConfirmationModalContent,{title:noLiquidity?/*#__PURE__*/_jsx(Trans,{id:\"You are creating a pool\"}):/*#__PURE__*/_jsx(Trans,{id:\"You will receive\"}),onDismiss:handleDismissConfirmation,topContent:modalHeader,bottomContent:modalBottom});},pendingText:pendingText,currencyToAdd:pair===null||pair===void 0?void 0:pair.liquidityToken}),/*#__PURE__*/_jsxs(AutoColumn,{gap:\"20px\",children:[noLiquidity||(isCreate?/*#__PURE__*/_jsx(ColumnCenter,{children:/*#__PURE__*/_jsx(BlueCard,{children:/*#__PURE__*/_jsxs(AutoColumn,{gap:\"10px\",children:[/*#__PURE__*/_jsx(ThemedText.Link,{fontWeight:600,color:'primaryText1',children:/*#__PURE__*/_jsx(Trans,{id:\"You are the first liquidity provider.\"})}),/*#__PURE__*/_jsx(ThemedText.Link,{fontWeight:400,color:'primaryText1',children:/*#__PURE__*/_jsx(Trans,{id:\"The ratio of tokens you add will set the price of this pool.\"})}),/*#__PURE__*/_jsx(ThemedText.Link,{fontWeight:400,color:'primaryText1',children:/*#__PURE__*/_jsx(Trans,{id:\"Once you are happy with the rate click supply to review.\"})})]})})}):/*#__PURE__*/_jsx(ColumnCenter,{children:/*#__PURE__*/_jsx(BlueCard,{children:/*#__PURE__*/_jsx(AutoColumn,{gap:\"10px\",children:/*#__PURE__*/_jsx(ThemedText.Link,{fontWeight:400,color:'primaryText1',children:/*#__PURE__*/_jsx(Trans,{id:\"<0>Tip:</0> When you add liquidity, you will receive pool tokens representing your position. These tokens automatically earn fees proportional to your share of the pool, and can be redeemed at any time.\",components:{0:/*#__PURE__*/_jsx(\"b\",{})}})})})})})),/*#__PURE__*/_jsx(CurrencyInputPanel,{value:formattedAmounts[Field.CURRENCY_A],onUserInput:onFieldAInput,onMax:function onMax(){var _maxAmounts$Field$CUR,_maxAmounts$Field$CUR2;onFieldAInput((_maxAmounts$Field$CUR=(_maxAmounts$Field$CUR2=maxAmounts[Field.CURRENCY_A])===null||_maxAmounts$Field$CUR2===void 0?void 0:_maxAmounts$Field$CUR2.toExact())!==null&&_maxAmounts$Field$CUR!==void 0?_maxAmounts$Field$CUR:'');},onCurrencySelect:handleCurrencyASelect,showMaxButton:!atMaxAmounts[Field.CURRENCY_A],currency:(_currencies$Field$CUR7=currencies[Field.CURRENCY_A])!==null&&_currencies$Field$CUR7!==void 0?_currencies$Field$CUR7:null,id:\"add-liquidity-input-tokena\",showCommonBases:true}),/*#__PURE__*/_jsx(ColumnCenter,{children:/*#__PURE__*/_jsx(Plus,{size:\"16\",color:theme.text2})}),/*#__PURE__*/_jsx(CurrencyInputPanel,{value:formattedAmounts[Field.CURRENCY_B],onUserInput:onFieldBInput,onCurrencySelect:handleCurrencyBSelect,onMax:function onMax(){var _maxAmounts$Field$CUR3,_maxAmounts$Field$CUR4;onFieldBInput((_maxAmounts$Field$CUR3=(_maxAmounts$Field$CUR4=maxAmounts[Field.CURRENCY_B])===null||_maxAmounts$Field$CUR4===void 0?void 0:_maxAmounts$Field$CUR4.toExact())!==null&&_maxAmounts$Field$CUR3!==void 0?_maxAmounts$Field$CUR3:'');},showMaxButton:!atMaxAmounts[Field.CURRENCY_B],currency:(_currencies$Field$CUR8=currencies[Field.CURRENCY_B])!==null&&_currencies$Field$CUR8!==void 0?_currencies$Field$CUR8:null,id:\"add-liquidity-input-tokenb\",showCommonBases:true}),currencies[Field.CURRENCY_A]&&currencies[Field.CURRENCY_B]&&pairState!==PairState.INVALID&&/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(LightCard,{padding:\"0px\",$borderRadius:'20px',children:[/*#__PURE__*/_jsx(RowBetween,{padding:\"1rem\",children:/*#__PURE__*/_jsx(ThemedText.SubHeader,{fontWeight:500,fontSize:14,children:noLiquidity?/*#__PURE__*/_jsx(Trans,{id:\"Initial prices and pool share\"}):/*#__PURE__*/_jsx(Trans,{id:\"Prices and pool share\"})})}),' ',/*#__PURE__*/_jsx(LightCard,{padding:\"1rem\",$borderRadius:'20px',children:/*#__PURE__*/_jsx(PoolPriceBar,{currencies:currencies,poolTokenPercentage:poolTokenPercentage,noLiquidity:noLiquidity,price:price})})]})}),addIsUnsupported?/*#__PURE__*/_jsx(ButtonPrimary,{disabled:true,children:/*#__PURE__*/_jsx(ThemedText.Main,{mb:\"4px\",children:/*#__PURE__*/_jsx(Trans,{id:\"Unsupported Asset\"})})}):!account?/*#__PURE__*/_jsx(ButtonLight,{onClick:toggleWalletModal,children:/*#__PURE__*/_jsx(Trans,{id:\"Connect Wallet\"})}):/*#__PURE__*/_jsxs(AutoColumn,{gap:'md',children:[(approvalA===ApprovalState.NOT_APPROVED||approvalA===ApprovalState.PENDING||approvalB===ApprovalState.NOT_APPROVED||approvalB===ApprovalState.PENDING)&&isValid&&/*#__PURE__*/_jsxs(RowBetween,{children:[approvalA!==ApprovalState.APPROVED&&/*#__PURE__*/_jsx(ButtonPrimary,{onClick:approveACallback,disabled:approvalA===ApprovalState.PENDING,width:approvalB!==ApprovalState.APPROVED?'48%':'100%',children:approvalA===ApprovalState.PENDING?/*#__PURE__*/_jsx(Dots,{children:/*#__PURE__*/_jsx(Trans,{id:\"Approving {0}\",values:{0:(_currencies$Field$CUR9=currencies[Field.CURRENCY_A])===null||_currencies$Field$CUR9===void 0?void 0:_currencies$Field$CUR9.symbol}})}):/*#__PURE__*/_jsx(Trans,{id:\"Approve {0}\",values:{0:(_currencies$Field$CUR10=currencies[Field.CURRENCY_A])===null||_currencies$Field$CUR10===void 0?void 0:_currencies$Field$CUR10.symbol}})}),approvalB!==ApprovalState.APPROVED&&/*#__PURE__*/_jsx(ButtonPrimary,{onClick:approveBCallback,disabled:approvalB===ApprovalState.PENDING,width:approvalA!==ApprovalState.APPROVED?'48%':'100%',children:approvalB===ApprovalState.PENDING?/*#__PURE__*/_jsx(Dots,{children:/*#__PURE__*/_jsx(Trans,{id:\"Approving {0}\",values:{0:(_currencies$Field$CUR11=currencies[Field.CURRENCY_B])===null||_currencies$Field$CUR11===void 0?void 0:_currencies$Field$CUR11.symbol}})}):/*#__PURE__*/_jsx(Trans,{id:\"Approve {0}\",values:{0:(_currencies$Field$CUR12=currencies[Field.CURRENCY_B])===null||_currencies$Field$CUR12===void 0?void 0:_currencies$Field$CUR12.symbol}})})]}),/*#__PURE__*/_jsx(ButtonError,{onClick:function onClick(){expertMode?onAdd():setShowConfirm(true);},disabled:!isValid||approvalA!==ApprovalState.APPROVED||approvalB!==ApprovalState.APPROVED,error:!isValid&&!!parsedAmounts[Field.CURRENCY_A]&&!!parsedAmounts[Field.CURRENCY_B],children:/*#__PURE__*/_jsx(Text,{fontSize:20,fontWeight:500,children:error!==null&&error!==void 0?error:/*#__PURE__*/_jsx(Trans,{id:\"Supply\"})})})]})]})]})]}),/*#__PURE__*/_jsx(SwitchLocaleLink,{}),!addIsUnsupported?pair&&!noLiquidity&&pairState!==PairState.INVALID?/*#__PURE__*/_jsx(AutoColumn,{style:{minWidth:'20rem',width:'100%',maxWidth:'400px',marginTop:'1rem'},children:/*#__PURE__*/_jsx(MinimalPositionCard,{showUnwrapped:oneCurrencyIsWETH,pair:pair})}):null:/*#__PURE__*/_jsx(UnsupportedCurrencyFooter,{show:addIsUnsupported,currencies:[currencies.CURRENCY_A,currencies.CURRENCY_B]})]});}","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/pages/AddLiquidityV2/index.tsx"],"names":["BigNumber","Percent","UnsupportedCurrencyFooter","SwitchLocaleLink","useCallback","useContext","useState","Plus","ReactGA","Text","ButtonError","ButtonLight","ButtonPrimary","BlueCard","LightCard","AutoColumn","ColumnCenter","CurrencyInputPanel","DoubleCurrencyLogo","AddRemoveTabs","MinimalPositionCard","Row","RowBetween","RowFlat","TransactionConfirmationModal","ConfirmationModalContent","ZERO_PERCENT","WRAPPED_NATIVE_CURRENCY","useCurrency","ApprovalState","useApproveCallback","useV2RouterContract","useIsSwapUnsupported","useTransactionDeadline","PairState","useActiveWeb3React","useWalletModalToggle","Field","useDerivedMintInfo","useMintActionHandlers","useMintState","TransactionType","useTransactionAdder","useIsExpertMode","useUserSlippageToleranceWithDefault","ThemedText","calculateGasMargin","calculateSlippageAmount","currencyId","maxAmountSpend","AppBody","Dots","Wrapper","ConfirmAddModalBottom","PoolPriceBar","DEFAULT_ADD_V2_SLIPPAGE_TOLERANCE","AddLiquidity","match","params","currencyIdA","currencyIdB","history","account","chainId","library","theme","ThemeContext","currencyA","currencyB","oneCurrencyIsWETH","Boolean","equals","toggleWalletModal","expertMode","independentField","typedValue","otherTypedValue","undefined","dependentField","currencies","pair","pairState","currencyBalances","parsedAmounts","price","noLiquidity","liquidityMinted","poolTokenPercentage","error","onFieldAInput","onFieldBInput","isValid","showConfirm","setShowConfirm","attemptingTxn","setAttemptingTxn","deadline","allowedSlippage","txHash","setTxHash","formattedAmounts","toSignificant","maxAmounts","CURRENCY_A","CURRENCY_B","reduce","accumulator","field","atMaxAmounts","equalTo","router","address","approvalA","approveACallback","approvalB","approveBCallback","addTransaction","onAdd","parsedAmountA","parsedAmountB","amountsMin","isNative","tokenBIsETH","estimate","estimateGas","addLiquidityETH","method","args","wrapped","quotient","toString","toHexString","value","from","addLiquidity","then","estimatedGasLimit","gasLimit","response","type","ADD_LIQUIDITY_V2_POOL","baseCurrencyId","expectedAmountBaseRaw","quoteCurrencyId","expectedAmountQuoteRaw","hash","event","category","action","label","symbol","join","catch","code","console","modalHeader","marginTop","modalBottom","pendingText","handleCurrencyASelect","newCurrencyIdA","push","handleCurrencyBSelect","newCurrencyIdB","handleDismissConfirmation","isCreate","location","pathname","includes","addIsUnsupported","liquidityToken","toExact","text2","INVALID","NOT_APPROVED","PENDING","APPROVED","minWidth","width","maxWidth"],"mappings":"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","sourcesContent":["import { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trans } from '@lingui/macro'\nimport { Currency, CurrencyAmount, Percent } from '@uniswap/sdk-core'\nimport UnsupportedCurrencyFooter from 'components/swap/UnsupportedCurrencyFooter'\nimport { SwitchLocaleLink } from 'components/SwitchLocaleLink'\nimport { useCallback, useContext, useState } from 'react'\nimport { Plus } from 'react-feather'\nimport ReactGA from 'react-ga'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { Text } from 'rebass'\nimport { ThemeContext } from 'styled-components/macro'\n\nimport { ButtonError, ButtonLight, ButtonPrimary } from '../../components/Button'\nimport { BlueCard, LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Column'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport DoubleCurrencyLogo from '../../components/DoubleLogo'\nimport { AddRemoveTabs } from '../../components/NavigationTabs'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row, { RowBetween, RowFlat } from '../../components/Row'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport { ZERO_PERCENT } from '../../constants/misc'\nimport { WRAPPED_NATIVE_CURRENCY } from '../../constants/tokens'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport { useV2RouterContract } from '../../hooks/useContract'\nimport { useIsSwapUnsupported } from '../../hooks/useIsSwapUnsupported'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { PairState } from '../../hooks/useV2Pairs'\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport { useWalletModalToggle } from '../../state/application/hooks'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\nimport { TransactionType } from '../../state/transactions/actions'\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { useIsExpertMode, useUserSlippageToleranceWithDefault } from '../../state/user/hooks'\nimport { ThemedText } from '../../theme'\nimport { calculateGasMargin } from '../../utils/calculateGasMargin'\nimport { calculateSlippageAmount } from '../../utils/calculateSlippageAmount'\nimport { currencyId } from '../../utils/currencyId'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport AppBody from '../AppBody'\nimport { Dots, Wrapper } from '../Pool/styleds'\nimport { ConfirmAddModalBottom } from './ConfirmAddModalBottom'\nimport { PoolPriceBar } from './PoolPriceBar'\n\nconst DEFAULT_ADD_V2_SLIPPAGE_TOLERANCE = new Percent(50, 10_000)\n\nexport default function AddLiquidity({\n  match: {\n    params: { currencyIdA, currencyIdB },\n  },\n  history,\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string }>) {\n  const { account, chainId, library } = useActiveWeb3React()\n  const theme = useContext(ThemeContext)\n\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyA.equals(WRAPPED_NATIVE_CURRENCY[chainId])) ||\n        (currencyB && currencyB.equals(WRAPPED_NATIVE_CURRENCY[chainId])))\n  )\n\n  const toggleWalletModal = useWalletModalToggle() // toggle wallet when disconnected\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const allowedSlippage = useUserSlippageToleranceWithDefault(DEFAULT_ADD_V2_SLIPPAGE_TOLERANCE) // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: CurrencyAmount<Currency> } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {}\n  )\n\n  const atMaxAmounts: { [field in Field]?: CurrencyAmount<Currency> } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {}\n  )\n\n  const router = useV2RouterContract()\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], router?.address)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], router?.address)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account || !router) return\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? ZERO_PERCENT : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? ZERO_PERCENT : allowedSlippage)[0],\n    }\n\n    let estimate,\n      method: (...args: any) => Promise<TransactionResponse>,\n      args: Array<string | string[] | number>,\n      value: BigNumber | null\n    if (currencyA.isNative || currencyB.isNative) {\n      const tokenBIsETH = currencyB.isNative\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        (tokenBIsETH ? currencyA : currencyB)?.wrapped?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).quotient.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).quotient.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        currencyA?.wrapped?.address ?? '',\n        currencyB?.wrapped?.address ?? '',\n        parsedAmountA.quotient.toString(),\n        parsedAmountB.quotient.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            type: TransactionType.ADD_LIQUIDITY_V2_POOL,\n            baseCurrencyId: currencyId(currencyA),\n            expectedAmountBaseRaw: parsedAmounts[Field.CURRENCY_A]?.quotient.toString() ?? '0',\n            quoteCurrencyId: currencyId(currencyB),\n            expectedAmountQuoteRaw: parsedAmounts[Field.CURRENCY_B]?.quotient.toString() ?? '0',\n          })\n\n          setTxHash(response.hash)\n\n          ReactGA.event({\n            category: 'Liquidity',\n            action: 'Add',\n            label: [currencies[Field.CURRENCY_A]?.symbol, currencies[Field.CURRENCY_B]?.symbol].join('/'),\n          })\n        })\n      )\n      .catch((error) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (error?.code !== 4001) {\n          console.error(error)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <AutoColumn gap=\"20px\">\n        <LightCard mt=\"20px\" $borderRadius=\"20px\">\n          <RowFlat>\n            <Text fontSize=\"48px\" fontWeight={500} lineHeight=\"42px\" marginRight={10}>\n              {currencies[Field.CURRENCY_A]?.symbol + '/' + currencies[Field.CURRENCY_B]?.symbol}\n            </Text>\n            <DoubleCurrencyLogo\n              currency0={currencies[Field.CURRENCY_A]}\n              currency1={currencies[Field.CURRENCY_B]}\n              size={30}\n            />\n          </RowFlat>\n        </LightCard>\n      </AutoColumn>\n    ) : (\n      <AutoColumn gap=\"20px\">\n        <RowFlat style={{ marginTop: '20px' }}>\n          <Text fontSize=\"48px\" fontWeight={500} lineHeight=\"42px\" marginRight={10}>\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </RowFlat>\n        <Row>\n          <Text fontSize=\"24px\">\n            {currencies[Field.CURRENCY_A]?.symbol + '/' + currencies[Field.CURRENCY_B]?.symbol + ' Pool Tokens'}\n          </Text>\n        </Row>\n        <ThemedText.Italic fontSize={12} textAlign=\"left\" padding={'8px 0 0 0 '}>\n          <Trans>\n            Output is estimated. If the price changes by more than {allowedSlippage.toSignificant(4)}% your transaction\n            will revert.\n          </Trans>\n        </ThemedText.Italic>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = (\n    <Trans>\n      Supplying {parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)} {currencies[Field.CURRENCY_A]?.symbol} and{' '}\n      {parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)} {currencies[Field.CURRENCY_B]?.symbol}\n    </Trans>\n  )\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/add/v2/${currencyIdB}/${currencyIdA}`)\n      } else {\n        history.push(`/add/v2/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA]\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/add/v2/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/add/v2/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/add/v2/${currencyIdA ? currencyIdA : 'ETH'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB]\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false)\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const isCreate = history.location.pathname.includes('/create')\n\n  const addIsUnsupported = useIsSwapUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  return (\n    <>\n      <AppBody>\n        <AddRemoveTabs creating={isCreate} adding={true} defaultSlippage={DEFAULT_ADD_V2_SLIPPAGE_TOLERANCE} />\n        <Wrapper>\n          <TransactionConfirmationModal\n            isOpen={showConfirm}\n            onDismiss={handleDismissConfirmation}\n            attemptingTxn={attemptingTxn}\n            hash={txHash}\n            content={() => (\n              <ConfirmationModalContent\n                title={noLiquidity ? <Trans>You are creating a pool</Trans> : <Trans>You will receive</Trans>}\n                onDismiss={handleDismissConfirmation}\n                topContent={modalHeader}\n                bottomContent={modalBottom}\n              />\n            )}\n            pendingText={pendingText}\n            currencyToAdd={pair?.liquidityToken}\n          />\n          <AutoColumn gap=\"20px\">\n            {noLiquidity ||\n              (isCreate ? (\n                <ColumnCenter>\n                  <BlueCard>\n                    <AutoColumn gap=\"10px\">\n                      <ThemedText.Link fontWeight={600} color={'primaryText1'}>\n                        <Trans>You are the first liquidity provider.</Trans>\n                      </ThemedText.Link>\n                      <ThemedText.Link fontWeight={400} color={'primaryText1'}>\n                        <Trans>The ratio of tokens you add will set the price of this pool.</Trans>\n                      </ThemedText.Link>\n                      <ThemedText.Link fontWeight={400} color={'primaryText1'}>\n                        <Trans>Once you are happy with the rate click supply to review.</Trans>\n                      </ThemedText.Link>\n                    </AutoColumn>\n                  </BlueCard>\n                </ColumnCenter>\n              ) : (\n                <ColumnCenter>\n                  <BlueCard>\n                    <AutoColumn gap=\"10px\">\n                      <ThemedText.Link fontWeight={400} color={'primaryText1'}>\n                        <Trans>\n                          <b>\n                            <Trans>Tip:</Trans>\n                          </b>{' '}\n                          When you add liquidity, you will receive pool tokens representing your position. These tokens\n                          automatically earn fees proportional to your share of the pool, and can be redeemed at any\n                          time.\n                        </Trans>\n                      </ThemedText.Link>\n                    </AutoColumn>\n                  </BlueCard>\n                </ColumnCenter>\n              ))}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A] ?? null}\n              id=\"add-liquidity-input-tokena\"\n              showCommonBases\n            />\n            <ColumnCenter>\n              <Plus size=\"16\" color={theme.text2} />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B] ?? null}\n              id=\"add-liquidity-input-tokenb\"\n              showCommonBases\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" $borderRadius={'20px'}>\n                  <RowBetween padding=\"1rem\">\n                    <ThemedText.SubHeader fontWeight={500} fontSize={14}>\n                      {noLiquidity ? (\n                        <Trans>Initial prices and pool share</Trans>\n                      ) : (\n                        <Trans>Prices and pool share</Trans>\n                      )}\n                    </ThemedText.SubHeader>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" $borderRadius={'20px'}>\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <ButtonPrimary disabled={true}>\n                <ThemedText.Main mb=\"4px\">\n                  <Trans>Unsupported Asset</Trans>\n                </ThemedText.Main>\n              </ButtonPrimary>\n            ) : !account ? (\n              <ButtonLight onClick={toggleWalletModal}>\n                <Trans>Connect Wallet</Trans>\n              </ButtonLight>\n            ) : (\n              <AutoColumn gap={'md'}>\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <ButtonPrimary\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>\n                              <Trans>Approving {currencies[Field.CURRENCY_A]?.symbol}</Trans>\n                            </Dots>\n                          ) : (\n                            <Trans>Approve {currencies[Field.CURRENCY_A]?.symbol}</Trans>\n                          )}\n                        </ButtonPrimary>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <ButtonPrimary\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>\n                              <Trans>Approving {currencies[Field.CURRENCY_B]?.symbol}</Trans>\n                            </Dots>\n                          ) : (\n                            <Trans>Approve {currencies[Field.CURRENCY_B]?.symbol}</Trans>\n                          )}\n                        </ButtonPrimary>\n                      )}\n                    </RowBetween>\n                  )}\n                <ButtonError\n                  onClick={() => {\n                    expertMode ? onAdd() : setShowConfirm(true)\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                  error={!isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]}\n                >\n                  <Text fontSize={20} fontWeight={500}>\n                    {error ?? <Trans>Supply</Trans>}\n                  </Text>\n                </ButtonError>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </Wrapper>\n      </AppBody>\n      <SwitchLocaleLink />\n\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter\n          show={addIsUnsupported}\n          currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]}\n        />\n      )}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}