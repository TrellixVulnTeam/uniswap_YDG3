{"ast":null,"code":"import{ThemeContext as _ThemeContext}from\"styled-components\";import _styled from\"styled-components\";import{useContext}from'react';import{AlertCircle,CheckCircle}from'react-feather';import{useActiveWeb3React}from'../../hooks/web3';import{useTransaction}from'../../state/transactions/hooks';import{ThemedText}from'../../theme';import{ExternalLink}from'../../theme';import{ExplorerDataType,getExplorerLink}from'../../utils/getExplorerLink';import{TransactionSummary}from'../AccountDetails/TransactionSummary';import{AutoColumn}from'../Column';import{AutoRow}from'../Row';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var RowNoFlex=_styled(AutoRow).withConfig({componentId:\"sc-13d9pmm-0\"})([\"flex-wrap:nowrap;\"]);export default function TransactionPopup(_ref){var hash=_ref.hash;var _useActiveWeb3React=useActiveWeb3React(),chainId=_useActiveWeb3React.chainId;var tx=useTransaction(hash);var theme=useContext(_ThemeContext);if(!tx)return null;var success=Boolean(tx.receipt&&tx.receipt.status===1);return/*#__PURE__*/_jsxs(RowNoFlex,{children:[/*#__PURE__*/_jsx(\"div\",{style:{paddingRight:16},children:success?/*#__PURE__*/_jsx(CheckCircle,{color:theme.green1,size:24}):/*#__PURE__*/_jsx(AlertCircle,{color:theme.red1,size:24})}),/*#__PURE__*/_jsxs(AutoColumn,{gap:\"8px\",children:[/*#__PURE__*/_jsx(ThemedText.Body,{fontWeight:500,children:/*#__PURE__*/_jsx(TransactionSummary,{info:tx.info})}),chainId&&/*#__PURE__*/_jsx(ExternalLink,{href:getExplorerLink(chainId,hash,ExplorerDataType.TRANSACTION),children:\"View on Explorer\"})]})]});}","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/components/Popups/TransactionPopup.tsx"],"names":["useContext","AlertCircle","CheckCircle","useActiveWeb3React","useTransaction","ThemedText","ExternalLink","ExplorerDataType","getExplorerLink","TransactionSummary","AutoColumn","AutoRow","RowNoFlex","styled","TransactionPopup","hash","chainId","tx","theme","ThemeContext","success","Boolean","receipt","status","paddingRight","green1","red1","info","TRANSACTION"],"mappings":"oGAAA,OAASA,UAAT,KAA2B,OAA3B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,eAAzC,CAGA,OAASC,kBAAT,KAAmC,kBAAnC,CACA,OAASC,cAAT,KAA+B,gCAA/B,CACA,OAASC,UAAT,KAA2B,aAA3B,CACA,OAASC,YAAT,KAA6B,aAA7B,CACA,OAASC,gBAAT,CAA2BC,eAA3B,KAAkD,6BAAlD,CACA,OAASC,kBAAT,KAAmC,sCAAnC,CACA,OAASC,UAAT,KAA2B,WAA3B,CACA,OAASC,OAAT,KAAwB,QAAxB,C,wFAEA,GAAMC,CAAAA,SAAS,CAAGC,OAAM,CAACF,OAAD,CAAT,gEAAf,CAIA,cAAe,SAASG,CAAAA,gBAAT,MAAsD,IAA1BC,CAAAA,IAA0B,MAA1BA,IAA0B,CACnE,wBAAoBZ,kBAAkB,EAAtC,CAAQa,OAAR,qBAAQA,OAAR,CAEA,GAAMC,CAAAA,EAAE,CAAGb,cAAc,CAACW,IAAD,CAAzB,CACA,GAAMG,CAAAA,KAAK,CAAGlB,UAAU,CAACmB,aAAD,CAAxB,CAEA,GAAI,CAACF,EAAL,CAAS,MAAO,KAAP,CACT,GAAMG,CAAAA,OAAO,CAAGC,OAAO,CAACJ,EAAE,CAACK,OAAH,EAAcL,EAAE,CAACK,OAAH,CAAWC,MAAX,GAAsB,CAArC,CAAvB,CAEA,mBACE,MAAC,SAAD,yBACE,YAAK,KAAK,CAAE,CAAEC,YAAY,CAAE,EAAhB,CAAZ,UACGJ,OAAO,cAAG,KAAC,WAAD,EAAa,KAAK,CAAEF,KAAK,CAACO,MAA1B,CAAkC,IAAI,CAAE,EAAxC,EAAH,cAAoD,KAAC,WAAD,EAAa,KAAK,CAAEP,KAAK,CAACQ,IAA1B,CAAgC,IAAI,CAAE,EAAtC,EAD9D,EADF,cAIE,MAAC,UAAD,EAAY,GAAG,CAAC,KAAhB,wBACE,KAAC,UAAD,CAAY,IAAZ,EAAiB,UAAU,CAAE,GAA7B,uBACE,KAAC,kBAAD,EAAoB,IAAI,CAAET,EAAE,CAACU,IAA7B,EADF,EADF,CAIGX,OAAO,eACN,KAAC,YAAD,EAAc,IAAI,CAAER,eAAe,CAACQ,OAAD,CAAUD,IAAV,CAAgBR,gBAAgB,CAACqB,WAAjC,CAAnC,8BALJ,GAJF,GADF,CAiBD","sourcesContent":["import { useContext } from 'react'\nimport { AlertCircle, CheckCircle } from 'react-feather'\nimport styled, { ThemeContext } from 'styled-components/macro'\n\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport { useTransaction } from '../../state/transactions/hooks'\nimport { ThemedText } from '../../theme'\nimport { ExternalLink } from '../../theme'\nimport { ExplorerDataType, getExplorerLink } from '../../utils/getExplorerLink'\nimport { TransactionSummary } from '../AccountDetails/TransactionSummary'\nimport { AutoColumn } from '../Column'\nimport { AutoRow } from '../Row'\n\nconst RowNoFlex = styled(AutoRow)`\n  flex-wrap: nowrap;\n`\n\nexport default function TransactionPopup({ hash }: { hash: string }) {\n  const { chainId } = useActiveWeb3React()\n\n  const tx = useTransaction(hash)\n  const theme = useContext(ThemeContext)\n\n  if (!tx) return null\n  const success = Boolean(tx.receipt && tx.receipt.status === 1)\n\n  return (\n    <RowNoFlex>\n      <div style={{ paddingRight: 16 }}>\n        {success ? <CheckCircle color={theme.green1} size={24} /> : <AlertCircle color={theme.red1} size={24} />}\n      </div>\n      <AutoColumn gap=\"8px\">\n        <ThemedText.Body fontWeight={500}>\n          <TransactionSummary info={tx.info} />\n        </ThemedText.Body>\n        {chainId && (\n          <ExternalLink href={getExplorerLink(chainId, hash, ExplorerDataType.TRANSACTION)}>\n            View on Explorer\n          </ExternalLink>\n        )}\n      </AutoColumn>\n    </RowNoFlex>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}