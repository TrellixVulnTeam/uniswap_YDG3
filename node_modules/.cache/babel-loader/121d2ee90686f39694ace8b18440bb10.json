{"ast":null,"code":"import _toConsumableArray from \"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _createForOfIteratorHelper from \"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _slicedToArray from \"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { SwapRouter, Trade } from '@uniswap/router-sdk';\nimport { TradeType } from '@uniswap/sdk-core';\nimport { FeeAmount, Route } from '@uniswap/v3-sdk';\nimport { BigNumber, logger } from 'ethers';\nimport _ from 'lodash';\nimport { DAI_MAINNET, USDC_MAINNET } from '../../providers/token-provider';\nimport { CurrencyAmount } from '../../util/amounts';\nimport { log } from '../../util/log';\nimport { routeToString } from '../../util/routes';\nimport { V3RouteWithValidQuote } from '../alpha-router';\nimport { V3Route } from '../router';\nimport { ADDITIONAL_BASES, BASES_TO_CHECK_TRADES_AGAINST, CUSTOM_BASES } from './bases'; // Interface defaults to 2.\n\nvar MAX_HOPS = 2;\n/**\n * Replicates the router implemented in the V3 interface.\n * Code is mostly a copy from https://github.com/Uniswap/uniswap-interface/blob/0190b5a408c13016c87e1030ffc59326c085f389/src/hooks/useBestV3Trade.ts#L22-L23\n * with React/Redux hooks removed, and refactoring to allow re-use in other routers.\n */\n\nexport var LegacyRouter = /*#__PURE__*/function () {\n  function LegacyRouter(_ref) {\n    var chainId = _ref.chainId,\n        multicall2Provider = _ref.multicall2Provider,\n        poolProvider = _ref.poolProvider,\n        quoteProvider = _ref.quoteProvider,\n        tokenProvider = _ref.tokenProvider;\n\n    _classCallCheck(this, LegacyRouter);\n\n    this.chainId = chainId;\n    this.multicall2Provider = multicall2Provider;\n    this.poolProvider = poolProvider;\n    this.quoteProvider = quoteProvider;\n    this.tokenProvider = tokenProvider;\n  }\n\n  _createClass(LegacyRouter, [{\n    key: \"route\",\n    value: function () {\n      var _route = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(amount, quoteCurrency, swapType, swapConfig, partialRoutingConfig) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(swapType == TradeType.EXACT_INPUT)) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.routeExactIn(amount.currency, quoteCurrency, amount, swapConfig, partialRoutingConfig));\n\n              case 2:\n                return _context.abrupt(\"return\", this.routeExactOut(quoteCurrency, amount.currency, amount, swapConfig, partialRoutingConfig));\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function route(_x, _x2, _x3, _x4, _x5) {\n        return _route.apply(this, arguments);\n      }\n\n      return route;\n    }()\n  }, {\n    key: \"routeExactIn\",\n    value: function () {\n      var _routeExactIn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(currencyIn, currencyOut, amountIn, swapConfig, routingConfig) {\n        var tokenIn, tokenOut, routes, routeQuote, trade;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                tokenIn = currencyIn.wrapped;\n                tokenOut = currencyOut.wrapped;\n                _context2.next = 4;\n                return this.getAllRoutes(tokenIn, tokenOut, routingConfig);\n\n              case 4:\n                routes = _context2.sent;\n                _context2.next = 7;\n                return this.findBestRouteExactIn(amountIn, tokenOut, routes, routingConfig);\n\n              case 7:\n                routeQuote = _context2.sent;\n\n                if (routeQuote) {\n                  _context2.next = 10;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", null);\n\n              case 10:\n                trade = this.buildTrade(currencyIn, currencyOut, TradeType.EXACT_INPUT, routeQuote);\n                return _context2.abrupt(\"return\", {\n                  quote: routeQuote.quote,\n                  quoteGasAdjusted: routeQuote.quote,\n                  route: [routeQuote],\n                  estimatedGasUsed: BigNumber.from(0),\n                  estimatedGasUsedQuoteToken: CurrencyAmount.fromFractionalAmount(tokenOut, 0, 1),\n                  estimatedGasUsedUSD: CurrencyAmount.fromFractionalAmount(DAI_MAINNET, 0, 1),\n                  gasPriceWei: BigNumber.from(0),\n                  trade: trade,\n                  methodParameters: swapConfig ? this.buildMethodParameters(trade, swapConfig) : undefined,\n                  blockNumber: BigNumber.from(0)\n                });\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function routeExactIn(_x6, _x7, _x8, _x9, _x10) {\n        return _routeExactIn.apply(this, arguments);\n      }\n\n      return routeExactIn;\n    }()\n  }, {\n    key: \"routeExactOut\",\n    value: function () {\n      var _routeExactOut = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(currencyIn, currencyOut, amountOut, swapConfig, routingConfig) {\n        var tokenIn, tokenOut, routes, routeQuote, trade;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                tokenIn = currencyIn.wrapped;\n                tokenOut = currencyOut.wrapped;\n                _context3.next = 4;\n                return this.getAllRoutes(tokenIn, tokenOut, routingConfig);\n\n              case 4:\n                routes = _context3.sent;\n                _context3.next = 7;\n                return this.findBestRouteExactOut(amountOut, tokenIn, routes, routingConfig);\n\n              case 7:\n                routeQuote = _context3.sent;\n\n                if (routeQuote) {\n                  _context3.next = 10;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", null);\n\n              case 10:\n                trade = this.buildTrade(currencyIn, currencyOut, TradeType.EXACT_OUTPUT, routeQuote);\n                return _context3.abrupt(\"return\", {\n                  quote: routeQuote.quote,\n                  quoteGasAdjusted: routeQuote.quote,\n                  route: [routeQuote],\n                  estimatedGasUsed: BigNumber.from(0),\n                  estimatedGasUsedQuoteToken: CurrencyAmount.fromFractionalAmount(tokenIn, 0, 1),\n                  estimatedGasUsedUSD: CurrencyAmount.fromFractionalAmount(DAI_MAINNET, 0, 1),\n                  gasPriceWei: BigNumber.from(0),\n                  trade: trade,\n                  methodParameters: swapConfig ? this.buildMethodParameters(trade, swapConfig) : undefined,\n                  blockNumber: BigNumber.from(0)\n                });\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function routeExactOut(_x11, _x12, _x13, _x14, _x15) {\n        return _routeExactOut.apply(this, arguments);\n      }\n\n      return routeExactOut;\n    }()\n  }, {\n    key: \"findBestRouteExactIn\",\n    value: function () {\n      var _findBestRouteExactIn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(amountIn, tokenOut, routes, routingConfig) {\n        var _yield$this$quoteProv, quotesRaw, quotes100Percent, bestQuote;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.quoteProvider.getQuotesManyExactIn([amountIn], routes, {\n                  blockNumber: routingConfig === null || routingConfig === void 0 ? void 0 : routingConfig.blockNumber\n                });\n\n              case 2:\n                _yield$this$quoteProv = _context4.sent;\n                quotesRaw = _yield$this$quoteProv.routesWithQuotes;\n                quotes100Percent = _.map(quotesRaw, function (_ref2) {\n                  var _ref3 = _slicedToArray(_ref2, 2),\n                      route = _ref3[0],\n                      quotes = _ref3[1];\n\n                  var _a, _b;\n\n                  return \"\".concat(routeToString(route), \" : \").concat((_b = (_a = quotes[0]) === null || _a === void 0 ? void 0 : _a.quote) === null || _b === void 0 ? void 0 : _b.toString());\n                });\n                log.info({\n                  quotes100Percent: quotes100Percent\n                }, '100% Quotes');\n                _context4.next = 8;\n                return this.getBestQuote(routes, quotesRaw, tokenOut, TradeType.EXACT_INPUT);\n\n              case 8:\n                bestQuote = _context4.sent;\n                return _context4.abrupt(\"return\", bestQuote);\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function findBestRouteExactIn(_x16, _x17, _x18, _x19) {\n        return _findBestRouteExactIn.apply(this, arguments);\n      }\n\n      return findBestRouteExactIn;\n    }()\n  }, {\n    key: \"findBestRouteExactOut\",\n    value: function () {\n      var _findBestRouteExactOut = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(amountOut, tokenIn, routes, routingConfig) {\n        var _yield$this$quoteProv2, quotesRaw, bestQuote;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.quoteProvider.getQuotesManyExactOut([amountOut], routes, {\n                  blockNumber: routingConfig === null || routingConfig === void 0 ? void 0 : routingConfig.blockNumber\n                });\n\n              case 2:\n                _yield$this$quoteProv2 = _context5.sent;\n                quotesRaw = _yield$this$quoteProv2.routesWithQuotes;\n                _context5.next = 6;\n                return this.getBestQuote(routes, quotesRaw, tokenIn, TradeType.EXACT_OUTPUT);\n\n              case 6:\n                bestQuote = _context5.sent;\n                return _context5.abrupt(\"return\", bestQuote);\n\n              case 8:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function findBestRouteExactOut(_x20, _x21, _x22, _x23) {\n        return _findBestRouteExactOut.apply(this, arguments);\n      }\n\n      return findBestRouteExactOut;\n    }()\n  }, {\n    key: \"getBestQuote\",\n    value: function () {\n      var _getBestQuote = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(routes, quotesRaw, quoteToken, routeType) {\n        var _this = this;\n\n        var routeQuotesRaw, i, _quotesRaw$i, route, quotes, _quotes$, quote, amount, routeQuotes, _iterator, _step, rq;\n\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                log.debug(\"Got \".concat(_.filter(quotesRaw, function (_ref4) {\n                  var _ref5 = _slicedToArray(_ref4, 2),\n                      _ = _ref5[0],\n                      quotes = _ref5[1];\n\n                  return !!quotes[0];\n                }).length, \" valid quotes from \").concat(routes.length, \" possible routes.\"));\n                routeQuotesRaw = [];\n                i = 0;\n\n              case 3:\n                if (!(i < quotesRaw.length)) {\n                  _context6.next = 13;\n                  break;\n                }\n\n                _quotesRaw$i = _slicedToArray(quotesRaw[i], 2), route = _quotesRaw$i[0], quotes = _quotesRaw$i[1];\n                _quotes$ = quotes[0], quote = _quotes$.quote, amount = _quotes$.amount;\n\n                if (quote) {\n                  _context6.next = 9;\n                  break;\n                }\n\n                logger.debug(\"No quote for \".concat(routeToString(route)));\n                return _context6.abrupt(\"continue\", 10);\n\n              case 9:\n                routeQuotesRaw.push({\n                  route: route,\n                  quote: quote,\n                  amount: amount\n                });\n\n              case 10:\n                i++;\n                _context6.next = 3;\n                break;\n\n              case 13:\n                if (!(routeQuotesRaw.length == 0)) {\n                  _context6.next = 15;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", null);\n\n              case 15:\n                routeQuotesRaw.sort(function (routeQuoteA, routeQuoteB) {\n                  if (routeType == TradeType.EXACT_INPUT) {\n                    return routeQuoteA.quote.gt(routeQuoteB.quote) ? -1 : 1;\n                  } else {\n                    return routeQuoteA.quote.lt(routeQuoteB.quote) ? -1 : 1;\n                  }\n                });\n                routeQuotes = _.map(routeQuotesRaw, function (_ref6) {\n                  var route = _ref6.route,\n                      quote = _ref6.quote,\n                      amount = _ref6.amount;\n                  return new V3RouteWithValidQuote({\n                    route: route,\n                    rawQuote: quote,\n                    amount: amount,\n                    percent: 100,\n                    gasModel: {\n                      estimateGasCost: function estimateGasCost() {\n                        return {\n                          gasCostInToken: CurrencyAmount.fromRawAmount(quoteToken, 0),\n                          gasCostInUSD: CurrencyAmount.fromRawAmount(USDC_MAINNET, 0),\n                          gasEstimate: BigNumber.from(0)\n                        };\n                      }\n                    },\n                    sqrtPriceX96AfterList: [],\n                    initializedTicksCrossedList: [],\n                    quoterGasEstimate: BigNumber.from(0),\n                    tradeType: routeType,\n                    quoteToken: quoteToken,\n                    v3PoolProvider: _this.poolProvider\n                  });\n                });\n                _iterator = _createForOfIteratorHelper(routeQuotes);\n\n                try {\n                  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                    rq = _step.value;\n                    log.debug(\"Quote: \".concat(rq.amount.toFixed(2), \" Route: \").concat(routeToString(rq.route)));\n                  }\n                } catch (err) {\n                  _iterator.e(err);\n                } finally {\n                  _iterator.f();\n                }\n\n                return _context6.abrupt(\"return\", routeQuotes[0]);\n\n              case 20:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function getBestQuote(_x24, _x25, _x26, _x27) {\n        return _getBestQuote.apply(this, arguments);\n      }\n\n      return getBestQuote;\n    }()\n  }, {\n    key: \"getAllRoutes\",\n    value: function () {\n      var _getAllRoutes = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(tokenIn, tokenOut, routingConfig) {\n        var tokenPairs, poolAccessor, pools, routes;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.getAllPossiblePairings(tokenIn, tokenOut);\n\n              case 2:\n                tokenPairs = _context7.sent;\n                _context7.next = 5;\n                return this.poolProvider.getPools(tokenPairs, {\n                  blockNumber: routingConfig === null || routingConfig === void 0 ? void 0 : routingConfig.blockNumber\n                });\n\n              case 5:\n                poolAccessor = _context7.sent;\n                pools = poolAccessor.getAllPools();\n                routes = this.computeAllRoutes(tokenIn, tokenOut, pools, this.chainId, [], [], tokenIn, MAX_HOPS);\n                log.info({\n                  routes: _.map(routes, routeToString)\n                }, \"Computed \".concat(routes.length, \" possible routes.\"));\n                return _context7.abrupt(\"return\", routes);\n\n              case 10:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function getAllRoutes(_x28, _x29, _x30) {\n        return _getAllRoutes.apply(this, arguments);\n      }\n\n      return getAllRoutes;\n    }()\n  }, {\n    key: \"getAllPossiblePairings\",\n    value: function () {\n      var _getAllPossiblePairings = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(tokenIn, tokenOut) {\n        var _a, _b, _c, _d, _e, common, additionalA, additionalB, bases, basePairs, customBases, allPairs;\n\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                common = (_a = BASES_TO_CHECK_TRADES_AGAINST(this.tokenProvider)[this.chainId]) !== null && _a !== void 0 ? _a : [];\n                _context8.next = 3;\n                return ADDITIONAL_BASES(this.tokenProvider);\n\n              case 3:\n                _context8.t2 = this.chainId;\n                _context8.t3 = _b = _context8.sent[_context8.t2];\n                _context8.t1 = _context8.t3 === null;\n\n                if (_context8.t1) {\n                  _context8.next = 8;\n                  break;\n                }\n\n                _context8.t1 = _b === void 0;\n\n              case 8:\n                if (!_context8.t1) {\n                  _context8.next = 12;\n                  break;\n                }\n\n                _context8.t4 = void 0;\n                _context8.next = 13;\n                break;\n\n              case 12:\n                _context8.t4 = _b[tokenIn.address];\n\n              case 13:\n                _context8.t5 = _c = _context8.t4;\n                _context8.t0 = _context8.t5 !== null;\n\n                if (!_context8.t0) {\n                  _context8.next = 17;\n                  break;\n                }\n\n                _context8.t0 = _c !== void 0;\n\n              case 17:\n                if (!_context8.t0) {\n                  _context8.next = 21;\n                  break;\n                }\n\n                _context8.t6 = _c;\n                _context8.next = 22;\n                break;\n\n              case 21:\n                _context8.t6 = [];\n\n              case 22:\n                additionalA = _context8.t6;\n                _context8.next = 25;\n                return ADDITIONAL_BASES(this.tokenProvider);\n\n              case 25:\n                _context8.t9 = this.chainId;\n                _context8.t10 = _d = _context8.sent[_context8.t9];\n                _context8.t8 = _context8.t10 === null;\n\n                if (_context8.t8) {\n                  _context8.next = 30;\n                  break;\n                }\n\n                _context8.t8 = _d === void 0;\n\n              case 30:\n                if (!_context8.t8) {\n                  _context8.next = 34;\n                  break;\n                }\n\n                _context8.t11 = void 0;\n                _context8.next = 35;\n                break;\n\n              case 34:\n                _context8.t11 = _d[tokenOut.address];\n\n              case 35:\n                _context8.t12 = _e = _context8.t11;\n                _context8.t7 = _context8.t12 !== null;\n\n                if (!_context8.t7) {\n                  _context8.next = 39;\n                  break;\n                }\n\n                _context8.t7 = _e !== void 0;\n\n              case 39:\n                if (!_context8.t7) {\n                  _context8.next = 43;\n                  break;\n                }\n\n                _context8.t13 = _e;\n                _context8.next = 44;\n                break;\n\n              case 43:\n                _context8.t13 = [];\n\n              case 44:\n                additionalB = _context8.t13;\n                bases = [].concat(_toConsumableArray(common), _toConsumableArray(additionalA), _toConsumableArray(additionalB));\n                basePairs = _.flatMap(bases, function (base) {\n                  return bases.map(function (otherBase) {\n                    return [base, otherBase];\n                  });\n                });\n                _context8.next = 49;\n                return CUSTOM_BASES(this.tokenProvider);\n\n              case 49:\n                _context8.t14 = this.chainId;\n                customBases = _context8.sent[_context8.t14];\n                allPairs = _([// the direct pair\n                [tokenIn, tokenOut]].concat(_toConsumableArray(bases.map(function (base) {\n                  return [tokenIn, base];\n                })), _toConsumableArray(bases.map(function (base) {\n                  return [tokenOut, base];\n                })), _toConsumableArray(basePairs))).filter(function (tokens) {\n                  return Boolean(tokens[0] && tokens[1]);\n                }).filter(function (_ref7) {\n                  var _ref8 = _slicedToArray(_ref7, 2),\n                      tokenA = _ref8[0],\n                      tokenB = _ref8[1];\n\n                  return tokenA.address !== tokenB.address && !tokenA.equals(tokenB);\n                }).filter(function (_ref9) {\n                  var _ref10 = _slicedToArray(_ref9, 2),\n                      tokenA = _ref10[0],\n                      tokenB = _ref10[1];\n\n                  var customBasesA = customBases === null || customBases === void 0 ? void 0 : customBases[tokenA.address];\n                  var customBasesB = customBases === null || customBases === void 0 ? void 0 : customBases[tokenB.address];\n                  if (!customBasesA && !customBasesB) return true;\n                  if (customBasesA && !customBasesA.find(function (base) {\n                    return tokenB.equals(base);\n                  })) return false;\n                  if (customBasesB && !customBasesB.find(function (base) {\n                    return tokenA.equals(base);\n                  })) return false;\n                  return true;\n                }).flatMap(function (_ref11) {\n                  var _ref12 = _slicedToArray(_ref11, 2),\n                      tokenA = _ref12[0],\n                      tokenB = _ref12[1];\n\n                  return [[tokenA, tokenB, FeeAmount.LOW], [tokenA, tokenB, FeeAmount.MEDIUM], [tokenA, tokenB, FeeAmount.HIGH]];\n                }).value();\n                return _context8.abrupt(\"return\", allPairs);\n\n              case 53:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function getAllPossiblePairings(_x31, _x32) {\n        return _getAllPossiblePairings.apply(this, arguments);\n      }\n\n      return getAllPossiblePairings;\n    }()\n  }, {\n    key: \"computeAllRoutes\",\n    value: function computeAllRoutes(tokenIn, tokenOut, pools, chainId) {\n      var currentPath = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n      var allPaths = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : [];\n      var startTokenIn = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : tokenIn;\n      var maxHops = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 2;\n\n      var _iterator2 = _createForOfIteratorHelper(pools),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var pool = _step2.value;\n          if (currentPath.indexOf(pool) !== -1 || !pool.involvesToken(tokenIn)) continue;\n          var outputToken = pool.token0.equals(tokenIn) ? pool.token1 : pool.token0;\n\n          if (outputToken.equals(tokenOut)) {\n            allPaths.push(new V3Route([].concat(_toConsumableArray(currentPath), [pool]), startTokenIn, tokenOut));\n          } else if (maxHops > 1) {\n            this.computeAllRoutes(outputToken, tokenOut, pools, chainId, [].concat(_toConsumableArray(currentPath), [pool]), allPaths, startTokenIn, maxHops - 1);\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return allPaths;\n    }\n  }, {\n    key: \"buildTrade\",\n    value: function buildTrade(tokenInCurrency, tokenOutCurrency, tradeType, routeAmount) {\n      var route = routeAmount.route,\n          amount = routeAmount.amount,\n          quote = routeAmount.quote; // The route, amount and quote are all in terms of wrapped tokens.\n      // When constructing the Trade object the inputAmount/outputAmount must\n      // use native currencies if necessary. This is so that the Trade knows to wrap/unwrap.\n\n      if (tradeType == TradeType.EXACT_INPUT) {\n        var amountCurrency = CurrencyAmount.fromFractionalAmount(tokenInCurrency, amount.numerator, amount.denominator);\n        var quoteCurrency = CurrencyAmount.fromFractionalAmount(tokenOutCurrency, quote.numerator, quote.denominator);\n        var routeCurrency = new Route(route.pools, amountCurrency.currency, quoteCurrency.currency);\n        return new Trade({\n          v3Routes: [{\n            routev3: routeCurrency,\n            inputAmount: amountCurrency,\n            outputAmount: quoteCurrency\n          }],\n          v2Routes: [],\n          tradeType: tradeType\n        });\n      } else {\n        var _quoteCurrency = CurrencyAmount.fromFractionalAmount(tokenInCurrency, quote.numerator, quote.denominator);\n\n        var _amountCurrency = CurrencyAmount.fromFractionalAmount(tokenOutCurrency, amount.numerator, amount.denominator);\n\n        var _routeCurrency = new Route(route.pools, _quoteCurrency.currency, _amountCurrency.currency);\n\n        return new Trade({\n          v3Routes: [{\n            routev3: _routeCurrency,\n            inputAmount: _quoteCurrency,\n            outputAmount: _amountCurrency\n          }],\n          v2Routes: [],\n          tradeType: tradeType\n        });\n      }\n    }\n  }, {\n    key: \"buildMethodParameters\",\n    value: function buildMethodParameters(trade, swapConfig) {\n      var recipient = swapConfig.recipient,\n          slippageTolerance = swapConfig.slippageTolerance,\n          deadline = swapConfig.deadline;\n      var methodParameters = SwapRouter.swapCallParameters(trade, {\n        recipient: recipient,\n        slippageTolerance: slippageTolerance,\n        deadlineOrPreviousBlockhash: deadline // ...(signatureData\n        //   ? {\n        //       inputTokenPermit:\n        //         'allowed' in signatureData\n        //           ? {\n        //               expiry: signatureData.deadline,\n        //               nonce: signatureData.nonce,\n        //               s: signatureData.s,\n        //               r: signatureData.r,\n        //               v: signatureData.v as any,\n        //             }\n        //           : {\n        //               deadline: signatureData.deadline,\n        //               amount: signatureData.amount,\n        //               s: signatureData.s,\n        //               r: signatureData.r,\n        //               v: signatureData.v as any,\n        //             },\n        //     }\n        //   : {}),\n\n      });\n      return methodParameters;\n    }\n  }]);\n\n  return LegacyRouter;\n}();","map":{"version":3,"sources":["../../../../../src/routers/legacy-router/legacy-router.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { SwapRouter, Trade } from '@uniswap/router-sdk';\nimport { TradeType } from '@uniswap/sdk-core';\nimport { FeeAmount, Route } from '@uniswap/v3-sdk';\nimport { BigNumber, logger } from 'ethers';\nimport _ from 'lodash';\nimport { DAI_MAINNET, USDC_MAINNET, } from '../../providers/token-provider';\nimport { CurrencyAmount } from '../../util/amounts';\nimport { log } from '../../util/log';\nimport { routeToString } from '../../util/routes';\nimport { V3RouteWithValidQuote } from '../alpha-router';\nimport { V3Route } from '../router';\nimport { ADDITIONAL_BASES, BASES_TO_CHECK_TRADES_AGAINST, CUSTOM_BASES, } from './bases';\n// Interface defaults to 2.\nconst MAX_HOPS = 2;\n/**\n * Replicates the router implemented in the V3 interface.\n * Code is mostly a copy from https://github.com/Uniswap/uniswap-interface/blob/0190b5a408c13016c87e1030ffc59326c085f389/src/hooks/useBestV3Trade.ts#L22-L23\n * with React/Redux hooks removed, and refactoring to allow re-use in other routers.\n */\nexport class LegacyRouter {\n    constructor({ chainId, multicall2Provider, poolProvider, quoteProvider, tokenProvider, }) {\n        this.chainId = chainId;\n        this.multicall2Provider = multicall2Provider;\n        this.poolProvider = poolProvider;\n        this.quoteProvider = quoteProvider;\n        this.tokenProvider = tokenProvider;\n    }\n    async route(amount, quoteCurrency, swapType, swapConfig, partialRoutingConfig) {\n        if (swapType == TradeType.EXACT_INPUT) {\n            return this.routeExactIn(amount.currency, quoteCurrency, amount, swapConfig, partialRoutingConfig);\n        }\n        return this.routeExactOut(quoteCurrency, amount.currency, amount, swapConfig, partialRoutingConfig);\n    }\n    async routeExactIn(currencyIn, currencyOut, amountIn, swapConfig, routingConfig) {\n        const tokenIn = currencyIn.wrapped;\n        const tokenOut = currencyOut.wrapped;\n        const routes = await this.getAllRoutes(tokenIn, tokenOut, routingConfig);\n        const routeQuote = await this.findBestRouteExactIn(amountIn, tokenOut, routes, routingConfig);\n        if (!routeQuote) {\n            return null;\n        }\n        const trade = this.buildTrade(currencyIn, currencyOut, TradeType.EXACT_INPUT, routeQuote);\n        return {\n            quote: routeQuote.quote,\n            quoteGasAdjusted: routeQuote.quote,\n            route: [routeQuote],\n            estimatedGasUsed: BigNumber.from(0),\n            estimatedGasUsedQuoteToken: CurrencyAmount.fromFractionalAmount(tokenOut, 0, 1),\n            estimatedGasUsedUSD: CurrencyAmount.fromFractionalAmount(DAI_MAINNET, 0, 1),\n            gasPriceWei: BigNumber.from(0),\n            trade,\n            methodParameters: swapConfig\n                ? this.buildMethodParameters(trade, swapConfig)\n                : undefined,\n            blockNumber: BigNumber.from(0),\n        };\n    }\n    async routeExactOut(currencyIn, currencyOut, amountOut, swapConfig, routingConfig) {\n        const tokenIn = currencyIn.wrapped;\n        const tokenOut = currencyOut.wrapped;\n        const routes = await this.getAllRoutes(tokenIn, tokenOut, routingConfig);\n        const routeQuote = await this.findBestRouteExactOut(amountOut, tokenIn, routes, routingConfig);\n        if (!routeQuote) {\n            return null;\n        }\n        const trade = this.buildTrade(currencyIn, currencyOut, TradeType.EXACT_OUTPUT, routeQuote);\n        return {\n            quote: routeQuote.quote,\n            quoteGasAdjusted: routeQuote.quote,\n            route: [routeQuote],\n            estimatedGasUsed: BigNumber.from(0),\n            estimatedGasUsedQuoteToken: CurrencyAmount.fromFractionalAmount(tokenIn, 0, 1),\n            estimatedGasUsedUSD: CurrencyAmount.fromFractionalAmount(DAI_MAINNET, 0, 1),\n            gasPriceWei: BigNumber.from(0),\n            trade,\n            methodParameters: swapConfig\n                ? this.buildMethodParameters(trade, swapConfig)\n                : undefined,\n            blockNumber: BigNumber.from(0),\n        };\n    }\n    async findBestRouteExactIn(amountIn, tokenOut, routes, routingConfig) {\n        const { routesWithQuotes: quotesRaw } = await this.quoteProvider.getQuotesManyExactIn([amountIn], routes, {\n            blockNumber: routingConfig === null || routingConfig === void 0 ? void 0 : routingConfig.blockNumber,\n        });\n        const quotes100Percent = _.map(quotesRaw, ([route, quotes]) => { var _a, _b; return `${routeToString(route)} : ${(_b = (_a = quotes[0]) === null || _a === void 0 ? void 0 : _a.quote) === null || _b === void 0 ? void 0 : _b.toString()}`; });\n        log.info({ quotes100Percent }, '100% Quotes');\n        const bestQuote = await this.getBestQuote(routes, quotesRaw, tokenOut, TradeType.EXACT_INPUT);\n        return bestQuote;\n    }\n    async findBestRouteExactOut(amountOut, tokenIn, routes, routingConfig) {\n        const { routesWithQuotes: quotesRaw } = await this.quoteProvider.getQuotesManyExactOut([amountOut], routes, {\n            blockNumber: routingConfig === null || routingConfig === void 0 ? void 0 : routingConfig.blockNumber,\n        });\n        const bestQuote = await this.getBestQuote(routes, quotesRaw, tokenIn, TradeType.EXACT_OUTPUT);\n        return bestQuote;\n    }\n    async getBestQuote(routes, quotesRaw, quoteToken, routeType) {\n        log.debug(`Got ${_.filter(quotesRaw, ([_, quotes]) => !!quotes[0]).length} valid quotes from ${routes.length} possible routes.`);\n        const routeQuotesRaw = [];\n        for (let i = 0; i < quotesRaw.length; i++) {\n            const [route, quotes] = quotesRaw[i];\n            const { quote, amount } = quotes[0];\n            if (!quote) {\n                logger.debug(`No quote for ${routeToString(route)}`);\n                continue;\n            }\n            routeQuotesRaw.push({ route, quote, amount });\n        }\n        if (routeQuotesRaw.length == 0) {\n            return null;\n        }\n        routeQuotesRaw.sort((routeQuoteA, routeQuoteB) => {\n            if (routeType == TradeType.EXACT_INPUT) {\n                return routeQuoteA.quote.gt(routeQuoteB.quote) ? -1 : 1;\n            }\n            else {\n                return routeQuoteA.quote.lt(routeQuoteB.quote) ? -1 : 1;\n            }\n        });\n        const routeQuotes = _.map(routeQuotesRaw, ({ route, quote, amount }) => {\n            return new V3RouteWithValidQuote({\n                route,\n                rawQuote: quote,\n                amount,\n                percent: 100,\n                gasModel: {\n                    estimateGasCost: () => ({\n                        gasCostInToken: CurrencyAmount.fromRawAmount(quoteToken, 0),\n                        gasCostInUSD: CurrencyAmount.fromRawAmount(USDC_MAINNET, 0),\n                        gasEstimate: BigNumber.from(0),\n                    }),\n                },\n                sqrtPriceX96AfterList: [],\n                initializedTicksCrossedList: [],\n                quoterGasEstimate: BigNumber.from(0),\n                tradeType: routeType,\n                quoteToken,\n                v3PoolProvider: this.poolProvider,\n            });\n        });\n        for (let rq of routeQuotes) {\n            log.debug(`Quote: ${rq.amount.toFixed(2)} Route: ${routeToString(rq.route)}`);\n        }\n        return routeQuotes[0];\n    }\n    async getAllRoutes(tokenIn, tokenOut, routingConfig) {\n        const tokenPairs = await this.getAllPossiblePairings(tokenIn, tokenOut);\n        const poolAccessor = await this.poolProvider.getPools(tokenPairs, {\n            blockNumber: routingConfig === null || routingConfig === void 0 ? void 0 : routingConfig.blockNumber,\n        });\n        const pools = poolAccessor.getAllPools();\n        const routes = this.computeAllRoutes(tokenIn, tokenOut, pools, this.chainId, [], [], tokenIn, MAX_HOPS);\n        log.info({ routes: _.map(routes, routeToString) }, `Computed ${routes.length} possible routes.`);\n        return routes;\n    }\n    async getAllPossiblePairings(tokenIn, tokenOut) {\n        var _a, _b, _c, _d, _e;\n        const common = (_a = BASES_TO_CHECK_TRADES_AGAINST(this.tokenProvider)[this.chainId]) !== null && _a !== void 0 ? _a : [];\n        const additionalA = (_c = (_b = (await ADDITIONAL_BASES(this.tokenProvider))[this.chainId]) === null || _b === void 0 ? void 0 : _b[tokenIn.address]) !== null && _c !== void 0 ? _c : [];\n        const additionalB = (_e = (_d = (await ADDITIONAL_BASES(this.tokenProvider))[this.chainId]) === null || _d === void 0 ? void 0 : _d[tokenOut.address]) !== null && _e !== void 0 ? _e : [];\n        const bases = [...common, ...additionalA, ...additionalB];\n        const basePairs = _.flatMap(bases, (base) => bases.map((otherBase) => [base, otherBase]));\n        const customBases = (await CUSTOM_BASES(this.tokenProvider))[this.chainId];\n        const allPairs = _([\n            // the direct pair\n            [tokenIn, tokenOut],\n            // token A against all bases\n            ...bases.map((base) => [tokenIn, base]),\n            // token B against all bases\n            ...bases.map((base) => [tokenOut, base]),\n            // each base against all bases\n            ...basePairs,\n        ])\n            .filter((tokens) => Boolean(tokens[0] && tokens[1]))\n            .filter(([tokenA, tokenB]) => tokenA.address !== tokenB.address && !tokenA.equals(tokenB))\n            .filter(([tokenA, tokenB]) => {\n            const customBasesA = customBases === null || customBases === void 0 ? void 0 : customBases[tokenA.address];\n            const customBasesB = customBases === null || customBases === void 0 ? void 0 : customBases[tokenB.address];\n            if (!customBasesA && !customBasesB)\n                return true;\n            if (customBasesA && !customBasesA.find((base) => tokenB.equals(base)))\n                return false;\n            if (customBasesB && !customBasesB.find((base) => tokenA.equals(base)))\n                return false;\n            return true;\n        })\n            .flatMap(([tokenA, tokenB]) => {\n            return [\n                [tokenA, tokenB, FeeAmount.LOW],\n                [tokenA, tokenB, FeeAmount.MEDIUM],\n                [tokenA, tokenB, FeeAmount.HIGH],\n            ];\n        })\n            .value();\n        return allPairs;\n    }\n    computeAllRoutes(tokenIn, tokenOut, pools, chainId, currentPath = [], allPaths = [], startTokenIn = tokenIn, maxHops = 2) {\n        for (const pool of pools) {\n            if (currentPath.indexOf(pool) !== -1 || !pool.involvesToken(tokenIn))\n                continue;\n            const outputToken = pool.token0.equals(tokenIn)\n                ? pool.token1\n                : pool.token0;\n            if (outputToken.equals(tokenOut)) {\n                allPaths.push(new V3Route([...currentPath, pool], startTokenIn, tokenOut));\n            }\n            else if (maxHops > 1) {\n                this.computeAllRoutes(outputToken, tokenOut, pools, chainId, [...currentPath, pool], allPaths, startTokenIn, maxHops - 1);\n            }\n        }\n        return allPaths;\n    }\n    buildTrade(tokenInCurrency, tokenOutCurrency, tradeType, routeAmount) {\n        const { route, amount, quote } = routeAmount;\n        // The route, amount and quote are all in terms of wrapped tokens.\n        // When constructing the Trade object the inputAmount/outputAmount must\n        // use native currencies if necessary. This is so that the Trade knows to wrap/unwrap.\n        if (tradeType == TradeType.EXACT_INPUT) {\n            const amountCurrency = CurrencyAmount.fromFractionalAmount(tokenInCurrency, amount.numerator, amount.denominator);\n            const quoteCurrency = CurrencyAmount.fromFractionalAmount(tokenOutCurrency, quote.numerator, quote.denominator);\n            const routeCurrency = new Route(route.pools, amountCurrency.currency, quoteCurrency.currency);\n            return new Trade({\n                v3Routes: [\n                    {\n                        routev3: routeCurrency,\n                        inputAmount: amountCurrency,\n                        outputAmount: quoteCurrency,\n                    },\n                ],\n                v2Routes: [],\n                tradeType: tradeType,\n            });\n        }\n        else {\n            const quoteCurrency = CurrencyAmount.fromFractionalAmount(tokenInCurrency, quote.numerator, quote.denominator);\n            const amountCurrency = CurrencyAmount.fromFractionalAmount(tokenOutCurrency, amount.numerator, amount.denominator);\n            const routeCurrency = new Route(route.pools, quoteCurrency.currency, amountCurrency.currency);\n            return new Trade({\n                v3Routes: [\n                    {\n                        routev3: routeCurrency,\n                        inputAmount: quoteCurrency,\n                        outputAmount: amountCurrency,\n                    },\n                ],\n                v2Routes: [],\n                tradeType: tradeType,\n            });\n        }\n    }\n    buildMethodParameters(trade, swapConfig) {\n        const { recipient, slippageTolerance, deadline } = swapConfig;\n        const methodParameters = SwapRouter.swapCallParameters(trade, {\n            recipient,\n            slippageTolerance,\n            deadlineOrPreviousBlockhash: deadline,\n            // ...(signatureData\n            //   ? {\n            //       inputTokenPermit:\n            //         'allowed' in signatureData\n            //           ? {\n            //               expiry: signatureData.deadline,\n            //               nonce: signatureData.nonce,\n            //               s: signatureData.s,\n            //               r: signatureData.r,\n            //               v: signatureData.v as any,\n            //             }\n            //           : {\n            //               deadline: signatureData.deadline,\n            //               amount: signatureData.amount,\n            //               s: signatureData.s,\n            //               r: signatureData.r,\n            //               v: signatureData.v as any,\n            //             },\n            //     }\n            //   : {}),\n        });\n        return methodParameters;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGVnYWN5LXJvdXRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9yb3V0ZXJzL2xlZ2FjeS1yb3V0ZXIvbGVnYWN5LXJvdXRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3hELE9BQU8sRUFBbUIsU0FBUyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDL0QsT0FBTyxFQUFFLFNBQVMsRUFBMEIsS0FBSyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDM0UsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFDM0MsT0FBTyxDQUFDLE1BQU0sUUFBUSxDQUFDO0FBRXZCLE9BQU8sRUFDTCxXQUFXLEVBRVgsWUFBWSxHQUNiLE1BQU0sZ0NBQWdDLENBQUM7QUFNeEMsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRXBELE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNyQyxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDbEQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDeEQsT0FBTyxFQUFtQyxPQUFPLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDckUsT0FBTyxFQUNMLGdCQUFnQixFQUNoQiw2QkFBNkIsRUFDN0IsWUFBWSxHQUNiLE1BQU0sU0FBUyxDQUFDO0FBVWpCLDJCQUEyQjtBQUMzQixNQUFNLFFBQVEsR0FBRyxDQUFDLENBQUM7QUFNbkI7Ozs7R0FJRztBQUNILE1BQU0sT0FBTyxZQUFZO0lBT3ZCLFlBQVksRUFDVixPQUFPLEVBQ1Asa0JBQWtCLEVBQ2xCLFlBQVksRUFDWixhQUFhLEVBQ2IsYUFBYSxHQUNNO1FBQ25CLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFD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"]},"metadata":{},"sourceType":"module"}