{"ast":null,"code":"/// <reference lib=\"webworker\" />\n/* eslint-disable no-restricted-globals */import{clientsClaim}from'workbox-core';import{createHandlerBoundToURL,precacheAndRoute}from'workbox-precaching';import{registerRoute}from'workbox-routing';clientsClaim();// Precache the relevant assets generated by the build process.\nvar manifest=self.__WB_MANIFEST.filter(function(entry){var url=typeof entry==='string'?entry:entry.url;// If this is a language file, skip. They are compiled elsewhere.\nif(url.endsWith('.po')){return false;}// If this isn't a var woff2 font, skip. Modern browsers only need var fonts.\nif(url.endsWith('.woff')||url.endsWith('.woff2')&&!url.includes('.var')){return false;}return true;});precacheAndRoute(manifest);// Set up App Shell-style routing, so that navigation requests are fulfilled\n// immediately with a local index.html shell. See\n// https://developers.google.com/web/fundamentals/architecture/app-shell\nvar fileExtensionRegexp=new RegExp('/[^/?]+\\\\.[^/]+$');registerRoute(function(_ref){var request=_ref.request,url=_ref.url;// If this isn't app.uniswap.org, skip. IPFS gateways may not have domain\n// separation, so they cannot use App Shell-style routing.\nif(url.hostname!=='app.uniswap.org'){return false;}// If this isn't a navigation, skip.\nif(request.mode!=='navigate'){return false;}// If this looks like a URL for a resource, skip.\nif(url.pathname.match(fileExtensionRegexp)){return false;}return true;},createHandlerBoundToURL(process.env.PUBLIC_URL+'/index.html'));","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/service-worker.ts"],"names":["clientsClaim","createHandlerBoundToURL","precacheAndRoute","registerRoute","manifest","self","__WB_MANIFEST","filter","entry","url","endsWith","includes","fileExtensionRegexp","RegExp","request","hostname","mode","pathname","match","process","env","PUBLIC_URL"],"mappings":"AAAA;AACA,0CAEA,OAASA,YAAT,KAA6B,cAA7B,CACA,OAASC,uBAAT,CAAkCC,gBAAlC,KAA0D,oBAA1D,CACA,OAASC,aAAT,KAA8B,iBAA9B,CAIAH,YAAY,GAEZ;AACA,GAAMI,CAAAA,QAAQ,CAAGC,IAAI,CAACC,aAAL,CAAmBC,MAAnB,CAA0B,SAACC,KAAD,CAAW,CACpD,GAAMC,CAAAA,GAAG,CAAG,MAAOD,CAAAA,KAAP,GAAiB,QAAjB,CAA4BA,KAA5B,CAAoCA,KAAK,CAACC,GAAtD,CACA;AACA,GAAIA,GAAG,CAACC,QAAJ,CAAa,KAAb,CAAJ,CAAyB,CACvB,MAAO,MAAP,CACD,CAED;AACA,GAAID,GAAG,CAACC,QAAJ,CAAa,OAAb,GAA0BD,GAAG,CAACC,QAAJ,CAAa,QAAb,GAA0B,CAACD,GAAG,CAACE,QAAJ,CAAa,MAAb,CAAzD,CAAgF,CAC9E,MAAO,MAAP,CACD,CAED,MAAO,KAAP,CACD,CAbgB,CAAjB,CAcAT,gBAAgB,CAACE,QAAD,CAAhB,CAEA;AACA;AACA;AACA,GAAMQ,CAAAA,mBAAmB,CAAG,GAAIC,CAAAA,MAAJ,CAAW,kBAAX,CAA5B,CACAV,aAAa,CAAC,cAAsD,IAAnDW,CAAAA,OAAmD,MAAnDA,OAAmD,CAA1CL,GAA0C,MAA1CA,GAA0C,CAClE;AACA;AACA,GAAIA,GAAG,CAACM,QAAJ,GAAiB,iBAArB,CAAwC,CACtC,MAAO,MAAP,CACD,CAED;AACA,GAAID,OAAO,CAACE,IAAR,GAAiB,UAArB,CAAiC,CAC/B,MAAO,MAAP,CACD,CAED;AACA,GAAIP,GAAG,CAACQ,QAAJ,CAAaC,KAAb,CAAmBN,mBAAnB,CAAJ,CAA6C,CAC3C,MAAO,MAAP,CACD,CAED,MAAO,KAAP,CACD,CAlBY,CAkBVX,uBAAuB,CAACkB,OAAO,CAACC,GAAR,CAAYC,UAAZ,CAAyB,aAA1B,CAlBb,CAAb","sourcesContent":["/// <reference lib=\"webworker\" />\n/* eslint-disable no-restricted-globals */\n\nimport { clientsClaim } from 'workbox-core'\nimport { createHandlerBoundToURL, precacheAndRoute } from 'workbox-precaching'\nimport { registerRoute } from 'workbox-routing'\n\ndeclare const self: ServiceWorkerGlobalScope\n\nclientsClaim()\n\n// Precache the relevant assets generated by the build process.\nconst manifest = self.__WB_MANIFEST.filter((entry) => {\n  const url = typeof entry === 'string' ? entry : entry.url\n  // If this is a language file, skip. They are compiled elsewhere.\n  if (url.endsWith('.po')) {\n    return false\n  }\n\n  // If this isn't a var woff2 font, skip. Modern browsers only need var fonts.\n  if (url.endsWith('.woff') || (url.endsWith('.woff2') && !url.includes('.var'))) {\n    return false\n  }\n\n  return true\n})\nprecacheAndRoute(manifest)\n\n// Set up App Shell-style routing, so that navigation requests are fulfilled\n// immediately with a local index.html shell. See\n// https://developers.google.com/web/fundamentals/architecture/app-shell\nconst fileExtensionRegexp = new RegExp('/[^/?]+\\\\.[^/]+$')\nregisterRoute(({ request, url }: { request: Request; url: URL }) => {\n  // If this isn't app.uniswap.org, skip. IPFS gateways may not have domain\n  // separation, so they cannot use App Shell-style routing.\n  if (url.hostname !== 'app.uniswap.org') {\n    return false\n  }\n\n  // If this isn't a navigation, skip.\n  if (request.mode !== 'navigate') {\n    return false\n  }\n\n  // If this looks like a URL for a resource, skip.\n  if (url.pathname.match(fileExtensionRegexp)) {\n    return false\n  }\n\n  return true\n}, createHandlerBoundToURL(process.env.PUBLIC_URL + '/index.html'))\n"]},"metadata":{},"sourceType":"module"}