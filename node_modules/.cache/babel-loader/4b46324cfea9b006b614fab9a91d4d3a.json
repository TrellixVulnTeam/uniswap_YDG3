{"ast":null,"code":"import _ from 'lodash';\nimport { log } from '../util';\nimport { SEED_TOKENS } from './token-provider';\n/**\n * Provider for getting token metadata that falls back to a different provider\n * in the event of failure.\n *\n * @export\n * @class CachingTokenProviderWithFallback\n */\n\nexport class CachingTokenProviderWithFallback {\n  constructor(chainId, // Token metadata (e.g. symbol and decimals) don't change so can be cached indefinitely.\n  // Constructing a new token object is slow as sdk-core does checksumming.\n  tokenCache, primaryTokenProvider, fallbackTokenProvider) {\n    this.chainId = chainId;\n    this.tokenCache = tokenCache;\n    this.primaryTokenProvider = primaryTokenProvider;\n    this.fallbackTokenProvider = fallbackTokenProvider;\n\n    this.CACHE_KEY = (chainId, address) => `token-${chainId}-${address}`;\n  }\n\n  async getTokens(_addresses) {\n    const seedTokens = SEED_TOKENS[this.chainId];\n\n    if (seedTokens) {\n      for (const token of Object.values(seedTokens)) {\n        await this.tokenCache.set(this.CACHE_KEY(this.chainId, token.address.toLowerCase()), token);\n      }\n    }\n\n    const addressToToken = {};\n    const symbolToToken = {};\n\n    const addresses = _(_addresses).map(address => address.toLowerCase()).uniq().value();\n\n    const addressesToFindInPrimary = [];\n    const addressesToFindInSecondary = [];\n\n    for (const address of addresses) {\n      if (await this.tokenCache.has(this.CACHE_KEY(this.chainId, address))) {\n        addressToToken[address.toLowerCase()] = await this.tokenCache.get(this.CACHE_KEY(this.chainId, address));\n        symbolToToken[addressToToken[address].symbol] = await this.tokenCache.get(this.CACHE_KEY(this.chainId, address));\n      } else {\n        addressesToFindInPrimary.push(address);\n      }\n    }\n\n    log.info({\n      addressesToFindInPrimary\n    }, `Found ${addresses.length - addressesToFindInPrimary.length} out of ${addresses.length} tokens in local cache. ${addressesToFindInPrimary.length > 0 ? `Checking primary token provider for ${addressesToFindInPrimary.length} tokens` : ``}\n      `);\n\n    if (addressesToFindInPrimary.length > 0) {\n      const primaryTokenAccessor = await this.primaryTokenProvider.getTokens(addressesToFindInPrimary);\n\n      for (const address of addressesToFindInPrimary) {\n        const token = primaryTokenAccessor.getTokenByAddress(address);\n\n        if (token) {\n          addressToToken[address.toLowerCase()] = token;\n          symbolToToken[addressToToken[address].symbol] = token;\n          await this.tokenCache.set(this.CACHE_KEY(this.chainId, address.toLowerCase()), addressToToken[address]);\n        } else {\n          addressesToFindInSecondary.push(address);\n        }\n      }\n\n      log.info({\n        addressesToFindInSecondary\n      }, `Found ${addressesToFindInPrimary.length - addressesToFindInSecondary.length} tokens in primary. ${this.fallbackTokenProvider ? `Checking secondary token provider for ${addressesToFindInSecondary.length} tokens` : `No fallback token provider specified. About to return.`}`);\n    }\n\n    if (this.fallbackTokenProvider && addressesToFindInSecondary.length > 0) {\n      const secondaryTokenAccessor = await this.fallbackTokenProvider.getTokens(addressesToFindInSecondary);\n\n      for (const address of addressesToFindInSecondary) {\n        const token = secondaryTokenAccessor.getTokenByAddress(address);\n\n        if (token) {\n          addressToToken[address.toLowerCase()] = token;\n          symbolToToken[addressToToken[address].symbol] = token;\n          await this.tokenCache.set(this.CACHE_KEY(this.chainId, address.toLowerCase()), addressToToken[address]);\n        }\n      }\n    }\n\n    return {\n      getTokenByAddress: address => {\n        return addressToToken[address.toLowerCase()];\n      },\n      getTokenBySymbol: symbol => {\n        return symbolToToken[symbol.toLowerCase()];\n      },\n      getAllTokens: () => {\n        return Object.values(addressToToken);\n      }\n    };\n  }\n\n}","map":{"version":3,"sources":["../../../../src/providers/caching-token-provider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import _ from 'lodash';\nimport { log } from '../util';\nimport { SEED_TOKENS } from './token-provider';\n/**\n * Provider for getting token metadata that falls back to a different provider\n * in the event of failure.\n *\n * @export\n * @class CachingTokenProviderWithFallback\n */\nexport class CachingTokenProviderWithFallback {\n    constructor(chainId, \n    // Token metadata (e.g. symbol and decimals) don't change so can be cached indefinitely.\n    // Constructing a new token object is slow as sdk-core does checksumming.\n    tokenCache, primaryTokenProvider, fallbackTokenProvider) {\n        this.chainId = chainId;\n        this.tokenCache = tokenCache;\n        this.primaryTokenProvider = primaryTokenProvider;\n        this.fallbackTokenProvider = fallbackTokenProvider;\n        this.CACHE_KEY = (chainId, address) => `token-${chainId}-${address}`;\n    }\n    async getTokens(_addresses) {\n        const seedTokens = SEED_TOKENS[this.chainId];\n        if (seedTokens) {\n            for (const token of Object.values(seedTokens)) {\n                await this.tokenCache.set(this.CACHE_KEY(this.chainId, token.address.toLowerCase()), token);\n            }\n        }\n        const addressToToken = {};\n        const symbolToToken = {};\n        const addresses = _(_addresses)\n            .map((address) => address.toLowerCase())\n            .uniq()\n            .value();\n        const addressesToFindInPrimary = [];\n        const addressesToFindInSecondary = [];\n        for (const address of addresses) {\n            if (await this.tokenCache.has(this.CACHE_KEY(this.chainId, address))) {\n                addressToToken[address.toLowerCase()] = (await this.tokenCache.get(this.CACHE_KEY(this.chainId, address)));\n                symbolToToken[addressToToken[address].symbol] =\n                    (await this.tokenCache.get(this.CACHE_KEY(this.chainId, address)));\n            }\n            else {\n                addressesToFindInPrimary.push(address);\n            }\n        }\n        log.info({ addressesToFindInPrimary }, `Found ${addresses.length - addressesToFindInPrimary.length} out of ${addresses.length} tokens in local cache. ${addressesToFindInPrimary.length > 0\n            ? `Checking primary token provider for ${addressesToFindInPrimary.length} tokens`\n            : ``}\n      `);\n        if (addressesToFindInPrimary.length > 0) {\n            const primaryTokenAccessor = await this.primaryTokenProvider.getTokens(addressesToFindInPrimary);\n            for (const address of addressesToFindInPrimary) {\n                const token = primaryTokenAccessor.getTokenByAddress(address);\n                if (token) {\n                    addressToToken[address.toLowerCase()] = token;\n                    symbolToToken[addressToToken[address].symbol] = token;\n                    await this.tokenCache.set(this.CACHE_KEY(this.chainId, address.toLowerCase()), addressToToken[address]);\n                }\n                else {\n                    addressesToFindInSecondary.push(address);\n                }\n            }\n            log.info({ addressesToFindInSecondary }, `Found ${addressesToFindInPrimary.length - addressesToFindInSecondary.length} tokens in primary. ${this.fallbackTokenProvider\n                ? `Checking secondary token provider for ${addressesToFindInSecondary.length} tokens`\n                : `No fallback token provider specified. About to return.`}`);\n        }\n        if (this.fallbackTokenProvider && addressesToFindInSecondary.length > 0) {\n            const secondaryTokenAccessor = await this.fallbackTokenProvider.getTokens(addressesToFindInSecondary);\n            for (const address of addressesToFindInSecondary) {\n                const token = secondaryTokenAccessor.getTokenByAddress(address);\n                if (token) {\n                    addressToToken[address.toLowerCase()] = token;\n                    symbolToToken[addressToToken[address].symbol] = token;\n                    await this.tokenCache.set(this.CACHE_KEY(this.chainId, address.toLowerCase()), addressToToken[address]);\n                }\n            }\n        }\n        return {\n            getTokenByAddress: (address) => {\n                return addressToToken[address.toLowerCase()];\n            },\n            getTokenBySymbol: (symbol) => {\n                return symbolToToken[symbol.toLowerCase()];\n            },\n            getAllTokens: () => {\n                return Object.values(addressToToken);\n            },\n        };\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGluZy10b2tlbi1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvY2FjaGluZy10b2tlbi1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLENBQUMsTUFBTSxRQUFRLENBQUM7QUFDdkIsT0FBTyxFQUFXLEdBQUcsRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUV2QyxPQUFPLEVBQWtCLFdBQVcsRUFBaUIsTUFBTSxrQkFBa0IsQ0FBQztBQUU5RTs7Ozs7O0dBTUc7QUFDSCxNQUFNLE9BQU8sZ0NBQWdDO0lBSTNDLFlBQ1ksT0FBZ0I7SUFDMUIsd0ZBQXdGO0lBQ3hGLHlFQUF5RTtJQUNqRSxVQUF5QixFQUN2QixvQkFBb0MsRUFDcEMscUJBQXNDO1FBTHRDLFlBQU8sR0FBUCxPQUFPLENBQVM7UUFHbEIsZUFBVSxHQUFWLFVBQVUsQ0FBZTtRQUN2Qix5QkFBb0IsR0FBcEIsb0JBQW9CLENBQWdCO1FBQ3BDLDBCQUFxQixHQUFyQixxQkFBcUIsQ0FBaUI7UUFUMUMsY0FBUyxHQUFHLENBQUMsT0FBZ0IsRUFBRSxPQUFlLEVBQUUsRUFBRSxDQUN4RCxTQUFTLE9BQU8sSUFBSSxPQUFPLEVBQUUsQ0FBQztJQVM3QixDQUFDO0lBRUcsS0FBSyxDQUFDLFNBQVMsQ0FBQyxVQUFvQjtRQUN6QyxNQUFNLFVBQVUsR0FBRyxXQUFXLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBRTdDLElBQUksVUFBVSxFQUFFO1lBQ2QsS0FBSyxNQUFNLEtBQUssSUFBSSxNQUFNLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxFQUFFO2dCQUM3QyxNQUFNLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUN2QixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsQ0FBQyxFQUN6RCxLQUFLLENBQ04sQ0FBQzthQUNIO1NBQ0Y7UUFFRCxNQUFNLGNBQWMsR0FBaUMsRUFBRSxDQUFDO1FBQ3hELE1BQU0sYUFBYSxHQUFnQyxFQUFFLENBQUM7UUFFdEQsTUFBTSxTQUFTLEdBQUcsQ0FBQyxDQUFDLFVBQVUsQ0FBQzthQUM1QixHQUFHLENBQUMsQ0FBQyxPQUFPLEVBQUUsRUFBRSxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsQ0FBQzthQUN2QyxJQUFJLEVBQUU7YUFDTixLQUFLLEVBQUUsQ0FBQztRQUVYLE1BQU0sd0JBQXdCLEdBQUcsRUFBRSxDQUFDO1FBQ3BDLE1BQU0sMEJBQTBCLEdBQUcsRUFBRSxDQUFDO1FBRXRDLEtBQUssTUFBTSxPQUFPLElBQUksU0FBUyxFQUFFO1lBQy9CLElBQUksTUFBTSxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUMsRUFBRTtnQkFDcEUsY0FBYyxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsQ0FBQyxHQUFHLENBQUMsTUFBTSxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FDaEUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUN0QyxDQUFFLENBQUM7Z0JBQ0osYUFBYSxDQUFDLGNBQWMsQ0FBQyxPQUFPLENBQUUsQ0FBQyxNQUFPLENBQUM7b0JBQzdDLENBQUMsTUFBTSxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBRSxDQUFDO2FBQ3ZFO2lCQUFNO2dCQUNMLHdCQUF3QixDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQzthQUN4QztTQUNGO1FBRUQsR0FBRyxDQUFDLElBQUksQ0FDTixFQUFFLHdCQUF3QixFQUFFLEVBQzVCLFNBQVMsU0FBUyxDQUFDLE1BQU0sR0FBRyx3QkFBd0IsQ0FBQyxNQUFNLFdBQ3pELFNBQVMsQ0FBQyxNQUNaLDJCQUNFLHdCQUF3QixDQUFDLE1BQU0sR0FBRyxDQUFDO1lBQ2pDLENBQUMsQ0FBQyx1Q0FBdUMsd0JBQXdCLENBQUMsTUFBTSxTQUFTO1lBQ2pGLENBQUMsQ0FBQyxFQUNOO09BQ0MsQ0FDRixDQUFDO1FBRUYsSUFBSSx3QkFBd0IsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO1lBQ3ZDLE1BQU0sb0JBQW9CLEdBQUcsTUFBTSxJQUFJLENBQUMsb0JBQW9CLENBQUMsU0FBUyxDQUNwRSx3QkFBd0IsQ0FDekIsQ0FBQztZQUVGLEtBQUssTUFBTSxPQUFPLElBQUksd0JBQXdCLEVBQUU7Z0JBQzlDLE1BQU0sS0FBSyxHQUFHLG9CQUFvQixDQUFDLGlCQUFpQixDQUFDLE9BQU8sQ0FBQyxDQUFDO2dCQUU5RCxJQUFJLEtBQUssRUFBRTtvQkFDVCxjQUFjLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxDQUFDLEdBQUcsS0FBSyxDQUFDO29CQUM5QyxhQUFhLENBQUMsY0FBYyxDQUFDLE9BQU8sQ0FBRSxDQUFDLE1BQU8sQ0FBQyxHQUFHLEtBQUssQ0FBQztvQkFDeEQsTUFBTSxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FDdkIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxXQUFXLEVBQUUsQ0FBQyxFQUNuRCxjQUFjLENBQUMsT0FBTyxDQUFFLENBQ3pCLENBQUM7aUJBQ0g7cUJBQU07b0JBQ0wsMEJBQTBCLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO2lCQUMxQzthQUNGO1lBRUQsR0FBRyxDQUFDLElBQUksQ0FDTixFQUFFLDBCQUEwQixFQUFFLEVBQzlCLFNBQ0Usd0JBQXdCLENBQUMsTUFBTSxHQUFHLDBCQUEwQixDQUFDLE1BQy9ELHVCQUNFLElBQUksQ0FBQyxxQkFBcUI7Z0JBQ3hCLENBQUMsQ0FBQyx5Q0FBeUMsMEJBQTBCLENBQUMsTUFBTSxTQUFTO2dCQUNyRixDQUFDLENBQUMsd0RBQ04sRUFBRSxDQUNILENBQUM7U0FDSDtRQUVELElBQUksSUFBSSxDQUFDLHFCQUFxQixJQUFJLDBCQUEwQixDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDdkUsTUFBTSxzQkFBc0IsR0FBRyxNQUFNLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxTQUFTLENBQ3ZFLDBCQUEwQixDQUMzQixDQUFDO1lBRUYsS0FBSyxNQUFNLE9BQU8sSUFBSSwwQkFBMEIsRUFBRTtnQkFDaEQsTUFBTSxLQUFLLEdBQUcsc0JBQXNCLENBQUMsaUJBQWlCLENBQUMsT0FBTyxDQUFDLENBQUM7Z0JBQ2hFLElBQUksS0FBSyxFQUFFO29CQUNULGNBQWMsQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFLENBQUMsR0FBRyxLQUFLLENBQUM7b0JBQzlDLGFBQWEsQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFFLENBQUMsTUFBTyxDQUFDLEdBQUcsS0FBSyxDQUFDO29CQUN4RCxNQUFNLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUN2QixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLFdBQVcsRUFBRSxDQUFDLEVBQ25ELGNBQWMsQ0FBQyxPQUFPLENBQUUsQ0FDekIsQ0FBQztpQkFDSDthQUNGO1NBQ0Y7UUFFRCxPQUFPO1lBQ0wsaUJBQWlCLEVBQUUsQ0FBQyxPQUFlLEVBQXFCLEVBQUU7Z0JBQ3hELE9BQU8sY0FBYyxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDO1lBQy9DLENBQUM7WUFDRCxnQkFBZ0IsRUFBRSxDQUFDLE1BQWMsRUFBcUIsRUFBRTtnQkFDdEQsT0FBTyxhQUFhLENBQUMsTUFBTSxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUM7WUFDN0MsQ0FBQztZQUNELFlBQVksRUFBRSxHQUFZLEVBQUU7Z0JBQzFCLE9BQU8sTUFBTSxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsQ0FBQztZQUN2QyxDQUFDO1NBQ0YsQ0FBQztJQUNKLENBQUM7Q0FDRiJ9"]},"metadata":{},"sourceType":"module"}