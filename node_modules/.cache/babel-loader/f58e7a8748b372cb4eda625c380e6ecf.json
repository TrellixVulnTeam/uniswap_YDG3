{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { skipToken } from '@reduxjs/toolkit/query/react';\nimport { FeeAmount } from '@uniswap/v3-sdk';\nimport { useMemo } from 'react';\nimport ReactGA from 'react-ga';\nimport { useBlockNumber } from 'state/application/hooks';\nimport { useFeeTierDistributionQuery } from 'state/data/enhanced';\nimport { PoolState, usePool } from './usePools'; // maximum number of blocks past which we consider the data stale\n\nconst MAX_DATA_BLOCK_AGE = 20;\nexport function useFeeTierDistribution(currencyA, currencyB) {\n  _s();\n\n  const {\n    isFetching,\n    isLoading,\n    isUninitialized,\n    isError,\n    distributions\n  } = usePoolTVL(currencyA === null || currencyA === void 0 ? void 0 : currencyA.wrapped, currencyB === null || currencyB === void 0 ? void 0 : currencyB.wrapped); // fetch all pool states to determine pool state\n\n  const [poolStateVeryLow] = usePool(currencyA, currencyB, FeeAmount.LOWEST);\n  const [poolStateLow] = usePool(currencyA, currencyB, FeeAmount.LOW);\n  const [poolStateMedium] = usePool(currencyA, currencyB, FeeAmount.MEDIUM);\n  const [poolStateHigh] = usePool(currencyA, currencyB, FeeAmount.HIGH);\n  return useMemo(() => {\n    var _distributions$FeeAmo, _distributions$FeeAmo2, _distributions$FeeAmo3, _distributions$FeeAmo4;\n\n    if (isLoading || isFetching || isUninitialized || isError || !distributions) {\n      return {\n        isLoading: isLoading || isFetching || !isUninitialized,\n        isError,\n        distributions\n      };\n    }\n\n    const largestUsageFeeTier = Object.keys(distributions).map(d => Number(d)).filter(d => distributions[d] !== 0 && distributions[d] !== undefined).reduce((a, b) => {\n      var _distributions$a, _distributions$b;\n\n      return ((_distributions$a = distributions[a]) !== null && _distributions$a !== void 0 ? _distributions$a : 0) > ((_distributions$b = distributions[b]) !== null && _distributions$b !== void 0 ? _distributions$b : 0) ? a : b;\n    }, -1);\n    const percentages = !isLoading && !isError && distributions && poolStateVeryLow !== PoolState.LOADING && poolStateLow !== PoolState.LOADING && poolStateMedium !== PoolState.LOADING && poolStateHigh !== PoolState.LOADING ? {\n      [FeeAmount.LOWEST]: poolStateVeryLow === PoolState.EXISTS ? ((_distributions$FeeAmo = distributions[FeeAmount.LOWEST]) !== null && _distributions$FeeAmo !== void 0 ? _distributions$FeeAmo : 0) * 100 : undefined,\n      [FeeAmount.LOW]: poolStateLow === PoolState.EXISTS ? ((_distributions$FeeAmo2 = distributions[FeeAmount.LOW]) !== null && _distributions$FeeAmo2 !== void 0 ? _distributions$FeeAmo2 : 0) * 100 : undefined,\n      [FeeAmount.MEDIUM]: poolStateMedium === PoolState.EXISTS ? ((_distributions$FeeAmo3 = distributions[FeeAmount.MEDIUM]) !== null && _distributions$FeeAmo3 !== void 0 ? _distributions$FeeAmo3 : 0) * 100 : undefined,\n      [FeeAmount.HIGH]: poolStateHigh === PoolState.EXISTS ? ((_distributions$FeeAmo4 = distributions[FeeAmount.HIGH]) !== null && _distributions$FeeAmo4 !== void 0 ? _distributions$FeeAmo4 : 0) * 100 : undefined\n    } : undefined;\n    return {\n      isLoading,\n      isError,\n      distributions: percentages,\n      largestUsageFeeTier: largestUsageFeeTier === -1 ? undefined : largestUsageFeeTier\n    };\n  }, [isLoading, isFetching, isUninitialized, isError, distributions, poolStateVeryLow, poolStateLow, poolStateMedium, poolStateHigh]);\n}\n\n_s(useFeeTierDistribution, \"3CyKsGYKRT0Usdy9VPB/Sz8YqzI=\", false, function () {\n  return [usePoolTVL, usePool, usePool, usePool, usePool];\n});\n\nfunction usePoolTVL(token0, token1) {\n  _s2();\n\n  var _ref;\n\n  const latestBlock = useBlockNumber();\n  const {\n    isLoading,\n    isFetching,\n    isUninitialized,\n    isError,\n    data\n  } = useFeeTierDistributionQuery(token0 && token1 ? {\n    token0: token0.address.toLowerCase(),\n    token1: token1.address.toLowerCase()\n  } : skipToken, {\n    pollingInterval: 30000\n  });\n  const {\n    asToken0,\n    asToken1,\n    _meta\n  } = (_ref = data) !== null && _ref !== void 0 ? _ref : {};\n  return useMemo(() => {\n    var _meta$block$number, _meta$block;\n\n    if (!latestBlock || !_meta || !asToken0 || !asToken1) {\n      return {\n        isLoading,\n        isFetching,\n        isUninitialized,\n        isError\n      };\n    }\n\n    if (latestBlock - ((_meta$block$number = _meta === null || _meta === void 0 ? void 0 : (_meta$block = _meta.block) === null || _meta$block === void 0 ? void 0 : _meta$block.number) !== null && _meta$block$number !== void 0 ? _meta$block$number : 0) > MAX_DATA_BLOCK_AGE) {\n      ReactGA.exception({\n        description: `Graph stale (latest block: ${latestBlock})`\n      });\n      return {\n        isLoading,\n        isFetching,\n        isUninitialized,\n        isError\n      };\n    }\n\n    const all = asToken0.concat(asToken1); // sum tvl for token0 and token1 by fee tier\n\n    const tvlByFeeTier = all.reduce((acc, value) => {\n      var _acc$value$feeTier$, _acc$value$feeTier$2;\n\n      acc[value.feeTier][0] = ((_acc$value$feeTier$ = acc[value.feeTier][0]) !== null && _acc$value$feeTier$ !== void 0 ? _acc$value$feeTier$ : 0) + Number(value.totalValueLockedToken0);\n      acc[value.feeTier][1] = ((_acc$value$feeTier$2 = acc[value.feeTier][1]) !== null && _acc$value$feeTier$2 !== void 0 ? _acc$value$feeTier$2 : 0) + Number(value.totalValueLockedToken1);\n      return acc;\n    }, {\n      [FeeAmount.LOWEST]: [undefined, undefined],\n      [FeeAmount.LOW]: [undefined, undefined],\n      [FeeAmount.MEDIUM]: [undefined, undefined],\n      [FeeAmount.HIGH]: [undefined, undefined]\n    }); // sum total tvl for token0 and token1\n\n    const [sumToken0Tvl, sumToken1Tvl] = Object.values(tvlByFeeTier).reduce((acc, value) => {\n      var _value$, _value$2;\n\n      acc[0] += (_value$ = value[0]) !== null && _value$ !== void 0 ? _value$ : 0;\n      acc[1] += (_value$2 = value[1]) !== null && _value$2 !== void 0 ? _value$2 : 0;\n      return acc;\n    }, [0, 0]); // returns undefined if both tvl0 and tvl1 are undefined (pool not created)\n\n    const mean = (tvl0, sumTvl0, tvl1, sumTvl1) => tvl0 === undefined && tvl1 === undefined ? undefined : ((tvl0 !== null && tvl0 !== void 0 ? tvl0 : 0) + (tvl1 !== null && tvl1 !== void 0 ? tvl1 : 0)) / (sumTvl0 + sumTvl1) || 0;\n\n    const distributions = {\n      [FeeAmount.LOWEST]: mean(tvlByFeeTier[FeeAmount.LOWEST][0], sumToken0Tvl, tvlByFeeTier[FeeAmount.LOWEST][1], sumToken1Tvl),\n      [FeeAmount.LOW]: mean(tvlByFeeTier[FeeAmount.LOW][0], sumToken0Tvl, tvlByFeeTier[FeeAmount.LOW][1], sumToken1Tvl),\n      [FeeAmount.MEDIUM]: mean(tvlByFeeTier[FeeAmount.MEDIUM][0], sumToken0Tvl, tvlByFeeTier[FeeAmount.MEDIUM][1], sumToken1Tvl),\n      [FeeAmount.HIGH]: mean(tvlByFeeTier[FeeAmount.HIGH][0], sumToken0Tvl, tvlByFeeTier[FeeAmount.HIGH][1], sumToken1Tvl)\n    };\n    return {\n      isLoading,\n      isFetching,\n      isUninitialized,\n      isError,\n      distributions\n    };\n  }, [_meta, asToken0, asToken1, isLoading, isError, isFetching, isUninitialized, latestBlock]);\n}\n\n_s2(usePoolTVL, \"ZcmABCjFGstN51KYDJOFw89hgtI=\", false, function () {\n  return [useBlockNumber, useFeeTierDistributionQuery];\n});","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/hooks/useFeeTierDistribution.ts"],"names":["skipToken","FeeAmount","useMemo","ReactGA","useBlockNumber","useFeeTierDistributionQuery","PoolState","usePool","MAX_DATA_BLOCK_AGE","useFeeTierDistribution","currencyA","currencyB","isFetching","isLoading","isUninitialized","isError","distributions","usePoolTVL","wrapped","poolStateVeryLow","LOWEST","poolStateLow","LOW","poolStateMedium","MEDIUM","poolStateHigh","HIGH","largestUsageFeeTier","Object","keys","map","d","Number","filter","undefined","reduce","a","b","percentages","LOADING","EXISTS","token0","token1","latestBlock","data","address","toLowerCase","pollingInterval","asToken0","asToken1","_meta","block","number","exception","description","all","concat","tvlByFeeTier","acc","value","feeTier","totalValueLockedToken0","totalValueLockedToken1","sumToken0Tvl","sumToken1Tvl","values","mean","tvl0","sumTvl0","tvl1","sumTvl1"],"mappings":"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","sourcesContent":["import { skipToken } from '@reduxjs/toolkit/query/react'\nimport { Currency, Token } from '@uniswap/sdk-core'\nimport { FeeAmount } from '@uniswap/v3-sdk'\nimport ms from 'ms.macro'\nimport { useMemo } from 'react'\nimport ReactGA from 'react-ga'\nimport { useBlockNumber } from 'state/application/hooks'\nimport { useFeeTierDistributionQuery } from 'state/data/enhanced'\nimport { FeeTierDistributionQuery } from 'state/data/generated'\n\nimport { PoolState, usePool } from './usePools'\n\n// maximum number of blocks past which we consider the data stale\nconst MAX_DATA_BLOCK_AGE = 20\n\ninterface FeeTierDistribution {\n  isLoading: boolean\n  isError: boolean\n  largestUsageFeeTier?: FeeAmount | undefined\n\n  // distributions as percentages of overall liquidity\n  distributions?: Record<FeeAmount, number | undefined>\n}\n\nexport function useFeeTierDistribution(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined\n): FeeTierDistribution {\n  const { isFetching, isLoading, isUninitialized, isError, distributions } = usePoolTVL(\n    currencyA?.wrapped,\n    currencyB?.wrapped\n  )\n\n  // fetch all pool states to determine pool state\n  const [poolStateVeryLow] = usePool(currencyA, currencyB, FeeAmount.LOWEST)\n  const [poolStateLow] = usePool(currencyA, currencyB, FeeAmount.LOW)\n  const [poolStateMedium] = usePool(currencyA, currencyB, FeeAmount.MEDIUM)\n  const [poolStateHigh] = usePool(currencyA, currencyB, FeeAmount.HIGH)\n\n  return useMemo(() => {\n    if (isLoading || isFetching || isUninitialized || isError || !distributions) {\n      return {\n        isLoading: isLoading || isFetching || !isUninitialized,\n        isError,\n        distributions,\n      }\n    }\n\n    const largestUsageFeeTier = Object.keys(distributions)\n      .map((d) => Number(d))\n      .filter((d: FeeAmount) => distributions[d] !== 0 && distributions[d] !== undefined)\n      .reduce((a: FeeAmount, b: FeeAmount) => ((distributions[a] ?? 0) > (distributions[b] ?? 0) ? a : b), -1)\n\n    const percentages =\n      !isLoading &&\n      !isError &&\n      distributions &&\n      poolStateVeryLow !== PoolState.LOADING &&\n      poolStateLow !== PoolState.LOADING &&\n      poolStateMedium !== PoolState.LOADING &&\n      poolStateHigh !== PoolState.LOADING\n        ? {\n            [FeeAmount.LOWEST]:\n              poolStateVeryLow === PoolState.EXISTS ? (distributions[FeeAmount.LOWEST] ?? 0) * 100 : undefined,\n            [FeeAmount.LOW]: poolStateLow === PoolState.EXISTS ? (distributions[FeeAmount.LOW] ?? 0) * 100 : undefined,\n            [FeeAmount.MEDIUM]:\n              poolStateMedium === PoolState.EXISTS ? (distributions[FeeAmount.MEDIUM] ?? 0) * 100 : undefined,\n            [FeeAmount.HIGH]:\n              poolStateHigh === PoolState.EXISTS ? (distributions[FeeAmount.HIGH] ?? 0) * 100 : undefined,\n          }\n        : undefined\n\n    return {\n      isLoading,\n      isError,\n      distributions: percentages,\n      largestUsageFeeTier: largestUsageFeeTier === -1 ? undefined : largestUsageFeeTier,\n    }\n  }, [\n    isLoading,\n    isFetching,\n    isUninitialized,\n    isError,\n    distributions,\n    poolStateVeryLow,\n    poolStateLow,\n    poolStateMedium,\n    poolStateHigh,\n  ])\n}\n\nfunction usePoolTVL(token0: Token | undefined, token1: Token | undefined) {\n  const latestBlock = useBlockNumber()\n\n  const { isLoading, isFetching, isUninitialized, isError, data } = useFeeTierDistributionQuery(\n    token0 && token1 ? { token0: token0.address.toLowerCase(), token1: token1.address.toLowerCase() } : skipToken,\n    {\n      pollingInterval: ms`30s`,\n    }\n  )\n\n  const { asToken0, asToken1, _meta } = (data as FeeTierDistributionQuery) ?? {}\n\n  return useMemo(() => {\n    if (!latestBlock || !_meta || !asToken0 || !asToken1) {\n      return {\n        isLoading,\n        isFetching,\n        isUninitialized,\n        isError,\n      }\n    }\n\n    if (latestBlock - (_meta?.block?.number ?? 0) > MAX_DATA_BLOCK_AGE) {\n      ReactGA.exception({\n        description: `Graph stale (latest block: ${latestBlock})`,\n      })\n\n      return {\n        isLoading,\n        isFetching,\n        isUninitialized,\n        isError,\n      }\n    }\n\n    const all = asToken0.concat(asToken1)\n\n    // sum tvl for token0 and token1 by fee tier\n    const tvlByFeeTier = all.reduce<{ [feeAmount: number]: [number | undefined, number | undefined] }>(\n      (acc, value) => {\n        acc[value.feeTier][0] = (acc[value.feeTier][0] ?? 0) + Number(value.totalValueLockedToken0)\n        acc[value.feeTier][1] = (acc[value.feeTier][1] ?? 0) + Number(value.totalValueLockedToken1)\n        return acc\n      },\n      {\n        [FeeAmount.LOWEST]: [undefined, undefined],\n        [FeeAmount.LOW]: [undefined, undefined],\n        [FeeAmount.MEDIUM]: [undefined, undefined],\n        [FeeAmount.HIGH]: [undefined, undefined],\n      } as Record<FeeAmount, [number | undefined, number | undefined]>\n    )\n\n    // sum total tvl for token0 and token1\n    const [sumToken0Tvl, sumToken1Tvl] = Object.values(tvlByFeeTier).reduce(\n      (acc: [number, number], value) => {\n        acc[0] += value[0] ?? 0\n        acc[1] += value[1] ?? 0\n        return acc\n      },\n      [0, 0]\n    )\n\n    // returns undefined if both tvl0 and tvl1 are undefined (pool not created)\n    const mean = (tvl0: number | undefined, sumTvl0: number, tvl1: number | undefined, sumTvl1: number) =>\n      tvl0 === undefined && tvl1 === undefined ? undefined : ((tvl0 ?? 0) + (tvl1 ?? 0)) / (sumTvl0 + sumTvl1) || 0\n\n    const distributions: Record<FeeAmount, number | undefined> = {\n      [FeeAmount.LOWEST]: mean(\n        tvlByFeeTier[FeeAmount.LOWEST][0],\n        sumToken0Tvl,\n        tvlByFeeTier[FeeAmount.LOWEST][1],\n        sumToken1Tvl\n      ),\n      [FeeAmount.LOW]: mean(tvlByFeeTier[FeeAmount.LOW][0], sumToken0Tvl, tvlByFeeTier[FeeAmount.LOW][1], sumToken1Tvl),\n      [FeeAmount.MEDIUM]: mean(\n        tvlByFeeTier[FeeAmount.MEDIUM][0],\n        sumToken0Tvl,\n        tvlByFeeTier[FeeAmount.MEDIUM][1],\n        sumToken1Tvl\n      ),\n      [FeeAmount.HIGH]: mean(\n        tvlByFeeTier[FeeAmount.HIGH][0],\n        sumToken0Tvl,\n        tvlByFeeTier[FeeAmount.HIGH][1],\n        sumToken1Tvl\n      ),\n    }\n\n    return {\n      isLoading,\n      isFetching,\n      isUninitialized,\n      isError,\n      distributions,\n    }\n  }, [_meta, asToken0, asToken1, isLoading, isError, isFetching, isUninitialized, latestBlock])\n}\n"]},"metadata":{},"sourceType":"module"}