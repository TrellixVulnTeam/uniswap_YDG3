{"ast":null,"code":"import _regeneratorRuntime from \"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { default as retry } from 'async-retry';\nimport axios from 'axios';\nimport { BigNumber } from 'ethers';\nimport { log } from '../util/log';\nimport { IGasPriceProvider } from './gas-price-provider';\nexport var ETHGasStationInfoProvider = /*#__PURE__*/function (_IGasPriceProvider) {\n  _inherits(ETHGasStationInfoProvider, _IGasPriceProvider);\n\n  var _super = _createSuper(ETHGasStationInfoProvider);\n\n  function ETHGasStationInfoProvider(url) {\n    var _this;\n\n    _classCallCheck(this, ETHGasStationInfoProvider);\n\n    _this = _super.call(this);\n    _this.url = url;\n    return _this;\n  }\n\n  _createClass(ETHGasStationInfoProvider, [{\n    key: \"getGasPrice\",\n    value: function () {\n      var _getGasPrice = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        var response, gasPriceResponse, status, gasPriceWei;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                log.info(\"About to get gas prices from gas station \".concat(this.url));\n                _context2.next = 3;\n                return retry( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          return _context.abrupt(\"return\", axios.get(_this2.url));\n\n                        case 1:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                })), {\n                  retries: 1\n                });\n\n              case 3:\n                response = _context2.sent;\n                gasPriceResponse = response.data, status = response.status;\n\n                if (!(status != 200)) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                log.error({\n                  response: response\n                }, \"Unabled to get gas price from \".concat(this.url, \".\"));\n                throw new Error(\"Unable to get gas price from \".concat(this.url));\n\n              case 8:\n                log.info({\n                  gasPriceResponse: gasPriceResponse\n                }, 'Gas price response from API. About to parse \"fast\" to big number'); // Gas prices from ethgasstation are in GweiX10.\n\n                gasPriceWei = BigNumber.from(gasPriceResponse.fast).div(BigNumber.from(10)).mul(BigNumber.from(10).pow(9));\n                log.info(\"Gas price in wei: \".concat(gasPriceWei, \" as of block \").concat(gasPriceResponse.blockNum));\n                return _context2.abrupt(\"return\", {\n                  gasPriceWei: gasPriceWei\n                });\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getGasPrice() {\n        return _getGasPrice.apply(this, arguments);\n      }\n\n      return getGasPrice;\n    }()\n  }]);\n\n  return ETHGasStationInfoProvider;\n}(IGasPriceProvider);","map":{"version":3,"sources":["../../../../src/providers/eth-gas-station-info-gas-price-provider.ts"],"names":[],"mappings":";;;;;;AAAA,SAAS,OAAO,IAAI,KAApB,QAAiC,aAAjC;AACA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,SAAT,QAA0B,QAA1B;AACA,SAAS,GAAT,QAAoB,aAApB;AACA,SAAmB,iBAAnB,QAA4C,sBAA5C;AAiBA,WAAa,yBAAb;AAAA;;AAAA;;AAEE,qCAAY,GAAZ,EAAuB;AAAA;;AAAA;;AACrB;AACA,UAAK,GAAL,GAAW,GAAX;AAFqB;AAGtB;;AALH;AAAA;AAAA;AAAA,kFAOS;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,gBAAA,GAAG,CAAC,IAAJ,oDAAqD,KAAK,GAA1D;AADK;AAAA,uBAEkB,KAAK,wEAC1B;AAAA;AAAA;AAAA;AAAA;AAAA,2DACS,KAAK,CAAC,GAAN,CAAiC,MAAI,CAAC,GAAtC,CADT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAD0B,IAI1B;AAAE,kBAAA,OAAO,EAAE;AAAX,iBAJ0B,CAFvB;;AAAA;AAEC,gBAAA,QAFD;AASS,gBAAA,gBATT,GASsC,QATtC,CASG,IATH,EAS2B,MAT3B,GASsC,QATtC,CAS2B,MAT3B;;AAAA,sBAWD,MAAM,IAAI,GAXT;AAAA;AAAA;AAAA;;AAYH,gBAAA,GAAG,CAAC,KAAJ,CAAU;AAAE,kBAAA,QAAQ,EAAR;AAAF,iBAAV,0CAAyD,KAAK,GAA9D;AAZG,sBAcG,IAAI,KAAJ,wCAA0C,KAAK,GAA/C,EAdH;;AAAA;AAiBL,gBAAA,GAAG,CAAC,IAAJ,CACE;AAAE,kBAAA,gBAAgB,EAAhB;AAAF,iBADF,EAEE,kEAFF,EAjBK,CAsBL;;AACM,gBAAA,WAvBD,GAuBe,SAAS,CAAC,IAAV,CAAe,gBAAgB,CAAC,IAAhC,EACjB,GADiB,CACb,SAAS,CAAC,IAAV,CAAe,EAAf,CADa,EAEjB,GAFiB,CAEb,SAAS,CAAC,IAAV,CAAe,EAAf,EAAmB,GAAnB,CAAuB,CAAvB,CAFa,CAvBf;AA2BL,gBAAA,GAAG,CAAC,IAAJ,6BACuB,WADvB,0BACkD,gBAAgB,CAAC,QADnE;AA3BK,kDA+BE;AAAE,kBAAA,WAAW,EAAE;AAAf,iBA/BF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAPT;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,EAA+C,iBAA/C","sourceRoot":"","sourcesContent":["import { default as retry } from 'async-retry';\nimport axios from 'axios';\nimport { BigNumber } from 'ethers';\nimport { log } from '../util/log';\nimport { IGasPriceProvider } from './gas-price-provider';\nexport class ETHGasStationInfoProvider extends IGasPriceProvider {\n    constructor(url) {\n        super();\n        this.url = url;\n    }\n    async getGasPrice() {\n        log.info(`About to get gas prices from gas station ${this.url}`);\n        const response = await retry(async () => {\n            return axios.get(this.url);\n        }, { retries: 1 });\n        const { data: gasPriceResponse, status } = response;\n        if (status != 200) {\n            log.error({ response }, `Unabled to get gas price from ${this.url}.`);\n            throw new Error(`Unable to get gas price from ${this.url}`);\n        }\n        log.info({ gasPriceResponse }, 'Gas price response from API. About to parse \"fast\" to big number');\n        // Gas prices from ethgasstation are in GweiX10.\n        const gasPriceWei = BigNumber.from(gasPriceResponse.fast)\n            .div(BigNumber.from(10))\n            .mul(BigNumber.from(10).pow(9));\n        log.info(`Gas price in wei: ${gasPriceWei} as of block ${gasPriceResponse.blockNum}`);\n        return { gasPriceWei: gasPriceWei };\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXRoLWdhcy1zdGF0aW9uLWluZm8tZ2FzLXByaWNlLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy9ldGgtZ2FzLXN0YXRpb24taW5mby1nYXMtcHJpY2UtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE9BQU8sSUFBSSxLQUFLLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDL0MsT0FBTyxLQUFLLE1BQU0sT0FBTyxDQUFDO0FBQzFCLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFDbkMsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUNsQyxPQUFPLEVBQVksaUJBQWlCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQWlCbkUsTUFBTSxPQUFPLHlCQUEwQixTQUFRLGlCQUFpQjtJQUU5RCxZQUFZLEdBQVc7UUFDckIsS0FBSyxFQUFFLENBQUM7UUFDUixJQUFJLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQztJQUNqQixDQUFDO0lBRU0sS0FBSyxDQUFDLFdBQVc7UUFDdEIsR0FBRyxDQUFDLElBQUksQ0FBQyw0Q0FBNEMsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUM7UUFDakUsTUFBTSxRQUFRLEdBQUcsTUFBTSxLQUFLLENBQzFCLEtBQUssSUFBSSxFQUFFO1lBQ1QsT0FBTyxLQUFLLENBQUMsR0FBRyxDQUF3QixJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDcEQsQ0FBQyxFQUNELEVBQUUsT0FBTyxFQUFFLENBQUMsRUFBRSxDQUNmLENBQUM7UUFFRixNQUFNLEVBQUUsSUFBSSxFQUFFLGdCQUFnQixFQUFFLE1BQU0sRUFBRSxHQUFHLFFBQVEsQ0FBQztRQUVwRCxJQUFJLE1BQU0sSUFBSSxHQUFHLEVBQUU7WUFDakIsR0FBRyxDQUFDLEtBQUssQ0FBQyxFQUFFLFFBQVEsRUFBRSxFQUFFLGlDQUFpQyxJQUFJLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQztZQUV0RSxNQUFNLElBQUksS0FBSyxDQUFDLGdDQUFnQyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQztTQUM3RDtRQUVELEdBQUcsQ0FBQyxJQUFJLENBQ04sRUFBRSxnQkFBZ0IsRUFBRSxFQUNwQixrRUFBa0UsQ0FDbkUsQ0FBQztRQUVGLGdEQUFnRDtRQUNoRCxNQUFNLFdBQVcsR0FBRyxTQUFTLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQzthQUN0RCxHQUFHLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQzthQUN2QixHQUFHLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUVsQyxHQUFHLENBQUMsSUFBSSxDQUNOLHFCQUFxQixXQUFXLGdCQUFnQixnQkFBZ0IsQ0FBQyxRQUFRLEVBQUUsQ0FDNUUsQ0FBQztRQUVGLE9BQU8sRUFBRSxXQUFXLEVBQUUsV0FBVyxFQUFFLENBQUM7SUFDdEMsQ0FBQztDQUNGIn0="]},"metadata":{},"sourceType":"module"}