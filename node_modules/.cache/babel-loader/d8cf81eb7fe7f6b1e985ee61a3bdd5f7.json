{"ast":null,"code":"import _styled from \"styled-components\";\nvar _jsxFileName = \"/Users/safahi/Downloads/interface-4.30.1/src/components/swap/GasEstimateBadge.tsx\";\nimport { Trans } from \"@lingui/react\";\nimport { AutoColumn } from 'components/Column';\nimport { LoadingOpacityContainer } from 'components/Loader/styled';\nimport { RowFixed } from 'components/Row';\nimport { MouseoverTooltipContent } from 'components/Tooltip';\nimport ReactGA from 'react-ga';\nimport { ThemedText } from 'theme';\nimport { ReactComponent as GasIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/gas-icon.svg\";\nimport { SupportedChainId } from '../../constants/chains';\nimport { ResponsiveTooltipContainer } from './styleds';\nimport SwapRoute from './SwapRoute';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GasWrapper = _styled(RowFixed).withConfig({\n  displayName: \"GasEstimateBadge__GasWrapper\",\n  componentId: \"sc-qnhalc-0\"\n})([\"border-radius:8px;padding:4px 6px;height:24px;color:\", \";background-color:\", \";font-size:14px;font-weight:500;user-select:none;\"], ({\n  theme\n}) => theme.text3, ({\n  theme\n}) => theme.bg1);\n\nconst StyledGasIcon = _styled(GasIcon).withConfig({\n  displayName: \"GasEstimateBadge__StyledGasIcon\",\n  componentId: \"sc-qnhalc-1\"\n})([\"margin-right:4px;height:14px;& > *{stroke:\", \";}\"], ({\n  theme\n}) => theme.text3);\n\nexport const SUPPORTED_GAS_ESTIMATE_CHAIN_IDS = [SupportedChainId.MAINNET, SupportedChainId.POLYGON];\nexport default function GasEstimateBadge({\n  trade,\n  loading,\n  showRoute,\n  disableHover\n}) {\n  var _trade$gasUseEstimate;\n\n  const formattedGasPriceString = (trade === null || trade === void 0 ? void 0 : trade.gasUseEstimateUSD) ? trade.gasUseEstimateUSD.toFixed(2) === '0.00' ? '<$0.01' : '$' + trade.gasUseEstimateUSD.toFixed(2) : undefined;\n  return /*#__PURE__*/_jsxDEV(MouseoverTooltipContent, {\n    wrap: false,\n    disableHover: disableHover,\n    content: loading ? null : /*#__PURE__*/_jsxDEV(ResponsiveTooltipContainer, {\n      origin: \"top right\",\n      style: {\n        padding: showRoute ? '0' : '12px',\n        border: 'none',\n        borderRadius: showRoute ? '16px' : '12px',\n        maxWidth: '400px'\n      },\n      children: showRoute ? trade ? /*#__PURE__*/_jsxDEV(SwapRoute, {\n        trade: trade,\n        syncing: loading,\n        fixedOpen: showRoute\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this) : null : /*#__PURE__*/_jsxDEV(AutoColumn, {\n        gap: \"4px\",\n        justify: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(ThemedText.Main, {\n          fontSize: \"12px\",\n          textAlign: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Estimated network fee\"\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ThemedText.Body, {\n          textAlign: \"center\",\n          fontWeight: 500,\n          style: {\n            userSelect: 'none'\n          },\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"${0}\",\n            values: {\n              0: trade === null || trade === void 0 ? void 0 : (_trade$gasUseEstimate = trade.gasUseEstimateUSD) === null || _trade$gasUseEstimate === void 0 ? void 0 : _trade$gasUseEstimate.toFixed(2)\n            }\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ThemedText.Main, {\n          fontSize: \"10px\",\n          textAlign: \"center\",\n          maxWidth: \"140px\",\n          color: \"text3\",\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Estimate may differ due to your wallet gas settings\"\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this),\n    placement: \"bottom\",\n    onOpen: () => ReactGA.event({\n      category: 'Gas',\n      action: 'Gas Details Tooltip Open'\n    }),\n    children: /*#__PURE__*/_jsxDEV(LoadingOpacityContainer, {\n      $loading: loading,\n      children: /*#__PURE__*/_jsxDEV(GasWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(StyledGasIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), formattedGasPriceString !== null && formattedGasPriceString !== void 0 ? formattedGasPriceString : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_c = GasEstimateBadge;\n\nvar _c;\n\n$RefreshReg$(_c, \"GasEstimateBadge\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/components/swap/GasEstimateBadge.tsx"],"names":["AutoColumn","LoadingOpacityContainer","RowFixed","MouseoverTooltipContent","ReactGA","ThemedText","SupportedChainId","ResponsiveTooltipContainer","SwapRoute","GasWrapper","styled","theme","text3","bg1","StyledGasIcon","GasIcon","SUPPORTED_GAS_ESTIMATE_CHAIN_IDS","MAINNET","POLYGON","GasEstimateBadge","trade","loading","showRoute","disableHover","formattedGasPriceString","gasUseEstimateUSD","toFixed","undefined","padding","border","borderRadius","maxWidth","userSelect","event","category","action"],"mappings":"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","sourcesContent":["import { Trans } from '@lingui/macro'\nimport { Currency, TradeType } from '@uniswap/sdk-core'\nimport { AutoColumn } from 'components/Column'\nimport { LoadingOpacityContainer } from 'components/Loader/styled'\nimport { RowFixed } from 'components/Row'\nimport { MouseoverTooltipContent } from 'components/Tooltip'\nimport ReactGA from 'react-ga'\nimport { InterfaceTrade } from 'state/routing/types'\nimport styled from 'styled-components/macro'\nimport { ThemedText } from 'theme'\n\nimport { ReactComponent as GasIcon } from '../../assets/images/gas-icon.svg'\nimport { SupportedChainId } from '../../constants/chains'\nimport { ResponsiveTooltipContainer } from './styleds'\nimport SwapRoute from './SwapRoute'\n\nconst GasWrapper = styled(RowFixed)`\n  border-radius: 8px;\n  padding: 4px 6px;\n  height: 24px;\n  color: ${({ theme }) => theme.text3};\n  background-color: ${({ theme }) => theme.bg1};\n  font-size: 14px;\n  font-weight: 500;\n  user-select: none;\n`\nconst StyledGasIcon = styled(GasIcon)`\n  margin-right: 4px;\n  height: 14px;\n  & > * {\n    stroke: ${({ theme }) => theme.text3};\n  }\n`\n\nexport const SUPPORTED_GAS_ESTIMATE_CHAIN_IDS = [SupportedChainId.MAINNET, SupportedChainId.POLYGON]\n\nexport default function GasEstimateBadge({\n  trade,\n  loading,\n  showRoute,\n  disableHover,\n}: {\n  trade: InterfaceTrade<Currency, Currency, TradeType> | undefined | null // dollar amount in active chain's stablecoin\n  loading: boolean\n  showRoute?: boolean // show route instead of gas estimation summary\n  disableHover?: boolean\n}) {\n  const formattedGasPriceString = trade?.gasUseEstimateUSD\n    ? trade.gasUseEstimateUSD.toFixed(2) === '0.00'\n      ? '<$0.01'\n      : '$' + trade.gasUseEstimateUSD.toFixed(2)\n    : undefined\n\n  return (\n    <MouseoverTooltipContent\n      wrap={false}\n      disableHover={disableHover}\n      content={\n        loading ? null : (\n          <ResponsiveTooltipContainer\n            origin=\"top right\"\n            style={{\n              padding: showRoute ? '0' : '12px',\n              border: 'none',\n              borderRadius: showRoute ? '16px' : '12px',\n              maxWidth: '400px',\n            }}\n          >\n            {showRoute ? (\n              trade ? (\n                <SwapRoute trade={trade} syncing={loading} fixedOpen={showRoute} />\n              ) : null\n            ) : (\n              <AutoColumn gap=\"4px\" justify=\"center\">\n                <ThemedText.Main fontSize=\"12px\" textAlign=\"center\">\n                  <Trans>Estimated network fee</Trans>\n                </ThemedText.Main>\n                <ThemedText.Body textAlign=\"center\" fontWeight={500} style={{ userSelect: 'none' }}>\n                  <Trans>${trade?.gasUseEstimateUSD?.toFixed(2)}</Trans>\n                </ThemedText.Body>\n                <ThemedText.Main fontSize=\"10px\" textAlign=\"center\" maxWidth=\"140px\" color=\"text3\">\n                  <Trans>Estimate may differ due to your wallet gas settings</Trans>\n                </ThemedText.Main>\n              </AutoColumn>\n            )}\n          </ResponsiveTooltipContainer>\n        )\n      }\n      placement=\"bottom\"\n      onOpen={() =>\n        ReactGA.event({\n          category: 'Gas',\n          action: 'Gas Details Tooltip Open',\n        })\n      }\n    >\n      <LoadingOpacityContainer $loading={loading}>\n        <GasWrapper>\n          <StyledGasIcon />\n          {formattedGasPriceString ?? null}\n        </GasWrapper>\n      </LoadingOpacityContainer>\n    </MouseoverTooltipContent>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}