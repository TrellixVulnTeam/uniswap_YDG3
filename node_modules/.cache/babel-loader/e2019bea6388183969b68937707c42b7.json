{"ast":null,"code":"import { keyframes as _keyframes } from \"styled-components\";\nimport _styled from \"styled-components\";\n\nvar _jsxFileName = \"/Users/safahi/Downloads/interface-4.30.1/src/components/Popups/ClaimPopup.tsx\",\n    _s = $RefreshSig$();\n\nimport { Trans } from \"@lingui/react\";\nimport { useCallback, useEffect } from 'react';\nimport { Heart, X } from 'react-feather';\nimport ReactGA from 'react-ga';\nimport tokenLogo from '../../assets/images/token-logo.png';\nimport { useActiveWeb3React } from '../../hooks/web3';\nimport { useModalOpen, useShowClaimPopup, useToggleSelfClaimModal, useToggleShowClaimPopup } from '../../state/application/hooks';\nimport { ApplicationModal } from '../../state/application/reducer';\nimport { useUserHasAvailableClaim, useUserUnclaimedAmount } from '../../state/claim/hooks';\nimport { ThemedText } from '../../theme';\nimport { ButtonPrimary } from '../Button';\nimport { AutoColumn } from '../Column';\nimport { CardBGImage, CardNoise } from '../earn/styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StyledClaimPopup = _styled(AutoColumn).withConfig({\n  displayName: \"ClaimPopup__StyledClaimPopup\",\n  componentId: \"sc-fwaiaw-0\"\n})([\"background:radial-gradient(76.02% 75.41% at 1.84% 0%,#ff007a 0%,#021d43 100%);border-radius:20px;padding:1.5rem;overflow:hidden;position:relative;max-width:360px;box-shadow:0px 4px 10px rgba(0,0,0,0.1);\"]);\n\nconst StyledClose = _styled(X).withConfig({\n  displayName: \"ClaimPopup__StyledClose\",\n  componentId: \"sc-fwaiaw-1\"\n})([\"position:absolute;right:10px;top:10px;:hover{cursor:pointer;}\"]);\n\nconst rotate = _keyframes`\n  0% {\n    transform: perspective(1000px) rotateY(0deg);\n  }\n\n  100% {\n    transform: perspective(1000px) rotateY(360deg);\n  }\n`;\n\nconst UniToken = _styled.img.withConfig({\n  displayName: \"ClaimPopup__UniToken\",\n  componentId: \"sc-fwaiaw-2\"\n})([\"animation:\", \" 5s cubic-bezier(0.83,0,0.17,1) infinite;\"], rotate);\n\nexport default function ClaimPopup() {\n  _s();\n\n  var _groupSeparator;\n\n  const {\n    account\n  } = useActiveWeb3React(); // dont store these in persisted state yet\n\n  const showClaimPopup = useShowClaimPopup();\n  const toggleShowClaimPopup = useToggleShowClaimPopup(); // toggle for showing this modal\n\n  const showClaimModal = useModalOpen(ApplicationModal.SELF_CLAIM);\n  const toggleSelfClaimModal = useToggleSelfClaimModal();\n  const handleToggleSelfClaimModal = useCallback(() => {\n    ReactGA.event({\n      category: 'MerkleDrop',\n      action: 'Toggle self claim modal'\n    });\n    toggleSelfClaimModal();\n  }, [toggleSelfClaimModal]); // const userHasAvailableclaim = useUserHasAvailableClaim()\n\n  const userHasAvailableclaim = useUserHasAvailableClaim(account);\n  const unclaimedAmount = useUserUnclaimedAmount(account); // listen for available claim and show popup if needed\n\n  useEffect(() => {\n    if (userHasAvailableclaim) {\n      ReactGA.event({\n        category: 'MerkleDrop',\n        action: 'Show claim popup'\n      });\n      toggleShowClaimPopup();\n    } // the toggleShowClaimPopup function changes every time the popup changes, so this will cause an infinite loop.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [userHasAvailableclaim]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: showClaimPopup && !showClaimModal && /*#__PURE__*/_jsxDEV(StyledClaimPopup, {\n      gap: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(CardBGImage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CardNoise, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledClose, {\n        stroke: \"white\",\n        onClick: toggleShowClaimPopup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n        style: {\n          padding: '2rem 0',\n          zIndex: 10\n        },\n        justify: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(UniToken, {\n          width: \"48px\",\n          src: tokenLogo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), ' ', /*#__PURE__*/_jsxDEV(ThemedText.White, {\n          style: {\n            marginTop: '1rem'\n          },\n          fontSize: 36,\n          fontWeight: 600,\n          children: [unclaimedAmount === null || unclaimedAmount === void 0 ? void 0 : unclaimedAmount.toFixed(0, (_groupSeparator = {\n            groupSeparator: ','\n          }) !== null && _groupSeparator !== void 0 ? _groupSeparator : '-'), \" UNI\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ThemedText.White, {\n          style: {\n            paddingTop: '1.25rem',\n            textAlign: 'center'\n          },\n          fontWeight: 600,\n          color: \"white\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"img\",\n            \"aria-label\": \"party\",\n            children: \"\\uD83C\\uDF89\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), ' ', /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"UNI has arrived\"\n          }, void 0, false, void 0, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"img\",\n            \"aria-label\": \"party\",\n            children: \"\\uD83C\\uDF89\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ThemedText.SubHeader, {\n          style: {\n            paddingTop: '0.5rem',\n            textAlign: 'center'\n          },\n          color: \"white\",\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Thanks for being part of the Uniswap community <0/>\",\n            components: {\n              0: /*#__PURE__*/_jsxDEV(Heart, {\n                size: 12\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 64\n              }, this)\n            }\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n        style: {\n          zIndex: 10\n        },\n        justify: \"center\",\n        children: /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n          padding: \"8px\",\n          $borderRadius: \"8px\",\n          width: 'fit-content',\n          onClick: handleToggleSelfClaimModal,\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Claim your UNI tokens\"\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(ClaimPopup, \"g2YIAbuk34XltRt88a0g9f8vJa0=\", false, function () {\n  return [useActiveWeb3React, useShowClaimPopup, useToggleShowClaimPopup, useModalOpen, useToggleSelfClaimModal, useUserHasAvailableClaim, useUserUnclaimedAmount];\n});\n\n_c = ClaimPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimPopup\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/components/Popups/ClaimPopup.tsx"],"names":["useCallback","useEffect","Heart","X","ReactGA","tokenLogo","useActiveWeb3React","useModalOpen","useShowClaimPopup","useToggleSelfClaimModal","useToggleShowClaimPopup","ApplicationModal","useUserHasAvailableClaim","useUserUnclaimedAmount","ThemedText","ButtonPrimary","AutoColumn","CardBGImage","CardNoise","StyledClaimPopup","styled","StyledClose","rotate","keyframes","UniToken","img","ClaimPopup","account","showClaimPopup","toggleShowClaimPopup","showClaimModal","SELF_CLAIM","toggleSelfClaimModal","handleToggleSelfClaimModal","event","category","action","userHasAvailableclaim","unclaimedAmount","padding","zIndex","marginTop","toFixed","groupSeparator","paddingTop","textAlign"],"mappings":";;;;;;;AAEA,SAASA,WAAT,EAAsBC,SAAtB,QAAuC,OAAvC;AACA,SAASC,KAAT,EAAgBC,CAAhB,QAAyB,eAAzB;AACA,OAAOC,OAAP,MAAoB,UAApB;AAGA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SACEC,YADF,EAEEC,iBAFF,EAGEC,uBAHF,EAIEC,uBAJF,QAKO,+BALP;AAMA,SAASC,gBAAT,QAAiC,iCAAjC;AACA,SAASC,wBAAT,EAAmCC,sBAAnC,QAAiE,yBAAjE;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,aAAT,QAA8B,WAA9B;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,gBAAvC;;;;AAEA,MAAMC,gBAAgB,GAAGC,OAAM,CAACJ,UAAD,CAAT;AAAA;AAAA;AAAA,kNAAtB;;AAUA,MAAMK,WAAW,GAAGD,OAAM,CAACjB,CAAD,CAAT;AAAA;AAAA;AAAA,qEAAjB;;AAUA,MAAMmB,MAAM,GAAGC,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;;AAUA,MAAMC,QAAQ,GAAGJ,OAAM,CAACK,GAAV;AAAA;AAAA;AAAA,gEACCH,MADD,CAAd;;AAIA,eAAe,SAASI,UAAT,GAAsB;AAAA;;AAAA;;AACnC,QAAM;AAAEC,IAAAA;AAAF,MAAcrB,kBAAkB,EAAtC,CADmC,CAGnC;;AACA,QAAMsB,cAAuB,GAAGpB,iBAAiB,EAAjD;AACA,QAAMqB,oBAAoB,GAAGnB,uBAAuB,EAApD,CALmC,CAOnC;;AACA,QAAMoB,cAAc,GAAGvB,YAAY,CAACI,gBAAgB,CAACoB,UAAlB,CAAnC;AACA,QAAMC,oBAAoB,GAAGvB,uBAAuB,EAApD;AACA,QAAMwB,0BAA0B,GAAGjC,WAAW,CAAC,MAAM;AACnDI,IAAAA,OAAO,CAAC8B,KAAR,CAAc;AACZC,MAAAA,QAAQ,EAAE,YADE;AAEZC,MAAAA,MAAM,EAAE;AAFI,KAAd;AAIAJ,IAAAA,oBAAoB;AACrB,GAN6C,EAM3C,CAACA,oBAAD,CAN2C,CAA9C,CAVmC,CAkBnC;;AACA,QAAMK,qBAA8B,GAAGzB,wBAAwB,CAACe,OAAD,CAA/D;AACA,QAAMW,eAAkD,GAAGzB,sBAAsB,CAACc,OAAD,CAAjF,CApBmC,CAsBnC;;AACA1B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIoC,qBAAJ,EAA2B;AACzBjC,MAAAA,OAAO,CAAC8B,KAAR,CAAc;AACZC,QAAAA,QAAQ,EAAE,YADE;AAEZC,QAAAA,MAAM,EAAE;AAFI,OAAd;AAIAP,MAAAA,oBAAoB;AACrB,KAPa,CAQd;AACA;;AACD,GAVQ,EAUN,CAACQ,qBAAD,CAVM,CAAT;AAYA,sBACE;AAAA,cACGT,cAAc,IAAI,CAACE,cAAnB,iBACC,QAAC,gBAAD;AAAkB,MAAA,GAAG,EAAC,IAAtB;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,WAAD;AAAa,QAAA,MAAM,EAAC,OAApB;AAA4B,QAAA,OAAO,EAAED;AAArC;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,UAAD;AAAY,QAAA,KAAK,EAAE;AAAEU,UAAAA,OAAO,EAAE,QAAX;AAAqBC,UAAAA,MAAM,EAAE;AAA7B,SAAnB;AAAsD,QAAA,OAAO,EAAC,QAA9D;AAAA,gCACE,QAAC,QAAD;AAAU,UAAA,KAAK,EAAC,MAAhB;AAAuB,UAAA,GAAG,EAAEnC;AAA5B;AAAA;AAAA;AAAA;AAAA,gBADF,EAC4C,GAD5C,eAEE,QAAC,UAAD,CAAY,KAAZ;AAAkB,UAAA,KAAK,EAAE;AAAEoC,YAAAA,SAAS,EAAE;AAAb,WAAzB;AAAgD,UAAA,QAAQ,EAAE,EAA1D;AAA8D,UAAA,UAAU,EAAE,GAA1E;AAAA,qBACGH,eADH,aACGA,eADH,uBACGA,eAAe,CAAEI,OAAjB,CAAyB,CAAzB,qBAA4B;AAAEC,YAAAA,cAAc,EAAE;AAAlB,WAA5B,6DAAuD,GAAvD,CADH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAKE,QAAC,UAAD,CAAY,KAAZ;AAAkB,UAAA,KAAK,EAAE;AAAEC,YAAAA,UAAU,EAAE,SAAd;AAAyBC,YAAAA,SAAS,EAAE;AAApC,WAAzB;AAAyE,UAAA,UAAU,EAAE,GAArF;AAA0F,UAAA,KAAK,EAAC,OAAhG;AAAA,kCACE;AAAM,YAAA,IAAI,EAAC,KAAX;AAAiB,0BAAW,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAGU,GAHV,eAIE;AAAA;AAAA,yCAJF,EAIiC,GAJjC,eAKE;AAAM,YAAA,IAAI,EAAC,KAAX;AAAiB,0BAAW,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAcE,QAAC,UAAD,CAAY,SAAZ;AAAsB,UAAA,KAAK,EAAE;AAAED,YAAAA,UAAU,EAAE,QAAd;AAAwBC,YAAAA,SAAS,EAAE;AAAnC,WAA7B;AAA4E,UAAA,KAAK,EAAC,OAAlF;AAAA,iCACE;AAAA;AAAA;AAAA,8BACiD,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAE;AAAb;AAAA;AAAA;AAAA;AAAA;AADjD;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAwBE,QAAC,UAAD;AAAY,QAAA,KAAK,EAAE;AAAEL,UAAAA,MAAM,EAAE;AAAV,SAAnB;AAAmC,QAAA,OAAO,EAAC,QAA3C;AAAA,+BACE,QAAC,aAAD;AAAe,UAAA,OAAO,EAAC,KAAvB;AAA6B,UAAA,aAAa,EAAC,KAA3C;AAAiD,UAAA,KAAK,EAAE,aAAxD;AAAuE,UAAA,OAAO,EAAEP,0BAAhF;AAAA,iCACE;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAxBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADF;AAoCD;;GAvEuBP,U;UACFpB,kB,EAGYE,iB,EACHE,uB,EAGNH,Y,EACME,uB,EAUUG,wB,EACoBC,sB;;;KApBrCa,U","sourcesContent":["import { Trans } from '@lingui/macro'\nimport { CurrencyAmount, Token } from '@uniswap/sdk-core'\nimport { useCallback, useEffect } from 'react'\nimport { Heart, X } from 'react-feather'\nimport ReactGA from 'react-ga'\nimport styled, { keyframes } from 'styled-components/macro'\n\nimport tokenLogo from '../../assets/images/token-logo.png'\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport {\n  useModalOpen,\n  useShowClaimPopup,\n  useToggleSelfClaimModal,\n  useToggleShowClaimPopup,\n} from '../../state/application/hooks'\nimport { ApplicationModal } from '../../state/application/reducer'\nimport { useUserHasAvailableClaim, useUserUnclaimedAmount } from '../../state/claim/hooks'\nimport { ThemedText } from '../../theme'\nimport { ButtonPrimary } from '../Button'\nimport { AutoColumn } from '../Column'\nimport { CardBGImage, CardNoise } from '../earn/styled'\n\nconst StyledClaimPopup = styled(AutoColumn)`\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #ff007a 0%, #021d43 100%);\n  border-radius: 20px;\n  padding: 1.5rem;\n  overflow: hidden;\n  position: relative;\n  max-width: 360px;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n`\n\nconst StyledClose = styled(X)`\n  position: absolute;\n  right: 10px;\n  top: 10px;\n\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst rotate = keyframes`\n  0% {\n    transform: perspective(1000px) rotateY(0deg);\n  }\n\n  100% {\n    transform: perspective(1000px) rotateY(360deg);\n  }\n`\n\nconst UniToken = styled.img`\n  animation: ${rotate} 5s cubic-bezier(0.83, 0, 0.17, 1) infinite;\n`\n\nexport default function ClaimPopup() {\n  const { account } = useActiveWeb3React()\n\n  // dont store these in persisted state yet\n  const showClaimPopup: boolean = useShowClaimPopup()\n  const toggleShowClaimPopup = useToggleShowClaimPopup()\n\n  // toggle for showing this modal\n  const showClaimModal = useModalOpen(ApplicationModal.SELF_CLAIM)\n  const toggleSelfClaimModal = useToggleSelfClaimModal()\n  const handleToggleSelfClaimModal = useCallback(() => {\n    ReactGA.event({\n      category: 'MerkleDrop',\n      action: 'Toggle self claim modal',\n    })\n    toggleSelfClaimModal()\n  }, [toggleSelfClaimModal])\n\n  // const userHasAvailableclaim = useUserHasAvailableClaim()\n  const userHasAvailableclaim: boolean = useUserHasAvailableClaim(account)\n  const unclaimedAmount: CurrencyAmount<Token> | undefined = useUserUnclaimedAmount(account)\n\n  // listen for available claim and show popup if needed\n  useEffect(() => {\n    if (userHasAvailableclaim) {\n      ReactGA.event({\n        category: 'MerkleDrop',\n        action: 'Show claim popup',\n      })\n      toggleShowClaimPopup()\n    }\n    // the toggleShowClaimPopup function changes every time the popup changes, so this will cause an infinite loop.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userHasAvailableclaim])\n\n  return (\n    <>\n      {showClaimPopup && !showClaimModal && (\n        <StyledClaimPopup gap=\"md\">\n          <CardBGImage />\n          <CardNoise />\n          <StyledClose stroke=\"white\" onClick={toggleShowClaimPopup} />\n          <AutoColumn style={{ padding: '2rem 0', zIndex: 10 }} justify=\"center\">\n            <UniToken width=\"48px\" src={tokenLogo} />{' '}\n            <ThemedText.White style={{ marginTop: '1rem' }} fontSize={36} fontWeight={600}>\n              {unclaimedAmount?.toFixed(0, { groupSeparator: ',' } ?? '-')} UNI\n            </ThemedText.White>\n            <ThemedText.White style={{ paddingTop: '1.25rem', textAlign: 'center' }} fontWeight={600} color=\"white\">\n              <span role=\"img\" aria-label=\"party\">\n                🎉\n              </span>{' '}\n              <Trans>UNI has arrived</Trans>{' '}\n              <span role=\"img\" aria-label=\"party\">\n                🎉\n              </span>\n            </ThemedText.White>\n            <ThemedText.SubHeader style={{ paddingTop: '0.5rem', textAlign: 'center' }} color=\"white\">\n              <Trans>\n                Thanks for being part of the Uniswap community <Heart size={12} />\n              </Trans>\n            </ThemedText.SubHeader>\n          </AutoColumn>\n          <AutoColumn style={{ zIndex: 10 }} justify=\"center\">\n            <ButtonPrimary padding=\"8px\" $borderRadius=\"8px\" width={'fit-content'} onClick={handleToggleSelfClaimModal}>\n              <Trans>Claim your UNI tokens</Trans>\n            </ButtonPrimary>\n          </AutoColumn>\n        </StyledClaimPopup>\n      )}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}