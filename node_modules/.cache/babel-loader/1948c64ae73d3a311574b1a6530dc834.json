{"ast":null,"code":"import _regeneratorRuntime from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{initializeApp}from'firebase/app';import{getDatabase,push,ref}from'firebase/database';import{useCallback}from'react';import{TransactionType}from'state/transactions/actions';import{useActiveWeb3React}from'./web3';var SUPPORTED_TRANSACTION_TYPES=[TransactionType.ADD_LIQUIDITY_V2_POOL,TransactionType.ADD_LIQUIDITY_V3_POOL,TransactionType.CREATE_V3_POOL,TransactionType.REMOVE_LIQUIDITY_V3,TransactionType.SWAP];var FIREBASE_API_KEY=process.env.REACT_APP_FIREBASE_KEY;var firebaseEnabled=typeof FIREBASE_API_KEY!=='undefined';if(firebaseEnabled)initializeFirebase();function useMonitoringEventCallback(){var _useActiveWeb3React=useActiveWeb3React(),chainId=_useActiveWeb3React.chainId;return useCallback(/*#__PURE__*/function(){var _log=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(type,_ref){var transactionResponse,walletAddress,db;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:transactionResponse=_ref.transactionResponse,walletAddress=_ref.walletAddress;if(firebaseEnabled){_context.next=3;break;}return _context.abrupt(\"return\");case 3:db=getDatabase();if(walletAddress){_context.next=7;break;}console.debug('Wallet address required to log monitoring events.');return _context.abrupt(\"return\");case 7:try{push(ref(db,'trm'),{chainId:chainId,origin:window.location.origin,timestamp:Date.now(),tx:transactionResponse,type:type,walletAddress:walletAddress});}catch(e){console.debug('Error adding document: ',e);}case 8:case\"end\":return _context.stop();}}},_callee);}));function log(_x,_x2){return _log.apply(this,arguments);}return log;}(),[chainId]);}export function useTransactionMonitoringEventCallback(){var _useActiveWeb3React2=useActiveWeb3React(),account=_useActiveWeb3React2.account;var log=useMonitoringEventCallback();return useCallback(function(info,transactionResponse){if(SUPPORTED_TRANSACTION_TYPES.includes(info.type)){log(TransactionType[info.type],{transactionResponse:function(_ref2){var hash=_ref2.hash,v=_ref2.v,r=_ref2.r,s=_ref2.s;return{hash:hash,v:v,r:r,s:s};}(transactionResponse),walletAddress:account!==null&&account!==void 0?account:undefined});}},[account,log]);}export function useWalletConnectMonitoringEventCallback(){var log=useMonitoringEventCallback();return useCallback(function(walletAddress){log('WALLET_CONNECTED',{transactionResponse:{hash:'',r:'',s:'',v:-1},walletAddress:walletAddress});},[log]);}function initializeFirebase(){initializeApp({apiKey:process.env.REACT_APP_FIREBASE_KEY,authDomain:'interface-monitoring.firebaseapp.com',databaseURL:'https://interface-monitoring-default-rtdb.firebaseio.com',projectId:'interface-monitoring',storageBucket:'interface-monitoring.appspot.com',messagingSenderId:'968187720053',appId:'1:968187720053:web:acedf72dce629d470be33c'});}","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/hooks/useMonitoringEventCallback.ts"],"names":["initializeApp","getDatabase","push","ref","useCallback","TransactionType","useActiveWeb3React","SUPPORTED_TRANSACTION_TYPES","ADD_LIQUIDITY_V2_POOL","ADD_LIQUIDITY_V3_POOL","CREATE_V3_POOL","REMOVE_LIQUIDITY_V3","SWAP","FIREBASE_API_KEY","process","env","REACT_APP_FIREBASE_KEY","firebaseEnabled","initializeFirebase","useMonitoringEventCallback","chainId","type","transactionResponse","walletAddress","db","console","debug","origin","window","location","timestamp","Date","now","tx","e","log","useTransactionMonitoringEventCallback","account","info","includes","hash","v","r","s","undefined","useWalletConnectMonitoringEventCallback","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId"],"mappings":"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","sourcesContent":["import { TransactionResponse } from '@ethersproject/providers'\nimport { initializeApp } from 'firebase/app'\nimport { getDatabase, push, ref } from 'firebase/database'\nimport { useCallback } from 'react'\nimport { TransactionInfo, TransactionType } from 'state/transactions/actions'\n\nimport { useActiveWeb3React } from './web3'\n\ntype PartialTransactionResponse = Pick<TransactionResponse, 'hash' | 'v' | 'r' | 's'>\n\nconst SUPPORTED_TRANSACTION_TYPES = [\n  TransactionType.ADD_LIQUIDITY_V2_POOL,\n  TransactionType.ADD_LIQUIDITY_V3_POOL,\n  TransactionType.CREATE_V3_POOL,\n  TransactionType.REMOVE_LIQUIDITY_V3,\n  TransactionType.SWAP,\n]\n\nconst FIREBASE_API_KEY = process.env.REACT_APP_FIREBASE_KEY\nconst firebaseEnabled = typeof FIREBASE_API_KEY !== 'undefined'\nif (firebaseEnabled) initializeFirebase()\n\nfunction useMonitoringEventCallback() {\n  const { chainId } = useActiveWeb3React()\n\n  return useCallback(\n    async function log(\n      type: string,\n      {\n        transactionResponse,\n        walletAddress,\n      }: { transactionResponse: PartialTransactionResponse; walletAddress: string | undefined }\n    ) {\n      if (!firebaseEnabled) return\n\n      const db = getDatabase()\n\n      if (!walletAddress) {\n        console.debug('Wallet address required to log monitoring events.')\n        return\n      }\n      try {\n        push(ref(db, 'trm'), {\n          chainId,\n          origin: window.location.origin,\n          timestamp: Date.now(),\n          tx: transactionResponse,\n          type,\n          walletAddress,\n        })\n      } catch (e) {\n        console.debug('Error adding document: ', e)\n      }\n    },\n    [chainId]\n  )\n}\n\nexport function useTransactionMonitoringEventCallback() {\n  const { account } = useActiveWeb3React()\n  const log = useMonitoringEventCallback()\n\n  return useCallback(\n    (info: TransactionInfo, transactionResponse: TransactionResponse) => {\n      if (SUPPORTED_TRANSACTION_TYPES.includes(info.type)) {\n        log(TransactionType[info.type], {\n          transactionResponse: (({ hash, v, r, s }: PartialTransactionResponse) => ({ hash, v, r, s }))(\n            transactionResponse\n          ),\n          walletAddress: account ?? undefined,\n        })\n      }\n    },\n    [account, log]\n  )\n}\n\nexport function useWalletConnectMonitoringEventCallback() {\n  const log = useMonitoringEventCallback()\n\n  return useCallback(\n    (walletAddress) => {\n      log('WALLET_CONNECTED', { transactionResponse: { hash: '', r: '', s: '', v: -1 }, walletAddress })\n    },\n    [log]\n  )\n}\n\nfunction initializeFirebase() {\n  initializeApp({\n    apiKey: process.env.REACT_APP_FIREBASE_KEY,\n    authDomain: 'interface-monitoring.firebaseapp.com',\n    databaseURL: 'https://interface-monitoring-default-rtdb.firebaseio.com',\n    projectId: 'interface-monitoring',\n    storageBucket: 'interface-monitoring.appspot.com',\n    messagingSenderId: '968187720053',\n    appId: '1:968187720053:web:acedf72dce629d470be33c',\n  })\n}\n"]},"metadata":{},"sourceType":"module"}