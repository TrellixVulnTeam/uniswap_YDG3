{"ast":null,"code":"import { default as retry } from 'async-retry';\nimport Timeout from 'await-timeout';\nimport { gql, GraphQLClient } from 'graphql-request';\nimport _ from 'lodash';\nimport { ChainId } from '../../util/chains';\nimport { log } from '../../util/log';\nexport const printV3SubgraphPool = s => `${s.token0.id}/${s.token1.id}/${s.feeTier}`;\nexport const printV2SubgraphPool = s => `${s.token0.id}/${s.token1.id}`;\nconst SUBGRAPH_URL_BY_CHAIN = {\n  [ChainId.MAINNET]: 'https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v3',\n  [ChainId.RINKEBY]: 'https://api.thegraph.com/subgraphs/name/ianlapham/uniswap-v3-rinkeby',\n  [ChainId.OPTIMISM]: 'https://api.thegraph.com/subgraphs/name/ianlapham/uniswap-optmism-regen',\n  [ChainId.ARBITRUM_ONE]: 'https://api.thegraph.com/subgraphs/name/ianlapham/arbitrum-minimal',\n  [ChainId.POLYGON]: 'https://api.thegraph.com/subgraphs/name/ianlapham/uniswap-v3-polygon'\n};\nconst PAGE_SIZE = 1000; // 1k is max possible query size from subgraph.\n\nexport class V3SubgraphProvider {\n  constructor(chainId, retries = 2, timeout = 30000, rollback = true) {\n    this.chainId = chainId;\n    this.retries = retries;\n    this.timeout = timeout;\n    this.rollback = rollback;\n    const subgraphUrl = SUBGRAPH_URL_BY_CHAIN[this.chainId];\n\n    if (!subgraphUrl) {\n      throw new Error(`No subgraph url for chain id: ${this.chainId}`);\n    }\n\n    this.client = new GraphQLClient(subgraphUrl);\n  }\n\n  async getPools(_tokenIn, _tokenOut, providerConfig) {\n    let blockNumber = (providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber) ? await providerConfig.blockNumber : undefined;\n    const query = gql`\n      query getPools($pageSize: Int!, $id: String) {\n        pools(\n          first: $pageSize\n          ${blockNumber ? `block: { number: ${blockNumber} }` : ``}\n          where: { id_gt: $id }\n        ) {\n          id\n          token0 {\n            symbol\n            id\n          }\n          token1 {\n            symbol\n            id\n          }\n          feeTier\n          liquidity\n          totalValueLockedUSD\n          totalValueLockedETH\n        }\n      }\n    `;\n    let pools = [];\n    log.info(`Getting V3 pools from the subgraph with page size ${PAGE_SIZE}${(providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber) ? ` as of block ${providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber}` : ''}.`);\n    await retry(async () => {\n      const timeout = new Timeout();\n\n      const getPools = async () => {\n        let lastId = '';\n        let pools = [];\n        let poolsPage = [];\n\n        do {\n          const poolsResult = await this.client.request(query, {\n            pageSize: PAGE_SIZE,\n            id: lastId\n          });\n          poolsPage = poolsResult.pools;\n          pools = pools.concat(poolsPage);\n          lastId = pools[pools.length - 1].id;\n        } while (poolsPage.length > 0);\n\n        return pools;\n      };\n\n      try {\n        const getPoolsPromise = getPools();\n        const timerPromise = timeout.set(this.timeout).then(() => {\n          throw new Error(`Timed out getting pools from subgraph: ${this.timeout}`);\n        });\n        pools = await Promise.race([getPoolsPromise, timerPromise]);\n        return;\n      } catch (err) {\n        throw err;\n      } finally {\n        timeout.clear();\n      }\n    }, {\n      retries: this.retries,\n      onRetry: (err, retry) => {\n        if (this.rollback && blockNumber && _.includes(err.message, 'indexed up to')) {\n          blockNumber = blockNumber - 10;\n          log.info(`Detected subgraph indexing error. Rolled back block number to: ${blockNumber}`);\n        }\n\n        pools = [];\n        log.info({\n          err\n        }, `Failed to get pools from subgraph. Retry attempt: ${retry}`);\n      }\n    });\n    const poolsSanitized = pools.filter(pool => parseInt(pool.liquidity) > 0).map(pool => {\n      const {\n        totalValueLockedETH,\n        totalValueLockedUSD,\n        ...rest\n      } = pool;\n      return { ...rest,\n        id: pool.id.toLowerCase(),\n        token0: {\n          id: pool.token0.id.toLowerCase()\n        },\n        token1: {\n          id: pool.token1.id.toLowerCase()\n        },\n        tvlETH: parseFloat(totalValueLockedETH),\n        tvlUSD: parseFloat(totalValueLockedUSD)\n      };\n    });\n    log.info(`Got ${pools.length} V3 pools from the subgraph. ${poolsSanitized.length} after filtering`);\n    return poolsSanitized;\n  }\n\n}","map":{"version":3,"sources":["../../../../../src/providers/v3/subgraph-provider.ts"],"names":[],"mappings":"AACA,SAAS,OAAO,IAAI,KAApB,QAAiC,aAAjC;AACA,OAAO,OAAP,MAAoB,eAApB;AACA,SAAS,GAAT,EAAc,aAAd,QAAmC,iBAAnC;AACA,OAAO,CAAP,MAAc,QAAd;AACA,SAAS,OAAT,QAAwB,mBAAxB;AACA,SAAS,GAAT,QAAoB,gBAApB;AAkCA,OAAO,MAAM,mBAAmB,GAAI,CAAD,IACjC,GAAG,CAAC,CAAC,MAAF,CAAS,EAAE,IAAI,CAAC,CAAC,MAAF,CAAS,EAAE,IAAI,CAAC,CAAC,OAAO,EADrC;AAGP,OAAO,MAAM,mBAAmB,GAAI,CAAD,IACjC,GAAG,CAAC,CAAC,MAAF,CAAS,EAAE,IAAI,CAAC,CAAC,MAAF,CAAS,EAAE,EADxB;AAGP,MAAM,qBAAqB,GAAsC;AAC/D,GAAC,OAAO,CAAC,OAAT,GACE,4DAF6D;AAG/D,GAAC,OAAO,CAAC,OAAT,GACE,sEAJ6D;AAK/D,GAAC,OAAO,CAAC,QAAT,GACE,yEAN6D;AAO/D,GAAC,OAAO,CAAC,YAAT,GACE,oEAR6D;AAS/D,GAAC,OAAO,CAAC,OAAT,GACE;AAV6D,CAAjE;AAaA,MAAM,SAAS,GAAG,IAAlB,C,CAAwB;;AAgBxB,OAAM,MAAO,kBAAP,CAAyB;AAG7B,EAAA,WAAA,CACU,OADV,EAEU,OAAA,GAAU,CAFpB,EAGU,OAAA,GAAU,KAHpB,EAIU,QAAA,GAAW,IAJrB,EAIyB;AAHf,SAAA,OAAA,GAAA,OAAA;AACA,SAAA,OAAA,GAAA,OAAA;AACA,SAAA,OAAA,GAAA,OAAA;AACA,SAAA,QAAA,GAAA,QAAA;AAER,UAAM,WAAW,GAAG,qBAAqB,CAAC,KAAK,OAAN,CAAzC;;AACA,QAAI,CAAC,WAAL,EAAkB;AAChB,YAAM,IAAI,KAAJ,CAAU,iCAAiC,KAAK,OAAO,EAAvD,CAAN;AACD;;AACD,SAAK,MAAL,GAAc,IAAI,aAAJ,CAAkB,WAAlB,CAAd;AACD;;AAEoB,QAAR,QAAQ,CACnB,QADmB,EAEnB,SAFmB,EAGnB,cAHmB,EAGY;AAE/B,QAAI,WAAW,GAAG,CAAA,cAAc,KAAA,IAAd,IAAA,cAAc,KAAA,KAAA,CAAd,GAAc,KAAA,CAAd,GAAA,cAAc,CAAE,WAAhB,IACd,MAAM,cAAc,CAAC,WADP,GAEd,SAFJ;AAIA,UAAM,KAAK,GAAG,GAAG;;;;YAIT,WAAW,GAAG,oBAAoB,WAAW,IAAlC,GAAyC,EAAE;;;;;;;;;;;;;;;;;;AAkB7D,KAtBD;AAwBA,QAAI,KAAK,GAAwB,EAAjC;AAEA,IAAA,GAAG,CAAC,IAAJ,CACE,qDAAqD,SAAS,GAC5D,CAAA,cAAc,KAAA,IAAd,IAAA,cAAc,KAAA,KAAA,CAAd,GAAc,KAAA,CAAd,GAAA,cAAc,CAAE,WAAhB,IACI,gBAAgB,cAAc,KAAA,IAAd,IAAA,cAAc,KAAA,KAAA,CAAd,GAAc,KAAA,CAAd,GAAA,cAAc,CAAE,WAAW,EAD/C,GAEI,EACN,GALF;AAQA,UAAM,KAAK,CACT,YAAW;AACT,YAAM,OAAO,GAAG,IAAI,OAAJ,EAAhB;;AAEA,YAAM,QAAQ,GAAG,YAAyC;AACxD,YAAI,MAAM,GAAW,EAArB;AACA,YAAI,KAAK,GAAwB,EAAjC;AACA,YAAI,SAAS,GAAwB,EAArC;;AAEA,WAAG;AACD,gBAAM,WAAW,GAAG,MAAM,KAAK,MAAL,CAAY,OAAZ,CAEvB,KAFuB,EAEhB;AACR,YAAA,QAAQ,EAAE,SADF;AAER,YAAA,EAAE,EAAE;AAFI,WAFgB,CAA1B;AAOA,UAAA,SAAS,GAAG,WAAW,CAAC,KAAxB;AAEA,UAAA,KAAK,GAAG,KAAK,CAAC,MAAN,CAAa,SAAb,CAAR;AAEA,UAAA,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,MAAN,GAAe,CAAhB,CAAL,CAAyB,EAAlC;AACD,SAbD,QAaS,SAAS,CAAC,MAAV,GAAmB,CAb5B;;AAeA,eAAO,KAAP;AACD,OArBD;;AAuBA,UAAI;AACF,cAAM,eAAe,GAAG,QAAQ,EAAhC;AACA,cAAM,YAAY,GAAG,OAAO,CAAC,GAAR,CAAY,KAAK,OAAjB,EAA0B,IAA1B,CAA+B,MAAK;AACvD,gBAAM,IAAI,KAAJ,CACJ,0CAA0C,KAAK,OAAO,EADlD,CAAN;AAGD,SAJoB,CAArB;AAKA,QAAA,KAAK,GAAG,MAAM,OAAO,CAAC,IAAR,CAAa,CAAC,eAAD,EAAkB,YAAlB,CAAb,CAAd;AACA;AACD,OATD,CASE,OAAO,GAAP,EAAY;AACZ,cAAM,GAAN;AACD,OAXD,SAWU;AACR,QAAA,OAAO,CAAC,KAAR;AACD;AACF,KAzCQ,EA0CT;AACE,MAAA,OAAO,EAAE,KAAK,OADhB;AAEE,MAAA,OAAO,EAAE,CAAC,GAAD,EAAM,KAAN,KAAe;AACtB,YACE,KAAK,QAAL,IACA,WADA,IAEA,CAAC,CAAC,QAAF,CAAW,GAAG,CAAC,OAAf,EAAwB,eAAxB,CAHF,EAIE;AACA,UAAA,WAAW,GAAG,WAAW,GAAG,EAA5B;AACA,UAAA,GAAG,CAAC,IAAJ,CACE,kEAAkE,WAAW,EAD/E;AAGD;;AACD,QAAA,KAAK,GAAG,EAAR;AACA,QAAA,GAAG,CAAC,IAAJ,CACE;AAAE,UAAA;AAAF,SADF,EAEE,qDAAqD,KAAK,EAF5D;AAID;AAlBH,KA1CS,CAAX;AAgEA,UAAM,cAAc,GAAG,KAAK,CACzB,MADoB,CACZ,IAAD,IAAU,QAAQ,CAAC,IAAI,CAAC,SAAN,CAAR,GAA2B,CADxB,EAEpB,GAFoB,CAEf,IAAD,IAAS;AACZ,YAAM;AAAE,QAAA,mBAAF;AAAuB,QAAA,mBAAvB;AAA4C,WAAG;AAA/C,UAAwD,IAA9D;AAEA,aAAO,EACL,GAAG,IADE;AAEL,QAAA,EAAE,EAAE,IAAI,CAAC,EAAL,CAAQ,WAAR,EAFC;AAGL,QAAA,MAAM,EAAE;AACN,UAAA,EAAE,EAAE,IAAI,CAAC,MAAL,CAAY,EAAZ,CAAe,WAAf;AADE,SAHH;AAML,QAAA,MAAM,EAAE;AACN,UAAA,EAAE,EAAE,IAAI,CAAC,MAAL,CAAY,EAAZ,CAAe,WAAf;AADE,SANH;AASL,QAAA,MAAM,EAAE,UAAU,CAAC,mBAAD,CATb;AAUL,QAAA,MAAM,EAAE,UAAU,CAAC,mBAAD;AAVb,OAAP;AAYD,KAjBoB,CAAvB;AAmBA,IAAA,GAAG,CAAC,IAAJ,CACE,OAAO,KAAK,CAAC,MAAM,gCAAgC,cAAc,CAAC,MAAM,kBAD1E;AAIA,WAAO,cAAP;AACD;;AAnJ4B","sourceRoot":"","sourcesContent":["import { default as retry } from 'async-retry';\nimport Timeout from 'await-timeout';\nimport { gql, GraphQLClient } from 'graphql-request';\nimport _ from 'lodash';\nimport { ChainId } from '../../util/chains';\nimport { log } from '../../util/log';\nexport const printV3SubgraphPool = (s) => `${s.token0.id}/${s.token1.id}/${s.feeTier}`;\nexport const printV2SubgraphPool = (s) => `${s.token0.id}/${s.token1.id}`;\nconst SUBGRAPH_URL_BY_CHAIN = {\n    [ChainId.MAINNET]: 'https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v3',\n    [ChainId.RINKEBY]: 'https://api.thegraph.com/subgraphs/name/ianlapham/uniswap-v3-rinkeby',\n    [ChainId.OPTIMISM]: 'https://api.thegraph.com/subgraphs/name/ianlapham/uniswap-optmism-regen',\n    [ChainId.ARBITRUM_ONE]: 'https://api.thegraph.com/subgraphs/name/ianlapham/arbitrum-minimal',\n    [ChainId.POLYGON]: 'https://api.thegraph.com/subgraphs/name/ianlapham/uniswap-v3-polygon',\n};\nconst PAGE_SIZE = 1000; // 1k is max possible query size from subgraph.\nexport class V3SubgraphProvider {\n    constructor(chainId, retries = 2, timeout = 30000, rollback = true) {\n        this.chainId = chainId;\n        this.retries = retries;\n        this.timeout = timeout;\n        this.rollback = rollback;\n        const subgraphUrl = SUBGRAPH_URL_BY_CHAIN[this.chainId];\n        if (!subgraphUrl) {\n            throw new Error(`No subgraph url for chain id: ${this.chainId}`);\n        }\n        this.client = new GraphQLClient(subgraphUrl);\n    }\n    async getPools(_tokenIn, _tokenOut, providerConfig) {\n        let blockNumber = (providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber)\n            ? await providerConfig.blockNumber\n            : undefined;\n        const query = gql `\n      query getPools($pageSize: Int!, $id: String) {\n        pools(\n          first: $pageSize\n          ${blockNumber ? `block: { number: ${blockNumber} }` : ``}\n          where: { id_gt: $id }\n        ) {\n          id\n          token0 {\n            symbol\n            id\n          }\n          token1 {\n            symbol\n            id\n          }\n          feeTier\n          liquidity\n          totalValueLockedUSD\n          totalValueLockedETH\n        }\n      }\n    `;\n        let pools = [];\n        log.info(`Getting V3 pools from the subgraph with page size ${PAGE_SIZE}${(providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber)\n            ? ` as of block ${providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber}`\n            : ''}.`);\n        await retry(async () => {\n            const timeout = new Timeout();\n            const getPools = async () => {\n                let lastId = '';\n                let pools = [];\n                let poolsPage = [];\n                do {\n                    const poolsResult = await this.client.request(query, {\n                        pageSize: PAGE_SIZE,\n                        id: lastId,\n                    });\n                    poolsPage = poolsResult.pools;\n                    pools = pools.concat(poolsPage);\n                    lastId = pools[pools.length - 1].id;\n                } while (poolsPage.length > 0);\n                return pools;\n            };\n            try {\n                const getPoolsPromise = getPools();\n                const timerPromise = timeout.set(this.timeout).then(() => {\n                    throw new Error(`Timed out getting pools from subgraph: ${this.timeout}`);\n                });\n                pools = await Promise.race([getPoolsPromise, timerPromise]);\n                return;\n            }\n            catch (err) {\n                throw err;\n            }\n            finally {\n                timeout.clear();\n            }\n        }, {\n            retries: this.retries,\n            onRetry: (err, retry) => {\n                if (this.rollback &&\n                    blockNumber &&\n                    _.includes(err.message, 'indexed up to')) {\n                    blockNumber = blockNumber - 10;\n                    log.info(`Detected subgraph indexing error. Rolled back block number to: ${blockNumber}`);\n                }\n                pools = [];\n                log.info({ err }, `Failed to get pools from subgraph. Retry attempt: ${retry}`);\n            },\n        });\n        const poolsSanitized = pools\n            .filter((pool) => parseInt(pool.liquidity) > 0)\n            .map((pool) => {\n            const { totalValueLockedETH, totalValueLockedUSD, ...rest } = pool;\n            return {\n                ...rest,\n                id: pool.id.toLowerCase(),\n                token0: {\n                    id: pool.token0.id.toLowerCase(),\n                },\n                token1: {\n                    id: pool.token1.id.toLowerCase(),\n                },\n                tvlETH: parseFloat(totalValueLockedETH),\n                tvlUSD: parseFloat(totalValueLockedUSD),\n            };\n        });\n        log.info(`Got ${pools.length} V3 pools from the subgraph. ${poolsSanitized.length} after filtering`);\n        return poolsSanitized;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViZ3JhcGgtcHJvdmlkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvcHJvdmlkZXJzL3YzL3N1YmdyYXBoLXByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxPQUFPLElBQUksS0FBSyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQy9DLE9BQU8sT0FBTyxNQUFNLGVBQWUsQ0FBQztBQUNwQyxPQUFPLEVBQUUsR0FBRyxFQUFFLGFBQWEsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3JELE9BQU8sQ0FBQyxNQUFNLFFBQVEsQ0FBQztBQUN2QixPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDNUMsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBa0NyQyxNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRyxDQUFDLENBQWlCLEVBQUUsRUFBRSxDQUN2RCxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxNQUFNLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztBQUUvQyxNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRyxDQUFDLENBQWlCLEVBQUUsRUFBRSxDQUN2RCxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLENBQUM7QUFFbEMsTUFBTSxxQkFBcUIsR0FBc0M7SUFDL0QsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQ2YsNERBQTREO0lBQzlELENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUNmLHNFQUFzRTtJQUN4RSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsRUFDaEIseUVBQXlFO0lBQzNFLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxFQUNwQixvRUFBb0U7SUFDdEUsQ0FBQyxPQUFPLENBQUMs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"]},"metadata":{},"sourceType":"module"}