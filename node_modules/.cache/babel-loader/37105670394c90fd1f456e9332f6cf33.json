{"ast":null,"code":"import _styled from \"styled-components\";\n\nvar _jsxFileName = \"/Users/safahi/Downloads/interface-4.30.1/src/components/LiquidityChartRangeInput/Zoom.tsx\",\n    _s = $RefreshSig$();\n\nimport { ButtonGray } from 'components/Button';\nimport { select, zoom, zoomIdentity } from 'd3';\nimport React, { useEffect, useMemo, useRef } from 'react';\nimport { RefreshCcw, ZoomIn, ZoomOut } from 'react-feather';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Wrapper = _styled.div.withConfig({\n  displayName: \"Zoom__Wrapper\",\n  componentId: \"sc-2wmd87-0\"\n})([\"display:grid;grid-template-columns:repeat(\", \",1fr);grid-gap:6px;position:absolute;top:-75px;right:0;\"], ({\n  count\n}) => count.toString());\n\nconst Button = _styled(ButtonGray).withConfig({\n  displayName: \"Zoom__Button\",\n  componentId: \"sc-2wmd87-1\"\n})([\"&:hover{background-color:\", \";color:\", \";}width:32px;height:32px;padding:4px;\"], ({\n  theme\n}) => theme.bg2, ({\n  theme\n}) => theme.text1);\n\nexport const ZoomOverlay = _styled.rect.withConfig({\n  displayName: \"Zoom__ZoomOverlay\",\n  componentId: \"sc-2wmd87-2\"\n})([\"fill:transparent;cursor:grab;&:active{cursor:grabbing;}\"]);\nexport default function Zoom({\n  svg,\n  xScale,\n  setZoom,\n  width,\n  height,\n  resetBrush,\n  showResetButton,\n  zoomLevels\n}) {\n  _s();\n\n  const zoomBehavior = useRef();\n  const [zoomIn, zoomOut, zoomInitial, zoomReset] = useMemo(() => [() => svg && zoomBehavior.current && select(svg).transition().call(zoomBehavior.current.scaleBy, 2), () => svg && zoomBehavior.current && select(svg).transition().call(zoomBehavior.current.scaleBy, 0.5), () => svg && zoomBehavior.current && select(svg).transition().call(zoomBehavior.current.scaleTo, 0.5), () => svg && zoomBehavior.current && select(svg).call(zoomBehavior.current.transform, zoomIdentity.translate(0, 0).scale(1)).transition().call(zoomBehavior.current.scaleTo, 0.5)], [svg]);\n  useEffect(() => {\n    if (!svg) return;\n    zoomBehavior.current = zoom().scaleExtent([zoomLevels.min, zoomLevels.max]).extent([[0, 0], [width, height]]).on('zoom', ({\n      transform\n    }) => setZoom(transform));\n    select(svg).call(zoomBehavior.current);\n  }, [height, width, setZoom, svg, xScale, zoomBehavior, zoomLevels, zoomLevels.max, zoomLevels.min]);\n  useEffect(() => {\n    // reset zoom to initial on zoomLevel change\n    zoomInitial();\n  }, [zoomInitial, zoomLevels]);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    count: showResetButton ? 3 : 2,\n    children: [showResetButton && /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        resetBrush();\n        zoomReset();\n      },\n      disabled: false,\n      children: /*#__PURE__*/_jsxDEV(RefreshCcw, {\n        size: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: zoomIn,\n      disabled: false,\n      children: /*#__PURE__*/_jsxDEV(ZoomIn, {\n        size: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: zoomOut,\n      disabled: false,\n      children: /*#__PURE__*/_jsxDEV(ZoomOut, {\n        size: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Zoom, \"zH4NRSDp1LbD9MaDDRtFoY33Y4A=\");\n\n_c = Zoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"Zoom\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/components/LiquidityChartRangeInput/Zoom.tsx"],"names":["ButtonGray","select","zoom","zoomIdentity","React","useEffect","useMemo","useRef","RefreshCcw","ZoomIn","ZoomOut","Wrapper","styled","div","count","toString","Button","theme","bg2","text1","ZoomOverlay","rect","Zoom","svg","xScale","setZoom","width","height","resetBrush","showResetButton","zoomLevels","zoomBehavior","zoomIn","zoomOut","zoomInitial","zoomReset","current","transition","call","scaleBy","scaleTo","transform","translate","scale","scaleExtent","min","max","extent","on"],"mappings":"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","sourcesContent":["import { ButtonGray } from 'components/Button'\nimport { ScaleLinear, select, zoom, ZoomBehavior, zoomIdentity, ZoomTransform } from 'd3'\nimport React, { useEffect, useMemo, useRef } from 'react'\nimport { RefreshCcw, ZoomIn, ZoomOut } from 'react-feather'\nimport styled from 'styled-components/macro'\n\nimport { ZoomLevels } from './types'\n\nconst Wrapper = styled.div<{ count: number }>`\n  display: grid;\n  grid-template-columns: repeat(${({ count }) => count.toString()}, 1fr);\n  grid-gap: 6px;\n\n  position: absolute;\n  top: -75px;\n  right: 0;\n`\n\nconst Button = styled(ButtonGray)`\n  &:hover {\n    background-color: ${({ theme }) => theme.bg2};\n    color: ${({ theme }) => theme.text1};\n  }\n\n  width: 32px;\n  height: 32px;\n  padding: 4px;\n`\n\nexport const ZoomOverlay = styled.rect`\n  fill: transparent;\n  cursor: grab;\n\n  &:active {\n    cursor: grabbing;\n  }\n`\n\nexport default function Zoom({\n  svg,\n  xScale,\n  setZoom,\n  width,\n  height,\n  resetBrush,\n  showResetButton,\n  zoomLevels,\n}: {\n  svg: SVGElement | null\n  xScale: ScaleLinear<number, number>\n  setZoom: (transform: ZoomTransform) => void\n  width: number\n  height: number\n  resetBrush: () => void\n  showResetButton: boolean\n  zoomLevels: ZoomLevels\n}) {\n  const zoomBehavior = useRef<ZoomBehavior<Element, unknown>>()\n\n  const [zoomIn, zoomOut, zoomInitial, zoomReset] = useMemo(\n    () => [\n      () =>\n        svg &&\n        zoomBehavior.current &&\n        select(svg as Element)\n          .transition()\n          .call(zoomBehavior.current.scaleBy, 2),\n      () =>\n        svg &&\n        zoomBehavior.current &&\n        select(svg as Element)\n          .transition()\n          .call(zoomBehavior.current.scaleBy, 0.5),\n      () =>\n        svg &&\n        zoomBehavior.current &&\n        select(svg as Element)\n          .transition()\n          .call(zoomBehavior.current.scaleTo, 0.5),\n      () =>\n        svg &&\n        zoomBehavior.current &&\n        select(svg as Element)\n          .call(zoomBehavior.current.transform, zoomIdentity.translate(0, 0).scale(1))\n          .transition()\n          .call(zoomBehavior.current.scaleTo, 0.5),\n    ],\n    [svg]\n  )\n\n  useEffect(() => {\n    if (!svg) return\n\n    zoomBehavior.current = zoom()\n      .scaleExtent([zoomLevels.min, zoomLevels.max])\n      .extent([\n        [0, 0],\n        [width, height],\n      ])\n      .on('zoom', ({ transform }: { transform: ZoomTransform }) => setZoom(transform))\n\n    select(svg as Element).call(zoomBehavior.current)\n  }, [height, width, setZoom, svg, xScale, zoomBehavior, zoomLevels, zoomLevels.max, zoomLevels.min])\n\n  useEffect(() => {\n    // reset zoom to initial on zoomLevel change\n    zoomInitial()\n  }, [zoomInitial, zoomLevels])\n\n  return (\n    <Wrapper count={showResetButton ? 3 : 2}>\n      {showResetButton && (\n        <Button\n          onClick={() => {\n            resetBrush()\n            zoomReset()\n          }}\n          disabled={false}\n        >\n          <RefreshCcw size={16} />\n        </Button>\n      )}\n      <Button onClick={zoomIn} disabled={false}>\n        <ZoomIn size={16} />\n      </Button>\n      <Button onClick={zoomOut} disabled={false}>\n        <ZoomOut size={16} />\n      </Button>\n    </Wrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}