{"ast":null,"code":"import _regeneratorRuntime from \"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { log } from '../../util';\n/**\n * Provider for getting V3 subgraph pools that falls back to a different provider\n * in the event of failure.\n *\n * @export\n * @class V3SubgraphProviderWithFallBacks\n */\n\nexport var V3SubgraphProviderWithFallBacks = /*#__PURE__*/function () {\n  function V3SubgraphProviderWithFallBacks(fallbacks) {\n    _classCallCheck(this, V3SubgraphProviderWithFallBacks);\n\n    this.fallbacks = fallbacks;\n  }\n\n  _createClass(V3SubgraphProviderWithFallBacks, [{\n    key: \"getPools\",\n    value: function () {\n      var _getPools = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(tokenIn, tokenOut, providerConfig) {\n        var i, provider, pools;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                i = 0;\n\n              case 1:\n                if (!(i < this.fallbacks.length)) {\n                  _context.next = 16;\n                  break;\n                }\n\n                provider = this.fallbacks[i];\n                _context.prev = 3;\n                _context.next = 6;\n                return provider.getPools(tokenIn, tokenOut, providerConfig);\n\n              case 6:\n                pools = _context.sent;\n                return _context.abrupt(\"return\", pools);\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](3);\n                log.info(\"Failed to get subgraph pools for V3 from fallback #\".concat(i));\n\n              case 13:\n                i++;\n                _context.next = 1;\n                break;\n\n              case 16:\n                throw new Error('Failed to get subgraph pools from any providers');\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[3, 10]]);\n      }));\n\n      function getPools(_x, _x2, _x3) {\n        return _getPools.apply(this, arguments);\n      }\n\n      return getPools;\n    }()\n  }]);\n\n  return V3SubgraphProviderWithFallBacks;\n}();","map":{"version":3,"sources":["../../../../../src/providers/v3/subgraph-provider-with-fallback.ts"],"names":[],"mappings":";;;;AACA,SAAS,GAAT,QAAoB,YAApB;AAIA;;;;;;AAMG;;AACH,WAAa,+BAAb;AACE,2CAAoB,SAApB,EAAoD;AAAA;;AAAhC,SAAA,SAAA,GAAA,SAAA;AAAoC;;AAD1D;AAAA;AAAA;AAAA,+EAGS,iBACL,OADK,EAEL,QAFK,EAGL,cAHK;AAAA;AAAA;AAAA;AAAA;AAAA;AAKI,gBAAA,CALJ,GAKQ,CALR;;AAAA;AAAA,sBAKW,CAAC,GAAG,KAAK,SAAL,CAAe,MAL9B;AAAA;AAAA;AAAA;;AAMG,gBAAA,QANH,GAMc,KAAK,SAAL,CAAe,CAAf,CANd;AAAA;AAAA;AAAA,uBAQmB,QAAQ,CAAC,QAAT,CAClB,OADkB,EAElB,QAFkB,EAGlB,cAHkB,CARnB;;AAAA;AAQK,gBAAA,KARL;AAAA,iDAaM,KAbN;;AAAA;AAAA;AAAA;AAeD,gBAAA,GAAG,CAAC,IAAJ,8DAA+D,CAA/D;;AAfC;AAKsC,gBAAA,CAAC,EALvC;AAAA;AAAA;;AAAA;AAAA,sBAmBC,IAAI,KAAJ,CAAU,iDAAV,CAnBD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHT;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA","sourceRoot":"","sourcesContent":["import { log } from '../../util';\n/**\n * Provider for getting V3 subgraph pools that falls back to a different provider\n * in the event of failure.\n *\n * @export\n * @class V3SubgraphProviderWithFallBacks\n */\nexport class V3SubgraphProviderWithFallBacks {\n    constructor(fallbacks) {\n        this.fallbacks = fallbacks;\n    }\n    async getPools(tokenIn, tokenOut, providerConfig) {\n        for (let i = 0; i < this.fallbacks.length; i++) {\n            const provider = this.fallbacks[i];\n            try {\n                const pools = await provider.getPools(tokenIn, tokenOut, providerConfig);\n                return pools;\n            }\n            catch (err) {\n                log.info(`Failed to get subgraph pools for V3 from fallback #${i}`);\n            }\n        }\n        throw new Error('Failed to get subgraph pools from any providers');\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViZ3JhcGgtcHJvdmlkZXItd2l0aC1mYWxsYmFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdjMvc3ViZ3JhcGgtcHJvdmlkZXItd2l0aC1mYWxsYmFjay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBSWpDOzs7Ozs7R0FNRztBQUNILE1BQU0sT0FBTywrQkFBK0I7SUFDMUMsWUFBb0IsU0FBZ0M7UUFBaEMsY0FBUyxHQUFULFNBQVMsQ0FBdUI7SUFBRyxDQUFDO0lBRWpELEtBQUssQ0FBQyxRQUFRLENBQ25CLE9BQWUsRUFDZixRQUFnQixFQUNoQixjQUErQjtRQUUvQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDOUMsTUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUUsQ0FBQztZQUNwQyxJQUFJO2dCQUNGLE1BQU0sS0FBSyxHQUFHLE1BQU0sUUFBUSxDQUFDLFFBQVEsQ0FDbkMsT0FBTyxFQUNQLFFBQVEsRUFDUixjQUFjLENBQ2YsQ0FBQztnQkFDRixPQUFPLEtBQUssQ0FBQzthQUNkO1lBQUMsT0FBTyxHQUFHLEVBQUU7Z0JBQ1osR0FBRyxDQUFDLElBQUksQ0FBQyxzREFBc0QsQ0FBQyxFQUFFLENBQUMsQ0FBQzthQUNyRTtTQUNGO1FBRUQsTUFBTSxJQUFJLEtBQUssQ0FBQyxpREFBaUQsQ0FBQyxDQUFDO0lBQ3JFLENBQUM7Q0FDRiJ9"]},"metadata":{},"sourceType":"module"}