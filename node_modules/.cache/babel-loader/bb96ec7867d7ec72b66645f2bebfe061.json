{"ast":null,"code":"/**\n * Converts a filter to the corresponding string key\n * @param filter the filter to convert\n */\nexport function filterToKey(filter) {\n  var _filter$address, _filter$topics$map$jo, _filter$topics, _filter$topics$map;\n\n  return `${(_filter$address = filter.address) !== null && _filter$address !== void 0 ? _filter$address : ''}:${(_filter$topics$map$jo = (_filter$topics = filter.topics) === null || _filter$topics === void 0 ? void 0 : (_filter$topics$map = _filter$topics.map(topic => topic ? Array.isArray(topic) ? topic.join(';') : topic : '\\0')) === null || _filter$topics$map === void 0 ? void 0 : _filter$topics$map.join('-')) !== null && _filter$topics$map$jo !== void 0 ? _filter$topics$map$jo : ''}`;\n}\n/**\n * Convert a filter key to the corresponding filter\n * @param key key to convert\n */\n\nexport function keyToFilter(key) {\n  const pcs = key.split(':');\n  const address = pcs[0];\n  const topics = pcs[1].split('-').map(topic => {\n    if (topic === '\\0') return null;\n    const parts = topic.split(';');\n    if (parts.length === 1) return parts[0];\n    return parts;\n  });\n  return {\n    address: address.length === 0 ? undefined : address,\n    topics\n  };\n}","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/state/logs/utils.ts"],"names":["filterToKey","filter","address","topics","map","topic","Array","isArray","join","keyToFilter","key","pcs","split","parts","length","undefined"],"mappings":"AAaA;AACA;AACA;AACA;AACA,OAAO,SAASA,WAAT,CAAqBC,MAArB,EAAkD;AAAA;;AACvD,SAAQ,GAAD,mBAAGA,MAAM,CAACC,OAAV,6DAAqB,EAAG,IAAxB,2CACLD,MAAM,CAACE,MADF,yEACL,eAAeC,GAAf,CAAoBC,KAAD,IAAYA,KAAK,GAAIC,KAAK,CAACC,OAAN,CAAcF,KAAd,IAAuBA,KAAK,CAACG,IAAN,CAAW,GAAX,CAAvB,GAAyCH,KAA7C,GAAsD,IAA1F,CADK,uDACL,mBAAkGG,IAAlG,CAAuG,GAAvG,CADK,yEAC0G,EAChH,EAFD;AAGD;AAED;AACA;AACA;AACA;;AACA,OAAO,SAASC,WAAT,CAAqBC,GAArB,EAA+C;AACpD,QAAMC,GAAG,GAAGD,GAAG,CAACE,KAAJ,CAAU,GAAV,CAAZ;AACA,QAAMV,OAAO,GAAGS,GAAG,CAAC,CAAD,CAAnB;AACA,QAAMR,MAAM,GAAGQ,GAAG,CAAC,CAAD,CAAH,CAAOC,KAAP,CAAa,GAAb,EAAkBR,GAAlB,CAAuBC,KAAD,IAAW;AAC9C,QAAIA,KAAK,KAAK,IAAd,EAAoB,OAAO,IAAP;AACpB,UAAMQ,KAAK,GAAGR,KAAK,CAACO,KAAN,CAAY,GAAZ,CAAd;AACA,QAAIC,KAAK,CAACC,MAAN,KAAiB,CAArB,EAAwB,OAAOD,KAAK,CAAC,CAAD,CAAZ;AACxB,WAAOA,KAAP;AACD,GALc,CAAf;AAOA,SAAO;AACLX,IAAAA,OAAO,EAAEA,OAAO,CAACY,MAAR,KAAmB,CAAnB,GAAuBC,SAAvB,GAAmCb,OADvC;AAELC,IAAAA;AAFK,GAAP;AAID","sourcesContent":["export interface EventFilter {\n  address?: string\n  topics?: Array<string | Array<string> | null>\n}\n\nexport interface Log {\n  topics: Array<string>\n  data: string\n  transactionIndex: number\n  logIndex: number\n  blockNumber: number\n}\n\n/**\n * Converts a filter to the corresponding string key\n * @param filter the filter to convert\n */\nexport function filterToKey(filter: EventFilter): string {\n  return `${filter.address ?? ''}:${\n    filter.topics?.map((topic) => (topic ? (Array.isArray(topic) ? topic.join(';') : topic) : '\\0'))?.join('-') ?? ''\n  }`\n}\n\n/**\n * Convert a filter key to the corresponding filter\n * @param key key to convert\n */\nexport function keyToFilter(key: string): EventFilter {\n  const pcs = key.split(':')\n  const address = pcs[0]\n  const topics = pcs[1].split('-').map((topic) => {\n    if (topic === '\\0') return null\n    const parts = topic.split(';')\n    if (parts.length === 1) return parts[0]\n    return parts\n  })\n\n  return {\n    address: address.length === 0 ? undefined : address,\n    topics,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}