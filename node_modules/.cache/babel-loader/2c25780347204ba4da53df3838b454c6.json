{"ast":null,"code":"import _styled from \"styled-components\";\n\nvar _jsxFileName = \"/Users/safahi/Downloads/interface-4.30.1/src/components/SearchModal/ImportToken.tsx\",\n    _s = $RefreshSig$();\n\nimport { Trans } from \"@lingui/react\";\nimport { ButtonPrimary } from 'components/Button';\nimport { AutoColumn } from 'components/Column';\nimport { RowBetween } from 'components/Row';\nimport { SectionBreak } from 'components/swap/styleds';\nimport { useUnsupportedTokens } from 'hooks/Tokens';\nimport useTheme from 'hooks/useTheme';\nimport { AlertCircle, ArrowLeft } from 'react-feather';\nimport { useAddUserToken } from 'state/user/hooks';\nimport { CloseIcon, ThemedText } from 'theme';\nimport BlockedToken from './BlockedToken';\nimport { PaddedColumn } from './styleds';\nimport TokenImportCard from './TokenImportCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Wrapper = _styled.div.withConfig({\n  displayName: \"ImportToken__Wrapper\",\n  componentId: \"sc-7tqaay-0\"\n})([\"position:relative;width:100%;overflow:auto;\"]);\n\nexport function ImportToken(props) {\n  _s();\n\n  const {\n    tokens,\n    list,\n    onBack,\n    onDismiss,\n    handleCurrencySelect\n  } = props;\n  const theme = useTheme();\n  const addToken = useAddUserToken();\n  const unsupportedTokens = useUnsupportedTokens();\n  const unsupportedSet = new Set(Object.keys(unsupportedTokens));\n  const intersection = new Set(tokens.filter(token => unsupportedSet.has(token.address)));\n\n  if (intersection.size > 0) {\n    return /*#__PURE__*/_jsxDEV(BlockedToken, {\n      onBack: onBack,\n      onDismiss: onDismiss,\n      blockedTokens: Array.from(intersection)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(PaddedColumn, {\n      gap: \"14px\",\n      style: {\n        width: '100%',\n        flex: '1 1'\n      },\n      children: /*#__PURE__*/_jsxDEV(RowBetween, {\n        children: [onBack ? /*#__PURE__*/_jsxDEV(ArrowLeft, {\n          style: {\n            cursor: 'pointer'\n          },\n          onClick: onBack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 84\n        }, this), /*#__PURE__*/_jsxDEV(ThemedText.MediumHeader, {\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"{0, plural, one {Import token} other {Import tokens}}\",\n            values: {\n              0: tokens.length\n            }\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), onDismiss ? /*#__PURE__*/_jsxDEV(CloseIcon, {\n          onClick: onDismiss\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 60\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SectionBreak, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n      gap: \"md\",\n      style: {\n        marginBottom: '32px',\n        padding: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(AutoColumn, {\n        justify: \"center\",\n        style: {\n          textAlign: 'center',\n          gap: '16px',\n          padding: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n          size: 48,\n          stroke: theme.text2,\n          strokeWidth: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ThemedText.Body, {\n          fontWeight: 400,\n          fontSize: 16,\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"This token doesn't appear on the active token list(s). Make sure this is the token that you want to trade.\"\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), tokens.map(token => /*#__PURE__*/_jsxDEV(TokenImportCard, {\n        token: token,\n        list: list\n      }, 'import' + token.address, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n        altDisabledStyle: true,\n        $borderRadius: \"20px\",\n        padding: \"10px 1rem\",\n        onClick: () => {\n          tokens.map(token => addToken(token));\n          handleCurrencySelect && handleCurrencySelect(tokens[0]);\n        },\n        className: \".token-dismiss-button\",\n        children: /*#__PURE__*/_jsxDEV(Trans, {\n          id: \"Import\"\n        }, void 0, false, void 0, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ImportToken, \"pvGAoW7NVIa3f8vevKfJ9LgfwP4=\", false, function () {\n  return [useTheme, useAddUserToken, useUnsupportedTokens];\n});\n\n_c = ImportToken;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImportToken\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/components/SearchModal/ImportToken.tsx"],"names":["ButtonPrimary","AutoColumn","RowBetween","SectionBreak","useUnsupportedTokens","useTheme","AlertCircle","ArrowLeft","useAddUserToken","CloseIcon","ThemedText","BlockedToken","PaddedColumn","TokenImportCard","Wrapper","styled","div","ImportToken","props","tokens","list","onBack","onDismiss","handleCurrencySelect","theme","addToken","unsupportedTokens","unsupportedSet","Set","Object","keys","intersection","filter","token","has","address","size","Array","from","width","flex","cursor","length","marginBottom","padding","textAlign","gap","text2","map"],"mappings":";;;;;;AAGA,SAASA,aAAT,QAA8B,mBAA9B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,oBAAT,QAAqC,cAArC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,eAAvC;AACA,SAASC,eAAT,QAAgC,kBAAhC;AAEA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,OAAtC;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAEA,MAAMC,OAAO,GAAGC,OAAM,CAACC,GAAV;AAAA;AAAA;AAAA,mDAAb;;AAcA,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAAyC;AAAA;;AAC9C,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA,MAAhB;AAAwBC,IAAAA,SAAxB;AAAmCC,IAAAA;AAAnC,MAA4DL,KAAlE;AACA,QAAMM,KAAK,GAAGnB,QAAQ,EAAtB;AAEA,QAAMoB,QAAQ,GAAGjB,eAAe,EAAhC;AAEA,QAAMkB,iBAAiB,GAAGtB,oBAAoB,EAA9C;AACA,QAAMuB,cAAc,GAAG,IAAIC,GAAJ,CAAQC,MAAM,CAACC,IAAP,CAAYJ,iBAAZ,CAAR,CAAvB;AACA,QAAMK,YAAY,GAAG,IAAIH,GAAJ,CAAQT,MAAM,CAACa,MAAP,CAAeC,KAAD,IAAWN,cAAc,CAACO,GAAf,CAAmBD,KAAK,CAACE,OAAzB,CAAzB,CAAR,CAArB;;AACA,MAAIJ,YAAY,CAACK,IAAb,GAAoB,CAAxB,EAA2B;AACzB,wBAAO,QAAC,YAAD;AAAc,MAAA,MAAM,EAAEf,MAAtB;AAA8B,MAAA,SAAS,EAAEC,SAAzC;AAAoD,MAAA,aAAa,EAAEe,KAAK,CAACC,IAAN,CAAWP,YAAX;AAAnE;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,GAAG,EAAC,MAAlB;AAAyB,MAAA,KAAK,EAAE;AAAEQ,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,IAAI,EAAE;AAAvB,OAAhC;AAAA,6BACE,QAAC,UAAD;AAAA,mBACGnB,MAAM,gBAAG,QAAC,SAAD;AAAW,UAAA,KAAK,EAAE;AAAEoB,YAAAA,MAAM,EAAE;AAAV,WAAlB;AAAyC,UAAA,OAAO,EAAEpB;AAAlD;AAAA;AAAA;AAAA;AAAA,gBAAH,gBAAkE;AAAA;AAAA;AAAA;AAAA,gBAD3E,eAEE,QAAC,UAAD,CAAY,YAAZ;AAAA,iCACE;AAAA;AAAA;AAAA,iBAAeF,MAAM,CAACuB;AAAtB;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF,EAKGpB,SAAS,gBAAG,QAAC,SAAD;AAAW,UAAA,OAAO,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA,gBAAH,gBAAuC;AAAA;AAAA;AAAA;AAAA,gBALnD;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE,QAAC,UAAD;AAAY,MAAA,GAAG,EAAC,IAAhB;AAAqB,MAAA,KAAK,EAAE;AAAEqB,QAAAA,YAAY,EAAE,MAAhB;AAAwBC,QAAAA,OAAO,EAAE;AAAjC,OAA5B;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,QAApB;AAA6B,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE,QAAb;AAAuBC,UAAAA,GAAG,EAAE,MAA5B;AAAoCF,UAAAA,OAAO,EAAE;AAA7C,SAApC;AAAA,gCACE,QAAC,WAAD;AAAa,UAAA,IAAI,EAAE,EAAnB;AAAuB,UAAA,MAAM,EAAEpB,KAAK,CAACuB,KAArC;AAA4C,UAAA,WAAW,EAAE;AAAzD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD,CAAY,IAAZ;AAAiB,UAAA,UAAU,EAAE,GAA7B;AAAkC,UAAA,QAAQ,EAAE,EAA5C;AAAA,iCACE;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAUG5B,MAAM,CAAC6B,GAAP,CAAYf,KAAD,iBACV,QAAC,eAAD;AAAiB,QAAA,KAAK,EAAEA,KAAxB;AAA+B,QAAA,IAAI,EAAEb;AAArC,SAAgD,WAAWa,KAAK,CAACE,OAAjE;AAAA;AAAA;AAAA;AAAA,cADD,CAVH,eAaE,QAAC,aAAD;AACE,QAAA,gBAAgB,EAAE,IADpB;AAEE,QAAA,aAAa,EAAC,MAFhB;AAGE,QAAA,OAAO,EAAC,WAHV;AAIE,QAAA,OAAO,EAAE,MAAM;AACbhB,UAAAA,MAAM,CAAC6B,GAAP,CAAYf,KAAD,IAAWR,QAAQ,CAACQ,KAAD,CAA9B;AACAV,UAAAA,oBAAoB,IAAIA,oBAAoB,CAACJ,MAAM,CAAC,CAAD,CAAP,CAA5C;AACD,SAPH;AAQE,QAAA,SAAS,EAAC,uBARZ;AAAA,+BAUE;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD;;GApDeF,W;UAEAZ,Q,EAEGG,e,EAESJ,oB;;;KANZa,W","sourcesContent":["import { Plural, Trans } from '@lingui/macro'\nimport { Currency, Token } from '@uniswap/sdk-core'\nimport { TokenList } from '@uniswap/token-lists'\nimport { ButtonPrimary } from 'components/Button'\nimport { AutoColumn } from 'components/Column'\nimport { RowBetween } from 'components/Row'\nimport { SectionBreak } from 'components/swap/styleds'\nimport { useUnsupportedTokens } from 'hooks/Tokens'\nimport useTheme from 'hooks/useTheme'\nimport { AlertCircle, ArrowLeft } from 'react-feather'\nimport { useAddUserToken } from 'state/user/hooks'\nimport styled from 'styled-components/macro'\nimport { CloseIcon, ThemedText } from 'theme'\n\nimport BlockedToken from './BlockedToken'\nimport { PaddedColumn } from './styleds'\nimport TokenImportCard from './TokenImportCard'\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n  overflow: auto;\n`\n\ninterface ImportProps {\n  tokens: Token[]\n  list?: TokenList\n  onBack?: () => void\n  onDismiss?: () => void\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nexport function ImportToken(props: ImportProps) {\n  const { tokens, list, onBack, onDismiss, handleCurrencySelect } = props\n  const theme = useTheme()\n\n  const addToken = useAddUserToken()\n\n  const unsupportedTokens = useUnsupportedTokens()\n  const unsupportedSet = new Set(Object.keys(unsupportedTokens))\n  const intersection = new Set(tokens.filter((token) => unsupportedSet.has(token.address)))\n  if (intersection.size > 0) {\n    return <BlockedToken onBack={onBack} onDismiss={onDismiss} blockedTokens={Array.from(intersection)} />\n  }\n  return (\n    <Wrapper>\n      <PaddedColumn gap=\"14px\" style={{ width: '100%', flex: '1 1' }}>\n        <RowBetween>\n          {onBack ? <ArrowLeft style={{ cursor: 'pointer' }} onClick={onBack} /> : <div />}\n          <ThemedText.MediumHeader>\n            <Plural value={tokens.length} one=\"Import token\" other=\"Import tokens\" />\n          </ThemedText.MediumHeader>\n          {onDismiss ? <CloseIcon onClick={onDismiss} /> : <div />}\n        </RowBetween>\n      </PaddedColumn>\n      <SectionBreak />\n      <AutoColumn gap=\"md\" style={{ marginBottom: '32px', padding: '1rem' }}>\n        <AutoColumn justify=\"center\" style={{ textAlign: 'center', gap: '16px', padding: '1rem' }}>\n          <AlertCircle size={48} stroke={theme.text2} strokeWidth={1} />\n          <ThemedText.Body fontWeight={400} fontSize={16}>\n            <Trans>\n              This token doesn&apos;t appear on the active token list(s). Make sure this is the token that you want to\n              trade.\n            </Trans>\n          </ThemedText.Body>\n        </AutoColumn>\n        {tokens.map((token) => (\n          <TokenImportCard token={token} list={list} key={'import' + token.address} />\n        ))}\n        <ButtonPrimary\n          altDisabledStyle={true}\n          $borderRadius=\"20px\"\n          padding=\"10px 1rem\"\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            handleCurrencySelect && handleCurrencySelect(tokens[0])\n          }}\n          className=\".token-dismiss-button\"\n        >\n          <Trans>Import</Trans>\n        </ButtonPrimary>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}