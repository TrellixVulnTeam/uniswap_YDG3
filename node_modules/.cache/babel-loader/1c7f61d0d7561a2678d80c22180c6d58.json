{"ast":null,"code":"import _regeneratorRuntime from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _asyncToGenerator from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{SupportedChainId}from'constants/chains';import Vibrant from'node-vibrant/lib/bundle';import{shade}from'polished';import{useLayoutEffect,useState}from'react';import{WrappedTokenInfo}from'state/lists/wrappedTokenInfo';import uriToHttp from'utils/uriToHttp';import{hex}from'wcag-contrast';function URIForEthToken(address){return\"https://raw.githubusercontent.com/uniswap/assets/master/blockchains/ethereum/assets/\".concat(address,\"/logo.png\");}function getColorFromToken(_x){return _getColorFromToken.apply(this,arguments);}function _getColorFromToken(){_getColorFromToken=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(token){var wrappedToken,address,logoURI;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(token instanceof WrappedTokenInfo){_context.next=2;break;}return _context.abrupt(\"return\",null);case 2:wrappedToken=token;address=wrappedToken.address;logoURI=wrappedToken.logoURI;if(logoURI){_context.next=11;break;}if(!(token.chainId!==SupportedChainId.MAINNET)){_context.next=10;break;}return _context.abrupt(\"return\",null);case 10:logoURI=URIForEthToken(address);case 11:_context.prev=11;_context.next=14;return getColorFromUriPath(logoURI);case 14:return _context.abrupt(\"return\",_context.sent);case 17:_context.prev=17;_context.t0=_context[\"catch\"](11);if(!(logoURI===URIForEthToken(address))){_context.next=21;break;}return _context.abrupt(\"return\",null);case 21:_context.prev=21;logoURI=URIForEthToken(address);_context.next=25;return getColorFromUriPath(logoURI);case 25:return _context.abrupt(\"return\",_context.sent);case 28:_context.prev=28;_context.t1=_context[\"catch\"](21);case 30:return _context.abrupt(\"return\",null);case 31:case\"end\":return _context.stop();}}},_callee,null,[[11,17],[21,28]]);}));return _getColorFromToken.apply(this,arguments);}function getColorFromUriPath(_x2){return _getColorFromUriPath.apply(this,arguments);}function _getColorFromUriPath(){_getColorFromUriPath=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(uri){var formattedPath,palette,detectedHex,AAscore;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:formattedPath=uriToHttp(uri)[0];_context2.next=3;return Vibrant.from(formattedPath).getPalette();case 3:palette=_context2.sent;if(palette===null||palette===void 0?void 0:palette.Vibrant){_context2.next=6;break;}return _context2.abrupt(\"return\",null);case 6:detectedHex=palette.Vibrant.hex;AAscore=hex(detectedHex,'#FFF');while(AAscore<3){detectedHex=shade(0.005,detectedHex);AAscore=hex(detectedHex,'#FFF');}return _context2.abrupt(\"return\",detectedHex);case 10:case\"end\":return _context2.stop();}}},_callee2);}));return _getColorFromUriPath.apply(this,arguments);}export function useColor(token){var _useState=useState('#2172E5'),_useState2=_slicedToArray(_useState,2),color=_useState2[0],setColor=_useState2[1];useLayoutEffect(function(){var stale=false;if(token){getColorFromToken(token).then(function(tokenColor){if(!stale&&tokenColor!==null){setColor(tokenColor);}});}return function(){stale=true;setColor('#2172E5');};},[token]);return color;}export function useListColor(listImageUri){var _useState3=useState('#2172E5'),_useState4=_slicedToArray(_useState3,2),color=_useState4[0],setColor=_useState4[1];useLayoutEffect(function(){var stale=false;if(listImageUri){getColorFromUriPath(listImageUri).then(function(color){if(!stale&&color!==null){setColor(color);}});}return function(){stale=true;setColor('#2172E5');};},[listImageUri]);return color;}","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/hooks/useColor.ts"],"names":["SupportedChainId","Vibrant","shade","useLayoutEffect","useState","WrappedTokenInfo","uriToHttp","hex","URIForEthToken","address","getColorFromToken","token","wrappedToken","logoURI","chainId","MAINNET","getColorFromUriPath","uri","formattedPath","from","getPalette","palette","detectedHex","AAscore","useColor","color","setColor","stale","then","tokenColor","useListColor","listImageUri"],"mappings":"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","sourcesContent":["import { Token } from '@uniswap/sdk-core'\nimport { SupportedChainId } from 'constants/chains'\nimport Vibrant from 'node-vibrant/lib/bundle'\nimport { shade } from 'polished'\nimport { useLayoutEffect, useState } from 'react'\nimport { WrappedTokenInfo } from 'state/lists/wrappedTokenInfo'\nimport uriToHttp from 'utils/uriToHttp'\nimport { hex } from 'wcag-contrast'\n\nfunction URIForEthToken(address: string) {\n  return `https://raw.githubusercontent.com/uniswap/assets/master/blockchains/ethereum/assets/${address}/logo.png`\n}\n\nasync function getColorFromToken(token: Token): Promise<string | null> {\n  if (!(token instanceof WrappedTokenInfo)) {\n    return null\n  }\n\n  const wrappedToken = token as WrappedTokenInfo\n  const { address } = wrappedToken\n  let { logoURI } = wrappedToken\n  if (!logoURI) {\n    if (token.chainId !== SupportedChainId.MAINNET) {\n      return null\n    } else {\n      logoURI = URIForEthToken(address)\n    }\n  }\n\n  try {\n    return await getColorFromUriPath(logoURI)\n  } catch (e) {\n    if (logoURI === URIForEthToken(address)) {\n      return null\n    }\n\n    try {\n      logoURI = URIForEthToken(address)\n      return await getColorFromUriPath(logoURI)\n    } catch (e) {}\n  }\n\n  return null\n}\n\nasync function getColorFromUriPath(uri: string): Promise<string | null> {\n  const formattedPath = uriToHttp(uri)[0]\n\n  const palette = await Vibrant.from(formattedPath).getPalette()\n  if (!palette?.Vibrant) {\n    return null\n  }\n\n  let detectedHex = palette.Vibrant.hex\n  let AAscore = hex(detectedHex, '#FFF')\n  while (AAscore < 3) {\n    detectedHex = shade(0.005, detectedHex)\n    AAscore = hex(detectedHex, '#FFF')\n  }\n\n  return detectedHex\n}\n\nexport function useColor(token?: Token) {\n  const [color, setColor] = useState('#2172E5')\n\n  useLayoutEffect(() => {\n    let stale = false\n\n    if (token) {\n      getColorFromToken(token).then((tokenColor) => {\n        if (!stale && tokenColor !== null) {\n          setColor(tokenColor)\n        }\n      })\n    }\n\n    return () => {\n      stale = true\n      setColor('#2172E5')\n    }\n  }, [token])\n\n  return color\n}\n\nexport function useListColor(listImageUri?: string) {\n  const [color, setColor] = useState('#2172E5')\n\n  useLayoutEffect(() => {\n    let stale = false\n\n    if (listImageUri) {\n      getColorFromUriPath(listImageUri).then((color) => {\n        if (!stale && color !== null) {\n          setColor(color)\n        }\n      })\n    }\n\n    return () => {\n      stale = true\n      setColor('#2172E5')\n    }\n  }, [listImageUri])\n\n  return color\n}\n"]},"metadata":{},"sourceType":"module"}