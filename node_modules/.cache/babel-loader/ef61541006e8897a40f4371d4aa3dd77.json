{"ast":null,"code":"import _objectWithoutProperties from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _classCallCheck from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _inherits from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";var _excluded=[\"gasUseEstimateUSD\"];import{Trade}from'@uniswap/router-sdk';export var TradeState;// from https://github.com/Uniswap/routing-api/blob/main/lib/handlers/schema.ts\n(function(TradeState){TradeState[TradeState[\"LOADING\"]=0]=\"LOADING\";TradeState[TradeState[\"INVALID\"]=1]=\"INVALID\";TradeState[TradeState[\"NO_ROUTE_FOUND\"]=2]=\"NO_ROUTE_FOUND\";TradeState[TradeState[\"VALID\"]=3]=\"VALID\";TradeState[TradeState[\"SYNCING\"]=4]=\"SYNCING\";})(TradeState||(TradeState={}));export var InterfaceTrade=/*#__PURE__*/function(_Trade){_inherits(InterfaceTrade,_Trade);var _super=_createSuper(InterfaceTrade);function InterfaceTrade(_ref){var _this;var gasUseEstimateUSD=_ref.gasUseEstimateUSD,routes=_objectWithoutProperties(_ref,_excluded);_classCallCheck(this,InterfaceTrade);_this=_super.call(this,routes);_this.gasUseEstimateUSD=void 0;_this.gasUseEstimateUSD=gasUseEstimateUSD;return _this;}return InterfaceTrade;}(Trade);","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/state/routing/types.ts"],"names":["Trade","TradeState","InterfaceTrade","gasUseEstimateUSD","routes"],"mappings":"wqBAAA,OAASA,KAAT,KAAsB,qBAAtB,CAKA,UAAYC,CAAAA,UAAZ,CAQA;UARYA,U,EAAAA,U,CAAAA,U,yBAAAA,U,CAAAA,U,yBAAAA,U,CAAAA,U,uCAAAA,U,CAAAA,U,qBAAAA,U,CAAAA,U,4BAAAA,U,GAAAA,U,MAiEZ,UAAaC,CAAAA,cAAb,wGAOE,6BAgBG,cAfDC,CAAAA,iBAeC,MAfDA,iBAeC,CAdEC,MAcF,+EACD,uBAAMA,MAAN,EADC,MAlBHD,iBAkBG,QAED,MAAKA,iBAAL,CAAyBA,iBAAzB,CAFC,aAGF,CA1BH,wBAIUH,KAJV","sourcesContent":["import { Trade } from '@uniswap/router-sdk'\nimport { Currency, CurrencyAmount, Token, TradeType } from '@uniswap/sdk-core'\nimport { Route as V2Route } from '@uniswap/v2-sdk'\nimport { Route as V3Route } from '@uniswap/v3-sdk'\n\nexport enum TradeState {\n  LOADING,\n  INVALID,\n  NO_ROUTE_FOUND,\n  VALID,\n  SYNCING,\n}\n\n// from https://github.com/Uniswap/routing-api/blob/main/lib/handlers/schema.ts\n\nexport type TokenInRoute = Pick<Token, 'address' | 'chainId' | 'symbol' | 'decimals'>\n\nexport type V3PoolInRoute = {\n  type: 'v3-pool'\n  tokenIn: TokenInRoute\n  tokenOut: TokenInRoute\n  sqrtRatioX96: string\n  liquidity: string\n  tickCurrent: string\n  fee: string\n  amountIn?: string\n  amountOut?: string\n\n  // not used in the interface\n  address?: string\n}\n\nexport type V2Reserve = {\n  token: TokenInRoute\n  quotient: string\n}\n\nexport type V2PoolInRoute = {\n  type: 'v2-pool'\n  tokenIn: TokenInRoute\n  tokenOut: TokenInRoute\n  reserve0: V2Reserve\n  reserve1: V2Reserve\n  amountIn?: string\n  amountOut?: string\n\n  // not used in the interface\n  // avoid returning it from the client-side smart-order-router\n  address?: string\n}\n\nexport interface GetQuoteResult {\n  quoteId?: string\n  blockNumber: string\n  amount: string\n  amountDecimals: string\n  gasPriceWei: string\n  gasUseEstimate: string\n  gasUseEstimateQuote: string\n  gasUseEstimateQuoteDecimals: string\n  gasUseEstimateUSD: string\n  methodParameters?: { calldata: string; value: string }\n  quote: string\n  quoteDecimals: string\n  quoteGasAdjusted: string\n  quoteGasAdjustedDecimals: string\n  route: Array<V3PoolInRoute[] | V2PoolInRoute[]>\n  routeString: string\n}\n\nexport class InterfaceTrade<\n  TInput extends Currency,\n  TOutput extends Currency,\n  TTradeType extends TradeType\n> extends Trade<TInput, TOutput, TTradeType> {\n  gasUseEstimateUSD: CurrencyAmount<Token> | null | undefined\n\n  constructor({\n    gasUseEstimateUSD,\n    ...routes\n  }: {\n    gasUseEstimateUSD?: CurrencyAmount<Token> | undefined | null\n    v2Routes: {\n      routev2: V2Route<TInput, TOutput>\n      inputAmount: CurrencyAmount<TInput>\n      outputAmount: CurrencyAmount<TOutput>\n    }[]\n    v3Routes: {\n      routev3: V3Route<TInput, TOutput>\n      inputAmount: CurrencyAmount<TInput>\n      outputAmount: CurrencyAmount<TOutput>\n    }[]\n    tradeType: TTradeType\n  }) {\n    super(routes)\n    this.gasUseEstimateUSD = gasUseEstimateUSD\n  }\n}\n"]},"metadata":{},"sourceType":"module"}