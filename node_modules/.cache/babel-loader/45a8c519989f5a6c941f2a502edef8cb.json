{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Safe = void 0;\n\nconst methods_1 = require(\"../communication/methods\");\n\nclass Safe {\n  constructor(communicator) {\n    this.communicator = communicator;\n  }\n\n  async getInfo() {\n    const response = await this.communicator.send(methods_1.Methods.getSafeInfo, undefined);\n    return response.data;\n  } // There is a possibility that this method will change because we may add pagination to the endpoint\n\n\n  async experimental_getBalances({\n    currency = 'usd'\n  } = {}) {\n    const response = await this.communicator.send(methods_1.Methods.getSafeBalances, {\n      currency\n    });\n    return response.data;\n  }\n\n}\n\nexports.Safe = Safe;","map":{"version":3,"sources":["../../../src/safe/index.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,SAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;;AAGA,MAAM,IAAN,CAAU;AAGR,EAAA,WAAA,CAAY,YAAZ,EAAsC;AACpC,SAAK,YAAL,GAAoB,YAApB;AACD;;AAEY,QAAP,OAAO,GAAA;AACX,UAAM,QAAQ,GAAG,MAAM,KAAK,YAAL,CAAkB,IAAlB,CACrB,SAAA,CAAA,OAAA,CAAQ,WADa,EAErB,SAFqB,CAAvB;AAKA,WAAO,QAAQ,CAAC,IAAhB;AACD,GAdO,CAgBR;;;AAC8B,QAAxB,wBAAwB,CAAC;AAAE,IAAA,QAAQ,GAAG;AAAb,MAAyC,EAA1C,EAA4C;AACxE,UAAM,QAAQ,GAAG,MAAM,KAAK,YAAL,CAAkB,IAAlB,CACrB,SAAA,CAAA,OAAA,CAAQ,eADa,EAErB;AACE,MAAA;AADF,KAFqB,CAAvB;AAOA,WAAO,QAAQ,CAAC,IAAhB;AACD;;AA1BO;;AA6BD,OAAA,CAAA,IAAA,GAAA,IAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Safe = void 0;\nconst methods_1 = require(\"../communication/methods\");\nclass Safe {\n    constructor(communicator) {\n        this.communicator = communicator;\n    }\n    async getInfo() {\n        const response = await this.communicator.send(methods_1.Methods.getSafeInfo, undefined);\n        return response.data;\n    }\n    // There is a possibility that this method will change because we may add pagination to the endpoint\n    async experimental_getBalances({ currency = 'usd' } = {}) {\n        const response = await this.communicator.send(methods_1.Methods.getSafeBalances, {\n            currency,\n        });\n        return response.data;\n    }\n}\nexports.Safe = Safe;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}