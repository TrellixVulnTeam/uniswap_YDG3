{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useMemo } from 'react';\nimport { safeNamehash } from 'utils/safeNamehash';\nimport { useSingleCallResult } from '../state/multicall/hooks';\nimport isZero from '../utils/isZero';\nimport { useENSRegistrarContract, useENSResolverContract } from './useContract';\nimport useDebounce from './useDebounce';\n/**\n * Does a lookup for an ENS name to find its address.\n */\n\nexport default function useENSAddress(ensName) {\n  _s();\n\n  var _resolverAddress$resu;\n\n  const debouncedName = useDebounce(ensName, 200);\n  const ensNodeArgument = useMemo(() => [debouncedName === null ? undefined : safeNamehash(debouncedName)], [debouncedName]);\n  const registrarContract = useENSRegistrarContract(false);\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument);\n  const resolverAddressResult = (_resolverAddress$resu = resolverAddress.result) === null || _resolverAddress$resu === void 0 ? void 0 : _resolverAddress$resu[0];\n  const resolverContract = useENSResolverContract(resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined, false);\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument);\n  const changed = debouncedName !== ensName;\n  return useMemo(() => {\n    var _addr$result$, _addr$result;\n\n    return {\n      address: changed ? null : (_addr$result$ = (_addr$result = addr.result) === null || _addr$result === void 0 ? void 0 : _addr$result[0]) !== null && _addr$result$ !== void 0 ? _addr$result$ : null,\n      loading: changed || resolverAddress.loading || addr.loading\n    };\n  }, [addr.loading, addr.result, changed, resolverAddress.loading]);\n}\n\n_s(useENSAddress, \"PIkXm0ys4v2aprKSXS+5vGwbczI=\", false, function () {\n  return [useDebounce, useENSRegistrarContract, useSingleCallResult, useENSResolverContract, useSingleCallResult];\n});","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/hooks/useENSAddress.ts"],"names":["useMemo","safeNamehash","useSingleCallResult","isZero","useENSRegistrarContract","useENSResolverContract","useDebounce","useENSAddress","ensName","debouncedName","ensNodeArgument","undefined","registrarContract","resolverAddress","resolverAddressResult","result","resolverContract","addr","changed","address","loading"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,uBAAT,EAAkCC,sBAAlC,QAAgE,eAAhE;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA;AACA;AACA;;AACA,eAAe,SAASC,aAAT,CAAuBC,OAAvB,EAA8F;AAAA;;AAAA;;AAC3G,QAAMC,aAAa,GAAGH,WAAW,CAACE,OAAD,EAAU,GAAV,CAAjC;AACA,QAAME,eAAe,GAAGV,OAAO,CAC7B,MAAM,CAACS,aAAa,KAAK,IAAlB,GAAyBE,SAAzB,GAAqCV,YAAY,CAACQ,aAAD,CAAlD,CADuB,EAE7B,CAACA,aAAD,CAF6B,CAA/B;AAIA,QAAMG,iBAAiB,GAAGR,uBAAuB,CAAC,KAAD,CAAjD;AACA,QAAMS,eAAe,GAAGX,mBAAmB,CAACU,iBAAD,EAAoB,UAApB,EAAgCF,eAAhC,CAA3C;AACA,QAAMI,qBAAqB,4BAAGD,eAAe,CAACE,MAAnB,0DAAG,sBAAyB,CAAzB,CAA9B;AACA,QAAMC,gBAAgB,GAAGX,sBAAsB,CAC7CS,qBAAqB,IAAI,CAACX,MAAM,CAACW,qBAAD,CAAhC,GAA0DA,qBAA1D,GAAkFH,SADrC,EAE7C,KAF6C,CAA/C;AAIA,QAAMM,IAAI,GAAGf,mBAAmB,CAACc,gBAAD,EAAmB,MAAnB,EAA2BN,eAA3B,CAAhC;AAEA,QAAMQ,OAAO,GAAGT,aAAa,KAAKD,OAAlC;AACA,SAAOR,OAAO,CACZ;AAAA;;AAAA,WAAO;AACLmB,MAAAA,OAAO,EAAED,OAAO,GAAG,IAAH,oCAAUD,IAAI,CAACF,MAAf,iDAAU,aAAc,CAAd,CAAV,yDAA8B,IADzC;AAELK,MAAAA,OAAO,EAAEF,OAAO,IAAIL,eAAe,CAACO,OAA3B,IAAsCH,IAAI,CAACG;AAF/C,KAAP;AAAA,GADY,EAKZ,CAACH,IAAI,CAACG,OAAN,EAAeH,IAAI,CAACF,MAApB,EAA4BG,OAA5B,EAAqCL,eAAe,CAACO,OAArD,CALY,CAAd;AAOD;;GAvBuBb,a;UACAD,W,EAKIF,uB,EACFF,mB,EAECG,sB,EAIZH,mB","sourcesContent":["import { useMemo } from 'react'\nimport { safeNamehash } from 'utils/safeNamehash'\n\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport isZero from '../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from './useContract'\nimport useDebounce from './useDebounce'\n\n/**\n * Does a lookup for an ENS name to find its address.\n */\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\n  const debouncedName = useDebounce(ensName, 200)\n  const ensNodeArgument = useMemo(\n    () => [debouncedName === null ? undefined : safeNamehash(debouncedName)],\n    [debouncedName]\n  )\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false\n  )\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\n\n  const changed = debouncedName !== ensName\n  return useMemo(\n    () => ({\n      address: changed ? null : addr.result?.[0] ?? null,\n      loading: changed || resolverAddress.loading || addr.loading,\n    }),\n    [addr.loading, addr.result, changed, resolverAddress.loading]\n  )\n}\n"]},"metadata":{},"sourceType":"module"}