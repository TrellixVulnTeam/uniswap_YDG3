{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport useParsedQueryString from 'hooks/useParsedQueryString';\nimport { stringify } from 'qs';\nimport { useMemo } from 'react';\nimport ReactGA from 'react-ga';\nimport { useLocation } from 'react-router-dom';\nimport { useActiveLocale } from './useActiveLocale';\nexport function useLocationLinkProps(locale) {\n  _s();\n\n  const location = useLocation();\n  const qs = useParsedQueryString();\n  const activeLocale = useActiveLocale();\n  return useMemo(() => !locale ? {} : {\n    to: { ...location,\n      search: stringify({ ...qs,\n        lng: locale\n      })\n    },\n    onClick: () => {\n      ReactGA.event({\n        category: 'Localization',\n        action: 'Switch Locale',\n        label: `${activeLocale} -> ${locale}`\n      });\n    }\n  }, [location, qs, activeLocale, locale]);\n}\n\n_s(useLocationLinkProps, \"cwQ0LLK+9UdH2Nqo3kkC9Z7p+Ps=\", false, function () {\n  return [useLocation, useParsedQueryString, useActiveLocale];\n});","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/hooks/useLocationLinkProps.ts"],"names":["useParsedQueryString","stringify","useMemo","ReactGA","useLocation","useActiveLocale","useLocationLinkProps","locale","location","qs","activeLocale","to","search","lng","onClick","event","category","action","label"],"mappings":";;AAEA,OAAOA,oBAAP,MAAiC,4BAAjC;AACA,SAASC,SAAT,QAA0B,IAA1B;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,SAASC,eAAT,QAAgC,mBAAhC;AAEA,OAAO,SAASC,oBAAT,CAA8BC,MAA9B,EAGL;AAAA;;AACA,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,EAAE,GAAGT,oBAAoB,EAA/B;AACA,QAAMU,YAAY,GAAGL,eAAe,EAApC;AAEA,SAAOH,OAAO,CACZ,MACE,CAACK,MAAD,GACI,EADJ,GAEI;AACEI,IAAAA,EAAE,EAAE,EACF,GAAGH,QADD;AAEFI,MAAAA,MAAM,EAAEX,SAAS,CAAC,EAAE,GAAGQ,EAAL;AAASI,QAAAA,GAAG,EAAEN;AAAd,OAAD;AAFf,KADN;AAKEO,IAAAA,OAAO,EAAE,MAAM;AACbX,MAAAA,OAAO,CAACY,KAAR,CAAc;AACZC,QAAAA,QAAQ,EAAE,cADE;AAEZC,QAAAA,MAAM,EAAE,eAFI;AAGZC,QAAAA,KAAK,EAAG,GAAER,YAAa,OAAMH,MAAO;AAHxB,OAAd;AAKD;AAXH,GAJM,EAiBZ,CAACC,QAAD,EAAWC,EAAX,EAAeC,YAAf,EAA6BH,MAA7B,CAjBY,CAAd;AAmBD;;GA3BeD,oB;UAIGF,W,EACNJ,oB,EACUK,e","sourcesContent":["import { SupportedLocale } from 'constants/locales'\nimport { LocationDescriptor } from 'history'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { stringify } from 'qs'\nimport { useMemo } from 'react'\nimport ReactGA from 'react-ga'\nimport { useLocation } from 'react-router-dom'\n\nimport { useActiveLocale } from './useActiveLocale'\n\nexport function useLocationLinkProps(locale: SupportedLocale | null): {\n  to?: LocationDescriptor\n  onClick?: () => void\n} {\n  const location = useLocation()\n  const qs = useParsedQueryString()\n  const activeLocale = useActiveLocale()\n\n  return useMemo(\n    () =>\n      !locale\n        ? {}\n        : {\n            to: {\n              ...location,\n              search: stringify({ ...qs, lng: locale }),\n            },\n            onClick: () => {\n              ReactGA.event({\n                category: 'Localization',\n                action: 'Switch Locale',\n                label: `${activeLocale} -> ${locale}`,\n              })\n            },\n          },\n    [location, qs, activeLocale, locale]\n  )\n}\n"]},"metadata":{},"sourceType":"module"}