{"ast":null,"code":"import { SwapRouter, Trade } from '@uniswap/router-sdk';\nimport { TradeType } from '@uniswap/sdk-core';\nimport { FeeAmount, Route } from '@uniswap/v3-sdk';\nimport { BigNumber, logger } from 'ethers';\nimport _ from 'lodash';\nimport { DAI_MAINNET, USDC_MAINNET } from '../../providers/token-provider';\nimport { CurrencyAmount } from '../../util/amounts';\nimport { log } from '../../util/log';\nimport { routeToString } from '../../util/routes';\nimport { V3RouteWithValidQuote } from '../alpha-router';\nimport { V3Route } from '../router';\nimport { ADDITIONAL_BASES, BASES_TO_CHECK_TRADES_AGAINST, CUSTOM_BASES } from './bases'; // Interface defaults to 2.\n\nconst MAX_HOPS = 2;\n/**\n * Replicates the router implemented in the V3 interface.\n * Code is mostly a copy from https://github.com/Uniswap/uniswap-interface/blob/0190b5a408c13016c87e1030ffc59326c085f389/src/hooks/useBestV3Trade.ts#L22-L23\n * with React/Redux hooks removed, and refactoring to allow re-use in other routers.\n */\n\nexport class LegacyRouter {\n  constructor({\n    chainId,\n    multicall2Provider,\n    poolProvider,\n    quoteProvider,\n    tokenProvider\n  }) {\n    this.chainId = chainId;\n    this.multicall2Provider = multicall2Provider;\n    this.poolProvider = poolProvider;\n    this.quoteProvider = quoteProvider;\n    this.tokenProvider = tokenProvider;\n  }\n\n  async route(amount, quoteCurrency, swapType, swapConfig, partialRoutingConfig) {\n    if (swapType == TradeType.EXACT_INPUT) {\n      return this.routeExactIn(amount.currency, quoteCurrency, amount, swapConfig, partialRoutingConfig);\n    }\n\n    return this.routeExactOut(quoteCurrency, amount.currency, amount, swapConfig, partialRoutingConfig);\n  }\n\n  async routeExactIn(currencyIn, currencyOut, amountIn, swapConfig, routingConfig) {\n    const tokenIn = currencyIn.wrapped;\n    const tokenOut = currencyOut.wrapped;\n    const routes = await this.getAllRoutes(tokenIn, tokenOut, routingConfig);\n    const routeQuote = await this.findBestRouteExactIn(amountIn, tokenOut, routes, routingConfig);\n\n    if (!routeQuote) {\n      return null;\n    }\n\n    const trade = this.buildTrade(currencyIn, currencyOut, TradeType.EXACT_INPUT, routeQuote);\n    return {\n      quote: routeQuote.quote,\n      quoteGasAdjusted: routeQuote.quote,\n      route: [routeQuote],\n      estimatedGasUsed: BigNumber.from(0),\n      estimatedGasUsedQuoteToken: CurrencyAmount.fromFractionalAmount(tokenOut, 0, 1),\n      estimatedGasUsedUSD: CurrencyAmount.fromFractionalAmount(DAI_MAINNET, 0, 1),\n      gasPriceWei: BigNumber.from(0),\n      trade,\n      methodParameters: swapConfig ? this.buildMethodParameters(trade, swapConfig) : undefined,\n      blockNumber: BigNumber.from(0)\n    };\n  }\n\n  async routeExactOut(currencyIn, currencyOut, amountOut, swapConfig, routingConfig) {\n    const tokenIn = currencyIn.wrapped;\n    const tokenOut = currencyOut.wrapped;\n    const routes = await this.getAllRoutes(tokenIn, tokenOut, routingConfig);\n    const routeQuote = await this.findBestRouteExactOut(amountOut, tokenIn, routes, routingConfig);\n\n    if (!routeQuote) {\n      return null;\n    }\n\n    const trade = this.buildTrade(currencyIn, currencyOut, TradeType.EXACT_OUTPUT, routeQuote);\n    return {\n      quote: routeQuote.quote,\n      quoteGasAdjusted: routeQuote.quote,\n      route: [routeQuote],\n      estimatedGasUsed: BigNumber.from(0),\n      estimatedGasUsedQuoteToken: CurrencyAmount.fromFractionalAmount(tokenIn, 0, 1),\n      estimatedGasUsedUSD: CurrencyAmount.fromFractionalAmount(DAI_MAINNET, 0, 1),\n      gasPriceWei: BigNumber.from(0),\n      trade,\n      methodParameters: swapConfig ? this.buildMethodParameters(trade, swapConfig) : undefined,\n      blockNumber: BigNumber.from(0)\n    };\n  }\n\n  async findBestRouteExactIn(amountIn, tokenOut, routes, routingConfig) {\n    const {\n      routesWithQuotes: quotesRaw\n    } = await this.quoteProvider.getQuotesManyExactIn([amountIn], routes, {\n      blockNumber: routingConfig === null || routingConfig === void 0 ? void 0 : routingConfig.blockNumber\n    });\n\n    const quotes100Percent = _.map(quotesRaw, ([route, quotes]) => {\n      var _a, _b;\n\n      return `${routeToString(route)} : ${(_b = (_a = quotes[0]) === null || _a === void 0 ? void 0 : _a.quote) === null || _b === void 0 ? void 0 : _b.toString()}`;\n    });\n\n    log.info({\n      quotes100Percent\n    }, '100% Quotes');\n    const bestQuote = await this.getBestQuote(routes, quotesRaw, tokenOut, TradeType.EXACT_INPUT);\n    return bestQuote;\n  }\n\n  async findBestRouteExactOut(amountOut, tokenIn, routes, routingConfig) {\n    const {\n      routesWithQuotes: quotesRaw\n    } = await this.quoteProvider.getQuotesManyExactOut([amountOut], routes, {\n      blockNumber: routingConfig === null || routingConfig === void 0 ? void 0 : routingConfig.blockNumber\n    });\n    const bestQuote = await this.getBestQuote(routes, quotesRaw, tokenIn, TradeType.EXACT_OUTPUT);\n    return bestQuote;\n  }\n\n  async getBestQuote(routes, quotesRaw, quoteToken, routeType) {\n    log.debug(`Got ${_.filter(quotesRaw, ([_, quotes]) => !!quotes[0]).length} valid quotes from ${routes.length} possible routes.`);\n    const routeQuotesRaw = [];\n\n    for (let i = 0; i < quotesRaw.length; i++) {\n      const [route, quotes] = quotesRaw[i];\n      const {\n        quote,\n        amount\n      } = quotes[0];\n\n      if (!quote) {\n        logger.debug(`No quote for ${routeToString(route)}`);\n        continue;\n      }\n\n      routeQuotesRaw.push({\n        route,\n        quote,\n        amount\n      });\n    }\n\n    if (routeQuotesRaw.length == 0) {\n      return null;\n    }\n\n    routeQuotesRaw.sort((routeQuoteA, routeQuoteB) => {\n      if (routeType == TradeType.EXACT_INPUT) {\n        return routeQuoteA.quote.gt(routeQuoteB.quote) ? -1 : 1;\n      } else {\n        return routeQuoteA.quote.lt(routeQuoteB.quote) ? -1 : 1;\n      }\n    });\n\n    const routeQuotes = _.map(routeQuotesRaw, ({\n      route,\n      quote,\n      amount\n    }) => {\n      return new V3RouteWithValidQuote({\n        route,\n        rawQuote: quote,\n        amount,\n        percent: 100,\n        gasModel: {\n          estimateGasCost: () => ({\n            gasCostInToken: CurrencyAmount.fromRawAmount(quoteToken, 0),\n            gasCostInUSD: CurrencyAmount.fromRawAmount(USDC_MAINNET, 0),\n            gasEstimate: BigNumber.from(0)\n          })\n        },\n        sqrtPriceX96AfterList: [],\n        initializedTicksCrossedList: [],\n        quoterGasEstimate: BigNumber.from(0),\n        tradeType: routeType,\n        quoteToken,\n        v3PoolProvider: this.poolProvider\n      });\n    });\n\n    for (let rq of routeQuotes) {\n      log.debug(`Quote: ${rq.amount.toFixed(2)} Route: ${routeToString(rq.route)}`);\n    }\n\n    return routeQuotes[0];\n  }\n\n  async getAllRoutes(tokenIn, tokenOut, routingConfig) {\n    const tokenPairs = await this.getAllPossiblePairings(tokenIn, tokenOut);\n    const poolAccessor = await this.poolProvider.getPools(tokenPairs, {\n      blockNumber: routingConfig === null || routingConfig === void 0 ? void 0 : routingConfig.blockNumber\n    });\n    const pools = poolAccessor.getAllPools();\n    const routes = this.computeAllRoutes(tokenIn, tokenOut, pools, this.chainId, [], [], tokenIn, MAX_HOPS);\n    log.info({\n      routes: _.map(routes, routeToString)\n    }, `Computed ${routes.length} possible routes.`);\n    return routes;\n  }\n\n  async getAllPossiblePairings(tokenIn, tokenOut) {\n    var _a, _b, _c, _d, _e;\n\n    const common = (_a = BASES_TO_CHECK_TRADES_AGAINST(this.tokenProvider)[this.chainId]) !== null && _a !== void 0 ? _a : [];\n    const additionalA = (_c = (_b = (await ADDITIONAL_BASES(this.tokenProvider))[this.chainId]) === null || _b === void 0 ? void 0 : _b[tokenIn.address]) !== null && _c !== void 0 ? _c : [];\n    const additionalB = (_e = (_d = (await ADDITIONAL_BASES(this.tokenProvider))[this.chainId]) === null || _d === void 0 ? void 0 : _d[tokenOut.address]) !== null && _e !== void 0 ? _e : [];\n    const bases = [...common, ...additionalA, ...additionalB];\n\n    const basePairs = _.flatMap(bases, base => bases.map(otherBase => [base, otherBase]));\n\n    const customBases = (await CUSTOM_BASES(this.tokenProvider))[this.chainId];\n\n    const allPairs = _([// the direct pair\n    [tokenIn, tokenOut], // token A against all bases\n    ...bases.map(base => [tokenIn, base]), // token B against all bases\n    ...bases.map(base => [tokenOut, base]), // each base against all bases\n    ...basePairs]).filter(tokens => Boolean(tokens[0] && tokens[1])).filter(([tokenA, tokenB]) => tokenA.address !== tokenB.address && !tokenA.equals(tokenB)).filter(([tokenA, tokenB]) => {\n      const customBasesA = customBases === null || customBases === void 0 ? void 0 : customBases[tokenA.address];\n      const customBasesB = customBases === null || customBases === void 0 ? void 0 : customBases[tokenB.address];\n      if (!customBasesA && !customBasesB) return true;\n      if (customBasesA && !customBasesA.find(base => tokenB.equals(base))) return false;\n      if (customBasesB && !customBasesB.find(base => tokenA.equals(base))) return false;\n      return true;\n    }).flatMap(([tokenA, tokenB]) => {\n      return [[tokenA, tokenB, FeeAmount.LOW], [tokenA, tokenB, FeeAmount.MEDIUM], [tokenA, tokenB, FeeAmount.HIGH]];\n    }).value();\n\n    return allPairs;\n  }\n\n  computeAllRoutes(tokenIn, tokenOut, pools, chainId, currentPath = [], allPaths = [], startTokenIn = tokenIn, maxHops = 2) {\n    for (const pool of pools) {\n      if (currentPath.indexOf(pool) !== -1 || !pool.involvesToken(tokenIn)) continue;\n      const outputToken = pool.token0.equals(tokenIn) ? pool.token1 : pool.token0;\n\n      if (outputToken.equals(tokenOut)) {\n        allPaths.push(new V3Route([...currentPath, pool], startTokenIn, tokenOut));\n      } else if (maxHops > 1) {\n        this.computeAllRoutes(outputToken, tokenOut, pools, chainId, [...currentPath, pool], allPaths, startTokenIn, maxHops - 1);\n      }\n    }\n\n    return allPaths;\n  }\n\n  buildTrade(tokenInCurrency, tokenOutCurrency, tradeType, routeAmount) {\n    const {\n      route,\n      amount,\n      quote\n    } = routeAmount; // The route, amount and quote are all in terms of wrapped tokens.\n    // When constructing the Trade object the inputAmount/outputAmount must\n    // use native currencies if necessary. This is so that the Trade knows to wrap/unwrap.\n\n    if (tradeType == TradeType.EXACT_INPUT) {\n      const amountCurrency = CurrencyAmount.fromFractionalAmount(tokenInCurrency, amount.numerator, amount.denominator);\n      const quoteCurrency = CurrencyAmount.fromFractionalAmount(tokenOutCurrency, quote.numerator, quote.denominator);\n      const routeCurrency = new Route(route.pools, amountCurrency.currency, quoteCurrency.currency);\n      return new Trade({\n        v3Routes: [{\n          routev3: routeCurrency,\n          inputAmount: amountCurrency,\n          outputAmount: quoteCurrency\n        }],\n        v2Routes: [],\n        tradeType: tradeType\n      });\n    } else {\n      const quoteCurrency = CurrencyAmount.fromFractionalAmount(tokenInCurrency, quote.numerator, quote.denominator);\n      const amountCurrency = CurrencyAmount.fromFractionalAmount(tokenOutCurrency, amount.numerator, amount.denominator);\n      const routeCurrency = new Route(route.pools, quoteCurrency.currency, amountCurrency.currency);\n      return new Trade({\n        v3Routes: [{\n          routev3: routeCurrency,\n          inputAmount: quoteCurrency,\n          outputAmount: amountCurrency\n        }],\n        v2Routes: [],\n        tradeType: tradeType\n      });\n    }\n  }\n\n  buildMethodParameters(trade, swapConfig) {\n    const {\n      recipient,\n      slippageTolerance,\n      deadline\n    } = swapConfig;\n    const methodParameters = SwapRouter.swapCallParameters(trade, {\n      recipient,\n      slippageTolerance,\n      deadlineOrPreviousBlockhash: deadline // ...(signatureData\n      //   ? {\n      //       inputTokenPermit:\n      //         'allowed' in signatureData\n      //           ? {\n      //               expiry: signatureData.deadline,\n      //               nonce: signatureData.nonce,\n      //               s: signatureData.s,\n      //               r: signatureData.r,\n      //               v: signatureData.v as any,\n      //             }\n      //           : {\n      //               deadline: signatureData.deadline,\n      //               amount: signatureData.amount,\n      //               s: signatureData.s,\n      //               r: signatureData.r,\n      //               v: signatureData.v as any,\n      //             },\n      //     }\n      //   : {}),\n\n    });\n    return methodParameters;\n  }\n\n}","map":{"version":3,"sources":["../../../../../src/routers/legacy-router/legacy-router.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { SwapRouter, Trade } from '@uniswap/router-sdk';\nimport { TradeType } from '@uniswap/sdk-core';\nimport { FeeAmount, Route } from '@uniswap/v3-sdk';\nimport { BigNumber, logger } from 'ethers';\nimport _ from 'lodash';\nimport { DAI_MAINNET, USDC_MAINNET, } from '../../providers/token-provider';\nimport { CurrencyAmount } from '../../util/amounts';\nimport { log } from '../../util/log';\nimport { routeToString } from '../../util/routes';\nimport { V3RouteWithValidQuote } from '../alpha-router';\nimport { V3Route } from '../router';\nimport { ADDITIONAL_BASES, BASES_TO_CHECK_TRADES_AGAINST, CUSTOM_BASES, } from './bases';\n// Interface defaults to 2.\nconst MAX_HOPS = 2;\n/**\n * Replicates the router implemented in the V3 interface.\n * Code is mostly a copy from https://github.com/Uniswap/uniswap-interface/blob/0190b5a408c13016c87e1030ffc59326c085f389/src/hooks/useBestV3Trade.ts#L22-L23\n * with React/Redux hooks removed, and refactoring to allow re-use in other routers.\n */\nexport class LegacyRouter {\n    constructor({ chainId, multicall2Provider, poolProvider, quoteProvider, tokenProvider, }) {\n        this.chainId = chainId;\n        this.multicall2Provider = multicall2Provider;\n        this.poolProvider = poolProvider;\n        this.quoteProvider = quoteProvider;\n        this.tokenProvider = tokenProvider;\n    }\n    async route(amount, quoteCurrency, swapType, swapConfig, partialRoutingConfig) {\n        if (swapType == TradeType.EXACT_INPUT) {\n            return this.routeExactIn(amount.currency, quoteCurrency, amount, swapConfig, partialRoutingConfig);\n        }\n        return this.routeExactOut(quoteCurrency, amount.currency, amount, swapConfig, partialRoutingConfig);\n    }\n    async routeExactIn(currencyIn, currencyOut, amountIn, swapConfig, routingConfig) {\n        const tokenIn = currencyIn.wrapped;\n        const tokenOut = currencyOut.wrapped;\n        const routes = await this.getAllRoutes(tokenIn, tokenOut, routingConfig);\n        const routeQuote = await this.findBestRouteExactIn(amountIn, tokenOut, routes, routingConfig);\n        if (!routeQuote) {\n            return null;\n        }\n        const trade = this.buildTrade(currencyIn, currencyOut, TradeType.EXACT_INPUT, routeQuote);\n        return {\n            quote: routeQuote.quote,\n            quoteGasAdjusted: routeQuote.quote,\n            route: [routeQuote],\n            estimatedGasUsed: BigNumber.from(0),\n            estimatedGasUsedQuoteToken: CurrencyAmount.fromFractionalAmount(tokenOut, 0, 1),\n            estimatedGasUsedUSD: CurrencyAmount.fromFractionalAmount(DAI_MAINNET, 0, 1),\n            gasPriceWei: BigNumber.from(0),\n            trade,\n            methodParameters: swapConfig\n                ? this.buildMethodParameters(trade, swapConfig)\n                : undefined,\n            blockNumber: BigNumber.from(0),\n        };\n    }\n    async routeExactOut(currencyIn, currencyOut, amountOut, swapConfig, routingConfig) {\n        const tokenIn = currencyIn.wrapped;\n        const tokenOut = currencyOut.wrapped;\n        const routes = await this.getAllRoutes(tokenIn, tokenOut, routingConfig);\n        const routeQuote = await this.findBestRouteExactOut(amountOut, tokenIn, routes, routingConfig);\n        if (!routeQuote) {\n            return null;\n        }\n        const trade = this.buildTrade(currencyIn, currencyOut, TradeType.EXACT_OUTPUT, routeQuote);\n        return {\n            quote: routeQuote.quote,\n            quoteGasAdjusted: routeQuote.quote,\n            route: [routeQuote],\n            estimatedGasUsed: BigNumber.from(0),\n            estimatedGasUsedQuoteToken: CurrencyAmount.fromFractionalAmount(tokenIn, 0, 1),\n            estimatedGasUsedUSD: CurrencyAmount.fromFractionalAmount(DAI_MAINNET, 0, 1),\n            gasPriceWei: BigNumber.from(0),\n            trade,\n            methodParameters: swapConfig\n                ? this.buildMethodParameters(trade, swapConfig)\n                : undefined,\n            blockNumber: BigNumber.from(0),\n        };\n    }\n    async findBestRouteExactIn(amountIn, tokenOut, routes, routingConfig) {\n        const { routesWithQuotes: quotesRaw } = await this.quoteProvider.getQuotesManyExactIn([amountIn], routes, {\n            blockNumber: routingConfig === null || routingConfig === void 0 ? void 0 : routingConfig.blockNumber,\n        });\n        const quotes100Percent = _.map(quotesRaw, ([route, quotes]) => { var _a, _b; return `${routeToString(route)} : ${(_b = (_a = quotes[0]) === null || _a === void 0 ? void 0 : _a.quote) === null || _b === void 0 ? void 0 : _b.toString()}`; });\n        log.info({ quotes100Percent }, '100% Quotes');\n        const bestQuote = await this.getBestQuote(routes, quotesRaw, tokenOut, TradeType.EXACT_INPUT);\n        return bestQuote;\n    }\n    async findBestRouteExactOut(amountOut, tokenIn, routes, routingConfig) {\n        const { routesWithQuotes: quotesRaw } = await this.quoteProvider.getQuotesManyExactOut([amountOut], routes, {\n            blockNumber: routingConfig === null || routingConfig === void 0 ? void 0 : routingConfig.blockNumber,\n        });\n        const bestQuote = await this.getBestQuote(routes, quotesRaw, tokenIn, TradeType.EXACT_OUTPUT);\n        return bestQuote;\n    }\n    async getBestQuote(routes, quotesRaw, quoteToken, routeType) {\n        log.debug(`Got ${_.filter(quotesRaw, ([_, quotes]) => !!quotes[0]).length} valid quotes from ${routes.length} possible routes.`);\n        const routeQuotesRaw = [];\n        for (let i = 0; i < quotesRaw.length; i++) {\n            const [route, quotes] = quotesRaw[i];\n            const { quote, amount } = quotes[0];\n            if (!quote) {\n                logger.debug(`No quote for ${routeToString(route)}`);\n                continue;\n            }\n            routeQuotesRaw.push({ route, quote, amount });\n        }\n        if (routeQuotesRaw.length == 0) {\n            return null;\n        }\n        routeQuotesRaw.sort((routeQuoteA, routeQuoteB) => {\n            if (routeType == TradeType.EXACT_INPUT) {\n                return routeQuoteA.quote.gt(routeQuoteB.quote) ? -1 : 1;\n            }\n            else {\n                return routeQuoteA.quote.lt(routeQuoteB.quote) ? -1 : 1;\n            }\n        });\n        const routeQuotes = _.map(routeQuotesRaw, ({ route, quote, amount }) => {\n            return new V3RouteWithValidQuote({\n                route,\n                rawQuote: quote,\n                amount,\n                percent: 100,\n                gasModel: {\n                    estimateGasCost: () => ({\n                        gasCostInToken: CurrencyAmount.fromRawAmount(quoteToken, 0),\n                        gasCostInUSD: CurrencyAmount.fromRawAmount(USDC_MAINNET, 0),\n                        gasEstimate: BigNumber.from(0),\n                    }),\n                },\n                sqrtPriceX96AfterList: [],\n                initializedTicksCrossedList: [],\n                quoterGasEstimate: BigNumber.from(0),\n                tradeType: routeType,\n                quoteToken,\n                v3PoolProvider: this.poolProvider,\n            });\n        });\n        for (let rq of routeQuotes) {\n            log.debug(`Quote: ${rq.amount.toFixed(2)} Route: ${routeToString(rq.route)}`);\n        }\n        return routeQuotes[0];\n    }\n    async getAllRoutes(tokenIn, tokenOut, routingConfig) {\n        const tokenPairs = await this.getAllPossiblePairings(tokenIn, tokenOut);\n        const poolAccessor = await this.poolProvider.getPools(tokenPairs, {\n            blockNumber: routingConfig === null || routingConfig === void 0 ? void 0 : routingConfig.blockNumber,\n        });\n        const pools = poolAccessor.getAllPools();\n        const routes = this.computeAllRoutes(tokenIn, tokenOut, pools, this.chainId, [], [], tokenIn, MAX_HOPS);\n        log.info({ routes: _.map(routes, routeToString) }, `Computed ${routes.length} possible routes.`);\n        return routes;\n    }\n    async getAllPossiblePairings(tokenIn, tokenOut) {\n        var _a, _b, _c, _d, _e;\n        const common = (_a = BASES_TO_CHECK_TRADES_AGAINST(this.tokenProvider)[this.chainId]) !== null && _a !== void 0 ? _a : [];\n        const additionalA = (_c = (_b = (await ADDITIONAL_BASES(this.tokenProvider))[this.chainId]) === null || _b === void 0 ? void 0 : _b[tokenIn.address]) !== null && _c !== void 0 ? _c : [];\n        const additionalB = (_e = (_d = (await ADDITIONAL_BASES(this.tokenProvider))[this.chainId]) === null || _d === void 0 ? void 0 : _d[tokenOut.address]) !== null && _e !== void 0 ? _e : [];\n        const bases = [...common, ...additionalA, ...additionalB];\n        const basePairs = _.flatMap(bases, (base) => bases.map((otherBase) => [base, otherBase]));\n        const customBases = (await CUSTOM_BASES(this.tokenProvider))[this.chainId];\n        const allPairs = _([\n            // the direct pair\n            [tokenIn, tokenOut],\n            // token A against all bases\n            ...bases.map((base) => [tokenIn, base]),\n            // token B against all bases\n            ...bases.map((base) => [tokenOut, base]),\n            // each base against all bases\n            ...basePairs,\n        ])\n            .filter((tokens) => Boolean(tokens[0] && tokens[1]))\n            .filter(([tokenA, tokenB]) => tokenA.address !== tokenB.address && !tokenA.equals(tokenB))\n            .filter(([tokenA, tokenB]) => {\n            const customBasesA = customBases === null || customBases === void 0 ? void 0 : customBases[tokenA.address];\n            const customBasesB = customBases === null || customBases === void 0 ? void 0 : customBases[tokenB.address];\n            if (!customBasesA && !customBasesB)\n                return true;\n            if (customBasesA && !customBasesA.find((base) => tokenB.equals(base)))\n                return false;\n            if (customBasesB && !customBasesB.find((base) => tokenA.equals(base)))\n                return false;\n            return true;\n        })\n            .flatMap(([tokenA, tokenB]) => {\n            return [\n                [tokenA, tokenB, FeeAmount.LOW],\n                [tokenA, tokenB, FeeAmount.MEDIUM],\n                [tokenA, tokenB, FeeAmount.HIGH],\n            ];\n        })\n            .value();\n        return allPairs;\n    }\n    computeAllRoutes(tokenIn, tokenOut, pools, chainId, currentPath = [], allPaths = [], startTokenIn = tokenIn, maxHops = 2) {\n        for (const pool of pools) {\n            if (currentPath.indexOf(pool) !== -1 || !pool.involvesToken(tokenIn))\n                continue;\n            const outputToken = pool.token0.equals(tokenIn)\n                ? pool.token1\n                : pool.token0;\n            if (outputToken.equals(tokenOut)) {\n                allPaths.push(new V3Route([...currentPath, pool], startTokenIn, tokenOut));\n            }\n            else if (maxHops > 1) {\n                this.computeAllRoutes(outputToken, tokenOut, pools, chainId, [...currentPath, pool], allPaths, startTokenIn, maxHops - 1);\n            }\n        }\n        return allPaths;\n    }\n    buildTrade(tokenInCurrency, tokenOutCurrency, tradeType, routeAmount) {\n        const { route, amount, quote } = routeAmount;\n        // The route, amount and quote are all in terms of wrapped tokens.\n        // When constructing the Trade object the inputAmount/outputAmount must\n        // use native currencies if necessary. This is so that the Trade knows to wrap/unwrap.\n        if (tradeType == TradeType.EXACT_INPUT) {\n            const amountCurrency = CurrencyAmount.fromFractionalAmount(tokenInCurrency, amount.numerator, amount.denominator);\n            const quoteCurrency = CurrencyAmount.fromFractionalAmount(tokenOutCurrency, quote.numerator, quote.denominator);\n            const routeCurrency = new Route(route.pools, amountCurrency.currency, quoteCurrency.currency);\n            return new Trade({\n                v3Routes: [\n                    {\n                        routev3: routeCurrency,\n                        inputAmount: amountCurrency,\n                        outputAmount: quoteCurrency,\n                    },\n                ],\n                v2Routes: [],\n                tradeType: tradeType,\n            });\n        }\n        else {\n            const quoteCurrency = CurrencyAmount.fromFractionalAmount(tokenInCurrency, quote.numerator, quote.denominator);\n            const amountCurrency = CurrencyAmount.fromFractionalAmount(tokenOutCurrency, amount.numerator, amount.denominator);\n            const routeCurrency = new Route(route.pools, quoteCurrency.currency, amountCurrency.currency);\n            return new Trade({\n                v3Routes: [\n                    {\n                        routev3: routeCurrency,\n                        inputAmount: quoteCurrency,\n                        outputAmount: amountCurrency,\n                    },\n                ],\n                v2Routes: [],\n                tradeType: tradeType,\n            });\n        }\n    }\n    buildMethodParameters(trade, swapConfig) {\n        const { recipient, slippageTolerance, deadline } = swapConfig;\n        const methodParameters = SwapRouter.swapCallParameters(trade, {\n            recipient,\n            slippageTolerance,\n            deadlineOrPreviousBlockhash: deadline,\n            // ...(signatureData\n            //   ? {\n            //       inputTokenPermit:\n            //         'allowed' in signatureData\n            //           ? {\n            //               expiry: signatureData.deadline,\n            //               nonce: signatureData.nonce,\n            //               s: signatureData.s,\n            //               r: signatureData.r,\n            //               v: signatureData.v as any,\n            //             }\n            //           : {\n            //               deadline: signatureData.deadline,\n            //               amount: signatureData.amount,\n            //               s: signatureData.s,\n            //               r: signatureData.r,\n            //               v: signatureData.v as any,\n            //             },\n            //     }\n            //   : {}),\n        });\n        return methodParameters;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,"]},"metadata":{},"sourceType":"module"}