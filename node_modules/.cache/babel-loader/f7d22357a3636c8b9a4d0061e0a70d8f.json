{"ast":null,"code":"import{namehash}from'@ethersproject/hash';import{useMemo}from'react';import{useSingleCallResult}from'../state/multicall/hooks';import{isAddress}from'../utils';import isZero from'../utils/isZero';import{useENSRegistrarContract,useENSResolverContract}from'./useContract';import useDebounce from'./useDebounce';/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */export default function useENSName(address){var _resolverAddress$resu;var debouncedAddress=useDebounce(address,200);var ensNodeArgument=useMemo(function(){if(!debouncedAddress||!isAddress(debouncedAddress))return[undefined];return[namehash(\"\".concat(debouncedAddress.toLowerCase().substr(2),\".addr.reverse\"))];},[debouncedAddress]);var registrarContract=useENSRegistrarContract(false);var resolverAddress=useSingleCallResult(registrarContract,'resolver',ensNodeArgument);var resolverAddressResult=(_resolverAddress$resu=resolverAddress.result)===null||_resolverAddress$resu===void 0?void 0:_resolverAddress$resu[0];var resolverContract=useENSResolverContract(resolverAddressResult&&!isZero(resolverAddressResult)?resolverAddressResult:undefined,false);var name=useSingleCallResult(resolverContract,'name',ensNodeArgument);var changed=debouncedAddress!==address;return useMemo(function(){var _name$result$,_name$result;return{ENSName:changed?null:(_name$result$=(_name$result=name.result)===null||_name$result===void 0?void 0:_name$result[0])!==null&&_name$result$!==void 0?_name$result$:null,loading:changed||resolverAddress.loading||name.loading};},[changed,name.loading,name.result,resolverAddress.loading]);}","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/hooks/useENSName.ts"],"names":["namehash","useMemo","useSingleCallResult","isAddress","isZero","useENSRegistrarContract","useENSResolverContract","useDebounce","useENSName","address","debouncedAddress","ensNodeArgument","undefined","toLowerCase","substr","registrarContract","resolverAddress","resolverAddressResult","result","resolverContract","name","changed","ENSName","loading"],"mappings":"AAAA,OAASA,QAAT,KAAyB,qBAAzB,CACA,OAASC,OAAT,KAAwB,OAAxB,CAEA,OAASC,mBAAT,KAAoC,0BAApC,CACA,OAASC,SAAT,KAA0B,UAA1B,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,CACA,OAASC,uBAAT,CAAkCC,sBAAlC,KAAgE,eAAhE,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CAEA;AACA;AACA;AACA,GACA,cAAe,SAASC,CAAAA,UAAT,CAAoBC,OAApB,CAAoF,2BACjG,GAAMC,CAAAA,gBAAgB,CAAGH,WAAW,CAACE,OAAD,CAAU,GAAV,CAApC,CACA,GAAME,CAAAA,eAAe,CAAGV,OAAO,CAAC,UAAM,CACpC,GAAI,CAACS,gBAAD,EAAqB,CAACP,SAAS,CAACO,gBAAD,CAAnC,CAAuD,MAAO,CAACE,SAAD,CAAP,CACvD,MAAO,CAACZ,QAAQ,WAAIU,gBAAgB,CAACG,WAAjB,GAA+BC,MAA/B,CAAsC,CAAtC,CAAJ,kBAAT,CAAP,CACD,CAH8B,CAG5B,CAACJ,gBAAD,CAH4B,CAA/B,CAIA,GAAMK,CAAAA,iBAAiB,CAAGV,uBAAuB,CAAC,KAAD,CAAjD,CACA,GAAMW,CAAAA,eAAe,CAAGd,mBAAmB,CAACa,iBAAD,CAAoB,UAApB,CAAgCJ,eAAhC,CAA3C,CACA,GAAMM,CAAAA,qBAAqB,wBAAGD,eAAe,CAACE,MAAnB,gDAAG,sBAAyB,CAAzB,CAA9B,CACA,GAAMC,CAAAA,gBAAgB,CAAGb,sBAAsB,CAC7CW,qBAAqB,EAAI,CAACb,MAAM,CAACa,qBAAD,CAAhC,CAA0DA,qBAA1D,CAAkFL,SADrC,CAE7C,KAF6C,CAA/C,CAIA,GAAMQ,CAAAA,IAAI,CAAGlB,mBAAmB,CAACiB,gBAAD,CAAmB,MAAnB,CAA2BR,eAA3B,CAAhC,CAEA,GAAMU,CAAAA,OAAO,CAAGX,gBAAgB,GAAKD,OAArC,CACA,MAAOR,CAAAA,OAAO,CACZ,gDAAO,CACLqB,OAAO,CAAED,OAAO,CAAG,IAAH,8BAAUD,IAAI,CAACF,MAAf,uCAAU,aAAc,CAAd,CAAV,+CAA8B,IADzC,CAELK,OAAO,CAAEF,OAAO,EAAIL,eAAe,CAACO,OAA3B,EAAsCH,IAAI,CAACG,OAF/C,CAAP,EADY,CAKZ,CAACF,OAAD,CAAUD,IAAI,CAACG,OAAf,CAAwBH,IAAI,CAACF,MAA7B,CAAqCF,eAAe,CAACO,OAArD,CALY,CAAd,CAOD","sourcesContent":["import { namehash } from '@ethersproject/hash'\nimport { useMemo } from 'react'\n\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { isAddress } from '../utils'\nimport isZero from '../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from './useContract'\nimport useDebounce from './useDebounce'\n\n/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\n  const debouncedAddress = useDebounce(address, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\n    return [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)]\n  }, [debouncedAddress])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false\n  )\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\n\n  const changed = debouncedAddress !== address\n  return useMemo(\n    () => ({\n      ENSName: changed ? null : name.result?.[0] ?? null,\n      loading: changed || resolverAddress.loading || name.loading,\n    }),\n    [changed, name.loading, name.result, resolverAddress.loading]\n  )\n}\n"]},"metadata":{},"sourceType":"module"}