{"ast":null,"code":"import { Fraction } from '@uniswap/sdk-core';\nimport JSBI from 'jsbi';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CURRENCY_AMOUNT_MIN = new Fraction(JSBI.BigInt(1), JSBI.BigInt(1000000));\nexport default function FormattedCurrencyAmount({\n  currencyAmount,\n  significantDigits = 4\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: currencyAmount.equalTo(JSBI.BigInt(0)) ? '0' : currencyAmount.greaterThan(CURRENCY_AMOUNT_MIN) ? currencyAmount.toSignificant(significantDigits) : `<${CURRENCY_AMOUNT_MIN.toSignificant(1)}`\n  }, void 0, false);\n}\n_c = FormattedCurrencyAmount;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormattedCurrencyAmount\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/components/FormattedCurrencyAmount/index.tsx"],"names":["Fraction","JSBI","CURRENCY_AMOUNT_MIN","BigInt","FormattedCurrencyAmount","currencyAmount","significantDigits","equalTo","greaterThan","toSignificant"],"mappings":"AAAA,SAAmCA,QAAnC,QAAmD,mBAAnD;AACA,OAAOC,IAAP,MAAiB,MAAjB;;;AAEA,MAAMC,mBAAmB,GAAG,IAAIF,QAAJ,CAAaC,IAAI,CAACE,MAAL,CAAY,CAAZ,CAAb,EAA6BF,IAAI,CAACE,MAAL,CAAY,OAAZ,CAA7B,CAA5B;AAEA,eAAe,SAASC,uBAAT,CAAiC;AAC9CC,EAAAA,cAD8C;AAE9CC,EAAAA,iBAAiB,GAAG;AAF0B,CAAjC,EAMZ;AACD,sBACE;AAAA,cACGD,cAAc,CAACE,OAAf,CAAuBN,IAAI,CAACE,MAAL,CAAY,CAAZ,CAAvB,IACG,GADH,GAEGE,cAAc,CAACG,WAAf,CAA2BN,mBAA3B,IACAG,cAAc,CAACI,aAAf,CAA6BH,iBAA7B,CADA,GAEC,IAAGJ,mBAAmB,CAACO,aAApB,CAAkC,CAAlC,CAAqC;AAL/C,mBADF;AASD;KAhBuBL,uB","sourcesContent":["import { Currency, CurrencyAmount, Fraction } from '@uniswap/sdk-core'\nimport JSBI from 'jsbi'\n\nconst CURRENCY_AMOUNT_MIN = new Fraction(JSBI.BigInt(1), JSBI.BigInt(1000000))\n\nexport default function FormattedCurrencyAmount({\n  currencyAmount,\n  significantDigits = 4,\n}: {\n  currencyAmount: CurrencyAmount<Currency>\n  significantDigits?: number\n}) {\n  return (\n    <>\n      {currencyAmount.equalTo(JSBI.BigInt(0))\n        ? '0'\n        : currencyAmount.greaterThan(CURRENCY_AMOUNT_MIN)\n        ? currencyAmount.toSignificant(significantDigits)\n        : `<${CURRENCY_AMOUNT_MIN.toSignificant(1)}`}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}