{"ast":null,"code":"import _objectSpread from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _styled from\"styled-components\";var _excluded=[\"trade\",\"syncing\",\"fixedOpen\"];import{Trans}from\"@lingui/react\";import{Percent,TradeType}from'@uniswap/sdk-core';import{Pair}from'@uniswap/v2-sdk';import AnimatedDropdown from'components/AnimatedDropdown';import{AutoColumn}from'components/Column';import{LoadingRows}from'components/Loader/styled';import RoutingDiagram from'components/RoutingDiagram/RoutingDiagram';import{AutoRow,RowBetween}from'components/Row';import useAutoRouterSupported from'hooks/useAutoRouterSupported';import{useActiveWeb3React}from'hooks/web3';import{memo,useState}from'react';import{Plus}from'react-feather';import{useDarkModeManager}from'state/user/hooks';import{Separator,ThemedText}from'theme';import{SUPPORTED_GAS_ESTIMATE_CHAIN_IDS}from'./GasEstimateBadge';import{AutoRouterLabel,AutoRouterLogo}from'./RouterLabel';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Wrapper=_styled(AutoColumn).withConfig({componentId:\"sc-176vpyh-0\"})([\"padding:\",\";border-radius:16px;border:1px solid \",\";cursor:pointer;\"],function(_ref){var fixedOpen=_ref.fixedOpen;return fixedOpen?'12px':'12px 8px 12px 12px';},function(_ref2){var theme=_ref2.theme,fixedOpen=_ref2.fixedOpen;return fixedOpen?'transparent':theme.bg2;});var OpenCloseIcon=_styled(Plus).withConfig({componentId:\"sc-176vpyh-1\"})([\"margin-left:8px;height:20px;stroke-width:2px;transition:transform 0.1s;transform:\",\";stroke:\",\";cursor:pointer;:hover{opacity:0.8;}\"],function(_ref3){var open=_ref3.open;return open?'rotate(45deg)':'none';},function(_ref4){var theme=_ref4.theme;return theme.text3;});var V2_DEFAULT_FEE_TIER=3000;export default/*#__PURE__*/memo(function SwapRoute(_ref5){var trade=_ref5.trade,syncing=_ref5.syncing,_ref5$fixedOpen=_ref5.fixedOpen,fixedOpen=_ref5$fixedOpen===void 0?false:_ref5$fixedOpen,rest=_objectWithoutProperties(_ref5,_excluded);var autoRouterSupported=useAutoRouterSupported();var routes=getTokenPath(trade);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var _useActiveWeb3React=useActiveWeb3React(),chainId=_useActiveWeb3React.chainId;var _useDarkModeManager=useDarkModeManager(),_useDarkModeManager2=_slicedToArray(_useDarkModeManager,1),darkMode=_useDarkModeManager2[0];var formattedGasPriceString=(trade===null||trade===void 0?void 0:trade.gasUseEstimateUSD)?trade.gasUseEstimateUSD.toFixed(2)==='0.00'?'<$0.01':'$'+trade.gasUseEstimateUSD.toFixed(2):undefined;return/*#__PURE__*/_jsxs(Wrapper,_objectSpread(_objectSpread({},rest),{},{darkMode:darkMode,fixedOpen:fixedOpen,children:[/*#__PURE__*/_jsxs(RowBetween,{onClick:function onClick(){return setOpen(!open);},children:[/*#__PURE__*/_jsxs(AutoRow,{gap:\"4px\",width:\"auto\",children:[/*#__PURE__*/_jsx(AutoRouterLogo,{}),/*#__PURE__*/_jsx(AutoRouterLabel,{})]}),fixedOpen?null:/*#__PURE__*/_jsx(OpenCloseIcon,{open:open})]}),/*#__PURE__*/_jsx(AnimatedDropdown,{open:open||fixedOpen,children:/*#__PURE__*/_jsxs(AutoRow,{gap:\"4px\",width:\"auto\",style:{paddingTop:'12px',margin:0},children:[syncing?/*#__PURE__*/_jsx(LoadingRows,{children:/*#__PURE__*/_jsx(\"div\",{style:{width:'400px',height:'30px'}})}):/*#__PURE__*/_jsx(RoutingDiagram,{currencyIn:trade.inputAmount.currency,currencyOut:trade.outputAmount.currency,routes:routes}),autoRouterSupported&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Separator,{}),syncing?/*#__PURE__*/_jsx(LoadingRows,{children:/*#__PURE__*/_jsx(\"div\",{style:{width:'250px',height:'15px'}})}):/*#__PURE__*/_jsxs(ThemedText.Main,{fontSize:12,width:400,margin:0,children:[(trade===null||trade===void 0?void 0:trade.gasUseEstimateUSD)&&chainId&&SUPPORTED_GAS_ESTIMATE_CHAIN_IDS.includes(chainId)?/*#__PURE__*/_jsx(Trans,{id:\"Best price route costs ~{formattedGasPriceString} in gas.\",values:{formattedGasPriceString:formattedGasPriceString}}):null,' ',/*#__PURE__*/_jsx(Trans,{id:\"This route optimizes your total output by considering split routes, multiple hops, and the gas cost of each step.\"})]})]})]})})]}));});function getTokenPath(trade){return trade.swaps.map(function(_ref6){var _ref6$route=_ref6.route,tokenPath=_ref6$route.path,pools=_ref6$route.pools,protocol=_ref6$route.protocol,inputAmount=_ref6.inputAmount,outputAmount=_ref6.outputAmount;var portion=trade.tradeType===TradeType.EXACT_INPUT?inputAmount.divide(trade.inputAmount):outputAmount.divide(trade.outputAmount);var percent=new Percent(portion.numerator,portion.denominator);var path=[];for(var i=0;i<pools.length;i++){var nextPool=pools[i];var tokenIn=tokenPath[i];var tokenOut=tokenPath[i+1];var entry=[tokenIn,tokenOut,nextPool instanceof Pair?V2_DEFAULT_FEE_TIER:nextPool.fee];path.push(entry);}return{percent:percent,path:path,protocol:protocol};});}","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/components/swap/SwapRoute.tsx"],"names":["Percent","TradeType","Pair","AnimatedDropdown","AutoColumn","LoadingRows","RoutingDiagram","AutoRow","RowBetween","useAutoRouterSupported","useActiveWeb3React","memo","useState","Plus","useDarkModeManager","Separator","ThemedText","SUPPORTED_GAS_ESTIMATE_CHAIN_IDS","AutoRouterLabel","AutoRouterLogo","Wrapper","styled","fixedOpen","theme","bg2","OpenCloseIcon","open","text3","V2_DEFAULT_FEE_TIER","SwapRoute","trade","syncing","rest","autoRouterSupported","routes","getTokenPath","setOpen","chainId","darkMode","formattedGasPriceString","gasUseEstimateUSD","toFixed","undefined","paddingTop","margin","width","height","inputAmount","currency","outputAmount","includes","swaps","map","route","tokenPath","path","pools","protocol","portion","tradeType","EXACT_INPUT","divide","percent","numerator","denominator","i","length","nextPool","tokenIn","tokenOut","entry","fee","push"],"mappings":"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","sourcesContent":["import { Trans } from '@lingui/macro'\nimport { Trade } from '@uniswap/router-sdk'\nimport { Currency, Percent, TradeType } from '@uniswap/sdk-core'\nimport { Pair } from '@uniswap/v2-sdk'\nimport AnimatedDropdown from 'components/AnimatedDropdown'\nimport { AutoColumn } from 'components/Column'\nimport { LoadingRows } from 'components/Loader/styled'\nimport RoutingDiagram, { RoutingDiagramEntry } from 'components/RoutingDiagram/RoutingDiagram'\nimport { AutoRow, RowBetween } from 'components/Row'\nimport useAutoRouterSupported from 'hooks/useAutoRouterSupported'\nimport { useActiveWeb3React } from 'hooks/web3'\nimport { memo, useState } from 'react'\nimport { Plus } from 'react-feather'\nimport { InterfaceTrade } from 'state/routing/types'\nimport { useDarkModeManager } from 'state/user/hooks'\nimport styled from 'styled-components/macro'\nimport { Separator, ThemedText } from 'theme'\n\nimport { SUPPORTED_GAS_ESTIMATE_CHAIN_IDS } from './GasEstimateBadge'\nimport { AutoRouterLabel, AutoRouterLogo } from './RouterLabel'\n\nconst Wrapper = styled(AutoColumn)<{ darkMode?: boolean; fixedOpen?: boolean }>`\n  padding: ${({ fixedOpen }) => (fixedOpen ? '12px' : '12px 8px 12px 12px')};\n  border-radius: 16px;\n  border: 1px solid ${({ theme, fixedOpen }) => (fixedOpen ? 'transparent' : theme.bg2)};\n  cursor: pointer;\n`\n\nconst OpenCloseIcon = styled(Plus)<{ open?: boolean }>`\n  margin-left: 8px;\n  height: 20px;\n  stroke-width: 2px;\n  transition: transform 0.1s;\n  transform: ${({ open }) => (open ? 'rotate(45deg)' : 'none')};\n  stroke: ${({ theme }) => theme.text3};\n  cursor: pointer;\n  :hover {\n    opacity: 0.8;\n  }\n`\n\nconst V2_DEFAULT_FEE_TIER = 3000\n\ninterface SwapRouteProps extends React.HTMLAttributes<HTMLDivElement> {\n  trade: InterfaceTrade<Currency, Currency, TradeType>\n  syncing: boolean\n  fixedOpen?: boolean // fixed in open state, hide open/close icon\n}\n\nexport default memo(function SwapRoute({ trade, syncing, fixedOpen = false, ...rest }: SwapRouteProps) {\n  const autoRouterSupported = useAutoRouterSupported()\n  const routes = getTokenPath(trade)\n  const [open, setOpen] = useState(false)\n  const { chainId } = useActiveWeb3React()\n\n  const [darkMode] = useDarkModeManager()\n\n  const formattedGasPriceString = trade?.gasUseEstimateUSD\n    ? trade.gasUseEstimateUSD.toFixed(2) === '0.00'\n      ? '<$0.01'\n      : '$' + trade.gasUseEstimateUSD.toFixed(2)\n    : undefined\n\n  return (\n    <Wrapper {...rest} darkMode={darkMode} fixedOpen={fixedOpen}>\n      <RowBetween onClick={() => setOpen(!open)}>\n        <AutoRow gap=\"4px\" width=\"auto\">\n          <AutoRouterLogo />\n          <AutoRouterLabel />\n        </AutoRow>\n        {fixedOpen ? null : <OpenCloseIcon open={open} />}\n      </RowBetween>\n      <AnimatedDropdown open={open || fixedOpen}>\n        <AutoRow gap=\"4px\" width=\"auto\" style={{ paddingTop: '12px', margin: 0 }}>\n          {syncing ? (\n            <LoadingRows>\n              <div style={{ width: '400px', height: '30px' }} />\n            </LoadingRows>\n          ) : (\n            <RoutingDiagram\n              currencyIn={trade.inputAmount.currency}\n              currencyOut={trade.outputAmount.currency}\n              routes={routes}\n            />\n          )}\n\n          {autoRouterSupported && (\n            <>\n              <Separator />\n              {syncing ? (\n                <LoadingRows>\n                  <div style={{ width: '250px', height: '15px' }} />\n                </LoadingRows>\n              ) : (\n                <ThemedText.Main fontSize={12} width={400} margin={0}>\n                  {trade?.gasUseEstimateUSD && chainId && SUPPORTED_GAS_ESTIMATE_CHAIN_IDS.includes(chainId) ? (\n                    <Trans>Best price route costs ~{formattedGasPriceString} in gas. </Trans>\n                  ) : null}{' '}\n                  <Trans>\n                    This route optimizes your total output by considering split routes, multiple hops, and the gas cost\n                    of each step.\n                  </Trans>\n                </ThemedText.Main>\n              )}\n            </>\n          )}\n        </AutoRow>\n      </AnimatedDropdown>\n    </Wrapper>\n  )\n})\n\nfunction getTokenPath(trade: Trade<Currency, Currency, TradeType>): RoutingDiagramEntry[] {\n  return trade.swaps.map(({ route: { path: tokenPath, pools, protocol }, inputAmount, outputAmount }) => {\n    const portion =\n      trade.tradeType === TradeType.EXACT_INPUT\n        ? inputAmount.divide(trade.inputAmount)\n        : outputAmount.divide(trade.outputAmount)\n\n    const percent = new Percent(portion.numerator, portion.denominator)\n\n    const path: RoutingDiagramEntry['path'] = []\n    for (let i = 0; i < pools.length; i++) {\n      const nextPool = pools[i]\n      const tokenIn = tokenPath[i]\n      const tokenOut = tokenPath[i + 1]\n\n      const entry: RoutingDiagramEntry['path'][0] = [\n        tokenIn,\n        tokenOut,\n        nextPool instanceof Pair ? V2_DEFAULT_FEE_TIER : nextPool.fee,\n      ]\n\n      path.push(entry)\n    }\n\n    return {\n      percent,\n      path,\n      protocol,\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"module"}