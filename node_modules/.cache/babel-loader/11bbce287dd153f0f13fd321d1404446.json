{"ast":null,"code":"import _styled from\"styled-components\";import{Trans}from\"@lingui/react\";import useAutoRouterSupported from'hooks/useAutoRouterSupported';import{ThemedText}from'theme';import{ReactComponent as AutoRouterIcon}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/svg/auto_router.svg\";import{ReactComponent as StaticRouterIcon}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/svg/static_route.svg\";import{jsx as _jsx}from\"react/jsx-runtime\";var StyledAutoRouterIcon=_styled(AutoRouterIcon).withConfig({componentId:\"sc-1uzj9pr-0\"})([\"height:16px;width:16px;:hover{filter:brightness(1.3);}\"]);var StyledStaticRouterIcon=_styled(StaticRouterIcon).withConfig({componentId:\"sc-1uzj9pr-1\"})([\"height:16px;width:16px;fill:\",\";:hover{filter:brightness(1.3);}\"],function(_ref){var theme=_ref.theme;return theme.text3;});var StyledAutoRouterLabel=_styled(ThemedText.Black).withConfig({componentId:\"sc-1uzj9pr-2\"})([\"line-height:1rem;color:\",\";@supports (-webkit-background-clip:text) and (-webkit-text-fill-color:transparent){background-image:linear-gradient(90deg,#2172e5 0%,#54e521 163.16%);-webkit-background-clip:text;-webkit-text-fill-color:transparent;}\"],function(_ref2){var theme=_ref2.theme;return theme.green1;});export function AutoRouterLogo(){var autoRouterSupported=useAutoRouterSupported();return autoRouterSupported?/*#__PURE__*/_jsx(StyledAutoRouterIcon,{}):/*#__PURE__*/_jsx(StyledStaticRouterIcon,{});}export function AutoRouterLabel(){var autoRouterSupported=useAutoRouterSupported();return autoRouterSupported?/*#__PURE__*/_jsx(StyledAutoRouterLabel,{fontSize:14,children:\"Auto Router\"}):/*#__PURE__*/_jsx(ThemedText.Black,{fontSize:14,children:/*#__PURE__*/_jsx(Trans,{id:\"Trade Route\"})});}","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/components/swap/RouterLabel.tsx"],"names":["useAutoRouterSupported","ThemedText","StyledAutoRouterIcon","styled","AutoRouterIcon","StyledStaticRouterIcon","StaticRouterIcon","theme","text3","StyledAutoRouterLabel","Black","green1","AutoRouterLogo","autoRouterSupported","AutoRouterLabel"],"mappings":"wEACA,MAAOA,CAAAA,sBAAP,KAAmC,8BAAnC,CAEA,OAASC,UAAT,KAA2B,OAA3B,C,oRAKA,GAAMC,CAAAA,oBAAoB,CAAGC,OAAM,CAACC,cAAD,CAAT,qGAA1B,CASA,GAAMC,CAAAA,sBAAsB,CAAGF,OAAM,CAACG,gBAAD,CAAT,8GAIlB,kBAAGC,CAAAA,KAAH,MAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,KAArB,EAJkB,CAA5B,CAWA,GAAMC,CAAAA,qBAAqB,CAAGN,OAAM,CAACF,UAAU,CAACS,KAAZ,CAAT,kSAIhB,mBAAGH,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACI,MAArB,EAJgB,CAA3B,CAaA,MAAO,SAASC,CAAAA,cAAT,EAA0B,CAC/B,GAAMC,CAAAA,mBAAmB,CAAGb,sBAAsB,EAAlD,CAEA,MAAOa,CAAAA,mBAAmB,cAAG,KAAC,oBAAD,IAAH,cAA8B,KAAC,sBAAD,IAAxD,CACD,CAED,MAAO,SAASC,CAAAA,eAAT,EAA2B,CAChC,GAAMD,CAAAA,mBAAmB,CAAGb,sBAAsB,EAAlD,CAEA,MAAOa,CAAAA,mBAAmB,cACxB,KAAC,qBAAD,EAAuB,QAAQ,CAAE,EAAjC,yBADwB,cAGxB,KAAC,UAAD,CAAY,KAAZ,EAAkB,QAAQ,CAAE,EAA5B,uBACE,8BADF,EAHF,CAOD","sourcesContent":["import { Trans } from '@lingui/macro'\nimport useAutoRouterSupported from 'hooks/useAutoRouterSupported'\nimport styled from 'styled-components/macro'\nimport { ThemedText } from 'theme'\n\nimport { ReactComponent as AutoRouterIcon } from '../../assets/svg/auto_router.svg'\nimport { ReactComponent as StaticRouterIcon } from '../../assets/svg/static_route.svg'\n\nconst StyledAutoRouterIcon = styled(AutoRouterIcon)`\n  height: 16px;\n  width: 16px;\n\n  :hover {\n    filter: brightness(1.3);\n  }\n`\n\nconst StyledStaticRouterIcon = styled(StaticRouterIcon)`\n  height: 16px;\n  width: 16px;\n\n  fill: ${({ theme }) => theme.text3};\n\n  :hover {\n    filter: brightness(1.3);\n  }\n`\n\nconst StyledAutoRouterLabel = styled(ThemedText.Black)`\n  line-height: 1rem;\n\n  /* fallback color */\n  color: ${({ theme }) => theme.green1};\n\n  @supports (-webkit-background-clip: text) and (-webkit-text-fill-color: transparent) {\n    background-image: linear-gradient(90deg, #2172e5 0%, #54e521 163.16%);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n  }\n`\n\nexport function AutoRouterLogo() {\n  const autoRouterSupported = useAutoRouterSupported()\n\n  return autoRouterSupported ? <StyledAutoRouterIcon /> : <StyledStaticRouterIcon />\n}\n\nexport function AutoRouterLabel() {\n  const autoRouterSupported = useAutoRouterSupported()\n\n  return autoRouterSupported ? (\n    <StyledAutoRouterLabel fontSize={14}>Auto Router</StyledAutoRouterLabel>\n  ) : (\n    <ThemedText.Black fontSize={14}>\n      <Trans>Trade Route</Trans>\n    </ThemedText.Black>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}