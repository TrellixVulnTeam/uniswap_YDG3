{"ast":null,"code":"import { keyframes as _keyframes } from \"styled-components\";\nimport _styled from \"styled-components\";\n\nvar _jsxFileName = \"/Users/safahi/Downloads/interface-4.30.1/src/components/FeeSelector/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Trans } from \"@lingui/react\";\nimport { FeeAmount } from '@uniswap/v3-sdk';\nimport { ButtonGray } from 'components/Button';\nimport Card from 'components/Card';\nimport { AutoColumn } from 'components/Column';\nimport { RowBetween } from 'components/Row';\nimport { useFeeTierDistribution } from 'hooks/useFeeTierDistribution';\nimport { PoolState, usePools } from 'hooks/usePools';\nimport usePrevious from 'hooks/usePrevious';\nimport { useActiveWeb3React } from 'hooks/web3';\nimport { DynamicSection } from 'pages/AddLiquidity/styled';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport ReactGA from 'react-ga';\nimport { Box } from 'rebass';\nimport { ThemedText } from 'theme';\nimport { FeeOption } from './FeeOption';\nimport { FeeTierPercentageBadge } from './FeeTierPercentageBadge';\nimport { FEE_AMOUNT_DETAIL } from './shared';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst pulse = color => _keyframes`\n  0% {\n    box-shadow: 0 0 0 0 ${color};\n  }\n\n  70% {\n    box-shadow: 0 0 0 2px ${color};\n  }\n\n  100% {\n    box-shadow: 0 0 0 0 ${color};\n  }\n`;\n\nconst FocusedOutlineCard = _styled(Card).withConfig({\n  displayName: \"FeeSelector__FocusedOutlineCard\",\n  componentId: \"sc-1xk2z0e-0\"\n})([\"border:1px solid \", \";animation:\", \" 0.6s linear;align-self:center;\"], ({\n  theme\n}) => theme.bg2, ({\n  pulsing,\n  theme\n}) => pulsing && pulse(theme.primary1));\n\nconst Select = _styled.div.withConfig({\n  displayName: \"FeeSelector__Select\",\n  componentId: \"sc-1xk2z0e-1\"\n})([\"align-items:flex-start;display:grid;grid-auto-flow:column;grid-gap:8px;\"]);\n\nexport default function FeeSelector({\n  disabled = false,\n  feeAmount,\n  handleFeePoolSelect,\n  currencyA,\n  currencyB\n}) {\n  _s();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const {\n    isLoading,\n    isError,\n    largestUsageFeeTier,\n    distributions\n  } = useFeeTierDistribution(currencyA, currencyB); // get pool data on-chain for latest states\n\n  const pools = usePools([[currencyA, currencyB, FeeAmount.LOWEST], [currencyA, currencyB, FeeAmount.LOW], [currencyA, currencyB, FeeAmount.MEDIUM], [currencyA, currencyB, FeeAmount.HIGH]]);\n  const poolsByFeeTier = useMemo(() => pools.reduce((acc, [curPoolState, curPool]) => {\n    acc = { ...acc,\n      ...{\n        [curPool === null || curPool === void 0 ? void 0 : curPool.fee]: curPoolState\n      }\n    };\n    return acc;\n  }, {\n    // default all states to NOT_EXISTS\n    [FeeAmount.LOWEST]: PoolState.NOT_EXISTS,\n    [FeeAmount.LOW]: PoolState.NOT_EXISTS,\n    [FeeAmount.MEDIUM]: PoolState.NOT_EXISTS,\n    [FeeAmount.HIGH]: PoolState.NOT_EXISTS\n  }), [pools]);\n  const [showOptions, setShowOptions] = useState(false);\n  const [pulsing, setPulsing] = useState(false);\n  const previousFeeAmount = usePrevious(feeAmount);\n  const recommended = useRef(false);\n  const handleFeePoolSelectWithEvent = useCallback(fee => {\n    ReactGA.event({\n      category: 'FeePoolSelect',\n      action: 'Manual'\n    });\n    handleFeePoolSelect(fee);\n  }, [handleFeePoolSelect]);\n  useEffect(() => {\n    if (feeAmount || isLoading || isError) {\n      return;\n    }\n\n    if (!largestUsageFeeTier) {\n      // cannot recommend, open options\n      setShowOptions(true);\n    } else {\n      setShowOptions(false);\n      recommended.current = true;\n      ReactGA.event({\n        category: 'FeePoolSelect',\n        action: ' Recommended'\n      });\n      handleFeePoolSelect(largestUsageFeeTier);\n    }\n  }, [feeAmount, isLoading, isError, largestUsageFeeTier, handleFeePoolSelect]);\n  useEffect(() => {\n    setShowOptions(isError);\n  }, [isError]);\n  useEffect(() => {\n    if (feeAmount && previousFeeAmount !== feeAmount) {\n      setPulsing(true);\n    }\n  }, [previousFeeAmount, feeAmount]);\n  return /*#__PURE__*/_jsxDEV(AutoColumn, {\n    gap: \"16px\",\n    children: /*#__PURE__*/_jsxDEV(DynamicSection, {\n      gap: \"md\",\n      disabled: disabled,\n      children: [/*#__PURE__*/_jsxDEV(FocusedOutlineCard, {\n        pulsing: pulsing,\n        onAnimationEnd: () => setPulsing(false),\n        children: /*#__PURE__*/_jsxDEV(RowBetween, {\n          children: [/*#__PURE__*/_jsxDEV(AutoColumn, {\n            id: \"add-liquidity-selected-fee\",\n            children: !feeAmount ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(ThemedText.Label, {\n                children: /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"Fee tier\"\n                }, void 0, false, void 0, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ThemedText.Main, {\n                fontWeight: 400,\n                fontSize: \"12px\",\n                textAlign: \"left\",\n                children: /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"The % you will earn in fees.\"\n                }, void 0, false, void 0, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(ThemedText.Label, {\n                className: \"selected-fee-label\",\n                children: /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"{0}% fee tier\",\n                  values: {\n                    0: FEE_AMOUNT_DETAIL[feeAmount].label\n                  }\n                }, void 0, false, void 0, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                style: {\n                  width: 'fit-content',\n                  marginTop: '8px'\n                },\n                className: \"selected-fee-percentage\",\n                children: distributions && /*#__PURE__*/_jsxDEV(FeeTierPercentageBadge, {\n                  distributions: distributions,\n                  feeAmount: feeAmount,\n                  poolState: poolsByFeeTier[feeAmount]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonGray, {\n            onClick: () => setShowOptions(!showOptions),\n            width: \"auto\",\n            padding: \"4px\",\n            $borderRadius: \"6px\",\n            children: showOptions ? /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"Hide\"\n            }, void 0, false, void 0, this) : /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"Edit\"\n            }, void 0, false, void 0, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), chainId && showOptions && /*#__PURE__*/_jsxDEV(Select, {\n        children: [FeeAmount.LOWEST, FeeAmount.LOW, FeeAmount.MEDIUM, FeeAmount.HIGH].map((_feeAmount, i) => {\n          const {\n            supportedChains\n          } = FEE_AMOUNT_DETAIL[_feeAmount];\n\n          if (supportedChains.includes(chainId)) {\n            return /*#__PURE__*/_jsxDEV(FeeOption, {\n              feeAmount: _feeAmount,\n              active: feeAmount === _feeAmount,\n              onClick: () => handleFeePoolSelectWithEvent(_feeAmount),\n              distributions: distributions,\n              poolState: poolsByFeeTier[_feeAmount]\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 19\n            }, this);\n          }\n\n          return null;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FeeSelector, \"r8V0CctIGwrl6c8/XvVy10FdtTY=\", false, function () {\n  return [useActiveWeb3React, useFeeTierDistribution, usePools, usePrevious];\n});\n\n_c = FeeSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeeSelector\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/components/FeeSelector/index.tsx"],"names":["FeeAmount","ButtonGray","Card","AutoColumn","RowBetween","useFeeTierDistribution","PoolState","usePools","usePrevious","useActiveWeb3React","DynamicSection","React","useCallback","useEffect","useMemo","useRef","useState","ReactGA","Box","ThemedText","FeeOption","FeeTierPercentageBadge","FEE_AMOUNT_DETAIL","pulse","color","keyframes","FocusedOutlineCard","styled","theme","bg2","pulsing","primary1","Select","div","FeeSelector","disabled","feeAmount","handleFeePoolSelect","currencyA","currencyB","chainId","isLoading","isError","largestUsageFeeTier","distributions","pools","LOWEST","LOW","MEDIUM","HIGH","poolsByFeeTier","reduce","acc","curPoolState","curPool","fee","NOT_EXISTS","showOptions","setShowOptions","setPulsing","previousFeeAmount","recommended","handleFeePoolSelectWithEvent","event","category","action","current","label","width","marginTop","map","_feeAmount","i","supportedChains","includes"],"mappings":"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","sourcesContent":["import { Trans } from '@lingui/macro'\nimport { Currency } from '@uniswap/sdk-core'\nimport { FeeAmount } from '@uniswap/v3-sdk'\nimport { ButtonGray } from 'components/Button'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Column'\nimport { RowBetween } from 'components/Row'\nimport { useFeeTierDistribution } from 'hooks/useFeeTierDistribution'\nimport { PoolState, usePools } from 'hooks/usePools'\nimport usePrevious from 'hooks/usePrevious'\nimport { useActiveWeb3React } from 'hooks/web3'\nimport { DynamicSection } from 'pages/AddLiquidity/styled'\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport ReactGA from 'react-ga'\nimport { Box } from 'rebass'\nimport styled, { keyframes } from 'styled-components/macro'\nimport { ThemedText } from 'theme'\n\nimport { FeeOption } from './FeeOption'\nimport { FeeTierPercentageBadge } from './FeeTierPercentageBadge'\nimport { FEE_AMOUNT_DETAIL } from './shared'\n\nconst pulse = (color: string) => keyframes`\n  0% {\n    box-shadow: 0 0 0 0 ${color};\n  }\n\n  70% {\n    box-shadow: 0 0 0 2px ${color};\n  }\n\n  100% {\n    box-shadow: 0 0 0 0 ${color};\n  }\n`\nconst FocusedOutlineCard = styled(Card)<{ pulsing: boolean }>`\n  border: 1px solid ${({ theme }) => theme.bg2};\n  animation: ${({ pulsing, theme }) => pulsing && pulse(theme.primary1)} 0.6s linear;\n  align-self: center;\n`\n\nconst Select = styled.div`\n  align-items: flex-start;\n  display: grid;\n  grid-auto-flow: column;\n  grid-gap: 8px;\n`\n\nexport default function FeeSelector({\n  disabled = false,\n  feeAmount,\n  handleFeePoolSelect,\n  currencyA,\n  currencyB,\n}: {\n  disabled?: boolean\n  feeAmount?: FeeAmount\n  handleFeePoolSelect: (feeAmount: FeeAmount) => void\n  currencyA?: Currency | undefined\n  currencyB?: Currency | undefined\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { isLoading, isError, largestUsageFeeTier, distributions } = useFeeTierDistribution(currencyA, currencyB)\n\n  // get pool data on-chain for latest states\n  const pools = usePools([\n    [currencyA, currencyB, FeeAmount.LOWEST],\n    [currencyA, currencyB, FeeAmount.LOW],\n    [currencyA, currencyB, FeeAmount.MEDIUM],\n    [currencyA, currencyB, FeeAmount.HIGH],\n  ])\n\n  const poolsByFeeTier: Record<FeeAmount, PoolState> = useMemo(\n    () =>\n      pools.reduce(\n        (acc, [curPoolState, curPool]) => {\n          acc = {\n            ...acc,\n            ...{ [curPool?.fee as FeeAmount]: curPoolState },\n          }\n          return acc\n        },\n        {\n          // default all states to NOT_EXISTS\n          [FeeAmount.LOWEST]: PoolState.NOT_EXISTS,\n          [FeeAmount.LOW]: PoolState.NOT_EXISTS,\n          [FeeAmount.MEDIUM]: PoolState.NOT_EXISTS,\n          [FeeAmount.HIGH]: PoolState.NOT_EXISTS,\n        }\n      ),\n    [pools]\n  )\n\n  const [showOptions, setShowOptions] = useState(false)\n  const [pulsing, setPulsing] = useState(false)\n\n  const previousFeeAmount = usePrevious(feeAmount)\n\n  const recommended = useRef(false)\n\n  const handleFeePoolSelectWithEvent = useCallback(\n    (fee: FeeAmount) => {\n      ReactGA.event({\n        category: 'FeePoolSelect',\n        action: 'Manual',\n      })\n      handleFeePoolSelect(fee)\n    },\n    [handleFeePoolSelect]\n  )\n\n  useEffect(() => {\n    if (feeAmount || isLoading || isError) {\n      return\n    }\n\n    if (!largestUsageFeeTier) {\n      // cannot recommend, open options\n      setShowOptions(true)\n    } else {\n      setShowOptions(false)\n\n      recommended.current = true\n      ReactGA.event({\n        category: 'FeePoolSelect',\n        action: ' Recommended',\n      })\n\n      handleFeePoolSelect(largestUsageFeeTier)\n    }\n  }, [feeAmount, isLoading, isError, largestUsageFeeTier, handleFeePoolSelect])\n\n  useEffect(() => {\n    setShowOptions(isError)\n  }, [isError])\n\n  useEffect(() => {\n    if (feeAmount && previousFeeAmount !== feeAmount) {\n      setPulsing(true)\n    }\n  }, [previousFeeAmount, feeAmount])\n\n  return (\n    <AutoColumn gap=\"16px\">\n      <DynamicSection gap=\"md\" disabled={disabled}>\n        <FocusedOutlineCard pulsing={pulsing} onAnimationEnd={() => setPulsing(false)}>\n          <RowBetween>\n            <AutoColumn id=\"add-liquidity-selected-fee\">\n              {!feeAmount ? (\n                <>\n                  <ThemedText.Label>\n                    <Trans>Fee tier</Trans>\n                  </ThemedText.Label>\n                  <ThemedText.Main fontWeight={400} fontSize=\"12px\" textAlign=\"left\">\n                    <Trans>The % you will earn in fees.</Trans>\n                  </ThemedText.Main>\n                </>\n              ) : (\n                <>\n                  <ThemedText.Label className=\"selected-fee-label\">\n                    <Trans>{FEE_AMOUNT_DETAIL[feeAmount].label}% fee tier</Trans>\n                  </ThemedText.Label>\n                  <Box style={{ width: 'fit-content', marginTop: '8px' }} className=\"selected-fee-percentage\">\n                    {distributions && (\n                      <FeeTierPercentageBadge\n                        distributions={distributions}\n                        feeAmount={feeAmount}\n                        poolState={poolsByFeeTier[feeAmount]}\n                      />\n                    )}\n                  </Box>\n                </>\n              )}\n            </AutoColumn>\n\n            <ButtonGray onClick={() => setShowOptions(!showOptions)} width=\"auto\" padding=\"4px\" $borderRadius=\"6px\">\n              {showOptions ? <Trans>Hide</Trans> : <Trans>Edit</Trans>}\n            </ButtonGray>\n          </RowBetween>\n        </FocusedOutlineCard>\n\n        {chainId && showOptions && (\n          <Select>\n            {[FeeAmount.LOWEST, FeeAmount.LOW, FeeAmount.MEDIUM, FeeAmount.HIGH].map((_feeAmount, i) => {\n              const { supportedChains } = FEE_AMOUNT_DETAIL[_feeAmount]\n              if (supportedChains.includes(chainId)) {\n                return (\n                  <FeeOption\n                    feeAmount={_feeAmount}\n                    active={feeAmount === _feeAmount}\n                    onClick={() => handleFeePoolSelectWithEvent(_feeAmount)}\n                    distributions={distributions}\n                    poolState={poolsByFeeTier[_feeAmount]}\n                    key={i}\n                  />\n                )\n              }\n              return null\n            })}\n          </Select>\n        )}\n      </DynamicSection>\n    </AutoColumn>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}