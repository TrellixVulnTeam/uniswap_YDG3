{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { Trans } from \"@lingui/react\";\nimport { CurrencyAmount, Percent } from '@uniswap/sdk-core';\nimport { Position } from '@uniswap/v3-sdk';\nimport { useToken } from 'hooks/Tokens';\nimport { usePool } from 'hooks/usePools';\nimport { useV3PositionFees } from 'hooks/useV3PositionFees';\nimport { useActiveWeb3React } from 'hooks/web3';\nimport { useCallback, useMemo } from 'react';\nimport { useAppDispatch, useAppSelector } from 'state/hooks';\nimport { unwrappedToken } from 'utils/unwrappedToken';\nimport { selectPercent } from './actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function useBurnV3State() {\n  _s();\n\n  return useAppSelector(state => state.burnV3);\n}\n\n_s(useBurnV3State, \"bRaY7Fsh/GrWHjZMhGvF04Z7BZI=\", false, function () {\n  return [useAppSelector];\n});\n\nexport function useDerivedV3BurnInfo(position, asWETH = false) {\n  _s2();\n\n  const {\n    account\n  } = useActiveWeb3React();\n  const {\n    percent\n  } = useBurnV3State();\n  const token0 = useToken(position === null || position === void 0 ? void 0 : position.token0);\n  const token1 = useToken(position === null || position === void 0 ? void 0 : position.token1);\n  const [, pool] = usePool(token0 !== null && token0 !== void 0 ? token0 : undefined, token1 !== null && token1 !== void 0 ? token1 : undefined, position === null || position === void 0 ? void 0 : position.fee);\n  const positionSDK = useMemo(() => pool && (position === null || position === void 0 ? void 0 : position.liquidity) && typeof (position === null || position === void 0 ? void 0 : position.tickLower) === 'number' && typeof (position === null || position === void 0 ? void 0 : position.tickUpper) === 'number' ? new Position({\n    pool,\n    liquidity: position.liquidity.toString(),\n    tickLower: position.tickLower,\n    tickUpper: position.tickUpper\n  }) : undefined, [pool, position]);\n  const liquidityPercentage = new Percent(percent, 100);\n  const discountedAmount0 = positionSDK ? liquidityPercentage.multiply(positionSDK.amount0.quotient).quotient : undefined;\n  const discountedAmount1 = positionSDK ? liquidityPercentage.multiply(positionSDK.amount1.quotient).quotient : undefined;\n  const liquidityValue0 = token0 && discountedAmount0 ? CurrencyAmount.fromRawAmount(asWETH ? token0 : unwrappedToken(token0), discountedAmount0) : undefined;\n  const liquidityValue1 = token1 && discountedAmount1 ? CurrencyAmount.fromRawAmount(asWETH ? token1 : unwrappedToken(token1), discountedAmount1) : undefined;\n  const [feeValue0, feeValue1] = useV3PositionFees(pool !== null && pool !== void 0 ? pool : undefined, position === null || position === void 0 ? void 0 : position.tokenId, asWETH);\n  const outOfRange = pool && position ? pool.tickCurrent < position.tickLower || pool.tickCurrent > position.tickUpper : false;\n  let error;\n\n  if (!account) {\n    error = /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"Connect Wallet\"\n    }, void 0, false, void 0, this);\n  }\n\n  if (percent === 0) {\n    var _error;\n\n    error = (_error = error) !== null && _error !== void 0 ? _error : /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"Enter a percent\"\n    }, void 0, false, void 0, this);\n  }\n\n  return {\n    position: positionSDK,\n    liquidityPercentage,\n    liquidityValue0,\n    liquidityValue1,\n    feeValue0,\n    feeValue1,\n    outOfRange,\n    error\n  };\n}\n\n_s2(useDerivedV3BurnInfo, \"L3DKnwoXwdhzg/zFYnJ4BQRrGd4=\", false, function () {\n  return [useActiveWeb3React, useBurnV3State, useToken, useToken, usePool, useV3PositionFees];\n});\n\nexport function useBurnV3ActionHandlers() {\n  _s3();\n\n  const dispatch = useAppDispatch();\n  const onPercentSelect = useCallback(percent => {\n    dispatch(selectPercent({\n      percent\n    }));\n  }, [dispatch]);\n  return {\n    onPercentSelect\n  };\n}\n\n_s3(useBurnV3ActionHandlers, \"otvy2up4GPQ0k43e4aoCp1xRZdU=\", false, function () {\n  return [useAppDispatch];\n});","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/state/burn/v3/hooks.tsx"],"names":["CurrencyAmount","Percent","Position","useToken","usePool","useV3PositionFees","useActiveWeb3React","useCallback","useMemo","useAppDispatch","useAppSelector","unwrappedToken","selectPercent","useBurnV3State","state","burnV3","useDerivedV3BurnInfo","position","asWETH","account","percent","token0","token1","pool","undefined","fee","positionSDK","liquidity","tickLower","tickUpper","toString","liquidityPercentage","discountedAmount0","multiply","amount0","quotient","discountedAmount1","amount1","liquidityValue0","fromRawAmount","liquidityValue1","feeValue0","feeValue1","tokenId","outOfRange","tickCurrent","error","useBurnV3ActionHandlers","dispatch","onPercentSelect"],"mappings":"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","sourcesContent":["import { Trans } from '@lingui/macro'\nimport { Currency, CurrencyAmount, Percent } from '@uniswap/sdk-core'\nimport { Position } from '@uniswap/v3-sdk'\nimport { useToken } from 'hooks/Tokens'\nimport { usePool } from 'hooks/usePools'\nimport { useV3PositionFees } from 'hooks/useV3PositionFees'\nimport { useActiveWeb3React } from 'hooks/web3'\nimport { ReactNode, useCallback, useMemo } from 'react'\nimport { useAppDispatch, useAppSelector } from 'state/hooks'\nimport { PositionDetails } from 'types/position'\nimport { unwrappedToken } from 'utils/unwrappedToken'\n\nimport { AppState } from '../../index'\nimport { selectPercent } from './actions'\n\nexport function useBurnV3State(): AppState['burnV3'] {\n  return useAppSelector((state) => state.burnV3)\n}\n\nexport function useDerivedV3BurnInfo(\n  position?: PositionDetails,\n  asWETH = false\n): {\n  position?: Position\n  liquidityPercentage?: Percent\n  liquidityValue0?: CurrencyAmount<Currency>\n  liquidityValue1?: CurrencyAmount<Currency>\n  feeValue0?: CurrencyAmount<Currency>\n  feeValue1?: CurrencyAmount<Currency>\n  outOfRange: boolean\n  error?: ReactNode\n} {\n  const { account } = useActiveWeb3React()\n  const { percent } = useBurnV3State()\n\n  const token0 = useToken(position?.token0)\n  const token1 = useToken(position?.token1)\n\n  const [, pool] = usePool(token0 ?? undefined, token1 ?? undefined, position?.fee)\n\n  const positionSDK = useMemo(\n    () =>\n      pool && position?.liquidity && typeof position?.tickLower === 'number' && typeof position?.tickUpper === 'number'\n        ? new Position({\n            pool,\n            liquidity: position.liquidity.toString(),\n            tickLower: position.tickLower,\n            tickUpper: position.tickUpper,\n          })\n        : undefined,\n    [pool, position]\n  )\n\n  const liquidityPercentage = new Percent(percent, 100)\n\n  const discountedAmount0 = positionSDK\n    ? liquidityPercentage.multiply(positionSDK.amount0.quotient).quotient\n    : undefined\n  const discountedAmount1 = positionSDK\n    ? liquidityPercentage.multiply(positionSDK.amount1.quotient).quotient\n    : undefined\n\n  const liquidityValue0 =\n    token0 && discountedAmount0\n      ? CurrencyAmount.fromRawAmount(asWETH ? token0 : unwrappedToken(token0), discountedAmount0)\n      : undefined\n  const liquidityValue1 =\n    token1 && discountedAmount1\n      ? CurrencyAmount.fromRawAmount(asWETH ? token1 : unwrappedToken(token1), discountedAmount1)\n      : undefined\n\n  const [feeValue0, feeValue1] = useV3PositionFees(pool ?? undefined, position?.tokenId, asWETH)\n\n  const outOfRange =\n    pool && position ? pool.tickCurrent < position.tickLower || pool.tickCurrent > position.tickUpper : false\n\n  let error: ReactNode | undefined\n  if (!account) {\n    error = <Trans>Connect Wallet</Trans>\n  }\n  if (percent === 0) {\n    error = error ?? <Trans>Enter a percent</Trans>\n  }\n  return {\n    position: positionSDK,\n    liquidityPercentage,\n    liquidityValue0,\n    liquidityValue1,\n    feeValue0,\n    feeValue1,\n    outOfRange,\n    error,\n  }\n}\n\nexport function useBurnV3ActionHandlers(): {\n  onPercentSelect: (percent: number) => void\n} {\n  const dispatch = useAppDispatch()\n\n  const onPercentSelect = useCallback(\n    (percent: number) => {\n      dispatch(selectPercent({ percent }))\n    },\n    [dispatch]\n  )\n\n  return {\n    onPercentSelect,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}