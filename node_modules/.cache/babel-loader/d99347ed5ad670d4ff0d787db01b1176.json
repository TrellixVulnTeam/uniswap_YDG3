{"ast":null,"code":"import _styled from\"styled-components\";import{Trans}from\"@lingui/react\";import{ButtonText}from'components/Button';import PositionListItem from'components/PositionListItem';import React from'react';import{MEDIA_WIDTHS}from'theme';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var DesktopHeader=_styled.div.withConfig({componentId:\"sc-15gvr73-0\"})([\"display:none;font-size:14px;font-weight:500;padding:8px;@media screen and (min-width:\",\"px){align-items:center;display:flex;justify-content:space-between;& > div:last-child{text-align:right;margin-right:12px;}}\"],MEDIA_WIDTHS.upToSmall);var MobileHeader=_styled.div.withConfig({componentId:\"sc-15gvr73-1\"})([\"font-weight:medium;font-size:16px;font-weight:500;padding:8px;@media screen and (min-width:\",\"px){display:none;}\"],MEDIA_WIDTHS.upToSmall);export default function PositionList(_ref){var positions=_ref.positions,setUserHideClosedPositions=_ref.setUserHideClosedPositions,userHideClosedPositions=_ref.userHideClosedPositions;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(DesktopHeader,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Trans,{id:\"Your positions\"}),positions&&' ('+positions.length+')']}),/*#__PURE__*/_jsx(ButtonText,{style:{opacity:0.6},onClick:function onClick(){return setUserHideClosedPositions(!userHideClosedPositions);},children:/*#__PURE__*/_jsx(Trans,{id:\"Hide closed positions\"})})]}),/*#__PURE__*/_jsx(MobileHeader,{children:/*#__PURE__*/_jsx(Trans,{id:\"Your positions\"})}),positions.map(function(p){return/*#__PURE__*/_jsx(PositionListItem,{positionDetails:p},p.tokenId.toString());})]});}","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/components/PositionList/index.tsx"],"names":["ButtonText","PositionListItem","React","MEDIA_WIDTHS","DesktopHeader","styled","div","upToSmall","MobileHeader","PositionList","positions","setUserHideClosedPositions","userHideClosedPositions","length","opacity","map","p","tokenId","toString"],"mappings":"wEACA,OAASA,UAAT,KAA2B,mBAA3B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,6BAA7B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAASC,YAAT,KAA6B,OAA7B,C,6IAGA,GAAMC,CAAAA,aAAa,CAAGC,OAAM,CAACC,GAAV,iQAMeH,YAAY,CAACI,SAN5B,CAAnB,CAiBA,GAAMC,CAAAA,YAAY,CAAGH,OAAM,CAACC,GAAV,+JAKgBH,YAAY,CAACI,SAL7B,CAAlB,CAgBA,cAAe,SAASE,CAAAA,YAAT,MAIO,IAHpBC,CAAAA,SAGoB,MAHpBA,SAGoB,CAFpBC,0BAEoB,MAFpBA,0BAEoB,CADpBC,uBACoB,MADpBA,uBACoB,CACpB,mBACE,wCACE,MAAC,aAAD,yBACE,oCACE,iCADF,CAEGF,SAAS,EAAI,KAAOA,SAAS,CAACG,MAAjB,CAA0B,GAF1C,GADF,cAKE,KAAC,UAAD,EAAY,KAAK,CAAE,CAAEC,OAAO,CAAE,GAAX,CAAnB,CAAqC,OAAO,CAAE,yBAAMH,CAAAA,0BAA0B,CAAC,CAACC,uBAAF,CAAhC,EAA9C,uBACE,wCADF,EALF,GADF,cAUE,KAAC,YAAD,wBACE,iCADF,EAVF,CAaGF,SAAS,CAACK,GAAV,CAAc,SAACC,CAAD,CAAO,CACpB,mBAAO,KAAC,gBAAD,EAA6C,eAAe,CAAEA,CAA9D,EAAuBA,CAAC,CAACC,OAAF,CAAUC,QAAV,EAAvB,CAAP,CACD,CAFA,CAbH,GADF,CAmBD","sourcesContent":["import { Trans } from '@lingui/macro'\nimport { ButtonText } from 'components/Button'\nimport PositionListItem from 'components/PositionListItem'\nimport React from 'react'\nimport styled from 'styled-components/macro'\nimport { MEDIA_WIDTHS } from 'theme'\nimport { PositionDetails } from 'types/position'\n\nconst DesktopHeader = styled.div`\n  display: none;\n  font-size: 14px;\n  font-weight: 500;\n  padding: 8px;\n\n  @media screen and (min-width: ${MEDIA_WIDTHS.upToSmall}px) {\n    align-items: center;\n    display: flex;\n    justify-content: space-between;\n    & > div:last-child {\n      text-align: right;\n      margin-right: 12px;\n    }\n  }\n`\n\nconst MobileHeader = styled.div`\n  font-weight: medium;\n  font-size: 16px;\n  font-weight: 500;\n  padding: 8px;\n  @media screen and (min-width: ${MEDIA_WIDTHS.upToSmall}px) {\n    display: none;\n  }\n`\n\ntype PositionListProps = React.PropsWithChildren<{\n  positions: PositionDetails[]\n  setUserHideClosedPositions: any\n  userHideClosedPositions: boolean\n}>\n\nexport default function PositionList({\n  positions,\n  setUserHideClosedPositions,\n  userHideClosedPositions,\n}: PositionListProps) {\n  return (\n    <>\n      <DesktopHeader>\n        <div>\n          <Trans>Your positions</Trans>\n          {positions && ' (' + positions.length + ')'}\n        </div>\n        <ButtonText style={{ opacity: 0.6 }} onClick={() => setUserHideClosedPositions(!userHideClosedPositions)}>\n          <Trans>Hide closed positions</Trans>\n        </ButtonText>\n      </DesktopHeader>\n      <MobileHeader>\n        <Trans>Your positions</Trans>\n      </MobileHeader>\n      {positions.map((p) => {\n        return <PositionListItem key={p.tokenId.toString()} positionDetails={p} />\n      })}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}