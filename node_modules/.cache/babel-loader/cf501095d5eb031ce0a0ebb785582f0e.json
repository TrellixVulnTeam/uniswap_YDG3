{"ast":null,"code":"import _regeneratorRuntime from \"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _BASES_TO_CHECK_TRADE;\n\nimport { Pair } from '@uniswap/v2-sdk';\nimport _ from 'lodash';\nimport { ChainId, WRAPPED_NATIVE_CURRENCY } from '../../util/chains';\nimport { log } from '../../util/log';\nimport { DAI_MAINNET, DAI_RINKEBY_1, DAI_RINKEBY_2, USDC_MAINNET, USDT_MAINNET, WBTC_MAINNET } from '../token-provider';\nvar BASES_TO_CHECK_TRADES_AGAINST = (_BASES_TO_CHECK_TRADE = {}, _defineProperty(_BASES_TO_CHECK_TRADE, ChainId.MAINNET, [WRAPPED_NATIVE_CURRENCY[ChainId.MAINNET], DAI_MAINNET, USDC_MAINNET, USDT_MAINNET, WBTC_MAINNET]), _defineProperty(_BASES_TO_CHECK_TRADE, ChainId.ROPSTEN, [WRAPPED_NATIVE_CURRENCY[ChainId.ROPSTEN]]), _defineProperty(_BASES_TO_CHECK_TRADE, ChainId.RINKEBY, [WRAPPED_NATIVE_CURRENCY[ChainId.RINKEBY], DAI_RINKEBY_1, DAI_RINKEBY_2]), _defineProperty(_BASES_TO_CHECK_TRADE, ChainId.GÖRLI, [WRAPPED_NATIVE_CURRENCY[ChainId.GÖRLI]]), _defineProperty(_BASES_TO_CHECK_TRADE, ChainId.KOVAN, [WRAPPED_NATIVE_CURRENCY[ChainId.KOVAN]]), _defineProperty(_BASES_TO_CHECK_TRADE, ChainId.OPTIMISM, []), _defineProperty(_BASES_TO_CHECK_TRADE, ChainId.ARBITRUM_ONE, []), _defineProperty(_BASES_TO_CHECK_TRADE, ChainId.ARBITRUM_RINKEBY, []), _defineProperty(_BASES_TO_CHECK_TRADE, ChainId.OPTIMISTIC_KOVAN, []), _defineProperty(_BASES_TO_CHECK_TRADE, ChainId.POLYGON, []), _defineProperty(_BASES_TO_CHECK_TRADE, ChainId.POLYGON_MUMBAI, []), _BASES_TO_CHECK_TRADE);\n/**\n * Provider that does not get data from an external source and instead returns\n * a hardcoded list of Subgraph pools.\n *\n * Since the pools are hardcoded, the liquidity/price values are dummys and should not\n * be depended on.\n *\n * Useful for instances where other data sources are unavailable. E.g. subgraph not available.\n *\n * @export\n * @class StaticV2SubgraphProvider\n */\n\nexport var StaticV2SubgraphProvider = /*#__PURE__*/function () {\n  function StaticV2SubgraphProvider(chainId) {\n    _classCallCheck(this, StaticV2SubgraphProvider);\n\n    this.chainId = chainId;\n  }\n\n  _createClass(StaticV2SubgraphProvider, [{\n    key: \"getPools\",\n    value: function () {\n      var _getPools = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(tokenIn, tokenOut) {\n        var bases, basePairs, pairs, poolAddressSet, subgraphPools;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                log.info('In static subgraph provider for V2');\n                bases = BASES_TO_CHECK_TRADES_AGAINST[this.chainId];\n                basePairs = _.flatMap(bases, function (base) {\n                  return bases.map(function (otherBase) {\n                    return [base, otherBase];\n                  });\n                });\n\n                if (tokenIn && tokenOut) {\n                  basePairs.push.apply(basePairs, [[tokenIn, tokenOut]].concat(_toConsumableArray(bases.map(function (base) {\n                    return [tokenIn, base];\n                  })), _toConsumableArray(bases.map(function (base) {\n                    return [tokenOut, base];\n                  }))));\n                }\n\n                pairs = _(basePairs).filter(function (tokens) {\n                  return Boolean(tokens[0] && tokens[1]);\n                }).filter(function (_ref) {\n                  var _ref2 = _slicedToArray(_ref, 2),\n                      tokenA = _ref2[0],\n                      tokenB = _ref2[1];\n\n                  return tokenA.address !== tokenB.address && !tokenA.equals(tokenB);\n                }).value();\n                poolAddressSet = new Set();\n                subgraphPools = _(pairs).map(function (_ref3) {\n                  var _ref4 = _slicedToArray(_ref3, 2),\n                      tokenA = _ref4[0],\n                      tokenB = _ref4[1];\n\n                  var poolAddress = Pair.getAddress(tokenA, tokenB);\n\n                  if (poolAddressSet.has(poolAddress)) {\n                    return undefined;\n                  }\n\n                  poolAddressSet.add(poolAddress);\n\n                  var _ref5 = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA],\n                      _ref6 = _slicedToArray(_ref5, 2),\n                      token0 = _ref6[0],\n                      token1 = _ref6[1];\n\n                  return {\n                    id: poolAddress,\n                    liquidity: '100',\n                    token0: {\n                      id: token0.address\n                    },\n                    token1: {\n                      id: token1.address\n                    },\n                    supply: 100,\n                    reserve: 100\n                  };\n                }).compact().value();\n                return _context.abrupt(\"return\", subgraphPools);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getPools(_x, _x2) {\n        return _getPools.apply(this, arguments);\n      }\n\n      return getPools;\n    }()\n  }]);\n\n  return StaticV2SubgraphProvider;\n}();","map":{"version":3,"sources":["../../../../../src/providers/v2/static-subgraph-provider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { Pair } from '@uniswap/v2-sdk';\nimport _ from 'lodash';\nimport { ChainId, WRAPPED_NATIVE_CURRENCY } from '../../util/chains';\nimport { log } from '../../util/log';\nimport { DAI_MAINNET, DAI_RINKEBY_1, DAI_RINKEBY_2, USDC_MAINNET, USDT_MAINNET, WBTC_MAINNET, } from '../token-provider';\nconst BASES_TO_CHECK_TRADES_AGAINST = {\n    [ChainId.MAINNET]: [\n        WRAPPED_NATIVE_CURRENCY[ChainId.MAINNET],\n        DAI_MAINNET,\n        USDC_MAINNET,\n        USDT_MAINNET,\n        WBTC_MAINNET,\n    ],\n    [ChainId.ROPSTEN]: [WRAPPED_NATIVE_CURRENCY[ChainId.ROPSTEN]],\n    [ChainId.RINKEBY]: [\n        WRAPPED_NATIVE_CURRENCY[ChainId.RINKEBY],\n        DAI_RINKEBY_1,\n        DAI_RINKEBY_2,\n    ],\n    [ChainId.GÖRLI]: [WRAPPED_NATIVE_CURRENCY[ChainId.GÖRLI]],\n    [ChainId.KOVAN]: [WRAPPED_NATIVE_CURRENCY[ChainId.KOVAN]],\n    //v2 not deployed on optimism/arbitrum or their testnets\n    [ChainId.OPTIMISM]: [],\n    [ChainId.ARBITRUM_ONE]: [],\n    [ChainId.ARBITRUM_RINKEBY]: [],\n    [ChainId.OPTIMISTIC_KOVAN]: [],\n    [ChainId.POLYGON]: [],\n    [ChainId.POLYGON_MUMBAI]: [],\n};\n/**\n * Provider that does not get data from an external source and instead returns\n * a hardcoded list of Subgraph pools.\n *\n * Since the pools are hardcoded, the liquidity/price values are dummys and should not\n * be depended on.\n *\n * Useful for instances where other data sources are unavailable. E.g. subgraph not available.\n *\n * @export\n * @class StaticV2SubgraphProvider\n */\nexport class StaticV2SubgraphProvider {\n    constructor(chainId) {\n        this.chainId = chainId;\n    }\n    async getPools(tokenIn, tokenOut) {\n        log.info('In static subgraph provider for V2');\n        const bases = BASES_TO_CHECK_TRADES_AGAINST[this.chainId];\n        let basePairs = _.flatMap(bases, (base) => bases.map((otherBase) => [base, otherBase]));\n        if (tokenIn && tokenOut) {\n            basePairs.push([tokenIn, tokenOut], ...bases.map((base) => [tokenIn, base]), ...bases.map((base) => [tokenOut, base]));\n        }\n        const pairs = _(basePairs)\n            .filter((tokens) => Boolean(tokens[0] && tokens[1]))\n            .filter(([tokenA, tokenB]) => tokenA.address !== tokenB.address && !tokenA.equals(tokenB))\n            .value();\n        const poolAddressSet = new Set();\n        const subgraphPools = _(pairs)\n            .map(([tokenA, tokenB]) => {\n            const poolAddress = Pair.getAddress(tokenA, tokenB);\n            if (poolAddressSet.has(poolAddress)) {\n                return undefined;\n            }\n            poolAddressSet.add(poolAddress);\n            const [token0, token1] = tokenA.sortsBefore(tokenB)\n                ? [tokenA, tokenB]\n                : [tokenB, tokenA];\n            return {\n                id: poolAddress,\n                liquidity: '100',\n                token0: {\n                    id: token0.address,\n                },\n                token1: {\n                    id: token1.address,\n                },\n                supply: 100,\n                reserve: 100,\n            };\n        })\n            .compact()\n            .value();\n        return subgraphPools;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGljLXN1YmdyYXBoLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy92Mi9zdGF0aWMtc3ViZ3JhcGgtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3ZDLE9BQU8sQ0FBQyxNQUFNLFFBQVEsQ0FBQztBQUN2QixPQUFPLEVBQUUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDckUsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JDLE9BQU8sRUFDTCxXQUFXLEVBQ1gsYUFBYSxFQUNiLGFBQWEsRUFDYixZQUFZLEVBQ1osWUFBWSxFQUNaLFlBQVksR0FDYixNQUFNLG1CQUFtQixDQUFDO0FBTzNCLE1BQU0sNkJBQTZCLEdBQW1CO0lBQ3BELENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFO1FBQ2pCLHVCQUF1QixDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUU7UUFDekMsV0FBVztRQUNYLFlBQVk7UUFDWixZQUFZO1FBQ1osWUFBWTtLQUNiO0lBQ0QsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFFLENBQUM7SUFDOUQsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUU7UUFDakIsdUJBQXVCLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBRTtRQUN6QyxhQUFhO1FBQ2IsYUFBYTtLQUNkO0lBQ0QsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFFLENBQUM7SUFDMUQsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFFLENB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"]},"metadata":{},"sourceType":"module"}