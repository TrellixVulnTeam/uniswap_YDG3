{"ast":null,"code":"import _styled from \"styled-components\";\n\nvar _jsxFileName = \"/Users/safahi/Downloads/interface-4.30.1/src/components/earn/UnstakingModal.tsx\",\n    _s = $RefreshSig$();\n\nimport { Trans } from \"@lingui/react\";\nimport { useState } from 'react';\nimport { useStakingContract } from '../../hooks/useContract';\nimport { useActiveWeb3React } from '../../hooks/web3';\nimport { TransactionType } from '../../state/transactions/actions';\nimport { useTransactionAdder } from '../../state/transactions/hooks';\nimport { CloseIcon, ThemedText } from '../../theme';\nimport { ButtonError } from '../Button';\nimport { AutoColumn } from '../Column';\nimport FormattedCurrencyAmount from '../FormattedCurrencyAmount';\nimport Modal from '../Modal';\nimport { LoadingView, SubmittedView } from '../ModalViews';\nimport { RowBetween } from '../Row';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContentWrapper = _styled(AutoColumn).withConfig({\n  displayName: \"UnstakingModal__ContentWrapper\",\n  componentId: \"sc-14wre31-0\"\n})([\"width:100%;padding:1rem;\"]);\n\nexport default function UnstakingModal({\n  isOpen,\n  onDismiss,\n  stakingInfo\n}) {\n  _s();\n\n  var _error2, _stakingInfo$stakedAm, _stakingInfo$earnedAm;\n\n  const {\n    account\n  } = useActiveWeb3React(); // monitor call to help UI loading state\n\n  const addTransaction = useTransactionAdder();\n  const [hash, setHash] = useState();\n  const [attempting, setAttempting] = useState(false);\n\n  function wrappedOndismiss() {\n    setHash(undefined);\n    setAttempting(false);\n    onDismiss();\n  }\n\n  const stakingContract = useStakingContract(stakingInfo.stakingRewardAddress);\n\n  async function onWithdraw() {\n    if (stakingContract && (stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.stakedAmount)) {\n      setAttempting(true);\n      await stakingContract.exit({\n        gasLimit: 300000\n      }).then(response => {\n        addTransaction(response, {\n          type: TransactionType.WITHDRAW_LIQUIDITY_STAKING,\n          token0Address: stakingInfo.tokens[0].address,\n          token1Address: stakingInfo.tokens[1].address\n        });\n        setHash(response.hash);\n      }).catch(error => {\n        setAttempting(false);\n        console.log(error);\n      });\n    }\n  }\n\n  let error;\n\n  if (!account) {\n    error = /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"Connect a wallet\"\n    }, void 0, false, void 0, this);\n  }\n\n  if (!(stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.stakedAmount)) {\n    var _error;\n\n    error = (_error = error) !== null && _error !== void 0 ? _error : /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"Enter an amount\"\n    }, void 0, false, void 0, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onDismiss: wrappedOndismiss,\n    maxHeight: 90,\n    children: [!attempting && !hash && /*#__PURE__*/_jsxDEV(ContentWrapper, {\n      gap: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n        children: [/*#__PURE__*/_jsxDEV(ThemedText.MediumHeader, {\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Withdraw\"\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CloseIcon, {\n          onClick: wrappedOndismiss\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), (stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.stakedAmount) && /*#__PURE__*/_jsxDEV(AutoColumn, {\n        justify: \"center\",\n        gap: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(ThemedText.Body, {\n          fontWeight: 600,\n          fontSize: 36,\n          children: /*#__PURE__*/_jsxDEV(FormattedCurrencyAmount, {\n            currencyAmount: stakingInfo.stakedAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ThemedText.Body, {\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Deposited liquidity:\"\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), (stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.earnedAmount) && /*#__PURE__*/_jsxDEV(AutoColumn, {\n        justify: \"center\",\n        gap: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(ThemedText.Body, {\n          fontWeight: 600,\n          fontSize: 36,\n          children: /*#__PURE__*/_jsxDEV(FormattedCurrencyAmount, {\n            currencyAmount: stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.earnedAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ThemedText.Body, {\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Unclaimed UNI\"\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ThemedText.SubHeader, {\n        style: {\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Trans, {\n          id: \"When you withdraw, your UNI is claimed and your liquidity is removed from the mining pool.\"\n        }, void 0, false, void 0, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ButtonError, {\n        disabled: !!error,\n        error: !!error && !!(stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.stakedAmount),\n        onClick: onWithdraw,\n        children: (_error2 = error) !== null && _error2 !== void 0 ? _error2 : /*#__PURE__*/_jsxDEV(Trans, {\n          id: \"Withdraw & Claim\"\n        }, void 0, false, void 0, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), attempting && !hash && /*#__PURE__*/_jsxDEV(LoadingView, {\n      onDismiss: wrappedOndismiss,\n      children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n        gap: \"12px\",\n        justify: 'center',\n        children: [/*#__PURE__*/_jsxDEV(ThemedText.Body, {\n          fontSize: 20,\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Withdrawing {0} UNI-V2\",\n            values: {\n              0: stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$stakedAm = stakingInfo.stakedAmount) === null || _stakingInfo$stakedAm === void 0 ? void 0 : _stakingInfo$stakedAm.toSignificant(4)\n            }\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ThemedText.Body, {\n          fontSize: 20,\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Claiming {0} UNI\",\n            values: {\n              0: stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$earnedAm = stakingInfo.earnedAmount) === null || _stakingInfo$earnedAm === void 0 ? void 0 : _stakingInfo$earnedAm.toSignificant(4)\n            }\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this), hash && /*#__PURE__*/_jsxDEV(SubmittedView, {\n      onDismiss: wrappedOndismiss,\n      hash: hash,\n      children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n        gap: \"12px\",\n        justify: 'center',\n        children: [/*#__PURE__*/_jsxDEV(ThemedText.LargeHeader, {\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Transaction Submitted\"\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ThemedText.Body, {\n          fontSize: 20,\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Withdrew UNI-V2!\"\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ThemedText.Body, {\n          fontSize: 20,\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Claimed UNI!\"\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UnstakingModal, \"t8q4xNDKa5pYYfxbyZDlUSFjd78=\", false, function () {\n  return [useActiveWeb3React, useTransactionAdder, useStakingContract];\n});\n\n_c = UnstakingModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"UnstakingModal\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/components/earn/UnstakingModal.tsx"],"names":["useState","useStakingContract","useActiveWeb3React","TransactionType","useTransactionAdder","CloseIcon","ThemedText","ButtonError","AutoColumn","FormattedCurrencyAmount","Modal","LoadingView","SubmittedView","RowBetween","ContentWrapper","styled","UnstakingModal","isOpen","onDismiss","stakingInfo","account","addTransaction","hash","setHash","attempting","setAttempting","wrappedOndismiss","undefined","stakingContract","stakingRewardAddress","onWithdraw","stakedAmount","exit","gasLimit","then","response","type","WITHDRAW_LIQUIDITY_STAKING","token0Address","tokens","address","token1Address","catch","error","console","log","earnedAmount","textAlign","toSignificant"],"mappings":"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","sourcesContent":["import { TransactionResponse } from '@ethersproject/providers'\nimport { Trans } from '@lingui/macro'\nimport { ReactNode, useState } from 'react'\nimport styled from 'styled-components/macro'\n\nimport { useStakingContract } from '../../hooks/useContract'\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport { StakingInfo } from '../../state/stake/hooks'\nimport { TransactionType } from '../../state/transactions/actions'\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { CloseIcon, ThemedText } from '../../theme'\nimport { ButtonError } from '../Button'\nimport { AutoColumn } from '../Column'\nimport FormattedCurrencyAmount from '../FormattedCurrencyAmount'\nimport Modal from '../Modal'\nimport { LoadingView, SubmittedView } from '../ModalViews'\nimport { RowBetween } from '../Row'\n\nconst ContentWrapper = styled(AutoColumn)`\n  width: 100%;\n  padding: 1rem;\n`\n\ninterface StakingModalProps {\n  isOpen: boolean\n  onDismiss: () => void\n  stakingInfo: StakingInfo\n}\n\nexport default function UnstakingModal({ isOpen, onDismiss, stakingInfo }: StakingModalProps) {\n  const { account } = useActiveWeb3React()\n\n  // monitor call to help UI loading state\n  const addTransaction = useTransactionAdder()\n  const [hash, setHash] = useState<string | undefined>()\n  const [attempting, setAttempting] = useState(false)\n\n  function wrappedOndismiss() {\n    setHash(undefined)\n    setAttempting(false)\n    onDismiss()\n  }\n\n  const stakingContract = useStakingContract(stakingInfo.stakingRewardAddress)\n\n  async function onWithdraw() {\n    if (stakingContract && stakingInfo?.stakedAmount) {\n      setAttempting(true)\n      await stakingContract\n        .exit({ gasLimit: 300000 })\n        .then((response: TransactionResponse) => {\n          addTransaction(response, {\n            type: TransactionType.WITHDRAW_LIQUIDITY_STAKING,\n            token0Address: stakingInfo.tokens[0].address,\n            token1Address: stakingInfo.tokens[1].address,\n          })\n          setHash(response.hash)\n        })\n        .catch((error: any) => {\n          setAttempting(false)\n          console.log(error)\n        })\n    }\n  }\n\n  let error: ReactNode | undefined\n  if (!account) {\n    error = <Trans>Connect a wallet</Trans>\n  }\n  if (!stakingInfo?.stakedAmount) {\n    error = error ?? <Trans>Enter an amount</Trans>\n  }\n\n  return (\n    <Modal isOpen={isOpen} onDismiss={wrappedOndismiss} maxHeight={90}>\n      {!attempting && !hash && (\n        <ContentWrapper gap=\"lg\">\n          <RowBetween>\n            <ThemedText.MediumHeader>\n              <Trans>Withdraw</Trans>\n            </ThemedText.MediumHeader>\n            <CloseIcon onClick={wrappedOndismiss} />\n          </RowBetween>\n          {stakingInfo?.stakedAmount && (\n            <AutoColumn justify=\"center\" gap=\"md\">\n              <ThemedText.Body fontWeight={600} fontSize={36}>\n                {<FormattedCurrencyAmount currencyAmount={stakingInfo.stakedAmount} />}\n              </ThemedText.Body>\n              <ThemedText.Body>\n                <Trans>Deposited liquidity:</Trans>\n              </ThemedText.Body>\n            </AutoColumn>\n          )}\n          {stakingInfo?.earnedAmount && (\n            <AutoColumn justify=\"center\" gap=\"md\">\n              <ThemedText.Body fontWeight={600} fontSize={36}>\n                {<FormattedCurrencyAmount currencyAmount={stakingInfo?.earnedAmount} />}\n              </ThemedText.Body>\n              <ThemedText.Body>\n                <Trans>Unclaimed UNI</Trans>\n              </ThemedText.Body>\n            </AutoColumn>\n          )}\n          <ThemedText.SubHeader style={{ textAlign: 'center' }}>\n            <Trans>When you withdraw, your UNI is claimed and your liquidity is removed from the mining pool.</Trans>\n          </ThemedText.SubHeader>\n          <ButtonError disabled={!!error} error={!!error && !!stakingInfo?.stakedAmount} onClick={onWithdraw}>\n            {error ?? <Trans>Withdraw & Claim</Trans>}\n          </ButtonError>\n        </ContentWrapper>\n      )}\n      {attempting && !hash && (\n        <LoadingView onDismiss={wrappedOndismiss}>\n          <AutoColumn gap=\"12px\" justify={'center'}>\n            <ThemedText.Body fontSize={20}>\n              <Trans>Withdrawing {stakingInfo?.stakedAmount?.toSignificant(4)} UNI-V2</Trans>\n            </ThemedText.Body>\n            <ThemedText.Body fontSize={20}>\n              <Trans>Claiming {stakingInfo?.earnedAmount?.toSignificant(4)} UNI</Trans>\n            </ThemedText.Body>\n          </AutoColumn>\n        </LoadingView>\n      )}\n      {hash && (\n        <SubmittedView onDismiss={wrappedOndismiss} hash={hash}>\n          <AutoColumn gap=\"12px\" justify={'center'}>\n            <ThemedText.LargeHeader>\n              <Trans>Transaction Submitted</Trans>\n            </ThemedText.LargeHeader>\n            <ThemedText.Body fontSize={20}>\n              <Trans>Withdrew UNI-V2!</Trans>\n            </ThemedText.Body>\n            <ThemedText.Body fontSize={20}>\n              <Trans>Claimed UNI!</Trans>\n            </ThemedText.Body>\n          </AutoColumn>\n        </SubmittedView>\n      )}\n    </Modal>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}