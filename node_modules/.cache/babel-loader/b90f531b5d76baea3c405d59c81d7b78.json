{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Downloads/interface-4.30.1/src/components/Logo/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Slash } from 'react-feather';\nimport useTheme from '../../hooks/useTheme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BAD_SRCS = {};\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\n */\nexport default function Logo({\n  srcs,\n  alt,\n  style,\n  ...rest\n}) {\n  _s();\n\n  const [, refresh] = useState(0);\n  const theme = useTheme();\n  const src = srcs.find(src => !BAD_SRCS[src]);\n\n  if (src) {\n    return /*#__PURE__*/_jsxDEV(\"img\", { ...rest,\n      alt: alt,\n      src: src,\n      style: style,\n      onError: () => {\n        if (src) BAD_SRCS[src] = true;\n        refresh(i => i + 1);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Slash, { ...rest,\n    style: { ...style,\n      color: theme.bg4\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Logo, \"6bSVNBhxAhVKG4pajo5z1UMSRbw=\", false, function () {\n  return [useTheme];\n});\n\n_c = Logo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Logo\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/components/Logo/index.tsx"],"names":["useState","Slash","useTheme","BAD_SRCS","Logo","srcs","alt","style","rest","refresh","theme","src","find","i","color","bg4"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,KAAT,QAAsB,eAAtB;AAGA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,MAAMC,QAA0C,GAAG,EAAnD;;AAMA;AACA;AACA;AACA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,GAAR;AAAaC,EAAAA,KAAb;AAAoB,KAAGC;AAAvB,CAAd,EAAwD;AAAA;;AACrE,QAAM,GAAGC,OAAH,IAAcT,QAAQ,CAAS,CAAT,CAA5B;AAEA,QAAMU,KAAK,GAAGR,QAAQ,EAAtB;AAEA,QAAMS,GAAuB,GAAGN,IAAI,CAACO,IAAL,CAAWD,GAAD,IAAS,CAACR,QAAQ,CAACQ,GAAD,CAA5B,CAAhC;;AAEA,MAAIA,GAAJ,EAAS;AACP,wBACE,oBACMH,IADN;AAEE,MAAA,GAAG,EAAEF,GAFP;AAGE,MAAA,GAAG,EAAEK,GAHP;AAIE,MAAA,KAAK,EAAEJ,KAJT;AAKE,MAAA,OAAO,EAAE,MAAM;AACb,YAAII,GAAJ,EAASR,QAAQ,CAACQ,GAAD,CAAR,GAAgB,IAAhB;AACTF,QAAAA,OAAO,CAAEI,CAAD,IAAOA,CAAC,GAAG,CAAZ,CAAP;AACD;AARH;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AAED,sBAAO,QAAC,KAAD,OAAWL,IAAX;AAAiB,IAAA,KAAK,EAAE,EAAE,GAAGD,KAAL;AAAYO,MAAAA,KAAK,EAAEJ,KAAK,CAACK;AAAzB;AAAxB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAvBuBX,I;UAGRF,Q;;;KAHQE,I","sourcesContent":["import { useState } from 'react'\nimport { Slash } from 'react-feather'\nimport { ImageProps } from 'rebass'\n\nimport useTheme from '../../hooks/useTheme'\n\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\n\ninterface LogoProps extends Pick<ImageProps, 'style' | 'alt' | 'className'> {\n  srcs: string[]\n}\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\n */\nexport default function Logo({ srcs, alt, style, ...rest }: LogoProps) {\n  const [, refresh] = useState<number>(0)\n\n  const theme = useTheme()\n\n  const src: string | undefined = srcs.find((src) => !BAD_SRCS[src])\n\n  if (src) {\n    return (\n      <img\n        {...rest}\n        alt={alt}\n        src={src}\n        style={style}\n        onError={() => {\n          if (src) BAD_SRCS[src] = true\n          refresh((i) => i + 1)\n        }}\n      />\n    )\n  }\n\n  return <Slash {...rest} style={{ ...style, color: theme.bg4 }} />\n}\n"]},"metadata":{},"sourceType":"module"}