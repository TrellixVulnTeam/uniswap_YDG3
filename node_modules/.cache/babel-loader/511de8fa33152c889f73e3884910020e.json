{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Downloads/interface-4.30.1/src/pages/MigrateV2/MigrateV2Pair.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { Trans } from \"@lingui/react\";\nimport { CurrencyAmount, Percent, Price, Token } from '@uniswap/sdk-core';\nimport { FeeAmount, Pool, Position, priceToClosestTick, TickMath } from '@uniswap/v3-sdk';\nimport Badge, { BadgeVariant } from 'components/Badge';\nimport { ButtonConfirmed } from 'components/Button';\nimport { BlueCard, DarkGreyCard, LightCard, YellowCard } from 'components/Card';\nimport DoubleCurrencyLogo from 'components/DoubleLogo';\nimport FeeSelector from 'components/FeeSelector';\nimport RangeSelector from 'components/RangeSelector';\nimport RateToggle from 'components/RateToggle';\nimport SettingsTab from 'components/Settings';\nimport { Dots } from 'components/swap/styleds';\nimport { ApprovalState, useApproveCallback } from 'hooks/useApproveCallback';\nimport useCurrentBlockTimestamp from 'hooks/useCurrentBlockTimestamp';\nimport { PoolState, usePool } from 'hooks/usePools';\nimport useTheme from 'hooks/useTheme';\nimport useTransactionDeadline from 'hooks/useTransactionDeadline';\nimport JSBI from 'jsbi';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { AlertCircle, AlertTriangle, ArrowDown } from 'react-feather';\nimport ReactGA from 'react-ga';\nimport { Redirect } from 'react-router';\nimport { Text } from 'rebass';\nimport { useAppDispatch } from 'state/hooks';\nimport { Bound, resetMintState } from 'state/mint/v3/actions';\nimport { useRangeHopCallbacks, useV3DerivedMintInfo, useV3MintActionHandlers } from 'state/mint/v3/hooks';\nimport { useIsTransactionPending, useTransactionAdder } from 'state/transactions/hooks';\nimport { useUserSlippageToleranceWithDefault } from 'state/user/hooks';\nimport { formatCurrencyAmount } from 'utils/formatCurrencyAmount';\nimport { unwrappedToken } from 'utils/unwrappedToken';\nimport { AutoColumn } from '../../components/Column';\nimport CurrencyLogo from '../../components/CurrencyLogo';\nimport FormattedCurrencyAmount from '../../components/FormattedCurrencyAmount';\nimport { AutoRow, RowBetween, RowFixed } from '../../components/Row';\nimport { V2_FACTORY_ADDRESSES } from '../../constants/addresses';\nimport { WRAPPED_NATIVE_CURRENCY } from '../../constants/tokens';\nimport { useToken } from '../../hooks/Tokens';\nimport { usePairContract, useV2MigratorContract } from '../../hooks/useContract';\nimport { useV2LiquidityTokenPermit } from '../../hooks/useERC20Permit';\nimport useIsArgentWallet from '../../hooks/useIsArgentWallet';\nimport { useTotalSupply } from '../../hooks/useTotalSupply';\nimport { useActiveWeb3React } from '../../hooks/web3';\nimport { NEVER_RELOAD, useSingleCallResult } from '../../state/multicall/hooks';\nimport { TransactionType } from '../../state/transactions/actions';\nimport { useTokenBalance } from '../../state/wallet/hooks';\nimport { BackArrow, ExternalLink, ThemedText } from '../../theme';\nimport { isAddress } from '../../utils';\nimport { calculateGasMargin } from '../../utils/calculateGasMargin';\nimport { currencyId } from '../../utils/currencyId';\nimport { ExplorerDataType, getExplorerLink } from '../../utils/getExplorerLink';\nimport { BodyWrapper } from '../AppBody';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ZERO = JSBI.BigInt(0);\nconst DEFAULT_MIGRATE_SLIPPAGE_TOLERANCE = new Percent(75, 10000);\n\nfunction EmptyState({\n  message\n}) {\n  return /*#__PURE__*/_jsxDEV(AutoColumn, {\n    style: {\n      minHeight: 200,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(ThemedText.Body, {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_c = EmptyState;\n\nfunction LiquidityInfo({\n  token0Amount,\n  token1Amount\n}) {\n  const currency0 = unwrappedToken(token0Amount.currency);\n  const currency1 = unwrappedToken(token1Amount.currency);\n  return /*#__PURE__*/_jsxDEV(AutoColumn, {\n    gap: \"8px\",\n    children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n      children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n        children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n          size: \"20px\",\n          style: {\n            marginRight: '8px'\n          },\n          currency: currency0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: 16,\n          fontWeight: 500,\n          children: currency0.symbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: 16,\n        fontWeight: 500,\n        children: /*#__PURE__*/_jsxDEV(FormattedCurrencyAmount, {\n          currencyAmount: token0Amount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n      children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n        children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n          size: \"20px\",\n          style: {\n            marginRight: '8px'\n          },\n          currency: currency1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: 16,\n          fontWeight: 500,\n          children: currency1.symbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: 16,\n        fontWeight: 500,\n        children: /*#__PURE__*/_jsxDEV(FormattedCurrencyAmount, {\n          currencyAmount: token1Amount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n} // hard-code this for now\n\n\n_c2 = LiquidityInfo;\nconst percentageToMigrate = 100;\n\nfunction V2PairMigration({\n  pair,\n  pairBalance,\n  totalSupply,\n  reserve0,\n  reserve1,\n  token0,\n  token1\n}) {\n  _s();\n\n  var _pairFactory$result, _priceDifferenceFract, _priceDifferenceFract2, _pool$tickCurrent, _pool$sqrtRatioX, _v2SpotPrice$invert, _v2SpotPrice$invert2, _v3SpotPrice$invert, _priceDifferenceFract3, _v3SpotPrice$invert2;\n\n  const {\n    chainId,\n    account\n  } = useActiveWeb3React();\n  const theme = useTheme();\n  const v2FactoryAddress = chainId ? V2_FACTORY_ADDRESSES[chainId] : undefined;\n  const pairFactory = useSingleCallResult(pair, 'factory');\n  const isNotUniswap = ((_pairFactory$result = pairFactory.result) === null || _pairFactory$result === void 0 ? void 0 : _pairFactory$result[0]) && pairFactory.result[0] !== v2FactoryAddress;\n  const deadline = useTransactionDeadline(); // custom from users settings\n\n  const blockTimestamp = useCurrentBlockTimestamp();\n  const allowedSlippage = useUserSlippageToleranceWithDefault(DEFAULT_MIGRATE_SLIPPAGE_TOLERANCE); // custom from users\n\n  const currency0 = unwrappedToken(token0);\n  const currency1 = unwrappedToken(token1); // this is just getLiquidityValue with the fee off, but for the passed pair\n\n  const token0Value = useMemo(() => CurrencyAmount.fromRawAmount(token0, JSBI.divide(JSBI.multiply(pairBalance.quotient, reserve0.quotient), totalSupply.quotient)), [token0, pairBalance, reserve0, totalSupply]);\n  const token1Value = useMemo(() => CurrencyAmount.fromRawAmount(token1, JSBI.divide(JSBI.multiply(pairBalance.quotient, reserve1.quotient), totalSupply.quotient)), [token1, pairBalance, reserve1, totalSupply]); // set up v3 pool\n\n  const [feeAmount, setFeeAmount] = useState(FeeAmount.MEDIUM);\n  const [poolState, pool] = usePool(token0, token1, feeAmount);\n  const noLiquidity = poolState === PoolState.NOT_EXISTS; // get spot prices + price difference\n\n  const v2SpotPrice = useMemo(() => new Price(token0, token1, reserve0.quotient, reserve1.quotient), [token0, token1, reserve0, reserve1]);\n  const v3SpotPrice = poolState === PoolState.EXISTS ? pool === null || pool === void 0 ? void 0 : pool.token0Price : undefined;\n  let priceDifferenceFraction = v2SpotPrice && v3SpotPrice ? v3SpotPrice.divide(v2SpotPrice).subtract(1).multiply(100) : undefined;\n\n  if ((_priceDifferenceFract = priceDifferenceFraction) === null || _priceDifferenceFract === void 0 ? void 0 : _priceDifferenceFract.lessThan(ZERO)) {\n    priceDifferenceFraction = priceDifferenceFraction.multiply(-1);\n  }\n\n  const largePriceDifference = priceDifferenceFraction && !((_priceDifferenceFract2 = priceDifferenceFraction) === null || _priceDifferenceFract2 === void 0 ? void 0 : _priceDifferenceFract2.lessThan(JSBI.BigInt(2))); // the following is a small hack to get access to price range data/input handlers\n\n  const [baseToken, setBaseToken] = useState(token0);\n  const {\n    ticks,\n    pricesAtTicks,\n    invertPrice,\n    invalidRange,\n    outOfRange,\n    ticksAtLimit\n  } = useV3DerivedMintInfo(token0, token1, feeAmount, baseToken); // get value and prices at ticks\n\n  const {\n    [Bound.LOWER]: tickLower,\n    [Bound.UPPER]: tickUpper\n  } = ticks;\n  const {\n    [Bound.LOWER]: priceLower,\n    [Bound.UPPER]: priceUpper\n  } = pricesAtTicks;\n  const {\n    getDecrementLower,\n    getIncrementLower,\n    getDecrementUpper,\n    getIncrementUpper\n  } = useRangeHopCallbacks(baseToken, baseToken.equals(token0) ? token1 : token0, feeAmount, tickLower, tickUpper);\n  const {\n    onLeftRangeInput,\n    onRightRangeInput\n  } = useV3MintActionHandlers(noLiquidity); // the v3 tick is either the pool's tickCurrent, or the tick closest to the v2 spot price\n\n  const tick = (_pool$tickCurrent = pool === null || pool === void 0 ? void 0 : pool.tickCurrent) !== null && _pool$tickCurrent !== void 0 ? _pool$tickCurrent : priceToClosestTick(v2SpotPrice); // the price is either the current v3 price, or the price at the tick\n\n  const sqrtPrice = (_pool$sqrtRatioX = pool === null || pool === void 0 ? void 0 : pool.sqrtRatioX96) !== null && _pool$sqrtRatioX !== void 0 ? _pool$sqrtRatioX : TickMath.getSqrtRatioAtTick(tick);\n  const position = typeof tickLower === 'number' && typeof tickUpper === 'number' && !invalidRange ? Position.fromAmounts({\n    pool: pool !== null && pool !== void 0 ? pool : new Pool(token0, token1, feeAmount, sqrtPrice, 0, tick, []),\n    tickLower,\n    tickUpper,\n    amount0: token0Value.quotient,\n    amount1: token1Value.quotient,\n    useFullPrecision: true // we want full precision for the theoretical position\n\n  }) : undefined;\n  const {\n    amount0: v3Amount0Min,\n    amount1: v3Amount1Min\n  } = useMemo(() => position ? position.mintAmountsWithSlippage(allowedSlippage) : {\n    amount0: undefined,\n    amount1: undefined\n  }, [position, allowedSlippage]);\n  const refund0 = useMemo(() => position && CurrencyAmount.fromRawAmount(token0, JSBI.subtract(token0Value.quotient, position.amount0.quotient)), [token0Value, position, token0]);\n  const refund1 = useMemo(() => position && CurrencyAmount.fromRawAmount(token1, JSBI.subtract(token1Value.quotient, position.amount1.quotient)), [token1Value, position, token1]);\n  const [confirmingMigration, setConfirmingMigration] = useState(false);\n  const [pendingMigrationHash, setPendingMigrationHash] = useState(null);\n  const migrator = useV2MigratorContract(); // approvals\n\n  const [approval, approveManually] = useApproveCallback(pairBalance, migrator === null || migrator === void 0 ? void 0 : migrator.address);\n  const {\n    signatureData,\n    gatherPermitSignature\n  } = useV2LiquidityTokenPermit(pairBalance, migrator === null || migrator === void 0 ? void 0 : migrator.address);\n  const isArgentWallet = useIsArgentWallet();\n  const approve = useCallback(async () => {\n    if (isNotUniswap || isArgentWallet) {\n      // sushi has to be manually approved\n      await approveManually();\n    } else if (gatherPermitSignature) {\n      try {\n        await gatherPermitSignature();\n      } catch (error) {\n        // try to approve if gatherPermitSignature failed for any reason other than the user rejecting it\n        if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n          await approveManually();\n        }\n      }\n    } else {\n      await approveManually();\n    }\n  }, [isNotUniswap, isArgentWallet, gatherPermitSignature, approveManually]);\n  const addTransaction = useTransactionAdder();\n  const isMigrationPending = useIsTransactionPending(pendingMigrationHash !== null && pendingMigrationHash !== void 0 ? pendingMigrationHash : undefined);\n  const migrate = useCallback(() => {\n    var _signatureData$deadli;\n\n    if (!migrator || !account || !deadline || !blockTimestamp || typeof tickLower !== 'number' || typeof tickUpper !== 'number' || !v3Amount0Min || !v3Amount1Min || !chainId) return;\n    const deadlineToUse = (_signatureData$deadli = signatureData === null || signatureData === void 0 ? void 0 : signatureData.deadline) !== null && _signatureData$deadli !== void 0 ? _signatureData$deadli : deadline;\n    const data = []; // permit if necessary\n\n    if (signatureData) {\n      data.push(migrator.interface.encodeFunctionData('selfPermit', [pair.address, `0x${pairBalance.quotient.toString(16)}`, deadlineToUse, signatureData.v, signatureData.r, signatureData.s]));\n    } // create/initialize pool if necessary\n\n\n    if (noLiquidity) {\n      data.push(migrator.interface.encodeFunctionData('createAndInitializePoolIfNecessary', [token0.address, token1.address, feeAmount, `0x${sqrtPrice.toString(16)}`]));\n    } // TODO could save gas by not doing this in multicall\n\n\n    data.push(migrator.interface.encodeFunctionData('migrate', [{\n      pair: pair.address,\n      liquidityToMigrate: `0x${pairBalance.quotient.toString(16)}`,\n      percentageToMigrate,\n      token0: token0.address,\n      token1: token1.address,\n      fee: feeAmount,\n      tickLower,\n      tickUpper,\n      amount0Min: `0x${v3Amount0Min.toString(16)}`,\n      amount1Min: `0x${v3Amount1Min.toString(16)}`,\n      recipient: account,\n      deadline: deadlineToUse,\n      refundAsETH: true // hard-code this for now\n\n    }]));\n    setConfirmingMigration(true);\n    migrator.estimateGas.multicall(data).then(gasEstimate => {\n      return migrator.multicall(data, {\n        gasLimit: calculateGasMargin(gasEstimate)\n      }).then(response => {\n        ReactGA.event({\n          category: 'Migrate',\n          action: `${isNotUniswap ? 'SushiSwap' : 'V2'}->V3`,\n          label: `${currency0.symbol}/${currency1.symbol}`\n        });\n        addTransaction(response, {\n          type: TransactionType.MIGRATE_LIQUIDITY_V3,\n          baseCurrencyId: currencyId(currency0),\n          quoteCurrencyId: currencyId(currency1),\n          isFork: isNotUniswap\n        });\n        setPendingMigrationHash(response.hash);\n      });\n    }).catch(() => {\n      setConfirmingMigration(false);\n    });\n  }, [chainId, isNotUniswap, migrator, noLiquidity, blockTimestamp, token0, token1, feeAmount, pairBalance, tickLower, tickUpper, sqrtPrice, v3Amount0Min, v3Amount1Min, account, deadline, signatureData, addTransaction, pair, currency0, currency1]);\n  const isSuccessfullyMigrated = !!pendingMigrationHash && JSBI.equal(pairBalance.quotient, ZERO);\n  return /*#__PURE__*/_jsxDEV(AutoColumn, {\n    gap: \"20px\",\n    children: [/*#__PURE__*/_jsxDEV(ThemedText.Body, {\n      my: 9,\n      style: {\n        fontWeight: 400\n      },\n      children: [/*#__PURE__*/_jsxDEV(Trans, {\n        id: \"This tool will safely migrate your {0} liquidity to V3. The process is completely trustless thanks to the\",\n        values: {\n          0: isNotUniswap ? 'SushiSwap' : 'V2'\n        }\n      }, void 0, false, void 0, this), chainId && migrator && /*#__PURE__*/_jsxDEV(ExternalLink, {\n        href: getExplorerLink(chainId, migrator.address, ExplorerDataType.ADDRESS),\n        children: /*#__PURE__*/_jsxDEV(ThemedText.Blue, {\n          display: \"inline\",\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Uniswap migration contract\\u2197\"\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 11\n      }, this), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LightCard, {\n      children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n        gap: \"lg\",\n        children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n          children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n            style: {\n              marginLeft: '8px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(DoubleCurrencyLogo, {\n              currency0: currency0,\n              currency1: currency1,\n              margin: false,\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ThemedText.MediumHeader, {\n              style: {\n                marginLeft: '8px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Trans, {\n                id: \"{0}/{1} LP Tokens\",\n                values: {\n                  0: currency0.symbol,\n                  1: currency1.symbol\n                }\n              }, void 0, false, void 0, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Badge, {\n            variant: BadgeVariant.WARNING,\n            children: isNotUniswap ? 'Sushi' : 'V2'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LiquidityInfo, {\n          token0Amount: token0Value,\n          token1Amount: token1Value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(ArrowDown, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LightCard, {\n      children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n        gap: \"lg\",\n        children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n          children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n            style: {\n              marginLeft: '8px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(DoubleCurrencyLogo, {\n              currency0: currency0,\n              currency1: currency1,\n              margin: false,\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ThemedText.MediumHeader, {\n              style: {\n                marginLeft: '8px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Trans, {\n                id: \"{0}/{1} LP NFT\",\n                values: {\n                  0: currency0.symbol,\n                  1: currency1.symbol\n                }\n              }, void 0, false, void 0, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Badge, {\n            variant: BadgeVariant.PRIMARY,\n            children: \"V3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FeeSelector, {\n          feeAmount: feeAmount,\n          handleFeePoolSelect: setFeeAmount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this), noLiquidity && /*#__PURE__*/_jsxDEV(BlueCard, {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n            color: theme.text1,\n            style: {\n              marginBottom: '12px',\n              opacity: 0.8\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ThemedText.Body, {\n            fontSize: 14,\n            style: {\n              marginBottom: 8,\n              fontWeight: 500,\n              opacity: 0.8\n            },\n            textAlign: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"You are the first liquidity provider for this Uniswap V3 pool. Your liquidity will migrate at the current {0} price.\",\n              values: {\n                0: isNotUniswap ? 'SushiSwap' : 'V2'\n              }\n            }, void 0, false, void 0, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ThemedText.Body, {\n            fontWeight: 500,\n            textAlign: \"center\",\n            fontSize: 14,\n            style: {\n              marginTop: '8px',\n              opacity: 0.8\n            },\n            children: /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"Your transaction cost will be much higher as it includes the gas to create the pool.\"\n            }, void 0, false, void 0, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 15\n          }, this), v2SpotPrice && /*#__PURE__*/_jsxDEV(AutoColumn, {\n            gap: \"8px\",\n            style: {\n              marginTop: '12px'\n            },\n            children: /*#__PURE__*/_jsxDEV(RowBetween, {\n              children: /*#__PURE__*/_jsxDEV(ThemedText.Body, {\n                fontWeight: 500,\n                fontSize: 14,\n                children: [/*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"{0} {1} Price:\",\n                  values: {\n                    0: isNotUniswap ? 'SushiSwap' : 'V2',\n                    1: invertPrice ? currency1.symbol : currency0.symbol\n                  }\n                }, void 0, false, void 0, this), ' ', invertPrice ? `${v2SpotPrice === null || v2SpotPrice === void 0 ? void 0 : (_v2SpotPrice$invert = v2SpotPrice.invert()) === null || _v2SpotPrice$invert === void 0 ? void 0 : _v2SpotPrice$invert.toSignificant(6)} ${currency0.symbol}` : `${v2SpotPrice === null || v2SpotPrice === void 0 ? void 0 : v2SpotPrice.toSignificant(6)} ${currency1.symbol}`]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 13\n        }, this), largePriceDifference ? /*#__PURE__*/_jsxDEV(YellowCard, {\n          children: [/*#__PURE__*/_jsxDEV(AutoColumn, {\n            gap: \"8px\",\n            children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n              children: [/*#__PURE__*/_jsxDEV(ThemedText.Body, {\n                fontSize: 14,\n                children: /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"{0} {1} Price:\",\n                  values: {\n                    0: isNotUniswap ? 'SushiSwap' : 'V2',\n                    1: invertPrice ? currency1.symbol : currency0.symbol\n                  }\n                }, void 0, false, void 0, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ThemedText.Black, {\n                fontSize: 14,\n                children: invertPrice ? `${v2SpotPrice === null || v2SpotPrice === void 0 ? void 0 : (_v2SpotPrice$invert2 = v2SpotPrice.invert()) === null || _v2SpotPrice$invert2 === void 0 ? void 0 : _v2SpotPrice$invert2.toSignificant(6)} ${currency0.symbol}` : `${v2SpotPrice === null || v2SpotPrice === void 0 ? void 0 : v2SpotPrice.toSignificant(6)} ${currency1.symbol}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n              children: [/*#__PURE__*/_jsxDEV(ThemedText.Body, {\n                fontSize: 14,\n                children: /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"V3 {0} Price:\",\n                  values: {\n                    0: invertPrice ? currency1.symbol : currency0.symbol\n                  }\n                }, void 0, false, void 0, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ThemedText.Black, {\n                fontSize: 14,\n                children: invertPrice ? `${v3SpotPrice === null || v3SpotPrice === void 0 ? void 0 : (_v3SpotPrice$invert = v3SpotPrice.invert()) === null || _v3SpotPrice$invert === void 0 ? void 0 : _v3SpotPrice$invert.toSignificant(6)} ${currency0.symbol}` : `${v3SpotPrice === null || v3SpotPrice === void 0 ? void 0 : v3SpotPrice.toSignificant(6)} ${currency1.symbol}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n              children: [/*#__PURE__*/_jsxDEV(ThemedText.Body, {\n                fontSize: 14,\n                color: \"inherit\",\n                children: /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"Price Difference:\"\n                }, void 0, false, void 0, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ThemedText.Black, {\n                fontSize: 14,\n                color: \"inherit\",\n                children: /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"{0}%\",\n                  values: {\n                    0: (_priceDifferenceFract3 = priceDifferenceFraction) === null || _priceDifferenceFract3 === void 0 ? void 0 : _priceDifferenceFract3.toSignificant(4)\n                  }\n                }, void 0, false, void 0, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ThemedText.Body, {\n            fontSize: 14,\n            style: {\n              marginTop: 8,\n              fontWeight: 400\n            },\n            children: /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"You should only deposit liquidity into Uniswap V3 at a price you believe is correct. <0/>If the price seems incorrect, you can either make a swap to move the price or wait for someone else to do so.\",\n              components: {\n                0: /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 104\n                }, this)\n              }\n            }, void 0, false, void 0, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 13\n        }, this) : !noLiquidity && v3SpotPrice ? /*#__PURE__*/_jsxDEV(RowBetween, {\n          children: [/*#__PURE__*/_jsxDEV(ThemedText.Body, {\n            fontSize: 14,\n            children: /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"V3 {0} Price:\",\n              values: {\n                0: invertPrice ? currency1.symbol : currency0.symbol\n              }\n            }, void 0, false, void 0, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ThemedText.Black, {\n            fontSize: 14,\n            children: invertPrice ? `${v3SpotPrice === null || v3SpotPrice === void 0 ? void 0 : (_v3SpotPrice$invert2 = v3SpotPrice.invert()) === null || _v3SpotPrice$invert2 === void 0 ? void 0 : _v3SpotPrice$invert2.toSignificant(6)} ${currency0.symbol}` : `${v3SpotPrice === null || v3SpotPrice === void 0 ? void 0 : v3SpotPrice.toSignificant(6)} ${currency1.symbol}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(RowBetween, {\n          children: [/*#__PURE__*/_jsxDEV(ThemedText.Label, {\n            children: /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"Set Price Range\"\n            }, void 0, false, void 0, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RateToggle, {\n            currencyA: invertPrice ? currency1 : currency0,\n            currencyB: invertPrice ? currency0 : currency1,\n            handleRateToggle: () => {\n              onLeftRangeInput('');\n              onRightRangeInput('');\n              setBaseToken(base => base.equals(token0) ? token1 : token0);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RangeSelector, {\n          priceLower: priceLower,\n          priceUpper: priceUpper,\n          getDecrementLower: getDecrementLower,\n          getIncrementLower: getIncrementLower,\n          getDecrementUpper: getDecrementUpper,\n          getIncrementUpper: getIncrementUpper,\n          onLeftRangeInput: onLeftRangeInput,\n          onRightRangeInput: onRightRangeInput,\n          currencyA: invertPrice ? currency1 : currency0,\n          currencyB: invertPrice ? currency0 : currency1,\n          feeAmount: feeAmount,\n          ticksAtLimit: ticksAtLimit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 11\n        }, this), outOfRange ? /*#__PURE__*/_jsxDEV(YellowCard, {\n          padding: \"8px 12px\",\n          $borderRadius: \"12px\",\n          children: /*#__PURE__*/_jsxDEV(RowBetween, {\n            children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n              stroke: theme.yellow3,\n              size: \"16px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ThemedText.Yellow, {\n              ml: \"12px\",\n              fontSize: \"12px\",\n              children: /*#__PURE__*/_jsxDEV(Trans, {\n                id: \"Your position will not earn fees or be used in trades until the market price moves into your range.\"\n              }, void 0, false, void 0, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 13\n        }, this) : null, invalidRange ? /*#__PURE__*/_jsxDEV(YellowCard, {\n          padding: \"8px 12px\",\n          $borderRadius: \"12px\",\n          children: /*#__PURE__*/_jsxDEV(RowBetween, {\n            children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n              stroke: theme.yellow3,\n              size: \"16px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ThemedText.Yellow, {\n              ml: \"12px\",\n              fontSize: \"12px\",\n              children: /*#__PURE__*/_jsxDEV(Trans, {\n                id: \"Invalid range selected. The min price must be lower than the max price.\"\n              }, void 0, false, void 0, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 13\n        }, this) : null, position ? /*#__PURE__*/_jsxDEV(DarkGreyCard, {\n          children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n            gap: \"md\",\n            children: [/*#__PURE__*/_jsxDEV(LiquidityInfo, {\n              token0Amount: position.amount0,\n              token1Amount: position.amount1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 17\n            }, this), chainId && refund0 && refund1 ? /*#__PURE__*/_jsxDEV(ThemedText.Black, {\n              fontSize: 12,\n              children: /*#__PURE__*/_jsxDEV(Trans, {\n                id: \"At least {0} {1} and {2} {3} will be refunded to your wallet due to selected price range.\",\n                values: {\n                  0: formatCurrencyAmount(refund0, 4),\n                  1: token0.equals(WRAPPED_NATIVE_CURRENCY[chainId]) ? 'ETH' : token0.symbol,\n                  2: formatCurrencyAmount(refund1, 4),\n                  3: token1.equals(WRAPPED_NATIVE_CURRENCY[chainId]) ? 'ETH' : token1.symbol\n                }\n              }, void 0, false, void 0, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 19\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(AutoColumn, {\n          gap: \"12px\",\n          children: [!isSuccessfullyMigrated && !isMigrationPending ? /*#__PURE__*/_jsxDEV(AutoColumn, {\n            gap: \"12px\",\n            style: {\n              flex: '1'\n            },\n            children: /*#__PURE__*/_jsxDEV(ButtonConfirmed, {\n              confirmed: approval === ApprovalState.APPROVED || signatureData !== null,\n              disabled: approval !== ApprovalState.NOT_APPROVED || signatureData !== null || !v3Amount0Min || !v3Amount1Min || invalidRange || confirmingMigration,\n              onClick: approve,\n              children: approval === ApprovalState.PENDING ? /*#__PURE__*/_jsxDEV(Dots, {\n                children: /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"Approving\"\n                }, void 0, false, void 0, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 622,\n                columnNumber: 21\n              }, this) : approval === ApprovalState.APPROVED || signatureData !== null ? /*#__PURE__*/_jsxDEV(Trans, {\n                id: \"Allowed\"\n              }, void 0, false, void 0, this) : /*#__PURE__*/_jsxDEV(Trans, {\n                id: \"Allow LP token migration\"\n              }, void 0, false, void 0, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 15\n          }, this) : null, /*#__PURE__*/_jsxDEV(AutoColumn, {\n            gap: \"12px\",\n            style: {\n              flex: '1'\n            },\n            children: /*#__PURE__*/_jsxDEV(ButtonConfirmed, {\n              confirmed: isSuccessfullyMigrated,\n              disabled: !v3Amount0Min || !v3Amount1Min || invalidRange || approval !== ApprovalState.APPROVED && signatureData === null || confirmingMigration || isMigrationPending || isSuccessfullyMigrated,\n              onClick: migrate,\n              children: isSuccessfullyMigrated ? 'Success!' : isMigrationPending ? /*#__PURE__*/_jsxDEV(Dots, {\n                children: /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"Migrating\"\n                }, void 0, false, void 0, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 650,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(Trans, {\n                id: \"Migrate\"\n              }, void 0, false, void 0, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 634,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 384,\n    columnNumber: 5\n  }, this);\n}\n\n_s(V2PairMigration, \"Zo7YsJljp1F9C4MlFz7aoAUBOrg=\", false, function () {\n  return [useActiveWeb3React, useTheme, useSingleCallResult, useTransactionDeadline, useCurrentBlockTimestamp, useUserSlippageToleranceWithDefault, usePool, useV3DerivedMintInfo, useRangeHopCallbacks, useV3MintActionHandlers, useV2MigratorContract, useApproveCallback, useV2LiquidityTokenPermit, useIsArgentWallet, useTransactionAdder, useIsTransactionPending];\n});\n\n_c3 = V2PairMigration;\nexport default function MigrateV2Pair({\n  match: {\n    params: {\n      address\n    }\n  }\n}) {\n  _s2();\n\n  var _token0AddressCallSta, _useSingleCallResult, _useSingleCallResult$, _useSingleCallResult$2, _useSingleCallResult2;\n\n  // reset mint state on component mount, and as a cleanup (on unmount)\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(resetMintState());\n    return () => {\n      dispatch(resetMintState());\n    };\n  }, [dispatch]);\n  const {\n    chainId,\n    account\n  } = useActiveWeb3React(); // get pair contract\n\n  const validatedAddress = isAddress(address);\n  const pair = usePairContract(validatedAddress ? validatedAddress : undefined); // get token addresses from pair contract\n\n  const token0AddressCallState = useSingleCallResult(pair, 'token0', undefined, NEVER_RELOAD);\n  const token0Address = token0AddressCallState === null || token0AddressCallState === void 0 ? void 0 : (_token0AddressCallSta = token0AddressCallState.result) === null || _token0AddressCallSta === void 0 ? void 0 : _token0AddressCallSta[0];\n  const token1Address = (_useSingleCallResult = useSingleCallResult(pair, 'token1', undefined, NEVER_RELOAD)) === null || _useSingleCallResult === void 0 ? void 0 : (_useSingleCallResult$ = _useSingleCallResult.result) === null || _useSingleCallResult$ === void 0 ? void 0 : _useSingleCallResult$[0]; // get tokens\n\n  const token0 = useToken(token0Address);\n  const token1 = useToken(token1Address); // get liquidity token balance\n\n  const liquidityToken = useMemo(() => chainId && validatedAddress ? new Token(chainId, validatedAddress, 18) : undefined, [chainId, validatedAddress]); // get data required for V2 pair migration\n\n  const pairBalance = useTokenBalance(account !== null && account !== void 0 ? account : undefined, liquidityToken);\n  const totalSupply = useTotalSupply(liquidityToken);\n  const [reserve0Raw, reserve1Raw] = (_useSingleCallResult$2 = (_useSingleCallResult2 = useSingleCallResult(pair, 'getReserves')) === null || _useSingleCallResult2 === void 0 ? void 0 : _useSingleCallResult2.result) !== null && _useSingleCallResult$2 !== void 0 ? _useSingleCallResult$2 : [];\n  const reserve0 = useMemo(() => token0 && reserve0Raw ? CurrencyAmount.fromRawAmount(token0, reserve0Raw) : undefined, [token0, reserve0Raw]);\n  const reserve1 = useMemo(() => token1 && reserve1Raw ? CurrencyAmount.fromRawAmount(token1, reserve1Raw) : undefined, [token1, reserve1Raw]); // redirect for invalid url params\n\n  if (!validatedAddress || !pair || pair && (token0AddressCallState === null || token0AddressCallState === void 0 ? void 0 : token0AddressCallState.valid) && !(token0AddressCallState === null || token0AddressCallState === void 0 ? void 0 : token0AddressCallState.loading) && !(token0AddressCallState === null || token0AddressCallState === void 0 ? void 0 : token0AddressCallState.error) && !token0Address) {\n    console.error('Invalid pair address');\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/migrate/v2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 724,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(BodyWrapper, {\n    style: {\n      padding: 24\n    },\n    children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n      gap: \"16px\",\n      children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n        style: {\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        },\n        gap: \"8px\",\n        children: [/*#__PURE__*/_jsxDEV(BackArrow, {\n          to: \"/migrate/v2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ThemedText.MediumHeader, {\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Migrate V2 Liquidity\"\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 732,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SettingsTab, {\n          placeholderSlippage: DEFAULT_MIGRATE_SLIPPAGE_TOLERANCE\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 730,\n        columnNumber: 9\n      }, this), !account ? /*#__PURE__*/_jsxDEV(ThemedText.LargeHeader, {\n        children: /*#__PURE__*/_jsxDEV(Trans, {\n          id: \"You must connect an account.\"\n        }, void 0, false, void 0, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 11\n      }, this) : pairBalance && totalSupply && reserve0 && reserve1 && token0 && token1 ? /*#__PURE__*/_jsxDEV(V2PairMigration, {\n        pair: pair,\n        pairBalance: pairBalance,\n        totalSupply: totalSupply,\n        reserve0: reserve0,\n        reserve1: reserve1,\n        token0: token0,\n        token1: token1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 743,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(EmptyState, {\n        message: /*#__PURE__*/_jsxDEV(Trans, {\n          id: \"Loading\"\n        }, void 0, false, void 0, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 753,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 729,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 728,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(MigrateV2Pair, \"WhMEyNLoJCyq0szZC8DxMNS/1qM=\", false, function () {\n  return [useAppDispatch, useActiveWeb3React, usePairContract, useSingleCallResult, useSingleCallResult, useToken, useToken, useTokenBalance, useTotalSupply, useSingleCallResult];\n});\n\n_c4 = MigrateV2Pair;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"EmptyState\");\n$RefreshReg$(_c2, \"LiquidityInfo\");\n$RefreshReg$(_c3, \"V2PairMigration\");\n$RefreshReg$(_c4, \"MigrateV2Pair\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/pages/MigrateV2/MigrateV2Pair.tsx"],"names":["CurrencyAmount","Percent","Price","Token","FeeAmount","Pool","Position","priceToClosestTick","TickMath","Badge","BadgeVariant","ButtonConfirmed","BlueCard","DarkGreyCard","LightCard","YellowCard","DoubleCurrencyLogo","FeeSelector","RangeSelector","RateToggle","SettingsTab","Dots","ApprovalState","useApproveCallback","useCurrentBlockTimestamp","PoolState","usePool","useTheme","useTransactionDeadline","JSBI","useCallback","useEffect","useMemo","useState","AlertCircle","AlertTriangle","ArrowDown","ReactGA","Redirect","Text","useAppDispatch","Bound","resetMintState","useRangeHopCallbacks","useV3DerivedMintInfo","useV3MintActionHandlers","useIsTransactionPending","useTransactionAdder","useUserSlippageToleranceWithDefault","formatCurrencyAmount","unwrappedToken","AutoColumn","CurrencyLogo","FormattedCurrencyAmount","AutoRow","RowBetween","RowFixed","V2_FACTORY_ADDRESSES","WRAPPED_NATIVE_CURRENCY","useToken","usePairContract","useV2MigratorContract","useV2LiquidityTokenPermit","useIsArgentWallet","useTotalSupply","useActiveWeb3React","NEVER_RELOAD","useSingleCallResult","TransactionType","useTokenBalance","BackArrow","ExternalLink","ThemedText","isAddress","calculateGasMargin","currencyId","ExplorerDataType","getExplorerLink","BodyWrapper","ZERO","BigInt","DEFAULT_MIGRATE_SLIPPAGE_TOLERANCE","EmptyState","message","minHeight","justifyContent","alignItems","LiquidityInfo","token0Amount","token1Amount","currency0","currency","currency1","marginRight","symbol","percentageToMigrate","V2PairMigration","pair","pairBalance","totalSupply","reserve0","reserve1","token0","token1","chainId","account","theme","v2FactoryAddress","undefined","pairFactory","isNotUniswap","result","deadline","blockTimestamp","allowedSlippage","token0Value","fromRawAmount","divide","multiply","quotient","token1Value","feeAmount","setFeeAmount","MEDIUM","poolState","pool","noLiquidity","NOT_EXISTS","v2SpotPrice","v3SpotPrice","EXISTS","token0Price","priceDifferenceFraction","subtract","lessThan","largePriceDifference","baseToken","setBaseToken","ticks","pricesAtTicks","invertPrice","invalidRange","outOfRange","ticksAtLimit","LOWER","tickLower","UPPER","tickUpper","priceLower","priceUpper","getDecrementLower","getIncrementLower","getDecrementUpper","getIncrementUpper","equals","onLeftRangeInput","onRightRangeInput","tick","tickCurrent","sqrtPrice","sqrtRatioX96","getSqrtRatioAtTick","position","fromAmounts","amount0","amount1","useFullPrecision","v3Amount0Min","v3Amount1Min","mintAmountsWithSlippage","refund0","refund1","confirmingMigration","setConfirmingMigration","pendingMigrationHash","setPendingMigrationHash","migrator","approval","approveManually","address","signatureData","gatherPermitSignature","isArgentWallet","approve","error","code","addTransaction","isMigrationPending","migrate","deadlineToUse","data","push","interface","encodeFunctionData","toString","v","r","s","liquidityToMigrate","fee","amount0Min","amount1Min","recipient","refundAsETH","estimateGas","multicall","then","gasEstimate","gasLimit","response","event","category","action","label","type","MIGRATE_LIQUIDITY_V3","baseCurrencyId","quoteCurrencyId","isFork","hash","catch","isSuccessfullyMigrated","equal","fontWeight","ADDRESS","marginLeft","WARNING","display","PRIMARY","flexDirection","text1","marginBottom","opacity","marginTop","invert","toSignificant","base","yellow3","flex","APPROVED","NOT_APPROVED","PENDING","MigrateV2Pair","match","params","dispatch","validatedAddress","token0AddressCallState","token0Address","token1Address","liquidityToken","reserve0Raw","reserve1Raw","valid","loading","console","padding"],"mappings":"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","sourcesContent":["import { Contract } from '@ethersproject/contracts'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trans } from '@lingui/macro'\nimport { CurrencyAmount, Fraction, Percent, Price, Token } from '@uniswap/sdk-core'\nimport { FeeAmount, Pool, Position, priceToClosestTick, TickMath } from '@uniswap/v3-sdk'\nimport Badge, { BadgeVariant } from 'components/Badge'\nimport { ButtonConfirmed } from 'components/Button'\nimport { BlueCard, DarkGreyCard, LightCard, YellowCard } from 'components/Card'\nimport DoubleCurrencyLogo from 'components/DoubleLogo'\nimport FeeSelector from 'components/FeeSelector'\nimport RangeSelector from 'components/RangeSelector'\nimport RateToggle from 'components/RateToggle'\nimport SettingsTab from 'components/Settings'\nimport { Dots } from 'components/swap/styleds'\nimport { ApprovalState, useApproveCallback } from 'hooks/useApproveCallback'\nimport useCurrentBlockTimestamp from 'hooks/useCurrentBlockTimestamp'\nimport { PoolState, usePool } from 'hooks/usePools'\nimport useTheme from 'hooks/useTheme'\nimport useTransactionDeadline from 'hooks/useTransactionDeadline'\nimport JSBI from 'jsbi'\nimport { ReactNode, useCallback, useEffect, useMemo, useState } from 'react'\nimport { AlertCircle, AlertTriangle, ArrowDown } from 'react-feather'\nimport ReactGA from 'react-ga'\nimport { Redirect, RouteComponentProps } from 'react-router'\nimport { Text } from 'rebass'\nimport { useAppDispatch } from 'state/hooks'\nimport { Bound, resetMintState } from 'state/mint/v3/actions'\nimport { useRangeHopCallbacks, useV3DerivedMintInfo, useV3MintActionHandlers } from 'state/mint/v3/hooks'\nimport { useIsTransactionPending, useTransactionAdder } from 'state/transactions/hooks'\nimport { useUserSlippageToleranceWithDefault } from 'state/user/hooks'\nimport { formatCurrencyAmount } from 'utils/formatCurrencyAmount'\nimport { unwrappedToken } from 'utils/unwrappedToken'\n\nimport { AutoColumn } from '../../components/Column'\nimport CurrencyLogo from '../../components/CurrencyLogo'\nimport FormattedCurrencyAmount from '../../components/FormattedCurrencyAmount'\nimport { AutoRow, RowBetween, RowFixed } from '../../components/Row'\nimport { V2_FACTORY_ADDRESSES } from '../../constants/addresses'\nimport { WRAPPED_NATIVE_CURRENCY } from '../../constants/tokens'\nimport { useToken } from '../../hooks/Tokens'\nimport { usePairContract, useV2MigratorContract } from '../../hooks/useContract'\nimport { useV2LiquidityTokenPermit } from '../../hooks/useERC20Permit'\nimport useIsArgentWallet from '../../hooks/useIsArgentWallet'\nimport { useTotalSupply } from '../../hooks/useTotalSupply'\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport { NEVER_RELOAD, useSingleCallResult } from '../../state/multicall/hooks'\nimport { TransactionType } from '../../state/transactions/actions'\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { BackArrow, ExternalLink, ThemedText } from '../../theme'\nimport { isAddress } from '../../utils'\nimport { calculateGasMargin } from '../../utils/calculateGasMargin'\nimport { currencyId } from '../../utils/currencyId'\nimport { ExplorerDataType, getExplorerLink } from '../../utils/getExplorerLink'\nimport { BodyWrapper } from '../AppBody'\n\nconst ZERO = JSBI.BigInt(0)\n\nconst DEFAULT_MIGRATE_SLIPPAGE_TOLERANCE = new Percent(75, 10_000)\n\nfunction EmptyState({ message }: { message: ReactNode }) {\n  return (\n    <AutoColumn style={{ minHeight: 200, justifyContent: 'center', alignItems: 'center' }}>\n      <ThemedText.Body>{message}</ThemedText.Body>\n    </AutoColumn>\n  )\n}\n\nfunction LiquidityInfo({\n  token0Amount,\n  token1Amount,\n}: {\n  token0Amount: CurrencyAmount<Token>\n  token1Amount: CurrencyAmount<Token>\n}) {\n  const currency0 = unwrappedToken(token0Amount.currency)\n  const currency1 = unwrappedToken(token1Amount.currency)\n\n  return (\n    <AutoColumn gap=\"8px\">\n      <RowBetween>\n        <RowFixed>\n          <CurrencyLogo size=\"20px\" style={{ marginRight: '8px' }} currency={currency0} />\n          <Text fontSize={16} fontWeight={500}>\n            {currency0.symbol}\n          </Text>\n        </RowFixed>\n        <Text fontSize={16} fontWeight={500}>\n          <FormattedCurrencyAmount currencyAmount={token0Amount} />\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <CurrencyLogo size=\"20px\" style={{ marginRight: '8px' }} currency={currency1} />\n          <Text fontSize={16} fontWeight={500}>\n            {currency1.symbol}\n          </Text>\n        </RowFixed>\n\n        <Text fontSize={16} fontWeight={500}>\n          <FormattedCurrencyAmount currencyAmount={token1Amount} />\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\n// hard-code this for now\nconst percentageToMigrate = 100\n\nfunction V2PairMigration({\n  pair,\n  pairBalance,\n  totalSupply,\n  reserve0,\n  reserve1,\n  token0,\n  token1,\n}: {\n  pair: Contract\n  pairBalance: CurrencyAmount<Token>\n  totalSupply: CurrencyAmount<Token>\n  reserve0: CurrencyAmount<Token>\n  reserve1: CurrencyAmount<Token>\n  token0: Token\n  token1: Token\n}) {\n  const { chainId, account } = useActiveWeb3React()\n  const theme = useTheme()\n  const v2FactoryAddress = chainId ? V2_FACTORY_ADDRESSES[chainId] : undefined\n\n  const pairFactory = useSingleCallResult(pair, 'factory')\n  const isNotUniswap = pairFactory.result?.[0] && pairFactory.result[0] !== v2FactoryAddress\n\n  const deadline = useTransactionDeadline() // custom from users settings\n  const blockTimestamp = useCurrentBlockTimestamp()\n  const allowedSlippage = useUserSlippageToleranceWithDefault(DEFAULT_MIGRATE_SLIPPAGE_TOLERANCE) // custom from users\n\n  const currency0 = unwrappedToken(token0)\n  const currency1 = unwrappedToken(token1)\n\n  // this is just getLiquidityValue with the fee off, but for the passed pair\n  const token0Value = useMemo(\n    () =>\n      CurrencyAmount.fromRawAmount(\n        token0,\n        JSBI.divide(JSBI.multiply(pairBalance.quotient, reserve0.quotient), totalSupply.quotient)\n      ),\n    [token0, pairBalance, reserve0, totalSupply]\n  )\n  const token1Value = useMemo(\n    () =>\n      CurrencyAmount.fromRawAmount(\n        token1,\n        JSBI.divide(JSBI.multiply(pairBalance.quotient, reserve1.quotient), totalSupply.quotient)\n      ),\n    [token1, pairBalance, reserve1, totalSupply]\n  )\n\n  // set up v3 pool\n  const [feeAmount, setFeeAmount] = useState(FeeAmount.MEDIUM)\n  const [poolState, pool] = usePool(token0, token1, feeAmount)\n  const noLiquidity = poolState === PoolState.NOT_EXISTS\n\n  // get spot prices + price difference\n  const v2SpotPrice = useMemo(\n    () => new Price(token0, token1, reserve0.quotient, reserve1.quotient),\n    [token0, token1, reserve0, reserve1]\n  )\n  const v3SpotPrice = poolState === PoolState.EXISTS ? pool?.token0Price : undefined\n\n  let priceDifferenceFraction: Fraction | undefined =\n    v2SpotPrice && v3SpotPrice ? v3SpotPrice.divide(v2SpotPrice).subtract(1).multiply(100) : undefined\n  if (priceDifferenceFraction?.lessThan(ZERO)) {\n    priceDifferenceFraction = priceDifferenceFraction.multiply(-1)\n  }\n\n  const largePriceDifference = priceDifferenceFraction && !priceDifferenceFraction?.lessThan(JSBI.BigInt(2))\n\n  // the following is a small hack to get access to price range data/input handlers\n  const [baseToken, setBaseToken] = useState(token0)\n  const { ticks, pricesAtTicks, invertPrice, invalidRange, outOfRange, ticksAtLimit } = useV3DerivedMintInfo(\n    token0,\n    token1,\n    feeAmount,\n    baseToken\n  )\n\n  // get value and prices at ticks\n  const { [Bound.LOWER]: tickLower, [Bound.UPPER]: tickUpper } = ticks\n  const { [Bound.LOWER]: priceLower, [Bound.UPPER]: priceUpper } = pricesAtTicks\n\n  const { getDecrementLower, getIncrementLower, getDecrementUpper, getIncrementUpper } = useRangeHopCallbacks(\n    baseToken,\n    baseToken.equals(token0) ? token1 : token0,\n    feeAmount,\n    tickLower,\n    tickUpper\n  )\n\n  const { onLeftRangeInput, onRightRangeInput } = useV3MintActionHandlers(noLiquidity)\n\n  // the v3 tick is either the pool's tickCurrent, or the tick closest to the v2 spot price\n  const tick = pool?.tickCurrent ?? priceToClosestTick(v2SpotPrice)\n  // the price is either the current v3 price, or the price at the tick\n  const sqrtPrice = pool?.sqrtRatioX96 ?? TickMath.getSqrtRatioAtTick(tick)\n  const position =\n    typeof tickLower === 'number' && typeof tickUpper === 'number' && !invalidRange\n      ? Position.fromAmounts({\n          pool: pool ?? new Pool(token0, token1, feeAmount, sqrtPrice, 0, tick, []),\n          tickLower,\n          tickUpper,\n          amount0: token0Value.quotient,\n          amount1: token1Value.quotient,\n          useFullPrecision: true, // we want full precision for the theoretical position\n        })\n      : undefined\n\n  const { amount0: v3Amount0Min, amount1: v3Amount1Min } = useMemo(\n    () => (position ? position.mintAmountsWithSlippage(allowedSlippage) : { amount0: undefined, amount1: undefined }),\n    [position, allowedSlippage]\n  )\n\n  const refund0 = useMemo(\n    () =>\n      position && CurrencyAmount.fromRawAmount(token0, JSBI.subtract(token0Value.quotient, position.amount0.quotient)),\n    [token0Value, position, token0]\n  )\n  const refund1 = useMemo(\n    () =>\n      position && CurrencyAmount.fromRawAmount(token1, JSBI.subtract(token1Value.quotient, position.amount1.quotient)),\n    [token1Value, position, token1]\n  )\n\n  const [confirmingMigration, setConfirmingMigration] = useState<boolean>(false)\n  const [pendingMigrationHash, setPendingMigrationHash] = useState<string | null>(null)\n\n  const migrator = useV2MigratorContract()\n\n  // approvals\n  const [approval, approveManually] = useApproveCallback(pairBalance, migrator?.address)\n  const { signatureData, gatherPermitSignature } = useV2LiquidityTokenPermit(pairBalance, migrator?.address)\n\n  const isArgentWallet = useIsArgentWallet()\n\n  const approve = useCallback(async () => {\n    if (isNotUniswap || isArgentWallet) {\n      // sushi has to be manually approved\n      await approveManually()\n    } else if (gatherPermitSignature) {\n      try {\n        await gatherPermitSignature()\n      } catch (error) {\n        // try to approve if gatherPermitSignature failed for any reason other than the user rejecting it\n        if (error?.code !== 4001) {\n          await approveManually()\n        }\n      }\n    } else {\n      await approveManually()\n    }\n  }, [isNotUniswap, isArgentWallet, gatherPermitSignature, approveManually])\n\n  const addTransaction = useTransactionAdder()\n  const isMigrationPending = useIsTransactionPending(pendingMigrationHash ?? undefined)\n\n  const migrate = useCallback(() => {\n    if (\n      !migrator ||\n      !account ||\n      !deadline ||\n      !blockTimestamp ||\n      typeof tickLower !== 'number' ||\n      typeof tickUpper !== 'number' ||\n      !v3Amount0Min ||\n      !v3Amount1Min ||\n      !chainId\n    )\n      return\n\n    const deadlineToUse = signatureData?.deadline ?? deadline\n\n    const data: string[] = []\n\n    // permit if necessary\n    if (signatureData) {\n      data.push(\n        migrator.interface.encodeFunctionData('selfPermit', [\n          pair.address,\n          `0x${pairBalance.quotient.toString(16)}`,\n          deadlineToUse,\n          signatureData.v,\n          signatureData.r,\n          signatureData.s,\n        ])\n      )\n    }\n\n    // create/initialize pool if necessary\n    if (noLiquidity) {\n      data.push(\n        migrator.interface.encodeFunctionData('createAndInitializePoolIfNecessary', [\n          token0.address,\n          token1.address,\n          feeAmount,\n          `0x${sqrtPrice.toString(16)}`,\n        ])\n      )\n    }\n\n    // TODO could save gas by not doing this in multicall\n    data.push(\n      migrator.interface.encodeFunctionData('migrate', [\n        {\n          pair: pair.address,\n          liquidityToMigrate: `0x${pairBalance.quotient.toString(16)}`,\n          percentageToMigrate,\n          token0: token0.address,\n          token1: token1.address,\n          fee: feeAmount,\n          tickLower,\n          tickUpper,\n          amount0Min: `0x${v3Amount0Min.toString(16)}`,\n          amount1Min: `0x${v3Amount1Min.toString(16)}`,\n          recipient: account,\n          deadline: deadlineToUse,\n          refundAsETH: true, // hard-code this for now\n        },\n      ])\n    )\n\n    setConfirmingMigration(true)\n\n    migrator.estimateGas\n      .multicall(data)\n      .then((gasEstimate) => {\n        return migrator\n          .multicall(data, { gasLimit: calculateGasMargin(gasEstimate) })\n          .then((response: TransactionResponse) => {\n            ReactGA.event({\n              category: 'Migrate',\n              action: `${isNotUniswap ? 'SushiSwap' : 'V2'}->V3`,\n              label: `${currency0.symbol}/${currency1.symbol}`,\n            })\n\n            addTransaction(response, {\n              type: TransactionType.MIGRATE_LIQUIDITY_V3,\n              baseCurrencyId: currencyId(currency0),\n              quoteCurrencyId: currencyId(currency1),\n              isFork: isNotUniswap,\n            })\n            setPendingMigrationHash(response.hash)\n          })\n      })\n      .catch(() => {\n        setConfirmingMigration(false)\n      })\n  }, [\n    chainId,\n    isNotUniswap,\n    migrator,\n    noLiquidity,\n    blockTimestamp,\n    token0,\n    token1,\n    feeAmount,\n    pairBalance,\n    tickLower,\n    tickUpper,\n    sqrtPrice,\n    v3Amount0Min,\n    v3Amount1Min,\n    account,\n    deadline,\n    signatureData,\n    addTransaction,\n    pair,\n    currency0,\n    currency1,\n  ])\n\n  const isSuccessfullyMigrated = !!pendingMigrationHash && JSBI.equal(pairBalance.quotient, ZERO)\n\n  return (\n    <AutoColumn gap=\"20px\">\n      <ThemedText.Body my={9} style={{ fontWeight: 400 }}>\n        <Trans>\n          This tool will safely migrate your {isNotUniswap ? 'SushiSwap' : 'V2'} liquidity to V3. The process is\n          completely trustless thanks to the{' '}\n        </Trans>\n        {chainId && migrator && (\n          <ExternalLink href={getExplorerLink(chainId, migrator.address, ExplorerDataType.ADDRESS)}>\n            <ThemedText.Blue display=\"inline\">\n              <Trans>Uniswap migration contract↗</Trans>\n            </ThemedText.Blue>\n          </ExternalLink>\n        )}\n        .\n      </ThemedText.Body>\n\n      <LightCard>\n        <AutoColumn gap=\"lg\">\n          <RowBetween>\n            <RowFixed style={{ marginLeft: '8px' }}>\n              <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin={false} size={20} />\n              <ThemedText.MediumHeader style={{ marginLeft: '8px' }}>\n                <Trans>\n                  {currency0.symbol}/{currency1.symbol} LP Tokens\n                </Trans>\n              </ThemedText.MediumHeader>\n            </RowFixed>\n            <Badge variant={BadgeVariant.WARNING}>{isNotUniswap ? 'Sushi' : 'V2'}</Badge>\n          </RowBetween>\n          <LiquidityInfo token0Amount={token0Value} token1Amount={token1Value} />\n        </AutoColumn>\n      </LightCard>\n\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\n        <ArrowDown size={24} />\n      </div>\n\n      <LightCard>\n        <AutoColumn gap=\"lg\">\n          <RowBetween>\n            <RowFixed style={{ marginLeft: '8px' }}>\n              <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin={false} size={20} />\n              <ThemedText.MediumHeader style={{ marginLeft: '8px' }}>\n                <Trans>\n                  {currency0.symbol}/{currency1.symbol} LP NFT\n                </Trans>\n              </ThemedText.MediumHeader>\n            </RowFixed>\n            <Badge variant={BadgeVariant.PRIMARY}>V3</Badge>\n          </RowBetween>\n\n          <FeeSelector feeAmount={feeAmount} handleFeePoolSelect={setFeeAmount} />\n          {noLiquidity && (\n            <BlueCard style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n              <AlertCircle color={theme.text1} style={{ marginBottom: '12px', opacity: 0.8 }} />\n              <ThemedText.Body\n                fontSize={14}\n                style={{ marginBottom: 8, fontWeight: 500, opacity: 0.8 }}\n                textAlign=\"center\"\n              >\n                <Trans>\n                  You are the first liquidity provider for this Uniswap V3 pool. Your liquidity will migrate at the\n                  current {isNotUniswap ? 'SushiSwap' : 'V2'} price.\n                </Trans>\n              </ThemedText.Body>\n\n              <ThemedText.Body\n                fontWeight={500}\n                textAlign=\"center\"\n                fontSize={14}\n                style={{ marginTop: '8px', opacity: 0.8 }}\n              >\n                <Trans>Your transaction cost will be much higher as it includes the gas to create the pool.</Trans>\n              </ThemedText.Body>\n\n              {v2SpotPrice && (\n                <AutoColumn gap=\"8px\" style={{ marginTop: '12px' }}>\n                  <RowBetween>\n                    <ThemedText.Body fontWeight={500} fontSize={14}>\n                      <Trans>\n                        {isNotUniswap ? 'SushiSwap' : 'V2'} {invertPrice ? currency1.symbol : currency0.symbol} Price:\n                      </Trans>{' '}\n                      {invertPrice\n                        ? `${v2SpotPrice?.invert()?.toSignificant(6)} ${currency0.symbol}`\n                        : `${v2SpotPrice?.toSignificant(6)} ${currency1.symbol}`}\n                    </ThemedText.Body>\n                  </RowBetween>\n                </AutoColumn>\n              )}\n            </BlueCard>\n          )}\n\n          {largePriceDifference ? (\n            <YellowCard>\n              <AutoColumn gap=\"8px\">\n                <RowBetween>\n                  <ThemedText.Body fontSize={14}>\n                    <Trans>\n                      {isNotUniswap ? 'SushiSwap' : 'V2'} {invertPrice ? currency1.symbol : currency0.symbol} Price:\n                    </Trans>\n                  </ThemedText.Body>\n                  <ThemedText.Black fontSize={14}>\n                    {invertPrice\n                      ? `${v2SpotPrice?.invert()?.toSignificant(6)} ${currency0.symbol}`\n                      : `${v2SpotPrice?.toSignificant(6)} ${currency1.symbol}`}\n                  </ThemedText.Black>\n                </RowBetween>\n\n                <RowBetween>\n                  <ThemedText.Body fontSize={14}>\n                    <Trans>V3 {invertPrice ? currency1.symbol : currency0.symbol} Price:</Trans>\n                  </ThemedText.Body>\n                  <ThemedText.Black fontSize={14}>\n                    {invertPrice\n                      ? `${v3SpotPrice?.invert()?.toSignificant(6)} ${currency0.symbol}`\n                      : `${v3SpotPrice?.toSignificant(6)} ${currency1.symbol}`}\n                  </ThemedText.Black>\n                </RowBetween>\n\n                <RowBetween>\n                  <ThemedText.Body fontSize={14} color=\"inherit\">\n                    <Trans>Price Difference:</Trans>\n                  </ThemedText.Body>\n                  <ThemedText.Black fontSize={14} color=\"inherit\">\n                    <Trans>{priceDifferenceFraction?.toSignificant(4)}%</Trans>\n                  </ThemedText.Black>\n                </RowBetween>\n              </AutoColumn>\n              <ThemedText.Body fontSize={14} style={{ marginTop: 8, fontWeight: 400 }}>\n                <Trans>\n                  You should only deposit liquidity into Uniswap V3 at a price you believe is correct. <br />\n                  If the price seems incorrect, you can either make a swap to move the price or wait for someone else to\n                  do so.\n                </Trans>\n              </ThemedText.Body>\n            </YellowCard>\n          ) : !noLiquidity && v3SpotPrice ? (\n            <RowBetween>\n              <ThemedText.Body fontSize={14}>\n                <Trans>V3 {invertPrice ? currency1.symbol : currency0.symbol} Price:</Trans>\n              </ThemedText.Body>\n              <ThemedText.Black fontSize={14}>\n                {invertPrice\n                  ? `${v3SpotPrice?.invert()?.toSignificant(6)} ${currency0.symbol}`\n                  : `${v3SpotPrice?.toSignificant(6)} ${currency1.symbol}`}\n              </ThemedText.Black>\n            </RowBetween>\n          ) : null}\n\n          <RowBetween>\n            <ThemedText.Label>\n              <Trans>Set Price Range</Trans>\n            </ThemedText.Label>\n            <RateToggle\n              currencyA={invertPrice ? currency1 : currency0}\n              currencyB={invertPrice ? currency0 : currency1}\n              handleRateToggle={() => {\n                onLeftRangeInput('')\n                onRightRangeInput('')\n                setBaseToken((base) => (base.equals(token0) ? token1 : token0))\n              }}\n            />\n          </RowBetween>\n\n          <RangeSelector\n            priceLower={priceLower}\n            priceUpper={priceUpper}\n            getDecrementLower={getDecrementLower}\n            getIncrementLower={getIncrementLower}\n            getDecrementUpper={getDecrementUpper}\n            getIncrementUpper={getIncrementUpper}\n            onLeftRangeInput={onLeftRangeInput}\n            onRightRangeInput={onRightRangeInput}\n            currencyA={invertPrice ? currency1 : currency0}\n            currencyB={invertPrice ? currency0 : currency1}\n            feeAmount={feeAmount}\n            ticksAtLimit={ticksAtLimit}\n          />\n\n          {outOfRange ? (\n            <YellowCard padding=\"8px 12px\" $borderRadius=\"12px\">\n              <RowBetween>\n                <AlertTriangle stroke={theme.yellow3} size=\"16px\" />\n                <ThemedText.Yellow ml=\"12px\" fontSize=\"12px\">\n                  <Trans>\n                    Your position will not earn fees or be used in trades until the market price moves into your range.\n                  </Trans>\n                </ThemedText.Yellow>\n              </RowBetween>\n            </YellowCard>\n          ) : null}\n\n          {invalidRange ? (\n            <YellowCard padding=\"8px 12px\" $borderRadius=\"12px\">\n              <RowBetween>\n                <AlertTriangle stroke={theme.yellow3} size=\"16px\" />\n                <ThemedText.Yellow ml=\"12px\" fontSize=\"12px\">\n                  <Trans>Invalid range selected. The min price must be lower than the max price.</Trans>\n                </ThemedText.Yellow>\n              </RowBetween>\n            </YellowCard>\n          ) : null}\n\n          {position ? (\n            <DarkGreyCard>\n              <AutoColumn gap=\"md\">\n                <LiquidityInfo token0Amount={position.amount0} token1Amount={position.amount1} />\n                {chainId && refund0 && refund1 ? (\n                  <ThemedText.Black fontSize={12}>\n                    <Trans>\n                      At least {formatCurrencyAmount(refund0, 4)}{' '}\n                      {token0.equals(WRAPPED_NATIVE_CURRENCY[chainId]) ? 'ETH' : token0.symbol} and{' '}\n                      {formatCurrencyAmount(refund1, 4)}{' '}\n                      {token1.equals(WRAPPED_NATIVE_CURRENCY[chainId]) ? 'ETH' : token1.symbol} will be refunded to your\n                      wallet due to selected price range.\n                    </Trans>\n                  </ThemedText.Black>\n                ) : null}\n              </AutoColumn>\n            </DarkGreyCard>\n          ) : null}\n\n          <AutoColumn gap=\"12px\">\n            {!isSuccessfullyMigrated && !isMigrationPending ? (\n              <AutoColumn gap=\"12px\" style={{ flex: '1' }}>\n                <ButtonConfirmed\n                  confirmed={approval === ApprovalState.APPROVED || signatureData !== null}\n                  disabled={\n                    approval !== ApprovalState.NOT_APPROVED ||\n                    signatureData !== null ||\n                    !v3Amount0Min ||\n                    !v3Amount1Min ||\n                    invalidRange ||\n                    confirmingMigration\n                  }\n                  onClick={approve}\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <Dots>\n                      <Trans>Approving</Trans>\n                    </Dots>\n                  ) : approval === ApprovalState.APPROVED || signatureData !== null ? (\n                    <Trans>Allowed</Trans>\n                  ) : (\n                    <Trans>Allow LP token migration</Trans>\n                  )}\n                </ButtonConfirmed>\n              </AutoColumn>\n            ) : null}\n            <AutoColumn gap=\"12px\" style={{ flex: '1' }}>\n              <ButtonConfirmed\n                confirmed={isSuccessfullyMigrated}\n                disabled={\n                  !v3Amount0Min ||\n                  !v3Amount1Min ||\n                  invalidRange ||\n                  (approval !== ApprovalState.APPROVED && signatureData === null) ||\n                  confirmingMigration ||\n                  isMigrationPending ||\n                  isSuccessfullyMigrated\n                }\n                onClick={migrate}\n              >\n                {isSuccessfullyMigrated ? (\n                  'Success!'\n                ) : isMigrationPending ? (\n                  <Dots>\n                    <Trans>Migrating</Trans>\n                  </Dots>\n                ) : (\n                  <Trans>Migrate</Trans>\n                )}\n              </ButtonConfirmed>\n            </AutoColumn>\n          </AutoColumn>\n        </AutoColumn>\n      </LightCard>\n    </AutoColumn>\n  )\n}\n\nexport default function MigrateV2Pair({\n  match: {\n    params: { address },\n  },\n}: RouteComponentProps<{ address: string }>) {\n  // reset mint state on component mount, and as a cleanup (on unmount)\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    dispatch(resetMintState())\n    return () => {\n      dispatch(resetMintState())\n    }\n  }, [dispatch])\n\n  const { chainId, account } = useActiveWeb3React()\n\n  // get pair contract\n  const validatedAddress = isAddress(address)\n  const pair = usePairContract(validatedAddress ? validatedAddress : undefined)\n\n  // get token addresses from pair contract\n  const token0AddressCallState = useSingleCallResult(pair, 'token0', undefined, NEVER_RELOAD)\n  const token0Address = token0AddressCallState?.result?.[0]\n  const token1Address = useSingleCallResult(pair, 'token1', undefined, NEVER_RELOAD)?.result?.[0]\n\n  // get tokens\n  const token0 = useToken(token0Address)\n  const token1 = useToken(token1Address)\n\n  // get liquidity token balance\n  const liquidityToken: Token | undefined = useMemo(\n    () => (chainId && validatedAddress ? new Token(chainId, validatedAddress, 18) : undefined),\n    [chainId, validatedAddress]\n  )\n\n  // get data required for V2 pair migration\n  const pairBalance = useTokenBalance(account ?? undefined, liquidityToken)\n  const totalSupply = useTotalSupply(liquidityToken)\n  const [reserve0Raw, reserve1Raw] = useSingleCallResult(pair, 'getReserves')?.result ?? []\n  const reserve0 = useMemo(\n    () => (token0 && reserve0Raw ? CurrencyAmount.fromRawAmount(token0, reserve0Raw) : undefined),\n    [token0, reserve0Raw]\n  )\n  const reserve1 = useMemo(\n    () => (token1 && reserve1Raw ? CurrencyAmount.fromRawAmount(token1, reserve1Raw) : undefined),\n    [token1, reserve1Raw]\n  )\n\n  // redirect for invalid url params\n  if (\n    !validatedAddress ||\n    !pair ||\n    (pair &&\n      token0AddressCallState?.valid &&\n      !token0AddressCallState?.loading &&\n      !token0AddressCallState?.error &&\n      !token0Address)\n  ) {\n    console.error('Invalid pair address')\n    return <Redirect to=\"/migrate/v2\" />\n  }\n\n  return (\n    <BodyWrapper style={{ padding: 24 }}>\n      <AutoColumn gap=\"16px\">\n        <AutoRow style={{ alignItems: 'center', justifyContent: 'space-between' }} gap=\"8px\">\n          <BackArrow to=\"/migrate/v2\" />\n          <ThemedText.MediumHeader>\n            <Trans>Migrate V2 Liquidity</Trans>\n          </ThemedText.MediumHeader>\n          <SettingsTab placeholderSlippage={DEFAULT_MIGRATE_SLIPPAGE_TOLERANCE} />\n        </AutoRow>\n\n        {!account ? (\n          <ThemedText.LargeHeader>\n            <Trans>You must connect an account.</Trans>\n          </ThemedText.LargeHeader>\n        ) : pairBalance && totalSupply && reserve0 && reserve1 && token0 && token1 ? (\n          <V2PairMigration\n            pair={pair}\n            pairBalance={pairBalance}\n            totalSupply={totalSupply}\n            reserve0={reserve0}\n            reserve1={reserve1}\n            token0={token0}\n            token1={token1}\n          />\n        ) : (\n          <EmptyState message={<Trans>Loading</Trans>} />\n        )}\n      </AutoColumn>\n    </BodyWrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}