{"ast":null,"code":"import { keyframes as _keyframes } from \"styled-components\";\nimport _styled from \"styled-components\";\n\nvar _jsxFileName = \"/Users/safahi/Downloads/interface-4.30.1/src/components/InputStepCounter/InputStepCounter.tsx\",\n    _s = $RefreshSig$();\n\nimport { Trans } from \"@lingui/react\";\nimport { ButtonGray } from 'components/Button';\nimport { OutlineCard } from 'components/Card';\nimport { AutoColumn } from 'components/Column';\nimport { useCallback, useEffect, useState } from 'react';\nimport { Minus, Plus } from 'react-feather';\nimport { ThemedText } from 'theme';\nimport { Input as NumericalInput } from '../NumericalInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst pulse = color => _keyframes`\n  0% {\n    box-shadow: 0 0 0 0 ${color};\n  }\n\n  70% {\n    box-shadow: 0 0 0 2px ${color};\n  }\n\n  100% {\n    box-shadow: 0 0 0 0 ${color};\n  }\n`;\n\nconst InputRow = _styled.div.withConfig({\n  displayName: \"InputStepCounter__InputRow\",\n  componentId: \"sc-kflffs-0\"\n})([\"display:grid;grid-template-columns:30px 1fr 30px;\"]);\n\nconst SmallButton = _styled(ButtonGray).withConfig({\n  displayName: \"InputStepCounter__SmallButton\",\n  componentId: \"sc-kflffs-1\"\n})([\"border-radius:8px;padding:4px;\"]);\n\nconst FocusedOutlineCard = _styled(OutlineCard).withConfig({\n  displayName: \"InputStepCounter__FocusedOutlineCard\",\n  componentId: \"sc-kflffs-2\"\n})([\"border-color:\", \";padding:12px;animation:\", \" 0.8s linear;\"], ({\n  active,\n  theme\n}) => active && theme.blue1, ({\n  pulsing,\n  theme\n}) => pulsing && pulse(theme.blue1));\n\nconst StyledInput = _styled(NumericalInput).withConfig({\n  displayName: \"InputStepCounter__StyledInput\",\n  componentId: \"sc-kflffs-3\"\n})([\"background-color:transparent;text-align:center;width:100%;font-weight:500;padding:0 10px;\", \";\", \";\"], ({\n  theme\n}) => theme.mediaWidth.upToSmall`\n    font-size: 16px;\n  `, ({\n  theme\n}) => theme.mediaWidth.upToExtraSmall`\n    font-size: 12px;\n  `);\n\nconst InputTitle = _styled(ThemedText.Small).withConfig({\n  displayName: \"InputStepCounter__InputTitle\",\n  componentId: \"sc-kflffs-4\"\n})([\"color:\", \";font-size:12px;font-weight:500;\"], ({\n  theme\n}) => theme.text2);\n\nconst ButtonLabel = _styled(ThemedText.White).withConfig({\n  displayName: \"InputStepCounter__ButtonLabel\",\n  componentId: \"sc-kflffs-5\"\n})([\"color:\", \" !important;\"], ({\n  theme,\n  disabled\n}) => disabled ? theme.text2 : theme.text1);\n\nconst StepCounter = ({\n  value,\n  decrement,\n  increment,\n  decrementDisabled = false,\n  incrementDisabled = false,\n  width,\n  locked,\n  onUserInput,\n  title,\n  tokenA,\n  tokenB\n}) => {\n  _s();\n\n  //  for focus state, styled components doesnt let you select input parent container\n  const [active, setActive] = useState(false); // let user type value and only update parent value on blur\n\n  const [localValue, setLocalValue] = useState('');\n  const [useLocalValue, setUseLocalValue] = useState(false); // animation if parent value updates local value\n\n  const [pulsing, setPulsing] = useState(false);\n\n  const handleOnFocus = () => {\n    setUseLocalValue(true);\n    setActive(true);\n  };\n\n  const handleOnBlur = useCallback(() => {\n    setUseLocalValue(false);\n    setActive(false);\n    onUserInput(localValue); // trigger update on parent value\n  }, [localValue, onUserInput]); // for button clicks\n\n  const handleDecrement = useCallback(() => {\n    setUseLocalValue(false);\n    onUserInput(decrement());\n  }, [decrement, onUserInput]);\n  const handleIncrement = useCallback(() => {\n    setUseLocalValue(false);\n    onUserInput(increment());\n  }, [increment, onUserInput]);\n  useEffect(() => {\n    if (localValue !== value && !useLocalValue) {\n      setTimeout(() => {\n        setLocalValue(value); // reset local value to match parent\n\n        setPulsing(true); // trigger animation\n\n        setTimeout(function () {\n          setPulsing(false);\n        }, 1800);\n      }, 0);\n    }\n  }, [localValue, useLocalValue, value]);\n  return /*#__PURE__*/_jsxDEV(FocusedOutlineCard, {\n    pulsing: pulsing,\n    active: active,\n    onFocus: handleOnFocus,\n    onBlur: handleOnBlur,\n    width: width,\n    children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n      gap: \"6px\",\n      children: [/*#__PURE__*/_jsxDEV(InputTitle, {\n        fontSize: 12,\n        textAlign: \"center\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputRow, {\n        children: [!locked && /*#__PURE__*/_jsxDEV(SmallButton, {\n          onClick: handleDecrement,\n          disabled: decrementDisabled,\n          children: /*#__PURE__*/_jsxDEV(ButtonLabel, {\n            disabled: decrementDisabled,\n            fontSize: \"12px\",\n            children: /*#__PURE__*/_jsxDEV(Minus, {\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StyledInput, {\n          className: \"rate-input-0\",\n          value: localValue,\n          fontSize: \"20px\",\n          disabled: locked,\n          onUserInput: val => {\n            setLocalValue(val);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), !locked && /*#__PURE__*/_jsxDEV(SmallButton, {\n          onClick: handleIncrement,\n          disabled: incrementDisabled,\n          children: /*#__PURE__*/_jsxDEV(ButtonLabel, {\n            disabled: incrementDisabled,\n            fontSize: \"12px\",\n            children: /*#__PURE__*/_jsxDEV(Plus, {\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputTitle, {\n        fontSize: 12,\n        textAlign: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Trans, {\n          id: \"{tokenB} per {tokenA}\",\n          values: {\n            tokenB: tokenB,\n            tokenA: tokenA\n          }\n        }, void 0, false, void 0, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StepCounter, \"80/Inpz5GxEnY/Bu/XGznk02DJ4=\");\n\n_c = StepCounter;\nexport default StepCounter;\n\nvar _c;\n\n$RefreshReg$(_c, \"StepCounter\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/components/InputStepCounter/InputStepCounter.tsx"],"names":["ButtonGray","OutlineCard","AutoColumn","useCallback","useEffect","useState","Minus","Plus","ThemedText","Input","NumericalInput","pulse","color","keyframes","InputRow","styled","div","SmallButton","FocusedOutlineCard","active","theme","blue1","pulsing","StyledInput","mediaWidth","upToSmall","upToExtraSmall","InputTitle","Small","text2","ButtonLabel","White","disabled","text1","StepCounter","value","decrement","increment","decrementDisabled","incrementDisabled","width","locked","onUserInput","title","tokenA","tokenB","setActive","localValue","setLocalValue","useLocalValue","setUseLocalValue","setPulsing","handleOnFocus","handleOnBlur","handleDecrement","handleIncrement","setTimeout","val"],"mappings":"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","sourcesContent":["import { Trans } from '@lingui/macro'\nimport { FeeAmount } from '@uniswap/v3-sdk'\nimport { ButtonGray } from 'components/Button'\nimport { OutlineCard } from 'components/Card'\nimport { AutoColumn } from 'components/Column'\nimport { ReactNode, useCallback, useEffect, useState } from 'react'\nimport { Minus, Plus } from 'react-feather'\nimport styled, { keyframes } from 'styled-components/macro'\nimport { ThemedText } from 'theme'\n\nimport { Input as NumericalInput } from '../NumericalInput'\n\nconst pulse = (color: string) => keyframes`\n  0% {\n    box-shadow: 0 0 0 0 ${color};\n  }\n\n  70% {\n    box-shadow: 0 0 0 2px ${color};\n  }\n\n  100% {\n    box-shadow: 0 0 0 0 ${color};\n  }\n`\n\nconst InputRow = styled.div`\n  display: grid;\n\n  grid-template-columns: 30px 1fr 30px;\n`\n\nconst SmallButton = styled(ButtonGray)`\n  border-radius: 8px;\n  padding: 4px;\n`\n\nconst FocusedOutlineCard = styled(OutlineCard)<{ active?: boolean; pulsing?: boolean }>`\n  border-color: ${({ active, theme }) => active && theme.blue1};\n  padding: 12px;\n  animation: ${({ pulsing, theme }) => pulsing && pulse(theme.blue1)} 0.8s linear;\n`\n\nconst StyledInput = styled(NumericalInput)<{ usePercent?: boolean }>`\n  background-color: transparent;\n  text-align: center;\n  width: 100%;\n  font-weight: 500;\n  padding: 0 10px;\n\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    font-size: 16px;\n  `};\n\n  ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n    font-size: 12px;\n  `};\n`\n\nconst InputTitle = styled(ThemedText.Small)`\n  color: ${({ theme }) => theme.text2};\n  font-size: 12px;\n  font-weight: 500;\n`\n\nconst ButtonLabel = styled(ThemedText.White)<{ disabled: boolean }>`\n  color: ${({ theme, disabled }) => (disabled ? theme.text2 : theme.text1)} !important;\n`\n\ninterface StepCounterProps {\n  value: string\n  onUserInput: (value: string) => void\n  decrement: () => string\n  increment: () => string\n  decrementDisabled?: boolean\n  incrementDisabled?: boolean\n  feeAmount?: FeeAmount\n  label?: string\n  width?: string\n  locked?: boolean // disable input\n  title: ReactNode\n  tokenA: string | undefined\n  tokenB: string | undefined\n}\n\nconst StepCounter = ({\n  value,\n  decrement,\n  increment,\n  decrementDisabled = false,\n  incrementDisabled = false,\n  width,\n  locked,\n  onUserInput,\n  title,\n  tokenA,\n  tokenB,\n}: StepCounterProps) => {\n  //  for focus state, styled components doesnt let you select input parent container\n  const [active, setActive] = useState(false)\n\n  // let user type value and only update parent value on blur\n  const [localValue, setLocalValue] = useState('')\n  const [useLocalValue, setUseLocalValue] = useState(false)\n\n  // animation if parent value updates local value\n  const [pulsing, setPulsing] = useState<boolean>(false)\n\n  const handleOnFocus = () => {\n    setUseLocalValue(true)\n    setActive(true)\n  }\n\n  const handleOnBlur = useCallback(() => {\n    setUseLocalValue(false)\n    setActive(false)\n    onUserInput(localValue) // trigger update on parent value\n  }, [localValue, onUserInput])\n\n  // for button clicks\n  const handleDecrement = useCallback(() => {\n    setUseLocalValue(false)\n    onUserInput(decrement())\n  }, [decrement, onUserInput])\n\n  const handleIncrement = useCallback(() => {\n    setUseLocalValue(false)\n    onUserInput(increment())\n  }, [increment, onUserInput])\n\n  useEffect(() => {\n    if (localValue !== value && !useLocalValue) {\n      setTimeout(() => {\n        setLocalValue(value) // reset local value to match parent\n        setPulsing(true) // trigger animation\n        setTimeout(function () {\n          setPulsing(false)\n        }, 1800)\n      }, 0)\n    }\n  }, [localValue, useLocalValue, value])\n\n  return (\n    <FocusedOutlineCard pulsing={pulsing} active={active} onFocus={handleOnFocus} onBlur={handleOnBlur} width={width}>\n      <AutoColumn gap=\"6px\">\n        <InputTitle fontSize={12} textAlign=\"center\">\n          {title}\n        </InputTitle>\n\n        <InputRow>\n          {!locked && (\n            <SmallButton onClick={handleDecrement} disabled={decrementDisabled}>\n              <ButtonLabel disabled={decrementDisabled} fontSize=\"12px\">\n                <Minus size={18} />\n              </ButtonLabel>\n            </SmallButton>\n          )}\n\n          <StyledInput\n            className=\"rate-input-0\"\n            value={localValue}\n            fontSize=\"20px\"\n            disabled={locked}\n            onUserInput={(val) => {\n              setLocalValue(val)\n            }}\n          />\n\n          {!locked && (\n            <SmallButton onClick={handleIncrement} disabled={incrementDisabled}>\n              <ButtonLabel disabled={incrementDisabled} fontSize=\"12px\">\n                <Plus size={18} />\n              </ButtonLabel>\n            </SmallButton>\n          )}\n        </InputRow>\n\n        <InputTitle fontSize={12} textAlign=\"center\">\n          <Trans>\n            {tokenB} per {tokenA}\n          </Trans>\n        </InputTitle>\n      </AutoColumn>\n    </FocusedOutlineCard>\n  )\n}\n\nexport default StepCounter\n"]},"metadata":{},"sourceType":"module"}