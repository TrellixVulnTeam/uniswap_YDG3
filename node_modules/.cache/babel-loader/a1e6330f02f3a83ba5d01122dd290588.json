{"ast":null,"code":"import { createReducer } from '@reduxjs/toolkit';\nimport { DEFAULT_DEADLINE_FROM_NOW } from '../../constants/misc';\nimport { updateVersion } from '../global/actions';\nimport { addSerializedPair, addSerializedToken, removeSerializedPair, removeSerializedToken, updateHideClosedPositions, updateMatchesDarkMode, updateUserClientSideRouter, updateUserDarkMode, updateUserDeadline, updateUserExpertMode, updateUserLocale, updateUserSlippageTolerance } from './actions';\n\nconst currentTimestamp = () => new Date().getTime();\n\nfunction pairKey(token0Address, token1Address) {\n  return `${token0Address};${token1Address}`;\n}\n\nexport const initialState = {\n  matchesDarkMode: false,\n  userDarkMode: null,\n  userExpertMode: false,\n  userLocale: null,\n  userClientSideRouter: false,\n  userHideClosedPositions: false,\n  userSlippageTolerance: 'auto',\n  userSlippageToleranceHasBeenMigratedToAuto: true,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  URLWarningVisible: true\n};\nexport default createReducer(initialState, builder => builder.addCase(updateVersion, state => {\n  // slippage isnt being tracked in local storage, reset to default\n  // noinspection SuspiciousTypeOfGuard\n  if (typeof state.userSlippageTolerance !== 'number' || !Number.isInteger(state.userSlippageTolerance) || state.userSlippageTolerance < 0 || state.userSlippageTolerance > 5000) {\n    state.userSlippageTolerance = 'auto';\n  } else {\n    if (!state.userSlippageToleranceHasBeenMigratedToAuto && [10, 50, 100].indexOf(state.userSlippageTolerance) !== -1) {\n      state.userSlippageTolerance = 'auto';\n      state.userSlippageToleranceHasBeenMigratedToAuto = true;\n    }\n  } // deadline isnt being tracked in local storage, reset to default\n  // noinspection SuspiciousTypeOfGuard\n\n\n  if (typeof state.userDeadline !== 'number' || !Number.isInteger(state.userDeadline) || state.userDeadline < 60 || state.userDeadline > 180 * 60) {\n    state.userDeadline = DEFAULT_DEADLINE_FROM_NOW;\n  }\n\n  state.lastUpdateVersionTimestamp = currentTimestamp();\n}).addCase(updateUserDarkMode, (state, action) => {\n  state.userDarkMode = action.payload.userDarkMode;\n  state.timestamp = currentTimestamp();\n}).addCase(updateMatchesDarkMode, (state, action) => {\n  state.matchesDarkMode = action.payload.matchesDarkMode;\n  state.timestamp = currentTimestamp();\n}).addCase(updateUserExpertMode, (state, action) => {\n  state.userExpertMode = action.payload.userExpertMode;\n  state.timestamp = currentTimestamp();\n}).addCase(updateUserLocale, (state, action) => {\n  state.userLocale = action.payload.userLocale;\n  state.timestamp = currentTimestamp();\n}).addCase(updateUserSlippageTolerance, (state, action) => {\n  state.userSlippageTolerance = action.payload.userSlippageTolerance;\n  state.timestamp = currentTimestamp();\n}).addCase(updateUserDeadline, (state, action) => {\n  state.userDeadline = action.payload.userDeadline;\n  state.timestamp = currentTimestamp();\n}).addCase(updateUserClientSideRouter, (state, action) => {\n  state.userClientSideRouter = action.payload.userClientSideRouter;\n}).addCase(updateHideClosedPositions, (state, action) => {\n  state.userHideClosedPositions = action.payload.userHideClosedPositions;\n}).addCase(addSerializedToken, (state, {\n  payload: {\n    serializedToken\n  }\n}) => {\n  if (!state.tokens) {\n    state.tokens = {};\n  }\n\n  state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {};\n  state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken;\n  state.timestamp = currentTimestamp();\n}).addCase(removeSerializedToken, (state, {\n  payload: {\n    address,\n    chainId\n  }\n}) => {\n  if (!state.tokens) {\n    state.tokens = {};\n  }\n\n  state.tokens[chainId] = state.tokens[chainId] || {};\n  delete state.tokens[chainId][address];\n  state.timestamp = currentTimestamp();\n}).addCase(addSerializedPair, (state, {\n  payload: {\n    serializedPair\n  }\n}) => {\n  if (serializedPair.token0.chainId === serializedPair.token1.chainId && serializedPair.token0.address !== serializedPair.token1.address) {\n    const chainId = serializedPair.token0.chainId;\n    state.pairs[chainId] = state.pairs[chainId] || {};\n    state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair;\n  }\n\n  state.timestamp = currentTimestamp();\n}).addCase(removeSerializedPair, (state, {\n  payload: {\n    chainId,\n    tokenAAddress,\n    tokenBAddress\n  }\n}) => {\n  if (state.pairs[chainId]) {\n    // just delete both keys if either exists\n    delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)];\n    delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)];\n  }\n\n  state.timestamp = currentTimestamp();\n}));","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/state/user/reducer.ts"],"names":["createReducer","DEFAULT_DEADLINE_FROM_NOW","updateVersion","addSerializedPair","addSerializedToken","removeSerializedPair","removeSerializedToken","updateHideClosedPositions","updateMatchesDarkMode","updateUserClientSideRouter","updateUserDarkMode","updateUserDeadline","updateUserExpertMode","updateUserLocale","updateUserSlippageTolerance","currentTimestamp","Date","getTime","pairKey","token0Address","token1Address","initialState","matchesDarkMode","userDarkMode","userExpertMode","userLocale","userClientSideRouter","userHideClosedPositions","userSlippageTolerance","userSlippageToleranceHasBeenMigratedToAuto","userDeadline","tokens","pairs","timestamp","URLWarningVisible","builder","addCase","state","Number","isInteger","indexOf","lastUpdateVersionTimestamp","action","payload","serializedToken","chainId","address","serializedPair","token0","token1","tokenAAddress","tokenBAddress"],"mappings":"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","sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\nimport { SupportedLocale } from 'constants/locales'\n\nimport { DEFAULT_DEADLINE_FROM_NOW } from '../../constants/misc'\nimport { updateVersion } from '../global/actions'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  updateHideClosedPositions,\n  updateMatchesDarkMode,\n  updateUserClientSideRouter,\n  updateUserDarkMode,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserLocale,\n  updateUserSlippageTolerance,\n} from './actions'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  matchesDarkMode: boolean // whether the dark mode media query matches\n\n  userDarkMode: boolean | null // the user's choice for dark mode or light mode\n  userLocale: SupportedLocale | null\n\n  userExpertMode: boolean\n\n  userClientSideRouter: boolean // whether routes should be calculated with the client side router only\n\n  // hides closed (inactive) positions across the app\n  userHideClosedPositions: boolean\n\n  // user defined slippage tolerance in bips, used in all txns\n  userSlippageTolerance: number | 'auto'\n  userSlippageToleranceHasBeenMigratedToAuto: boolean // temporary flag for migration status\n\n  // deadline set by user in minutes, used in all txns\n  userDeadline: number\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  timestamp: number\n  URLWarningVisible: boolean\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  matchesDarkMode: false,\n  userDarkMode: null,\n  userExpertMode: false,\n  userLocale: null,\n  userClientSideRouter: false,\n  userHideClosedPositions: false,\n  userSlippageTolerance: 'auto',\n  userSlippageToleranceHasBeenMigratedToAuto: true,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  URLWarningVisible: true,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateVersion, (state) => {\n      // slippage isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (\n        typeof state.userSlippageTolerance !== 'number' ||\n        !Number.isInteger(state.userSlippageTolerance) ||\n        state.userSlippageTolerance < 0 ||\n        state.userSlippageTolerance > 5000\n      ) {\n        state.userSlippageTolerance = 'auto'\n      } else {\n        if (\n          !state.userSlippageToleranceHasBeenMigratedToAuto &&\n          [10, 50, 100].indexOf(state.userSlippageTolerance) !== -1\n        ) {\n          state.userSlippageTolerance = 'auto'\n          state.userSlippageToleranceHasBeenMigratedToAuto = true\n        }\n      }\n\n      // deadline isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (\n        typeof state.userDeadline !== 'number' ||\n        !Number.isInteger(state.userDeadline) ||\n        state.userDeadline < 60 ||\n        state.userDeadline > 180 * 60\n      ) {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserDarkMode, (state, action) => {\n      state.userDarkMode = action.payload.userDarkMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateMatchesDarkMode, (state, action) => {\n      state.matchesDarkMode = action.payload.matchesDarkMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserLocale, (state, action) => {\n      state.userLocale = action.payload.userLocale\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserClientSideRouter, (state, action) => {\n      state.userClientSideRouter = action.payload.userClientSideRouter\n    })\n    .addCase(updateHideClosedPositions, (state, action) => {\n      state.userHideClosedPositions = action.payload.userHideClosedPositions\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const chainId = serializedPair.token0.chainId\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n)\n"]},"metadata":{},"sourceType":"module"}