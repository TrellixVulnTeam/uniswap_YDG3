{"ast":null,"code":"import { ThemeContext as _ThemeContext } from \"styled-components\";\n\nvar _jsxFileName = \"/Users/safahi/Downloads/interface-4.30.1/src/pages/AddLiquidity/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Trans } from \"@lingui/react\";\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { Percent } from '@uniswap/sdk-core';\nimport { FeeAmount, NonfungiblePositionManager } from '@uniswap/v3-sdk';\nimport UnsupportedCurrencyFooter from 'components/swap/UnsupportedCurrencyFooter';\nimport { useCallback, useContext, useEffect, useState } from 'react';\nimport { AlertTriangle } from 'react-feather';\nimport ReactGA from 'react-ga';\nimport { Text } from 'rebass';\nimport { useRangeHopCallbacks, useV3DerivedMintInfo, useV3MintActionHandlers, useV3MintState } from 'state/mint/v3/hooks';\nimport { ButtonError, ButtonLight, ButtonPrimary, ButtonText, ButtonYellow } from '../../components/Button';\nimport { BlueCard, OutlineCard, YellowCard } from '../../components/Card';\nimport { AutoColumn } from '../../components/Column';\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel';\nimport FeeSelector from '../../components/FeeSelector';\nimport HoverInlineText from '../../components/HoverInlineText';\nimport LiquidityChartRangeInput from '../../components/LiquidityChartRangeInput';\nimport { AddRemoveTabs } from '../../components/NavigationTabs';\nimport { PositionPreview } from '../../components/PositionPreview';\nimport RangeSelector from '../../components/RangeSelector';\nimport PresetsButtons from '../../components/RangeSelector/PresetsButtons';\nimport RateToggle from '../../components/RateToggle';\nimport Row, { AutoRow, RowBetween, RowFixed } from '../../components/Row';\nimport { SwitchLocaleLink } from '../../components/SwitchLocaleLink';\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal';\nimport { NONFUNGIBLE_POSITION_MANAGER_ADDRESSES } from '../../constants/addresses';\nimport { ZERO_PERCENT } from '../../constants/misc';\nimport { WRAPPED_NATIVE_CURRENCY } from '../../constants/tokens';\nimport { useCurrency } from '../../hooks/Tokens';\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback';\nimport { useArgentWalletContract } from '../../hooks/useArgentWalletContract';\nimport { useV3NFTPositionManagerContract } from '../../hooks/useContract';\nimport { useDerivedPositionInfo } from '../../hooks/useDerivedPositionInfo';\nimport { useIsSwapUnsupported } from '../../hooks/useIsSwapUnsupported';\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline';\nimport { useUSDCValue } from '../../hooks/useUSDCPrice';\nimport { useV3PositionFromTokenId } from '../../hooks/useV3Positions';\nimport { useActiveWeb3React } from '../../hooks/web3';\nimport { useWalletModalToggle } from '../../state/application/hooks';\nimport { Bound, Field } from '../../state/mint/v3/actions';\nimport { TransactionType } from '../../state/transactions/actions';\nimport { useTransactionAdder } from '../../state/transactions/hooks';\nimport { useIsExpertMode, useUserSlippageToleranceWithDefault } from '../../state/user/hooks';\nimport { ExternalLink, ThemedText } from '../../theme';\nimport approveAmountCalldata from '../../utils/approveAmountCalldata';\nimport { calculateGasMargin } from '../../utils/calculateGasMargin';\nimport { currencyId } from '../../utils/currencyId';\nimport { maxAmountSpend } from '../../utils/maxAmountSpend';\nimport { Dots } from '../Pool/styleds';\nimport { Review } from './Review';\nimport { CurrencyDropdown, DynamicSection, HideMedium, MediumOnly, PageWrapper, ResponsiveTwoColumns, RightContainer, ScrollablePage, StackedContainer, StackedItem, StyledInput, Wrapper } from './styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DEFAULT_ADD_IN_RANGE_SLIPPAGE_TOLERANCE = new Percent(50, 10000);\nexport default function AddLiquidity({\n  match: {\n    params: {\n      currencyIdA,\n      currencyIdB,\n      feeAmount: feeAmountFromUrl,\n      tokenId\n    }\n  },\n  history\n}) {\n  _s();\n\n  var _parsedAmounts$depend, _parsedAmounts$depend2, _parsedAmounts$Field$7, _currencies$Field$CUR3, _parsedAmounts$Field$8, _currencies$Field$CUR4, _currencies$Field$CUR9, _currencies$Field$CUR10, _currencies$Field$CUR11, _currencies$Field$CUR12, _price$invert;\n\n  const {\n    account,\n    chainId,\n    library\n  } = useActiveWeb3React();\n  const theme = useContext(_ThemeContext);\n  const toggleWalletModal = useWalletModalToggle(); // toggle wallet when disconnected\n\n  const expertMode = useIsExpertMode();\n  const addTransaction = useTransactionAdder();\n  const positionManager = useV3NFTPositionManagerContract(); // check for existing position if tokenId in url\n\n  const {\n    position: existingPositionDetails,\n    loading: positionLoading\n  } = useV3PositionFromTokenId(tokenId ? BigNumber.from(tokenId) : undefined);\n  const hasExistingPosition = !!existingPositionDetails && !positionLoading;\n  const {\n    position: existingPosition\n  } = useDerivedPositionInfo(existingPositionDetails); // fee selection from url\n\n  const feeAmount = feeAmountFromUrl && Object.values(FeeAmount).includes(parseFloat(feeAmountFromUrl)) ? parseFloat(feeAmountFromUrl) : undefined;\n  const baseCurrency = useCurrency(currencyIdA);\n  const currencyB = useCurrency(currencyIdB); // prevent an error if they input ETH/WETH\n\n  const quoteCurrency = baseCurrency && currencyB && baseCurrency.wrapped.equals(currencyB.wrapped) ? undefined : currencyB; // mint state\n\n  const {\n    independentField,\n    typedValue,\n    startPriceTypedValue\n  } = useV3MintState();\n  const {\n    pool,\n    ticks,\n    dependentField,\n    price,\n    pricesAtTicks,\n    parsedAmounts,\n    currencyBalances,\n    position,\n    noLiquidity,\n    currencies,\n    errorMessage,\n    invalidPool,\n    invalidRange,\n    outOfRange,\n    depositADisabled,\n    depositBDisabled,\n    invertPrice,\n    ticksAtLimit\n  } = useV3DerivedMintInfo(baseCurrency !== null && baseCurrency !== void 0 ? baseCurrency : undefined, quoteCurrency !== null && quoteCurrency !== void 0 ? quoteCurrency : undefined, feeAmount, baseCurrency !== null && baseCurrency !== void 0 ? baseCurrency : undefined, existingPosition);\n  const {\n    onFieldAInput,\n    onFieldBInput,\n    onLeftRangeInput,\n    onRightRangeInput,\n    onStartPriceInput\n  } = useV3MintActionHandlers(noLiquidity);\n  const isValid = !errorMessage && !invalidRange; // modal and loading\n\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [attemptingTxn, setAttemptingTxn] = useState(false); // clicked confirm\n  // capital efficiency warning\n\n  const [showCapitalEfficiencyWarning, setShowCapitalEfficiencyWarning] = useState(false);\n  useEffect(() => setShowCapitalEfficiencyWarning(false), [baseCurrency, quoteCurrency, feeAmount]); // txn values\n\n  const deadline = useTransactionDeadline(); // custom from users settings\n\n  const [txHash, setTxHash] = useState(''); // get formatted amounts\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: (_parsedAmounts$depend = (_parsedAmounts$depend2 = parsedAmounts[dependentField]) === null || _parsedAmounts$depend2 === void 0 ? void 0 : _parsedAmounts$depend2.toSignificant(6)) !== null && _parsedAmounts$depend !== void 0 ? _parsedAmounts$depend : ''\n  };\n  const usdcValues = {\n    [Field.CURRENCY_A]: useUSDCValue(parsedAmounts[Field.CURRENCY_A]),\n    [Field.CURRENCY_B]: useUSDCValue(parsedAmounts[Field.CURRENCY_B])\n  }; // get the max amounts user can add\n\n  const maxAmounts = [Field.CURRENCY_A, Field.CURRENCY_B].reduce((accumulator, field) => {\n    return { ...accumulator,\n      [field]: maxAmountSpend(currencyBalances[field])\n    };\n  }, {});\n  const atMaxAmounts = [Field.CURRENCY_A, Field.CURRENCY_B].reduce((accumulator, field) => {\n    var _maxAmounts$field, _parsedAmounts$field;\n\n    return { ...accumulator,\n      [field]: (_maxAmounts$field = maxAmounts[field]) === null || _maxAmounts$field === void 0 ? void 0 : _maxAmounts$field.equalTo((_parsedAmounts$field = parsedAmounts[field]) !== null && _parsedAmounts$field !== void 0 ? _parsedAmounts$field : '0')\n    };\n  }, {});\n  const argentWalletContract = useArgentWalletContract(); // check whether the user has approved the router on the tokens\n\n  const [approvalA, approveACallback] = useApproveCallback(argentWalletContract ? undefined : parsedAmounts[Field.CURRENCY_A], chainId ? NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId] : undefined);\n  const [approvalB, approveBCallback] = useApproveCallback(argentWalletContract ? undefined : parsedAmounts[Field.CURRENCY_B], chainId ? NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId] : undefined);\n  const allowedSlippage = useUserSlippageToleranceWithDefault(outOfRange ? ZERO_PERCENT : DEFAULT_ADD_IN_RANGE_SLIPPAGE_TOLERANCE);\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return;\n\n    if (!positionManager || !baseCurrency || !quoteCurrency) {\n      return;\n    }\n\n    if (position && account && deadline) {\n      const useNative = baseCurrency.isNative ? baseCurrency : quoteCurrency.isNative ? quoteCurrency : undefined;\n      const {\n        calldata,\n        value\n      } = hasExistingPosition && tokenId ? NonfungiblePositionManager.addCallParameters(position, {\n        tokenId,\n        slippageTolerance: allowedSlippage,\n        deadline: deadline.toString(),\n        useNative\n      }) : NonfungiblePositionManager.addCallParameters(position, {\n        slippageTolerance: allowedSlippage,\n        recipient: account,\n        deadline: deadline.toString(),\n        useNative,\n        createPool: noLiquidity\n      });\n      let txn = {\n        to: NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId],\n        data: calldata,\n        value\n      };\n\n      if (argentWalletContract) {\n        const amountA = parsedAmounts[Field.CURRENCY_A];\n        const amountB = parsedAmounts[Field.CURRENCY_B];\n        const batch = [...(amountA && amountA.currency.isToken ? [approveAmountCalldata(amountA, NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId])] : []), ...(amountB && amountB.currency.isToken ? [approveAmountCalldata(amountB, NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId])] : []), {\n          to: txn.to,\n          data: txn.data,\n          value: txn.value\n        }];\n        const data = argentWalletContract.interface.encodeFunctionData('wc_multiCall', [batch]);\n        txn = {\n          to: argentWalletContract.address,\n          data,\n          value: '0x0'\n        };\n      }\n\n      setAttemptingTxn(true);\n      library.getSigner().estimateGas(txn).then(estimate => {\n        const newTxn = { ...txn,\n          gasLimit: calculateGasMargin(estimate)\n        };\n        return library.getSigner().sendTransaction(newTxn).then(response => {\n          var _parsedAmounts$Field$, _parsedAmounts$Field$2, _parsedAmounts$Field$3, _parsedAmounts$Field$4, _parsedAmounts$Field$5, _parsedAmounts$Field$6, _currencies$Field$CUR, _currencies$Field$CUR2;\n\n          setAttemptingTxn(false);\n          addTransaction(response, {\n            type: TransactionType.ADD_LIQUIDITY_V3_POOL,\n            baseCurrencyId: currencyId(baseCurrency),\n            quoteCurrencyId: currencyId(quoteCurrency),\n            createPool: Boolean(noLiquidity),\n            expectedAmountBaseRaw: (_parsedAmounts$Field$ = (_parsedAmounts$Field$2 = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$2 === void 0 ? void 0 : (_parsedAmounts$Field$3 = _parsedAmounts$Field$2.quotient) === null || _parsedAmounts$Field$3 === void 0 ? void 0 : _parsedAmounts$Field$3.toString()) !== null && _parsedAmounts$Field$ !== void 0 ? _parsedAmounts$Field$ : '0',\n            expectedAmountQuoteRaw: (_parsedAmounts$Field$4 = (_parsedAmounts$Field$5 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$5 === void 0 ? void 0 : (_parsedAmounts$Field$6 = _parsedAmounts$Field$5.quotient) === null || _parsedAmounts$Field$6 === void 0 ? void 0 : _parsedAmounts$Field$6.toString()) !== null && _parsedAmounts$Field$4 !== void 0 ? _parsedAmounts$Field$4 : '0',\n            feeAmount: position.pool.fee\n          });\n          setTxHash(response.hash);\n          ReactGA.event({\n            category: 'Liquidity',\n            action: 'Add',\n            label: [(_currencies$Field$CUR = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR === void 0 ? void 0 : _currencies$Field$CUR.symbol, (_currencies$Field$CUR2 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR2 === void 0 ? void 0 : _currencies$Field$CUR2.symbol].join('/')\n          });\n        });\n      }).catch(error => {\n        console.error('Failed to send transaction', error);\n        setAttemptingTxn(false); // we only care if the error is something _other_ than the user rejected the tx\n\n        if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n          console.error(error);\n        }\n      });\n    } else {\n      return;\n    }\n  }\n\n  const handleCurrencySelect = useCallback((currencyNew, currencyIdOther) => {\n    const currencyIdNew = currencyId(currencyNew);\n\n    if (currencyIdNew === currencyIdOther) {\n      // not ideal, but for now clobber the other if the currency ids are equal\n      return [currencyIdNew, undefined];\n    } else {\n      var _WRAPPED_NATIVE_CURRE, _WRAPPED_NATIVE_CURRE2;\n\n      // prevent weth + eth\n      const isETHOrWETHNew = currencyIdNew === 'ETH' || chainId !== undefined && currencyIdNew === ((_WRAPPED_NATIVE_CURRE = WRAPPED_NATIVE_CURRENCY[chainId]) === null || _WRAPPED_NATIVE_CURRE === void 0 ? void 0 : _WRAPPED_NATIVE_CURRE.address);\n      const isETHOrWETHOther = currencyIdOther !== undefined && (currencyIdOther === 'ETH' || chainId !== undefined && currencyIdOther === ((_WRAPPED_NATIVE_CURRE2 = WRAPPED_NATIVE_CURRENCY[chainId]) === null || _WRAPPED_NATIVE_CURRE2 === void 0 ? void 0 : _WRAPPED_NATIVE_CURRE2.address));\n\n      if (isETHOrWETHNew && isETHOrWETHOther) {\n        return [currencyIdNew, undefined];\n      } else {\n        return [currencyIdNew, currencyIdOther];\n      }\n    }\n  }, [chainId]);\n  const handleCurrencyASelect = useCallback(currencyANew => {\n    const [idA, idB] = handleCurrencySelect(currencyANew, currencyIdB);\n\n    if (idB === undefined) {\n      history.push(`/add/${idA}`);\n    } else {\n      history.push(`/add/${idA}/${idB}`);\n    }\n  }, [handleCurrencySelect, currencyIdB, history]);\n  const handleCurrencyBSelect = useCallback(currencyBNew => {\n    const [idB, idA] = handleCurrencySelect(currencyBNew, currencyIdA);\n\n    if (idA === undefined) {\n      history.push(`/add/${idB}`);\n    } else {\n      history.push(`/add/${idA}/${idB}`);\n    }\n  }, [handleCurrencySelect, currencyIdA, history]);\n  const handleFeePoolSelect = useCallback(newFeeAmount => {\n    onLeftRangeInput('');\n    onRightRangeInput('');\n    history.push(`/add/${currencyIdA}/${currencyIdB}/${newFeeAmount}`);\n  }, [currencyIdA, currencyIdB, history, onLeftRangeInput, onRightRangeInput]);\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false); // if there was a tx hash, we want to clear the input\n\n    if (txHash) {\n      onFieldAInput(''); // dont jump to pool page if creating\n\n      history.push('/pool');\n    }\n\n    setTxHash('');\n  }, [history, onFieldAInput, txHash]);\n  const addIsUnsupported = useIsSwapUnsupported(currencies === null || currencies === void 0 ? void 0 : currencies.CURRENCY_A, currencies === null || currencies === void 0 ? void 0 : currencies.CURRENCY_B);\n  const clearAll = useCallback(() => {\n    onFieldAInput('');\n    onFieldBInput('');\n    onLeftRangeInput('');\n    onRightRangeInput('');\n    history.push(`/add`);\n  }, [history, onFieldAInput, onFieldBInput, onLeftRangeInput, onRightRangeInput]); // get value and prices at ticks\n\n  const {\n    [Bound.LOWER]: tickLower,\n    [Bound.UPPER]: tickUpper\n  } = ticks;\n  const {\n    [Bound.LOWER]: priceLower,\n    [Bound.UPPER]: priceUpper\n  } = pricesAtTicks;\n  const {\n    getDecrementLower,\n    getIncrementLower,\n    getDecrementUpper,\n    getIncrementUpper,\n    getSetFullRange\n  } = useRangeHopCallbacks(baseCurrency !== null && baseCurrency !== void 0 ? baseCurrency : undefined, quoteCurrency !== null && quoteCurrency !== void 0 ? quoteCurrency : undefined, feeAmount, tickLower, tickUpper, pool); // we need an existence check on parsed amounts for single-asset deposits\n\n  const showApprovalA = !argentWalletContract && approvalA !== ApprovalState.APPROVED && !!parsedAmounts[Field.CURRENCY_A];\n  const showApprovalB = !argentWalletContract && approvalB !== ApprovalState.APPROVED && !!parsedAmounts[Field.CURRENCY_B];\n  const pendingText = `Supplying ${!depositADisabled ? (_parsedAmounts$Field$7 = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$7 === void 0 ? void 0 : _parsedAmounts$Field$7.toSignificant(6) : ''} ${!depositADisabled ? (_currencies$Field$CUR3 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR3 === void 0 ? void 0 : _currencies$Field$CUR3.symbol : ''} ${!outOfRange ? 'and' : ''} ${!depositBDisabled ? (_parsedAmounts$Field$8 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$8 === void 0 ? void 0 : _parsedAmounts$Field$8.toSignificant(6) : ''} ${!depositBDisabled ? (_currencies$Field$CUR4 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR4 === void 0 ? void 0 : _currencies$Field$CUR4.symbol : ''}`;\n\n  const Buttons = () => {\n    var _currencies$Field$CUR5, _currencies$Field$CUR6, _currencies$Field$CUR7, _currencies$Field$CUR8;\n\n    return addIsUnsupported ? /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n      disabled: true,\n      $borderRadius: \"12px\",\n      padding: '12px',\n      children: /*#__PURE__*/_jsxDEV(ThemedText.Main, {\n        mb: \"4px\",\n        children: /*#__PURE__*/_jsxDEV(Trans, {\n          id: \"Unsupported Asset\"\n        }, void 0, false, void 0, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 7\n    }, this) : !account ? /*#__PURE__*/_jsxDEV(ButtonLight, {\n      onClick: toggleWalletModal,\n      $borderRadius: \"12px\",\n      padding: '12px',\n      children: /*#__PURE__*/_jsxDEV(Trans, {\n        id: \"Connect Wallet\"\n      }, void 0, false, void 0, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(AutoColumn, {\n      gap: 'md',\n      children: [(approvalA === ApprovalState.NOT_APPROVED || approvalA === ApprovalState.PENDING || approvalB === ApprovalState.NOT_APPROVED || approvalB === ApprovalState.PENDING) && isValid && /*#__PURE__*/_jsxDEV(RowBetween, {\n        children: [showApprovalA && /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n          onClick: approveACallback,\n          disabled: approvalA === ApprovalState.PENDING,\n          width: showApprovalB ? '48%' : '100%',\n          children: approvalA === ApprovalState.PENDING ? /*#__PURE__*/_jsxDEV(Dots, {\n            children: /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"Approving {0}\",\n              values: {\n                0: (_currencies$Field$CUR5 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR5 === void 0 ? void 0 : _currencies$Field$CUR5.symbol\n              }\n            }, void 0, false, void 0, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Approve {0}\",\n            values: {\n              0: (_currencies$Field$CUR6 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR6 === void 0 ? void 0 : _currencies$Field$CUR6.symbol\n            }\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 17\n        }, this), showApprovalB && /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n          onClick: approveBCallback,\n          disabled: approvalB === ApprovalState.PENDING,\n          width: showApprovalA ? '48%' : '100%',\n          children: approvalB === ApprovalState.PENDING ? /*#__PURE__*/_jsxDEV(Dots, {\n            children: /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"Approving {0}\",\n              values: {\n                0: (_currencies$Field$CUR7 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR7 === void 0 ? void 0 : _currencies$Field$CUR7.symbol\n              }\n            }, void 0, false, void 0, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Approve {0}\",\n            values: {\n              0: (_currencies$Field$CUR8 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR8 === void 0 ? void 0 : _currencies$Field$CUR8.symbol\n            }\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ButtonError, {\n        onClick: () => {\n          expertMode ? onAdd() : setShowConfirm(true);\n        },\n        disabled: !isValid || !argentWalletContract && approvalA !== ApprovalState.APPROVED && !depositADisabled || !argentWalletContract && approvalB !== ApprovalState.APPROVED && !depositBDisabled,\n        error: !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B],\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontWeight: 500,\n          children: errorMessage ? errorMessage : /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Preview\"\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ScrollablePage, {\n      children: [/*#__PURE__*/_jsxDEV(TransactionConfirmationModal, {\n        isOpen: showConfirm,\n        onDismiss: handleDismissConfirmation,\n        attemptingTxn: attemptingTxn,\n        hash: txHash,\n        content: () => /*#__PURE__*/_jsxDEV(ConfirmationModalContent, {\n          title: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Add Liquidity\"\n          }, void 0, false, void 0, this),\n          onDismiss: handleDismissConfirmation,\n          topContent: () => /*#__PURE__*/_jsxDEV(Review, {\n            parsedAmounts: parsedAmounts,\n            position: position,\n            existingPosition: existingPosition,\n            priceLower: priceLower,\n            priceUpper: priceUpper,\n            outOfRange: outOfRange,\n            ticksAtLimit: ticksAtLimit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 17\n          }, this),\n          bottomContent: () => /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n            style: {\n              marginTop: '1rem'\n            },\n            onClick: onAdd,\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              fontWeight: 500,\n              fontSize: 20,\n              children: /*#__PURE__*/_jsxDEV(Trans, {\n                id: \"Add\"\n              }, void 0, false, void 0, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 13\n        }, this),\n        pendingText: pendingText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PageWrapper, {\n        wide: !hasExistingPosition,\n        children: [/*#__PURE__*/_jsxDEV(AddRemoveTabs, {\n          creating: false,\n          adding: true,\n          positionID: tokenId,\n          defaultSlippage: DEFAULT_ADD_IN_RANGE_SLIPPAGE_TOLERANCE,\n          showBackLink: !hasExistingPosition,\n          children: !hasExistingPosition && /*#__PURE__*/_jsxDEV(Row, {\n            justifyContent: \"flex-end\",\n            style: {\n              width: 'fit-content',\n              minWidth: 'fit-content'\n            },\n            children: [/*#__PURE__*/_jsxDEV(MediumOnly, {\n              children: /*#__PURE__*/_jsxDEV(ButtonText, {\n                onClick: clearAll,\n                margin: \"0 15px 0 0\",\n                children: /*#__PURE__*/_jsxDEV(ThemedText.Blue, {\n                  fontSize: \"12px\",\n                  children: /*#__PURE__*/_jsxDEV(Trans, {\n                    id: \"Clear All\"\n                  }, void 0, false, void 0, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 520,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 17\n            }, this), baseCurrency && quoteCurrency ? /*#__PURE__*/_jsxDEV(RateToggle, {\n              currencyA: baseCurrency,\n              currencyB: quoteCurrency,\n              handleRateToggle: () => {\n                if (!ticksAtLimit[Bound.LOWER] && !ticksAtLimit[Bound.UPPER]) {\n                  var _toSignificant, _ref, _toSignificant2, _ref2, _formattedAmounts$Fie;\n\n                  onLeftRangeInput((_toSignificant = (_ref = invertPrice ? priceLower : priceUpper === null || priceUpper === void 0 ? void 0 : priceUpper.invert()) === null || _ref === void 0 ? void 0 : _ref.toSignificant(6)) !== null && _toSignificant !== void 0 ? _toSignificant : '');\n                  onRightRangeInput((_toSignificant2 = (_ref2 = invertPrice ? priceUpper : priceLower === null || priceLower === void 0 ? void 0 : priceLower.invert()) === null || _ref2 === void 0 ? void 0 : _ref2.toSignificant(6)) !== null && _toSignificant2 !== void 0 ? _toSignificant2 : '');\n                  onFieldAInput((_formattedAmounts$Fie = formattedAmounts[Field.CURRENCY_B]) !== null && _formattedAmounts$Fie !== void 0 ? _formattedAmounts$Fie : '');\n                }\n\n                history.push(`/add/${currencyIdB}/${currencyIdA}${feeAmount ? '/' + feeAmount : ''}`);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 19\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n          children: /*#__PURE__*/_jsxDEV(ResponsiveTwoColumns, {\n            wide: !hasExistingPosition,\n            children: [/*#__PURE__*/_jsxDEV(AutoColumn, {\n              gap: \"lg\",\n              children: [!hasExistingPosition && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(AutoColumn, {\n                  gap: \"md\",\n                  children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n                    paddingBottom: \"20px\",\n                    children: /*#__PURE__*/_jsxDEV(ThemedText.Label, {\n                      children: /*#__PURE__*/_jsxDEV(Trans, {\n                        id: \"Select Pair\"\n                      }, void 0, false, void 0, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 551,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 550,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n                    children: [/*#__PURE__*/_jsxDEV(CurrencyDropdown, {\n                      value: formattedAmounts[Field.CURRENCY_A],\n                      onUserInput: onFieldAInput,\n                      hideInput: true,\n                      onMax: () => {\n                        var _maxAmounts$Field$CUR, _maxAmounts$Field$CUR2;\n\n                        onFieldAInput((_maxAmounts$Field$CUR = (_maxAmounts$Field$CUR2 = maxAmounts[Field.CURRENCY_A]) === null || _maxAmounts$Field$CUR2 === void 0 ? void 0 : _maxAmounts$Field$CUR2.toExact()) !== null && _maxAmounts$Field$CUR !== void 0 ? _maxAmounts$Field$CUR : '');\n                      },\n                      onCurrencySelect: handleCurrencyASelect,\n                      showMaxButton: !atMaxAmounts[Field.CURRENCY_A],\n                      currency: (_currencies$Field$CUR9 = currencies[Field.CURRENCY_A]) !== null && _currencies$Field$CUR9 !== void 0 ? _currencies$Field$CUR9 : null,\n                      id: \"add-liquidity-input-tokena\",\n                      showCommonBases: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 556,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        width: '12px'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 570,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(CurrencyDropdown, {\n                      value: formattedAmounts[Field.CURRENCY_B],\n                      hideInput: true,\n                      onUserInput: onFieldBInput,\n                      onCurrencySelect: handleCurrencyBSelect,\n                      onMax: () => {\n                        var _maxAmounts$Field$CUR3, _maxAmounts$Field$CUR4;\n\n                        onFieldBInput((_maxAmounts$Field$CUR3 = (_maxAmounts$Field$CUR4 = maxAmounts[Field.CURRENCY_B]) === null || _maxAmounts$Field$CUR4 === void 0 ? void 0 : _maxAmounts$Field$CUR4.toExact()) !== null && _maxAmounts$Field$CUR3 !== void 0 ? _maxAmounts$Field$CUR3 : '');\n                      },\n                      showMaxButton: !atMaxAmounts[Field.CURRENCY_B],\n                      currency: (_currencies$Field$CUR10 = currencies[Field.CURRENCY_B]) !== null && _currencies$Field$CUR10 !== void 0 ? _currencies$Field$CUR10 : null,\n                      id: \"add-liquidity-input-tokenb\",\n                      showCommonBases: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 572,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 555,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(FeeSelector, {\n                    disabled: !quoteCurrency || !baseCurrency,\n                    feeAmount: feeAmount,\n                    handleFeePoolSelect: handleFeePoolSelect,\n                    currencyA: baseCurrency !== null && baseCurrency !== void 0 ? baseCurrency : undefined,\n                    currencyB: quoteCurrency !== null && quoteCurrency !== void 0 ? quoteCurrency : undefined\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 587,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 549,\n                  columnNumber: 21\n                }, this), ' ']\n              }, void 0, true), hasExistingPosition && existingPosition && /*#__PURE__*/_jsxDEV(PositionPreview, {\n                position: existingPosition,\n                title: /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"Selected Range\"\n                }, void 0, false, void 0, this),\n                inRange: !outOfRange,\n                ticksAtLimit: ticksAtLimit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 598,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(DynamicSection, {\n                disabled: tickLower === undefined || tickUpper === undefined || invalidPool || invalidRange,\n                children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n                  gap: \"md\",\n                  children: [/*#__PURE__*/_jsxDEV(ThemedText.Label, {\n                    children: hasExistingPosition ? /*#__PURE__*/_jsxDEV(Trans, {\n                      id: \"Add more liquidity\"\n                    }, void 0, false, void 0, this) : /*#__PURE__*/_jsxDEV(Trans, {\n                      id: \"Deposit Amounts\"\n                    }, void 0, false, void 0, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 611,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n                    value: formattedAmounts[Field.CURRENCY_A],\n                    onUserInput: onFieldAInput,\n                    onMax: () => {\n                      var _maxAmounts$Field$CUR5, _maxAmounts$Field$CUR6;\n\n                      onFieldAInput((_maxAmounts$Field$CUR5 = (_maxAmounts$Field$CUR6 = maxAmounts[Field.CURRENCY_A]) === null || _maxAmounts$Field$CUR6 === void 0 ? void 0 : _maxAmounts$Field$CUR6.toExact()) !== null && _maxAmounts$Field$CUR5 !== void 0 ? _maxAmounts$Field$CUR5 : '');\n                    },\n                    showMaxButton: !atMaxAmounts[Field.CURRENCY_A],\n                    currency: (_currencies$Field$CUR11 = currencies[Field.CURRENCY_A]) !== null && _currencies$Field$CUR11 !== void 0 ? _currencies$Field$CUR11 : null,\n                    id: \"add-liquidity-input-tokena\",\n                    fiatValue: usdcValues[Field.CURRENCY_A],\n                    showCommonBases: true,\n                    locked: depositADisabled\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 615,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n                    value: formattedAmounts[Field.CURRENCY_B],\n                    onUserInput: onFieldBInput,\n                    onMax: () => {\n                      var _maxAmounts$Field$CUR7, _maxAmounts$Field$CUR8;\n\n                      onFieldBInput((_maxAmounts$Field$CUR7 = (_maxAmounts$Field$CUR8 = maxAmounts[Field.CURRENCY_B]) === null || _maxAmounts$Field$CUR8 === void 0 ? void 0 : _maxAmounts$Field$CUR8.toExact()) !== null && _maxAmounts$Field$CUR7 !== void 0 ? _maxAmounts$Field$CUR7 : '');\n                    },\n                    showMaxButton: !atMaxAmounts[Field.CURRENCY_B],\n                    fiatValue: usdcValues[Field.CURRENCY_B],\n                    currency: (_currencies$Field$CUR12 = currencies[Field.CURRENCY_B]) !== null && _currencies$Field$CUR12 !== void 0 ? _currencies$Field$CUR12 : null,\n                    id: \"add-liquidity-input-tokenb\",\n                    showCommonBases: true,\n                    locked: depositBDisabled\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 629,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 610,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 607,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 15\n            }, this), !hasExistingPosition ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(HideMedium, {\n                children: /*#__PURE__*/_jsxDEV(Buttons, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 649,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 648,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(RightContainer, {\n                gap: \"lg\",\n                children: [/*#__PURE__*/_jsxDEV(DynamicSection, {\n                  gap: \"md\",\n                  disabled: !feeAmount || invalidPool,\n                  children: !noLiquidity ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n                      children: /*#__PURE__*/_jsxDEV(ThemedText.Label, {\n                        children: /*#__PURE__*/_jsxDEV(Trans, {\n                          id: \"Set Price Range\"\n                        }, void 0, false, void 0, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 656,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 655,\n                      columnNumber: 27\n                    }, this), price && baseCurrency && quoteCurrency && !noLiquidity && /*#__PURE__*/_jsxDEV(AutoRow, {\n                      gap: \"4px\",\n                      justify: \"center\",\n                      style: {\n                        marginTop: '0.5rem'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Trans, {\n                        id: \"<0>Current Price:</0><1><2/></1><3>{0} per {1}</3>\",\n                        values: {\n                          0: quoteCurrency === null || quoteCurrency === void 0 ? void 0 : quoteCurrency.symbol,\n                          1: baseCurrency.symbol\n                        },\n                        components: {\n                          0: /*#__PURE__*/_jsxDEV(ThemedText.Main, {\n                            fontWeight: 500,\n                            textAlign: \"center\",\n                            fontSize: 12,\n                            color: \"text1\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 664,\n                            columnNumber: 33\n                          }, this),\n                          1: /*#__PURE__*/_jsxDEV(ThemedText.Body, {\n                            fontWeight: 500,\n                            textAlign: \"center\",\n                            fontSize: 12,\n                            color: \"text1\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 667,\n                            columnNumber: 33\n                          }, this),\n                          2: /*#__PURE__*/_jsxDEV(HoverInlineText, {\n                            maxCharacters: 20,\n                            text: invertPrice ? price.invert().toSignificant(6) : price.toSignificant(6)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 668,\n                            columnNumber: 35\n                          }, this),\n                          3: /*#__PURE__*/_jsxDEV(ThemedText.Body, {\n                            color: \"text2\",\n                            fontSize: 12\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 673,\n                            columnNumber: 33\n                          }, this)\n                        }\n                      }, void 0, false, void 0, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 662,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(LiquidityChartRangeInput, {\n                      currencyA: baseCurrency !== null && baseCurrency !== void 0 ? baseCurrency : undefined,\n                      currencyB: quoteCurrency !== null && quoteCurrency !== void 0 ? quoteCurrency : undefined,\n                      feeAmount: feeAmount,\n                      ticksAtLimit: ticksAtLimit,\n                      price: price ? parseFloat((invertPrice ? price.invert() : price).toSignificant(8)) : undefined,\n                      priceLower: priceLower,\n                      priceUpper: priceUpper,\n                      onLeftRangeInput: onLeftRangeInput,\n                      onRightRangeInput: onRightRangeInput,\n                      interactive: !hasExistingPosition\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 680,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true) : /*#__PURE__*/_jsxDEV(AutoColumn, {\n                    gap: \"md\",\n                    children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n                      children: /*#__PURE__*/_jsxDEV(ThemedText.Label, {\n                        children: /*#__PURE__*/_jsxDEV(Trans, {\n                          id: \"Set Starting Price\"\n                        }, void 0, false, void 0, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 698,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 697,\n                      columnNumber: 27\n                    }, this), noLiquidity && /*#__PURE__*/_jsxDEV(BlueCard, {\n                      style: {\n                        display: 'flex',\n                        flexDirection: 'row',\n                        alignItems: 'center',\n                        padding: '1rem 1rem'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(ThemedText.Body, {\n                        fontSize: 14,\n                        style: {\n                          fontWeight: 500\n                        },\n                        textAlign: \"left\",\n                        color: theme.primaryText1,\n                        children: /*#__PURE__*/_jsxDEV(Trans, {\n                          id: \"This pool must be initialized before you can add liquidity. To initialize, select a starting price for the pool. Then, enter your liquidity price range and deposit amount. Gas fees will be higher than usual due to the initialization transaction.\"\n                        }, void 0, false, void 0, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 711,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 703,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(OutlineCard, {\n                      padding: \"12px\",\n                      children: /*#__PURE__*/_jsxDEV(StyledInput, {\n                        className: \"start-price-input\",\n                        value: startPriceTypedValue,\n                        onUserInput: onStartPriceInput\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 726,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 725,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n                      style: {\n                        backgroundColor: theme.bg1,\n                        padding: '12px',\n                        borderRadius: '12px'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(ThemedText.Main, {\n                        children: /*#__PURE__*/_jsxDEV(Trans, {\n                          id: \"Current {0} Price:\",\n                          values: {\n                            0: baseCurrency === null || baseCurrency === void 0 ? void 0 : baseCurrency.symbol\n                          }\n                        }, void 0, false, void 0, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 733,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(ThemedText.Main, {\n                        children: price ? /*#__PURE__*/_jsxDEV(ThemedText.Main, {\n                          children: /*#__PURE__*/_jsxDEV(RowFixed, {\n                            children: [/*#__PURE__*/_jsxDEV(HoverInlineText, {\n                              maxCharacters: 20,\n                              text: invertPrice ? price === null || price === void 0 ? void 0 : (_price$invert = price.invert()) === null || _price$invert === void 0 ? void 0 : _price$invert.toSignificant(5) : price === null || price === void 0 ? void 0 : price.toSignificant(5)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 740,\n                              columnNumber: 37\n                            }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n                              style: {\n                                marginLeft: '4px'\n                              },\n                              children: quoteCurrency === null || quoteCurrency === void 0 ? void 0 : quoteCurrency.symbol\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 744,\n                              columnNumber: 37\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 739,\n                            columnNumber: 35\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 738,\n                          columnNumber: 33\n                        }, this) : '-'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 736,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 732,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 696,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 652,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(DynamicSection, {\n                  gap: \"md\",\n                  disabled: !feeAmount || invalidPool || noLiquidity && !startPriceTypedValue,\n                  children: [/*#__PURE__*/_jsxDEV(StackedContainer, {\n                    children: [/*#__PURE__*/_jsxDEV(StackedItem, {\n                      style: {\n                        opacity: showCapitalEfficiencyWarning ? '0.05' : 1\n                      },\n                      children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n                        gap: \"md\",\n                        children: [noLiquidity && /*#__PURE__*/_jsxDEV(RowBetween, {\n                          children: /*#__PURE__*/_jsxDEV(ThemedText.Label, {\n                            children: /*#__PURE__*/_jsxDEV(Trans, {\n                              id: \"Set Price Range\"\n                            }, void 0, false, void 0, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 765,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 764,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(RangeSelector, {\n                          priceLower: priceLower,\n                          priceUpper: priceUpper,\n                          getDecrementLower: getDecrementLower,\n                          getIncrementLower: getIncrementLower,\n                          getDecrementUpper: getDecrementUpper,\n                          getIncrementUpper: getIncrementUpper,\n                          onLeftRangeInput: onLeftRangeInput,\n                          onRightRangeInput: onRightRangeInput,\n                          currencyA: baseCurrency,\n                          currencyB: quoteCurrency,\n                          feeAmount: feeAmount,\n                          ticksAtLimit: ticksAtLimit\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 770,\n                          columnNumber: 29\n                        }, this), !noLiquidity && /*#__PURE__*/_jsxDEV(PresetsButtons, {\n                          setFullRange: () => {\n                            setShowCapitalEfficiencyWarning(true);\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 785,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 762,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 761,\n                      columnNumber: 25\n                    }, this), showCapitalEfficiencyWarning && /*#__PURE__*/_jsxDEV(StackedItem, {\n                      zIndex: 1,\n                      children: /*#__PURE__*/_jsxDEV(YellowCard, {\n                        padding: \"15px\",\n                        $borderRadius: \"12px\",\n                        height: \"100%\",\n                        style: {\n                          borderColor: theme.yellow3,\n                          border: '1px solid'\n                        },\n                        children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n                          gap: \"8px\",\n                          style: {\n                            height: '100%'\n                          },\n                          children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n                            children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n                              stroke: theme.yellow3,\n                              size: \"16px\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 807,\n                              columnNumber: 35\n                            }, this), /*#__PURE__*/_jsxDEV(ThemedText.Yellow, {\n                              ml: \"12px\",\n                              fontSize: \"15px\",\n                              children: /*#__PURE__*/_jsxDEV(Trans, {\n                                id: \"Efficiency Comparison\"\n                              }, void 0, false, void 0, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 808,\n                              columnNumber: 35\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 806,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n                            children: /*#__PURE__*/_jsxDEV(ThemedText.Yellow, {\n                              ml: \"12px\",\n                              fontSize: \"13px\",\n                              margin: 0,\n                              fontWeight: 400,\n                              children: /*#__PURE__*/_jsxDEV(Trans, {\n                                id: \"Full range positions may earn less fees than concentrated positions. Learn more <0>here</0>.\",\n                                components: {\n                                  0: /*#__PURE__*/_jsxDEV(ExternalLink, {\n                                    style: {\n                                      color: theme.yellow3,\n                                      textDecoration: 'underline'\n                                    },\n                                    href: 'https://help.uniswap.org/en/articles/5434296-can-i-provide-liquidity-over-the-full-range-in-v3'\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 816,\n                                    columnNumber: 39\n                                  }, this)\n                                }\n                              }, void 0, false, void 0, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 813,\n                              columnNumber: 35\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 812,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(Row, {\n                            children: /*#__PURE__*/_jsxDEV(ButtonYellow, {\n                              padding: \"8px\",\n                              marginRight: \"8px\",\n                              $borderRadius: \"8px\",\n                              width: \"auto\",\n                              onClick: () => {\n                                setShowCapitalEfficiencyWarning(false);\n                                getSetFullRange();\n                              },\n                              children: /*#__PURE__*/_jsxDEV(ThemedText.Black, {\n                                fontSize: 13,\n                                color: \"black\",\n                                children: /*#__PURE__*/_jsxDEV(Trans, {\n                                  id: \"I understand\"\n                                }, void 0, false, void 0, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 839,\n                                columnNumber: 37\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 829,\n                              columnNumber: 35\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 828,\n                            columnNumber: 33\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 805,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 796,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 795,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 760,\n                    columnNumber: 23\n                  }, this), outOfRange ? /*#__PURE__*/_jsxDEV(YellowCard, {\n                    padding: \"8px 12px\",\n                    $borderRadius: \"12px\",\n                    children: /*#__PURE__*/_jsxDEV(RowBetween, {\n                      children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n                        stroke: theme.yellow3,\n                        size: \"16px\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 853,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(ThemedText.Yellow, {\n                        ml: \"12px\",\n                        fontSize: \"12px\",\n                        children: /*#__PURE__*/_jsxDEV(Trans, {\n                          id: \"Your position will not earn fees or be used in trades until the market price moves into your range.\"\n                        }, void 0, false, void 0, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 854,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 852,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 851,\n                    columnNumber: 25\n                  }, this) : null, invalidRange ? /*#__PURE__*/_jsxDEV(YellowCard, {\n                    padding: \"8px 12px\",\n                    $borderRadius: \"12px\",\n                    children: /*#__PURE__*/_jsxDEV(RowBetween, {\n                      children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n                        stroke: theme.yellow3,\n                        size: \"16px\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 867,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(ThemedText.Yellow, {\n                        ml: \"12px\",\n                        fontSize: \"12px\",\n                        children: /*#__PURE__*/_jsxDEV(Trans, {\n                          id: \"Invalid range selected. The min price must be lower than the max price.\"\n                        }, void 0, false, void 0, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 868,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 866,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 865,\n                    columnNumber: 25\n                  }, this) : null]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 756,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(MediumOnly, {\n                  children: /*#__PURE__*/_jsxDEV(Buttons, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 877,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 876,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(Buttons, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 882,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 9\n      }, this), addIsUnsupported && /*#__PURE__*/_jsxDEV(UnsupportedCurrencyFooter, {\n        show: addIsUnsupported,\n        currencies: [currencies.CURRENCY_A, currencies.CURRENCY_B]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 888,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SwitchLocaleLink, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 894,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AddLiquidity, \"4Em9dAhIBbJEhJaQSdoAbL8NzH8=\", false, function () {\n  return [useActiveWeb3React, useWalletModalToggle, useIsExpertMode, useTransactionAdder, useV3NFTPositionManagerContract, useV3PositionFromTokenId, useDerivedPositionInfo, useCurrency, useCurrency, useV3MintState, useV3DerivedMintInfo, useV3MintActionHandlers, useTransactionDeadline, useUSDCValue, useUSDCValue, useArgentWalletContract, useApproveCallback, useApproveCallback, useUserSlippageToleranceWithDefault, useIsSwapUnsupported, useRangeHopCallbacks];\n});\n\n_c = AddLiquidity;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddLiquidity\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/pages/AddLiquidity/index.tsx"],"names":["BigNumber","Percent","FeeAmount","NonfungiblePositionManager","UnsupportedCurrencyFooter","useCallback","useContext","useEffect","useState","AlertTriangle","ReactGA","Text","useRangeHopCallbacks","useV3DerivedMintInfo","useV3MintActionHandlers","useV3MintState","ButtonError","ButtonLight","ButtonPrimary","ButtonText","ButtonYellow","BlueCard","OutlineCard","YellowCard","AutoColumn","CurrencyInputPanel","FeeSelector","HoverInlineText","LiquidityChartRangeInput","AddRemoveTabs","PositionPreview","RangeSelector","PresetsButtons","RateToggle","Row","AutoRow","RowBetween","RowFixed","SwitchLocaleLink","TransactionConfirmationModal","ConfirmationModalContent","NONFUNGIBLE_POSITION_MANAGER_ADDRESSES","ZERO_PERCENT","WRAPPED_NATIVE_CURRENCY","useCurrency","ApprovalState","useApproveCallback","useArgentWalletContract","useV3NFTPositionManagerContract","useDerivedPositionInfo","useIsSwapUnsupported","useTransactionDeadline","useUSDCValue","useV3PositionFromTokenId","useActiveWeb3React","useWalletModalToggle","Bound","Field","TransactionType","useTransactionAdder","useIsExpertMode","useUserSlippageToleranceWithDefault","ExternalLink","ThemedText","approveAmountCalldata","calculateGasMargin","currencyId","maxAmountSpend","Dots","Review","CurrencyDropdown","DynamicSection","HideMedium","MediumOnly","PageWrapper","ResponsiveTwoColumns","RightContainer","ScrollablePage","StackedContainer","StackedItem","StyledInput","Wrapper","DEFAULT_ADD_IN_RANGE_SLIPPAGE_TOLERANCE","AddLiquidity","match","params","currencyIdA","currencyIdB","feeAmount","feeAmountFromUrl","tokenId","history","account","chainId","library","theme","ThemeContext","toggleWalletModal","expertMode","addTransaction","positionManager","position","existingPositionDetails","loading","positionLoading","from","undefined","hasExistingPosition","existingPosition","Object","values","includes","parseFloat","baseCurrency","currencyB","quoteCurrency","wrapped","equals","independentField","typedValue","startPriceTypedValue","pool","ticks","dependentField","price","pricesAtTicks","parsedAmounts","currencyBalances","noLiquidity","currencies","errorMessage","invalidPool","invalidRange","outOfRange","depositADisabled","depositBDisabled","invertPrice","ticksAtLimit","onFieldAInput","onFieldBInput","onLeftRangeInput","onRightRangeInput","onStartPriceInput","isValid","showConfirm","setShowConfirm","attemptingTxn","setAttemptingTxn","showCapitalEfficiencyWarning","setShowCapitalEfficiencyWarning","deadline","txHash","setTxHash","formattedAmounts","toSignificant","usdcValues","CURRENCY_A","CURRENCY_B","maxAmounts","reduce","accumulator","field","atMaxAmounts","equalTo","argentWalletContract","approvalA","approveACallback","approvalB","approveBCallback","allowedSlippage","onAdd","useNative","isNative","calldata","value","addCallParameters","slippageTolerance","toString","recipient","createPool","txn","to","data","amountA","amountB","batch","currency","isToken","interface","encodeFunctionData","address","getSigner","estimateGas","then","estimate","newTxn","gasLimit","sendTransaction","response","type","ADD_LIQUIDITY_V3_POOL","baseCurrencyId","quoteCurrencyId","Boolean","expectedAmountBaseRaw","quotient","expectedAmountQuoteRaw","fee","hash","event","category","action","label","symbol","join","catch","error","console","code","handleCurrencySelect","currencyNew","currencyIdOther","currencyIdNew","isETHOrWETHNew","isETHOrWETHOther","handleCurrencyASelect","currencyANew","idA","idB","push","handleCurrencyBSelect","currencyBNew","handleFeePoolSelect","newFeeAmount","handleDismissConfirmation","addIsUnsupported","clearAll","LOWER","tickLower","UPPER","tickUpper","priceLower","priceUpper","getDecrementLower","getIncrementLower","getDecrementUpper","getIncrementUpper","getSetFullRange","showApprovalA","APPROVED","showApprovalB","pendingText","Buttons","NOT_APPROVED","PENDING","marginTop","width","minWidth","invert","toExact","display","flexDirection","alignItems","padding","fontWeight","primaryText1","backgroundColor","bg1","borderRadius","marginLeft","opacity","borderColor","yellow3","border","height","color","textDecoration"],"mappings":"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","sourcesContent":["import { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trans } from '@lingui/macro'\nimport { Currency, CurrencyAmount, Percent } from '@uniswap/sdk-core'\nimport { FeeAmount, NonfungiblePositionManager } from '@uniswap/v3-sdk'\nimport UnsupportedCurrencyFooter from 'components/swap/UnsupportedCurrencyFooter'\nimport { useCallback, useContext, useEffect, useState } from 'react'\nimport { AlertTriangle } from 'react-feather'\nimport ReactGA from 'react-ga'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { Text } from 'rebass'\nimport {\n  useRangeHopCallbacks,\n  useV3DerivedMintInfo,\n  useV3MintActionHandlers,\n  useV3MintState,\n} from 'state/mint/v3/hooks'\nimport { ThemeContext } from 'styled-components/macro'\n\nimport { ButtonError, ButtonLight, ButtonPrimary, ButtonText, ButtonYellow } from '../../components/Button'\nimport { BlueCard, OutlineCard, YellowCard } from '../../components/Card'\nimport { AutoColumn } from '../../components/Column'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport FeeSelector from '../../components/FeeSelector'\nimport HoverInlineText from '../../components/HoverInlineText'\nimport LiquidityChartRangeInput from '../../components/LiquidityChartRangeInput'\nimport { AddRemoveTabs } from '../../components/NavigationTabs'\nimport { PositionPreview } from '../../components/PositionPreview'\nimport RangeSelector from '../../components/RangeSelector'\nimport PresetsButtons from '../../components/RangeSelector/PresetsButtons'\nimport RateToggle from '../../components/RateToggle'\nimport Row, { AutoRow, RowBetween, RowFixed } from '../../components/Row'\nimport { SwitchLocaleLink } from '../../components/SwitchLocaleLink'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport { NONFUNGIBLE_POSITION_MANAGER_ADDRESSES } from '../../constants/addresses'\nimport { ZERO_PERCENT } from '../../constants/misc'\nimport { WRAPPED_NATIVE_CURRENCY } from '../../constants/tokens'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport { useArgentWalletContract } from '../../hooks/useArgentWalletContract'\nimport { useV3NFTPositionManagerContract } from '../../hooks/useContract'\nimport { useDerivedPositionInfo } from '../../hooks/useDerivedPositionInfo'\nimport { useIsSwapUnsupported } from '../../hooks/useIsSwapUnsupported'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { useUSDCValue } from '../../hooks/useUSDCPrice'\nimport { useV3PositionFromTokenId } from '../../hooks/useV3Positions'\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport { useWalletModalToggle } from '../../state/application/hooks'\nimport { Bound, Field } from '../../state/mint/v3/actions'\nimport { TransactionType } from '../../state/transactions/actions'\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { useIsExpertMode, useUserSlippageToleranceWithDefault } from '../../state/user/hooks'\nimport { ExternalLink, ThemedText } from '../../theme'\nimport approveAmountCalldata from '../../utils/approveAmountCalldata'\nimport { calculateGasMargin } from '../../utils/calculateGasMargin'\nimport { currencyId } from '../../utils/currencyId'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { Dots } from '../Pool/styleds'\nimport { Review } from './Review'\nimport {\n  CurrencyDropdown,\n  DynamicSection,\n  HideMedium,\n  MediumOnly,\n  PageWrapper,\n  ResponsiveTwoColumns,\n  RightContainer,\n  ScrollablePage,\n  StackedContainer,\n  StackedItem,\n  StyledInput,\n  Wrapper,\n} from './styled'\n\nconst DEFAULT_ADD_IN_RANGE_SLIPPAGE_TOLERANCE = new Percent(50, 10_000)\n\nexport default function AddLiquidity({\n  match: {\n    params: { currencyIdA, currencyIdB, feeAmount: feeAmountFromUrl, tokenId },\n  },\n  history,\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string; feeAmount?: string; tokenId?: string }>) {\n  const { account, chainId, library } = useActiveWeb3React()\n  const theme = useContext(ThemeContext)\n  const toggleWalletModal = useWalletModalToggle() // toggle wallet when disconnected\n  const expertMode = useIsExpertMode()\n  const addTransaction = useTransactionAdder()\n  const positionManager = useV3NFTPositionManagerContract()\n\n  // check for existing position if tokenId in url\n  const { position: existingPositionDetails, loading: positionLoading } = useV3PositionFromTokenId(\n    tokenId ? BigNumber.from(tokenId) : undefined\n  )\n  const hasExistingPosition = !!existingPositionDetails && !positionLoading\n  const { position: existingPosition } = useDerivedPositionInfo(existingPositionDetails)\n\n  // fee selection from url\n  const feeAmount: FeeAmount | undefined =\n    feeAmountFromUrl && Object.values(FeeAmount).includes(parseFloat(feeAmountFromUrl))\n      ? parseFloat(feeAmountFromUrl)\n      : undefined\n\n  const baseCurrency = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n  // prevent an error if they input ETH/WETH\n  const quoteCurrency =\n    baseCurrency && currencyB && baseCurrency.wrapped.equals(currencyB.wrapped) ? undefined : currencyB\n\n  // mint state\n  const { independentField, typedValue, startPriceTypedValue } = useV3MintState()\n\n  const {\n    pool,\n    ticks,\n    dependentField,\n    price,\n    pricesAtTicks,\n    parsedAmounts,\n    currencyBalances,\n    position,\n    noLiquidity,\n    currencies,\n    errorMessage,\n    invalidPool,\n    invalidRange,\n    outOfRange,\n    depositADisabled,\n    depositBDisabled,\n    invertPrice,\n    ticksAtLimit,\n  } = useV3DerivedMintInfo(\n    baseCurrency ?? undefined,\n    quoteCurrency ?? undefined,\n    feeAmount,\n    baseCurrency ?? undefined,\n    existingPosition\n  )\n\n  const { onFieldAInput, onFieldBInput, onLeftRangeInput, onRightRangeInput, onStartPriceInput } =\n    useV3MintActionHandlers(noLiquidity)\n\n  const isValid = !errorMessage && !invalidRange\n\n  // modal and loading\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // capital efficiency warning\n  const [showCapitalEfficiencyWarning, setShowCapitalEfficiencyWarning] = useState(false)\n\n  useEffect(() => setShowCapitalEfficiencyWarning(false), [baseCurrency, quoteCurrency, feeAmount])\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const usdcValues = {\n    [Field.CURRENCY_A]: useUSDCValue(parsedAmounts[Field.CURRENCY_A]),\n    [Field.CURRENCY_B]: useUSDCValue(parsedAmounts[Field.CURRENCY_B]),\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: CurrencyAmount<Currency> } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {}\n  )\n\n  const atMaxAmounts: { [field in Field]?: CurrencyAmount<Currency> } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {}\n  )\n\n  const argentWalletContract = useArgentWalletContract()\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(\n    argentWalletContract ? undefined : parsedAmounts[Field.CURRENCY_A],\n    chainId ? NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId] : undefined\n  )\n  const [approvalB, approveBCallback] = useApproveCallback(\n    argentWalletContract ? undefined : parsedAmounts[Field.CURRENCY_B],\n    chainId ? NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId] : undefined\n  )\n\n  const allowedSlippage = useUserSlippageToleranceWithDefault(\n    outOfRange ? ZERO_PERCENT : DEFAULT_ADD_IN_RANGE_SLIPPAGE_TOLERANCE\n  )\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n\n    if (!positionManager || !baseCurrency || !quoteCurrency) {\n      return\n    }\n\n    if (position && account && deadline) {\n      const useNative = baseCurrency.isNative ? baseCurrency : quoteCurrency.isNative ? quoteCurrency : undefined\n      const { calldata, value } =\n        hasExistingPosition && tokenId\n          ? NonfungiblePositionManager.addCallParameters(position, {\n              tokenId,\n              slippageTolerance: allowedSlippage,\n              deadline: deadline.toString(),\n              useNative,\n            })\n          : NonfungiblePositionManager.addCallParameters(position, {\n              slippageTolerance: allowedSlippage,\n              recipient: account,\n              deadline: deadline.toString(),\n              useNative,\n              createPool: noLiquidity,\n            })\n\n      let txn: { to: string; data: string; value: string } = {\n        to: NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId],\n        data: calldata,\n        value,\n      }\n\n      if (argentWalletContract) {\n        const amountA = parsedAmounts[Field.CURRENCY_A]\n        const amountB = parsedAmounts[Field.CURRENCY_B]\n        const batch = [\n          ...(amountA && amountA.currency.isToken\n            ? [approveAmountCalldata(amountA, NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId])]\n            : []),\n          ...(amountB && amountB.currency.isToken\n            ? [approveAmountCalldata(amountB, NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId])]\n            : []),\n          {\n            to: txn.to,\n            data: txn.data,\n            value: txn.value,\n          },\n        ]\n        const data = argentWalletContract.interface.encodeFunctionData('wc_multiCall', [batch])\n        txn = {\n          to: argentWalletContract.address,\n          data,\n          value: '0x0',\n        }\n      }\n\n      setAttemptingTxn(true)\n\n      library\n        .getSigner()\n        .estimateGas(txn)\n        .then((estimate) => {\n          const newTxn = {\n            ...txn,\n            gasLimit: calculateGasMargin(estimate),\n          }\n\n          return library\n            .getSigner()\n            .sendTransaction(newTxn)\n            .then((response: TransactionResponse) => {\n              setAttemptingTxn(false)\n              addTransaction(response, {\n                type: TransactionType.ADD_LIQUIDITY_V3_POOL,\n                baseCurrencyId: currencyId(baseCurrency),\n                quoteCurrencyId: currencyId(quoteCurrency),\n                createPool: Boolean(noLiquidity),\n                expectedAmountBaseRaw: parsedAmounts[Field.CURRENCY_A]?.quotient?.toString() ?? '0',\n                expectedAmountQuoteRaw: parsedAmounts[Field.CURRENCY_B]?.quotient?.toString() ?? '0',\n                feeAmount: position.pool.fee,\n              })\n              setTxHash(response.hash)\n              ReactGA.event({\n                category: 'Liquidity',\n                action: 'Add',\n                label: [currencies[Field.CURRENCY_A]?.symbol, currencies[Field.CURRENCY_B]?.symbol].join('/'),\n              })\n            })\n        })\n        .catch((error) => {\n          console.error('Failed to send transaction', error)\n          setAttemptingTxn(false)\n          // we only care if the error is something _other_ than the user rejected the tx\n          if (error?.code !== 4001) {\n            console.error(error)\n          }\n        })\n    } else {\n      return\n    }\n  }\n\n  const handleCurrencySelect = useCallback(\n    (currencyNew: Currency, currencyIdOther?: string): (string | undefined)[] => {\n      const currencyIdNew = currencyId(currencyNew)\n\n      if (currencyIdNew === currencyIdOther) {\n        // not ideal, but for now clobber the other if the currency ids are equal\n        return [currencyIdNew, undefined]\n      } else {\n        // prevent weth + eth\n        const isETHOrWETHNew =\n          currencyIdNew === 'ETH' ||\n          (chainId !== undefined && currencyIdNew === WRAPPED_NATIVE_CURRENCY[chainId]?.address)\n        const isETHOrWETHOther =\n          currencyIdOther !== undefined &&\n          (currencyIdOther === 'ETH' ||\n            (chainId !== undefined && currencyIdOther === WRAPPED_NATIVE_CURRENCY[chainId]?.address))\n\n        if (isETHOrWETHNew && isETHOrWETHOther) {\n          return [currencyIdNew, undefined]\n        } else {\n          return [currencyIdNew, currencyIdOther]\n        }\n      }\n    },\n    [chainId]\n  )\n\n  const handleCurrencyASelect = useCallback(\n    (currencyANew: Currency) => {\n      const [idA, idB] = handleCurrencySelect(currencyANew, currencyIdB)\n      if (idB === undefined) {\n        history.push(`/add/${idA}`)\n      } else {\n        history.push(`/add/${idA}/${idB}`)\n      }\n    },\n    [handleCurrencySelect, currencyIdB, history]\n  )\n\n  const handleCurrencyBSelect = useCallback(\n    (currencyBNew: Currency) => {\n      const [idB, idA] = handleCurrencySelect(currencyBNew, currencyIdA)\n      if (idA === undefined) {\n        history.push(`/add/${idB}`)\n      } else {\n        history.push(`/add/${idA}/${idB}`)\n      }\n    },\n    [handleCurrencySelect, currencyIdA, history]\n  )\n\n  const handleFeePoolSelect = useCallback(\n    (newFeeAmount: FeeAmount) => {\n      onLeftRangeInput('')\n      onRightRangeInput('')\n      history.push(`/add/${currencyIdA}/${currencyIdB}/${newFeeAmount}`)\n    },\n    [currencyIdA, currencyIdB, history, onLeftRangeInput, onRightRangeInput]\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false)\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n      // dont jump to pool page if creating\n      history.push('/pool')\n    }\n    setTxHash('')\n  }, [history, onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsSwapUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const clearAll = useCallback(() => {\n    onFieldAInput('')\n    onFieldBInput('')\n    onLeftRangeInput('')\n    onRightRangeInput('')\n    history.push(`/add`)\n  }, [history, onFieldAInput, onFieldBInput, onLeftRangeInput, onRightRangeInput])\n\n  // get value and prices at ticks\n  const { [Bound.LOWER]: tickLower, [Bound.UPPER]: tickUpper } = ticks\n  const { [Bound.LOWER]: priceLower, [Bound.UPPER]: priceUpper } = pricesAtTicks\n\n  const { getDecrementLower, getIncrementLower, getDecrementUpper, getIncrementUpper, getSetFullRange } =\n    useRangeHopCallbacks(baseCurrency ?? undefined, quoteCurrency ?? undefined, feeAmount, tickLower, tickUpper, pool)\n\n  // we need an existence check on parsed amounts for single-asset deposits\n  const showApprovalA =\n    !argentWalletContract && approvalA !== ApprovalState.APPROVED && !!parsedAmounts[Field.CURRENCY_A]\n  const showApprovalB =\n    !argentWalletContract && approvalB !== ApprovalState.APPROVED && !!parsedAmounts[Field.CURRENCY_B]\n\n  const pendingText = `Supplying ${!depositADisabled ? parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) : ''} ${\n    !depositADisabled ? currencies[Field.CURRENCY_A]?.symbol : ''\n  } ${!outOfRange ? 'and' : ''} ${!depositBDisabled ? parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) : ''} ${\n    !depositBDisabled ? currencies[Field.CURRENCY_B]?.symbol : ''\n  }`\n\n  const Buttons = () =>\n    addIsUnsupported ? (\n      <ButtonPrimary disabled={true} $borderRadius=\"12px\" padding={'12px'}>\n        <ThemedText.Main mb=\"4px\">\n          <Trans>Unsupported Asset</Trans>\n        </ThemedText.Main>\n      </ButtonPrimary>\n    ) : !account ? (\n      <ButtonLight onClick={toggleWalletModal} $borderRadius=\"12px\" padding={'12px'}>\n        <Trans>Connect Wallet</Trans>\n      </ButtonLight>\n    ) : (\n      <AutoColumn gap={'md'}>\n        {(approvalA === ApprovalState.NOT_APPROVED ||\n          approvalA === ApprovalState.PENDING ||\n          approvalB === ApprovalState.NOT_APPROVED ||\n          approvalB === ApprovalState.PENDING) &&\n          isValid && (\n            <RowBetween>\n              {showApprovalA && (\n                <ButtonPrimary\n                  onClick={approveACallback}\n                  disabled={approvalA === ApprovalState.PENDING}\n                  width={showApprovalB ? '48%' : '100%'}\n                >\n                  {approvalA === ApprovalState.PENDING ? (\n                    <Dots>\n                      <Trans>Approving {currencies[Field.CURRENCY_A]?.symbol}</Trans>\n                    </Dots>\n                  ) : (\n                    <Trans>Approve {currencies[Field.CURRENCY_A]?.symbol}</Trans>\n                  )}\n                </ButtonPrimary>\n              )}\n              {showApprovalB && (\n                <ButtonPrimary\n                  onClick={approveBCallback}\n                  disabled={approvalB === ApprovalState.PENDING}\n                  width={showApprovalA ? '48%' : '100%'}\n                >\n                  {approvalB === ApprovalState.PENDING ? (\n                    <Dots>\n                      <Trans>Approving {currencies[Field.CURRENCY_B]?.symbol}</Trans>\n                    </Dots>\n                  ) : (\n                    <Trans>Approve {currencies[Field.CURRENCY_B]?.symbol}</Trans>\n                  )}\n                </ButtonPrimary>\n              )}\n            </RowBetween>\n          )}\n        <ButtonError\n          onClick={() => {\n            expertMode ? onAdd() : setShowConfirm(true)\n          }}\n          disabled={\n            !isValid ||\n            (!argentWalletContract && approvalA !== ApprovalState.APPROVED && !depositADisabled) ||\n            (!argentWalletContract && approvalB !== ApprovalState.APPROVED && !depositBDisabled)\n          }\n          error={!isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]}\n        >\n          <Text fontWeight={500}>{errorMessage ? errorMessage : <Trans>Preview</Trans>}</Text>\n        </ButtonError>\n      </AutoColumn>\n    )\n\n  return (\n    <>\n      <ScrollablePage>\n        <TransactionConfirmationModal\n          isOpen={showConfirm}\n          onDismiss={handleDismissConfirmation}\n          attemptingTxn={attemptingTxn}\n          hash={txHash}\n          content={() => (\n            <ConfirmationModalContent\n              title={<Trans>Add Liquidity</Trans>}\n              onDismiss={handleDismissConfirmation}\n              topContent={() => (\n                <Review\n                  parsedAmounts={parsedAmounts}\n                  position={position}\n                  existingPosition={existingPosition}\n                  priceLower={priceLower}\n                  priceUpper={priceUpper}\n                  outOfRange={outOfRange}\n                  ticksAtLimit={ticksAtLimit}\n                />\n              )}\n              bottomContent={() => (\n                <ButtonPrimary style={{ marginTop: '1rem' }} onClick={onAdd}>\n                  <Text fontWeight={500} fontSize={20}>\n                    <Trans>Add</Trans>\n                  </Text>\n                </ButtonPrimary>\n              )}\n            />\n          )}\n          pendingText={pendingText}\n        />\n        <PageWrapper wide={!hasExistingPosition}>\n          <AddRemoveTabs\n            creating={false}\n            adding={true}\n            positionID={tokenId}\n            defaultSlippage={DEFAULT_ADD_IN_RANGE_SLIPPAGE_TOLERANCE}\n            showBackLink={!hasExistingPosition}\n          >\n            {!hasExistingPosition && (\n              <Row justifyContent=\"flex-end\" style={{ width: 'fit-content', minWidth: 'fit-content' }}>\n                <MediumOnly>\n                  <ButtonText onClick={clearAll} margin=\"0 15px 0 0\">\n                    <ThemedText.Blue fontSize=\"12px\">\n                      <Trans>Clear All</Trans>\n                    </ThemedText.Blue>\n                  </ButtonText>\n                </MediumOnly>\n                {baseCurrency && quoteCurrency ? (\n                  <RateToggle\n                    currencyA={baseCurrency}\n                    currencyB={quoteCurrency}\n                    handleRateToggle={() => {\n                      if (!ticksAtLimit[Bound.LOWER] && !ticksAtLimit[Bound.UPPER]) {\n                        onLeftRangeInput((invertPrice ? priceLower : priceUpper?.invert())?.toSignificant(6) ?? '')\n                        onRightRangeInput((invertPrice ? priceUpper : priceLower?.invert())?.toSignificant(6) ?? '')\n                        onFieldAInput(formattedAmounts[Field.CURRENCY_B] ?? '')\n                      }\n                      history.push(\n                        `/add/${currencyIdB as string}/${currencyIdA as string}${feeAmount ? '/' + feeAmount : ''}`\n                      )\n                    }}\n                  />\n                ) : null}\n              </Row>\n            )}\n          </AddRemoveTabs>\n          <Wrapper>\n            <ResponsiveTwoColumns wide={!hasExistingPosition}>\n              <AutoColumn gap=\"lg\">\n                {!hasExistingPosition && (\n                  <>\n                    <AutoColumn gap=\"md\">\n                      <RowBetween paddingBottom=\"20px\">\n                        <ThemedText.Label>\n                          <Trans>Select Pair</Trans>\n                        </ThemedText.Label>\n                      </RowBetween>\n                      <RowBetween>\n                        <CurrencyDropdown\n                          value={formattedAmounts[Field.CURRENCY_A]}\n                          onUserInput={onFieldAInput}\n                          hideInput={true}\n                          onMax={() => {\n                            onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n                          }}\n                          onCurrencySelect={handleCurrencyASelect}\n                          showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n                          currency={currencies[Field.CURRENCY_A] ?? null}\n                          id=\"add-liquidity-input-tokena\"\n                          showCommonBases\n                        />\n\n                        <div style={{ width: '12px' }} />\n\n                        <CurrencyDropdown\n                          value={formattedAmounts[Field.CURRENCY_B]}\n                          hideInput={true}\n                          onUserInput={onFieldBInput}\n                          onCurrencySelect={handleCurrencyBSelect}\n                          onMax={() => {\n                            onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n                          }}\n                          showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n                          currency={currencies[Field.CURRENCY_B] ?? null}\n                          id=\"add-liquidity-input-tokenb\"\n                          showCommonBases\n                        />\n                      </RowBetween>\n\n                      <FeeSelector\n                        disabled={!quoteCurrency || !baseCurrency}\n                        feeAmount={feeAmount}\n                        handleFeePoolSelect={handleFeePoolSelect}\n                        currencyA={baseCurrency ?? undefined}\n                        currencyB={quoteCurrency ?? undefined}\n                      />\n                    </AutoColumn>{' '}\n                  </>\n                )}\n                {hasExistingPosition && existingPosition && (\n                  <PositionPreview\n                    position={existingPosition}\n                    title={<Trans>Selected Range</Trans>}\n                    inRange={!outOfRange}\n                    ticksAtLimit={ticksAtLimit}\n                  />\n                )}\n              </AutoColumn>\n              <div>\n                <DynamicSection\n                  disabled={tickLower === undefined || tickUpper === undefined || invalidPool || invalidRange}\n                >\n                  <AutoColumn gap=\"md\">\n                    <ThemedText.Label>\n                      {hasExistingPosition ? <Trans>Add more liquidity</Trans> : <Trans>Deposit Amounts</Trans>}\n                    </ThemedText.Label>\n\n                    <CurrencyInputPanel\n                      value={formattedAmounts[Field.CURRENCY_A]}\n                      onUserInput={onFieldAInput}\n                      onMax={() => {\n                        onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n                      }}\n                      showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n                      currency={currencies[Field.CURRENCY_A] ?? null}\n                      id=\"add-liquidity-input-tokena\"\n                      fiatValue={usdcValues[Field.CURRENCY_A]}\n                      showCommonBases\n                      locked={depositADisabled}\n                    />\n\n                    <CurrencyInputPanel\n                      value={formattedAmounts[Field.CURRENCY_B]}\n                      onUserInput={onFieldBInput}\n                      onMax={() => {\n                        onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n                      }}\n                      showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n                      fiatValue={usdcValues[Field.CURRENCY_B]}\n                      currency={currencies[Field.CURRENCY_B] ?? null}\n                      id=\"add-liquidity-input-tokenb\"\n                      showCommonBases\n                      locked={depositBDisabled}\n                    />\n                  </AutoColumn>\n                </DynamicSection>\n              </div>\n\n              {!hasExistingPosition ? (\n                <>\n                  <HideMedium>\n                    <Buttons />\n                  </HideMedium>\n                  <RightContainer gap=\"lg\">\n                    <DynamicSection gap=\"md\" disabled={!feeAmount || invalidPool}>\n                      {!noLiquidity ? (\n                        <>\n                          <RowBetween>\n                            <ThemedText.Label>\n                              <Trans>Set Price Range</Trans>\n                            </ThemedText.Label>\n                          </RowBetween>\n\n                          {price && baseCurrency && quoteCurrency && !noLiquidity && (\n                            <AutoRow gap=\"4px\" justify=\"center\" style={{ marginTop: '0.5rem' }}>\n                              <Trans>\n                                <ThemedText.Main fontWeight={500} textAlign=\"center\" fontSize={12} color=\"text1\">\n                                  Current Price:\n                                </ThemedText.Main>\n                                <ThemedText.Body fontWeight={500} textAlign=\"center\" fontSize={12} color=\"text1\">\n                                  <HoverInlineText\n                                    maxCharacters={20}\n                                    text={invertPrice ? price.invert().toSignificant(6) : price.toSignificant(6)}\n                                  />\n                                </ThemedText.Body>\n                                <ThemedText.Body color=\"text2\" fontSize={12}>\n                                  {quoteCurrency?.symbol} per {baseCurrency.symbol}\n                                </ThemedText.Body>\n                              </Trans>\n                            </AutoRow>\n                          )}\n\n                          <LiquidityChartRangeInput\n                            currencyA={baseCurrency ?? undefined}\n                            currencyB={quoteCurrency ?? undefined}\n                            feeAmount={feeAmount}\n                            ticksAtLimit={ticksAtLimit}\n                            price={\n                              price ? parseFloat((invertPrice ? price.invert() : price).toSignificant(8)) : undefined\n                            }\n                            priceLower={priceLower}\n                            priceUpper={priceUpper}\n                            onLeftRangeInput={onLeftRangeInput}\n                            onRightRangeInput={onRightRangeInput}\n                            interactive={!hasExistingPosition}\n                          />\n                        </>\n                      ) : (\n                        <AutoColumn gap=\"md\">\n                          <RowBetween>\n                            <ThemedText.Label>\n                              <Trans>Set Starting Price</Trans>\n                            </ThemedText.Label>\n                          </RowBetween>\n                          {noLiquidity && (\n                            <BlueCard\n                              style={{\n                                display: 'flex',\n                                flexDirection: 'row',\n                                alignItems: 'center',\n                                padding: '1rem 1rem',\n                              }}\n                            >\n                              <ThemedText.Body\n                                fontSize={14}\n                                style={{ fontWeight: 500 }}\n                                textAlign=\"left\"\n                                color={theme.primaryText1}\n                              >\n                                <Trans>\n                                  This pool must be initialized before you can add liquidity. To initialize, select a\n                                  starting price for the pool. Then, enter your liquidity price range and deposit\n                                  amount. Gas fees will be higher than usual due to the initialization transaction.\n                                </Trans>\n                              </ThemedText.Body>\n                            </BlueCard>\n                          )}\n                          <OutlineCard padding=\"12px\">\n                            <StyledInput\n                              className=\"start-price-input\"\n                              value={startPriceTypedValue}\n                              onUserInput={onStartPriceInput}\n                            />\n                          </OutlineCard>\n                          <RowBetween style={{ backgroundColor: theme.bg1, padding: '12px', borderRadius: '12px' }}>\n                            <ThemedText.Main>\n                              <Trans>Current {baseCurrency?.symbol} Price:</Trans>\n                            </ThemedText.Main>\n                            <ThemedText.Main>\n                              {price ? (\n                                <ThemedText.Main>\n                                  <RowFixed>\n                                    <HoverInlineText\n                                      maxCharacters={20}\n                                      text={invertPrice ? price?.invert()?.toSignificant(5) : price?.toSignificant(5)}\n                                    />{' '}\n                                    <span style={{ marginLeft: '4px' }}>{quoteCurrency?.symbol}</span>\n                                  </RowFixed>\n                                </ThemedText.Main>\n                              ) : (\n                                '-'\n                              )}\n                            </ThemedText.Main>\n                          </RowBetween>\n                        </AutoColumn>\n                      )}\n                    </DynamicSection>\n\n                    <DynamicSection\n                      gap=\"md\"\n                      disabled={!feeAmount || invalidPool || (noLiquidity && !startPriceTypedValue)}\n                    >\n                      <StackedContainer>\n                        <StackedItem style={{ opacity: showCapitalEfficiencyWarning ? '0.05' : 1 }}>\n                          <AutoColumn gap=\"md\">\n                            {noLiquidity && (\n                              <RowBetween>\n                                <ThemedText.Label>\n                                  <Trans>Set Price Range</Trans>\n                                </ThemedText.Label>\n                              </RowBetween>\n                            )}\n                            <RangeSelector\n                              priceLower={priceLower}\n                              priceUpper={priceUpper}\n                              getDecrementLower={getDecrementLower}\n                              getIncrementLower={getIncrementLower}\n                              getDecrementUpper={getDecrementUpper}\n                              getIncrementUpper={getIncrementUpper}\n                              onLeftRangeInput={onLeftRangeInput}\n                              onRightRangeInput={onRightRangeInput}\n                              currencyA={baseCurrency}\n                              currencyB={quoteCurrency}\n                              feeAmount={feeAmount}\n                              ticksAtLimit={ticksAtLimit}\n                            />\n                            {!noLiquidity && (\n                              <PresetsButtons\n                                setFullRange={() => {\n                                  setShowCapitalEfficiencyWarning(true)\n                                }}\n                              />\n                            )}\n                          </AutoColumn>\n                        </StackedItem>\n\n                        {showCapitalEfficiencyWarning && (\n                          <StackedItem zIndex={1}>\n                            <YellowCard\n                              padding=\"15px\"\n                              $borderRadius=\"12px\"\n                              height=\"100%\"\n                              style={{\n                                borderColor: theme.yellow3,\n                                border: '1px solid',\n                              }}\n                            >\n                              <AutoColumn gap=\"8px\" style={{ height: '100%' }}>\n                                <RowFixed>\n                                  <AlertTriangle stroke={theme.yellow3} size=\"16px\" />\n                                  <ThemedText.Yellow ml=\"12px\" fontSize=\"15px\">\n                                    <Trans>Efficiency Comparison</Trans>\n                                  </ThemedText.Yellow>\n                                </RowFixed>\n                                <RowFixed>\n                                  <ThemedText.Yellow ml=\"12px\" fontSize=\"13px\" margin={0} fontWeight={400}>\n                                    <Trans>\n                                      Full range positions may earn less fees than concentrated positions. Learn more{' '}\n                                      <ExternalLink\n                                        style={{ color: theme.yellow3, textDecoration: 'underline' }}\n                                        href={\n                                          'https://help.uniswap.org/en/articles/5434296-can-i-provide-liquidity-over-the-full-range-in-v3'\n                                        }\n                                      >\n                                        here\n                                      </ExternalLink>\n                                      .\n                                    </Trans>\n                                  </ThemedText.Yellow>\n                                </RowFixed>\n                                <Row>\n                                  <ButtonYellow\n                                    padding=\"8px\"\n                                    marginRight=\"8px\"\n                                    $borderRadius=\"8px\"\n                                    width=\"auto\"\n                                    onClick={() => {\n                                      setShowCapitalEfficiencyWarning(false)\n                                      getSetFullRange()\n                                    }}\n                                  >\n                                    <ThemedText.Black fontSize={13} color=\"black\">\n                                      <Trans>I understand</Trans>\n                                    </ThemedText.Black>\n                                  </ButtonYellow>\n                                </Row>\n                              </AutoColumn>\n                            </YellowCard>\n                          </StackedItem>\n                        )}\n                      </StackedContainer>\n\n                      {outOfRange ? (\n                        <YellowCard padding=\"8px 12px\" $borderRadius=\"12px\">\n                          <RowBetween>\n                            <AlertTriangle stroke={theme.yellow3} size=\"16px\" />\n                            <ThemedText.Yellow ml=\"12px\" fontSize=\"12px\">\n                              <Trans>\n                                Your position will not earn fees or be used in trades until the market price moves into\n                                your range.\n                              </Trans>\n                            </ThemedText.Yellow>\n                          </RowBetween>\n                        </YellowCard>\n                      ) : null}\n\n                      {invalidRange ? (\n                        <YellowCard padding=\"8px 12px\" $borderRadius=\"12px\">\n                          <RowBetween>\n                            <AlertTriangle stroke={theme.yellow3} size=\"16px\" />\n                            <ThemedText.Yellow ml=\"12px\" fontSize=\"12px\">\n                              <Trans>Invalid range selected. The min price must be lower than the max price.</Trans>\n                            </ThemedText.Yellow>\n                          </RowBetween>\n                        </YellowCard>\n                      ) : null}\n                    </DynamicSection>\n\n                    <MediumOnly>\n                      <Buttons />\n                    </MediumOnly>\n                  </RightContainer>\n                </>\n              ) : (\n                <Buttons />\n              )}\n            </ResponsiveTwoColumns>\n          </Wrapper>\n        </PageWrapper>\n        {addIsUnsupported && (\n          <UnsupportedCurrencyFooter\n            show={addIsUnsupported}\n            currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]}\n          />\n        )}\n      </ScrollablePage>\n      <SwitchLocaleLink />\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}