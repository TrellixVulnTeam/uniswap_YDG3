{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Downloads/interface-4.30.1/src/components/LiquidityChartRangeInput/svg.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/*\n * Generates an SVG path for the east brush handle.\n * Apply `scale(-1, 1)` to generate west brush handle.\n *\n *    |```````\\\n *    |  | |  |\n *    |______/\n *    |\n *    |\n *    |\n *    |\n *    |\n *\n * https://medium.com/@dennismphil/one-side-rounded-rectangle-using-svg-fb31cf318d90\n */\nexport const brushHandlePath = height => [// handle\n`M 0 0`, // move to origin\n`v ${height}`, // vertical line\n'm 1 0', // move 1px to the right\n`V 0`, // second vertical line\n`M 0 1`, // move to origin\n// head\n'h 12', // horizontal line\n'q 2 0, 2 2', // rounded corner\n'v 22', // vertical line\n'q 0 2 -2 2', // rounded corner\n'h -12', // horizontal line\n`z` // close path\n].join(' ');\nexport const brushHandleAccentPath = () => ['m 5 7', // move to first accent\n'v 14', // vertical line\n'M 0 0', // move to origin\n'm 9 7', // move to second accent\n'v 14', // vertical line\n'z'].join(' ');\nexport const OffScreenHandle = ({\n  color,\n  size = 10,\n  margin = 10\n}) => /*#__PURE__*/_jsxDEV(\"polygon\", {\n  points: `0 0, ${size} ${size}, 0 ${size}`,\n  transform: ` translate(${size + margin}, ${margin}) rotate(45) `,\n  fill: color,\n  stroke: color,\n  strokeWidth: \"4\",\n  strokeLinejoin: \"round\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 53,\n  columnNumber: 3\n}, this);\n_c = OffScreenHandle;\n\nvar _c;\n\n$RefreshReg$(_c, \"OffScreenHandle\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/components/LiquidityChartRangeInput/svg.tsx"],"names":["brushHandlePath","height","join","brushHandleAccentPath","OffScreenHandle","color","size","margin"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,eAAe,GAAIC,MAAD,IAC7B,CACE;AACC,OAFH,EAEW;AACR,KAAIA,MAAO,EAHd,EAGiB;AACf,OAJF,EAIW;AACR,KALH,EAKS;AACN,OANH,EAMW;AAET;AACA,MATF,EASU;AACR,YAVF,EAUgB;AACd,MAXF,EAWU;AACR,YAZF,EAYgB;AACd,OAbF,EAaW;AACR,GAdH,CAcO;AAdP,EAeEC,IAfF,CAeO,GAfP,CADK;AAkBP,OAAO,MAAMC,qBAAqB,GAAG,MACnC,CACE,OADF,EACW;AACT,MAFF,EAEU;AACR,OAHF,EAGW;AACT,OAJF,EAIW;AACT,MALF,EAKU;AACR,GANF,EAOED,IAPF,CAOO,GAPP,CADK;AAUP,OAAO,MAAME,eAAe,GAAG,CAAC;AAC9BC,EAAAA,KAD8B;AAE9BC,EAAAA,IAAI,GAAG,EAFuB;AAG9BC,EAAAA,MAAM,GAAG;AAHqB,CAAD,kBAS7B;AACE,EAAA,MAAM,EAAG,QAAOD,IAAK,IAAGA,IAAK,OAAMA,IAAK,EAD1C;AAEE,EAAA,SAAS,EAAG,cAAaA,IAAI,GAAGC,MAAO,KAAIA,MAAO,eAFpD;AAGE,EAAA,IAAI,EAAEF,KAHR;AAIE,EAAA,MAAM,EAAEA,KAJV;AAKE,EAAA,WAAW,EAAC,GALd;AAME,EAAA,cAAc,EAAC;AANjB;AAAA;AAAA;AAAA;AAAA,QATK;KAAMD,e","sourcesContent":["/*\n * Generates an SVG path for the east brush handle.\n * Apply `scale(-1, 1)` to generate west brush handle.\n *\n *    |```````\\\n *    |  | |  |\n *    |______/\n *    |\n *    |\n *    |\n *    |\n *    |\n *\n * https://medium.com/@dennismphil/one-side-rounded-rectangle-using-svg-fb31cf318d90\n */\nexport const brushHandlePath = (height: number) =>\n  [\n    // handle\n    `M 0 0`, // move to origin\n    `v ${height}`, // vertical line\n    'm 1 0', // move 1px to the right\n    `V 0`, // second vertical line\n    `M 0 1`, // move to origin\n\n    // head\n    'h 12', // horizontal line\n    'q 2 0, 2 2', // rounded corner\n    'v 22', // vertical line\n    'q 0 2 -2 2', // rounded corner\n    'h -12', // horizontal line\n    `z`, // close path\n  ].join(' ')\n\nexport const brushHandleAccentPath = () =>\n  [\n    'm 5 7', // move to first accent\n    'v 14', // vertical line\n    'M 0 0', // move to origin\n    'm 9 7', // move to second accent\n    'v 14', // vertical line\n    'z',\n  ].join(' ')\n\nexport const OffScreenHandle = ({\n  color,\n  size = 10,\n  margin = 10,\n}: {\n  color: string\n  size?: number\n  margin?: number\n}) => (\n  <polygon\n    points={`0 0, ${size} ${size}, 0 ${size}`}\n    transform={` translate(${size + margin}, ${margin}) rotate(45) `}\n    fill={color}\n    stroke={color}\n    strokeWidth=\"4\"\n    strokeLinejoin=\"round\"\n  />\n)\n"]},"metadata":{},"sourceType":"module"}