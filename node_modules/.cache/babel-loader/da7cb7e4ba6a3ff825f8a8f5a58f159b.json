{"ast":null,"code":"import _styled from \"styled-components\";\n\nvar _jsxFileName = \"/Users/safahi/Downloads/interface-4.30.1/src/components/earn/PoolCard.tsx\",\n    _s = $RefreshSig$();\n\nimport { Trans } from \"@lingui/react\";\nimport { CurrencyAmount } from '@uniswap/sdk-core';\nimport JSBI from 'jsbi';\nimport { BIG_INT_SECONDS_IN_WEEK } from '../../constants/misc';\nimport { useColor } from '../../hooks/useColor';\nimport { useTotalSupply } from '../../hooks/useTotalSupply';\nimport useUSDCPrice from '../../hooks/useUSDCPrice';\nimport { useV2Pair } from '../../hooks/useV2Pairs';\nimport { StyledInternalLink, ThemedText } from '../../theme';\nimport { currencyId } from '../../utils/currencyId';\nimport { unwrappedToken } from '../../utils/unwrappedToken';\nimport { ButtonPrimary } from '../Button';\nimport { AutoColumn } from '../Column';\nimport DoubleCurrencyLogo from '../DoubleLogo';\nimport { RowBetween } from '../Row';\nimport { Break, CardBGImage, CardNoise } from './styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StatContainer = _styled.div.withConfig({\n  displayName: \"PoolCard__StatContainer\",\n  componentId: \"sc-8opd0r-0\"\n})([\"display:flex;justify-content:space-between;flex-direction:column;gap:12px;margin-bottom:1rem;margin-right:1rem;margin-left:1rem;\", \";\"], ({\n  theme\n}) => theme.mediaWidth.upToSmall`\n  display: none;\n`);\n\nconst Wrapper = _styled(AutoColumn).withConfig({\n  displayName: \"PoolCard__Wrapper\",\n  componentId: \"sc-8opd0r-1\"\n})([\"border-radius:12px;width:100%;overflow:hidden;position:relative;opacity:\", \";background:\", \";color:\", \" !important;\", \"\"], ({\n  showBackground\n}) => showBackground ? '1' : '1', ({\n  theme,\n  bgColor,\n  showBackground\n}) => `radial-gradient(91.85% 100% at 1.84% 0%, ${bgColor} 0%, ${showBackground ? theme.black : theme.bg5} 100%) `, ({\n  theme,\n  showBackground\n}) => showBackground ? theme.white : theme.text1, ({\n  showBackground\n}) => showBackground && `  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\n    0px 24px 32px rgba(0, 0, 0, 0.01);`);\n\nconst TopSection = _styled.div.withConfig({\n  displayName: \"PoolCard__TopSection\",\n  componentId: \"sc-8opd0r-2\"\n})([\"display:grid;grid-template-columns:48px 1fr 120px;grid-gap:0px;align-items:center;padding:1rem;z-index:1;\", \";\"], ({\n  theme\n}) => theme.mediaWidth.upToSmall`\n    grid-template-columns: 48px 1fr 96px;\n  `);\n\nconst BottomSection = _styled.div.withConfig({\n  displayName: \"PoolCard__BottomSection\",\n  componentId: \"sc-8opd0r-3\"\n})([\"padding:12px 16px;opacity:\", \";border-radius:0 0 12px 12px;display:flex;flex-direction:row;align-items:baseline;justify-content:space-between;z-index:1;\"], ({\n  showBackground\n}) => showBackground ? '1' : '0.4');\n\nexport default function PoolCard({\n  stakingInfo\n}) {\n  _s();\n\n  var _valueOfTotalStakedAm, _valueOfTotalStakedAm2, _stakingInfo$totalRew, _stakingInfo$totalRew2, _stakingInfo$rewardRa, _stakingInfo$rewardRa2;\n\n  const token0 = stakingInfo.tokens[0];\n  const token1 = stakingInfo.tokens[1];\n  const currency0 = unwrappedToken(token0);\n  const currency1 = unwrappedToken(token1);\n  const isStaking = Boolean(stakingInfo.stakedAmount.greaterThan('0')); // get the color of the token\n\n  const token = currency0.isNative ? token1 : token0;\n  const WETH = currency0.isNative ? token0 : token1;\n  const backgroundColor = useColor(token);\n  const totalSupplyOfStakingToken = useTotalSupply(stakingInfo.stakedAmount.currency);\n  const [, stakingTokenPair] = useV2Pair(...stakingInfo.tokens); // let returnOverMonth: Percent = new Percent('0')\n\n  let valueOfTotalStakedAmountInWETH;\n\n  if (totalSupplyOfStakingToken && stakingTokenPair) {\n    // take the total amount of LP tokens staked, multiply by ETH value of all LP tokens, divide by all LP tokens\n    valueOfTotalStakedAmountInWETH = CurrencyAmount.fromRawAmount(WETH, JSBI.divide(JSBI.multiply(JSBI.multiply(stakingInfo.totalStakedAmount.quotient, stakingTokenPair.reserveOf(WETH).quotient), JSBI.BigInt(2) // this is b/c the value of LP shares are ~double the value of the WETH they entitle owner to\n    ), totalSupplyOfStakingToken.quotient));\n  } // get the USD value of staked WETH\n\n\n  const USDPrice = useUSDCPrice(WETH);\n  const valueOfTotalStakedAmountInUSDC = valueOfTotalStakedAmountInWETH && (USDPrice === null || USDPrice === void 0 ? void 0 : USDPrice.quote(valueOfTotalStakedAmountInWETH));\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    showBackground: isStaking,\n    bgColor: backgroundColor,\n    children: [/*#__PURE__*/_jsxDEV(CardBGImage, {\n      desaturate: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardNoise, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TopSection, {\n      children: [/*#__PURE__*/_jsxDEV(DoubleCurrencyLogo, {\n        currency0: currency0,\n        currency1: currency1,\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ThemedText.White, {\n        fontWeight: 600,\n        fontSize: 24,\n        style: {\n          marginLeft: '8px'\n        },\n        children: [currency0.symbol, \"-\", currency1.symbol]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledInternalLink, {\n        to: `/uni/${currencyId(currency0)}/${currencyId(currency1)}`,\n        style: {\n          width: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n          padding: \"8px\",\n          $borderRadius: \"8px\",\n          children: isStaking ? /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Manage\"\n          }, void 0, false, void 0, this) : /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Deposit\"\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatContainer, {\n      children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n        children: [/*#__PURE__*/_jsxDEV(ThemedText.White, {\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Total deposited\"\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ThemedText.White, {\n          children: valueOfTotalStakedAmountInUSDC ? /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"${0}\",\n            values: {\n              0: valueOfTotalStakedAmountInUSDC.toFixed(0, {\n                groupSeparator: ','\n              })\n            }\n          }, void 0, false, void 0, this) : /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"{0} ETH\",\n            values: {\n              0: (_valueOfTotalStakedAm = (_valueOfTotalStakedAm2 = valueOfTotalStakedAmountInWETH) === null || _valueOfTotalStakedAm2 === void 0 ? void 0 : _valueOfTotalStakedAm2.toSignificant(4, {\n                groupSeparator: ','\n              })) !== null && _valueOfTotalStakedAm !== void 0 ? _valueOfTotalStakedAm : '-'\n            }\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n        children: [/*#__PURE__*/_jsxDEV(ThemedText.White, {\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Pool rate\"\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ThemedText.White, {\n          children: stakingInfo ? stakingInfo.active ? /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"{0} UNI / week\",\n            values: {\n              0: (_stakingInfo$totalRew = stakingInfo.totalRewardRate) === null || _stakingInfo$totalRew === void 0 ? void 0 : (_stakingInfo$totalRew2 = _stakingInfo$totalRew.multiply(BIG_INT_SECONDS_IN_WEEK)) === null || _stakingInfo$totalRew2 === void 0 ? void 0 : _stakingInfo$totalRew2.toFixed(0, {\n                groupSeparator: ','\n              })\n            }\n          }, void 0, false, void 0, this) : /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"0 UNI / week\"\n          }, void 0, false, void 0, this) : '-'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), isStaking && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Break, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BottomSection, {\n        showBackground: true,\n        children: [/*#__PURE__*/_jsxDEV(ThemedText.Black, {\n          color: 'white',\n          fontWeight: 500,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"Your rate\"\n            }, void 0, false, void 0, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ThemedText.Black, {\n          style: {\n            textAlign: 'right'\n          },\n          color: 'white',\n          fontWeight: 500,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"img\",\n            \"aria-label\": \"wizard-icon\",\n            style: {\n              marginRight: '0.5rem'\n            },\n            children: \"\\u26A1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), stakingInfo ? stakingInfo.active ? /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"{0} UNI / week\",\n            values: {\n              0: (_stakingInfo$rewardRa = stakingInfo.rewardRate) === null || _stakingInfo$rewardRa === void 0 ? void 0 : (_stakingInfo$rewardRa2 = _stakingInfo$rewardRa.multiply(BIG_INT_SECONDS_IN_WEEK)) === null || _stakingInfo$rewardRa2 === void 0 ? void 0 : _stakingInfo$rewardRa2.toSignificant(4, {\n                groupSeparator: ','\n              })\n            }\n          }, void 0, false, void 0, this) : /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"0 UNI / week\"\n          }, void 0, false, void 0, this) : '-']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PoolCard, \"IdwGr0AWQGBlBLrD9401iFrBEsE=\", false, function () {\n  return [useColor, useTotalSupply, useV2Pair, useUSDCPrice];\n});\n\n_c = PoolCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PoolCard\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/components/earn/PoolCard.tsx"],"names":["CurrencyAmount","JSBI","BIG_INT_SECONDS_IN_WEEK","useColor","useTotalSupply","useUSDCPrice","useV2Pair","StyledInternalLink","ThemedText","currencyId","unwrappedToken","ButtonPrimary","AutoColumn","DoubleCurrencyLogo","RowBetween","Break","CardBGImage","CardNoise","StatContainer","styled","div","theme","mediaWidth","upToSmall","Wrapper","showBackground","bgColor","black","bg5","white","text1","TopSection","BottomSection","PoolCard","stakingInfo","token0","tokens","token1","currency0","currency1","isStaking","Boolean","stakedAmount","greaterThan","token","isNative","WETH","backgroundColor","totalSupplyOfStakingToken","currency","stakingTokenPair","valueOfTotalStakedAmountInWETH","fromRawAmount","divide","multiply","totalStakedAmount","quotient","reserveOf","BigInt","USDPrice","valueOfTotalStakedAmountInUSDC","quote","marginLeft","symbol","width","toFixed","groupSeparator","toSignificant","active","totalRewardRate","textAlign","marginRight","rewardRate"],"mappings":"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","sourcesContent":["import { Trans } from '@lingui/macro'\nimport { CurrencyAmount, Token } from '@uniswap/sdk-core'\nimport JSBI from 'jsbi'\nimport styled from 'styled-components/macro'\n\nimport { BIG_INT_SECONDS_IN_WEEK } from '../../constants/misc'\nimport { useColor } from '../../hooks/useColor'\nimport { useTotalSupply } from '../../hooks/useTotalSupply'\nimport useUSDCPrice from '../../hooks/useUSDCPrice'\nimport { useV2Pair } from '../../hooks/useV2Pairs'\nimport { StakingInfo } from '../../state/stake/hooks'\nimport { StyledInternalLink, ThemedText } from '../../theme'\nimport { currencyId } from '../../utils/currencyId'\nimport { unwrappedToken } from '../../utils/unwrappedToken'\nimport { ButtonPrimary } from '../Button'\nimport { AutoColumn } from '../Column'\nimport DoubleCurrencyLogo from '../DoubleLogo'\nimport { RowBetween } from '../Row'\nimport { Break, CardBGImage, CardNoise } from './styled'\n\nconst StatContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  gap: 12px;\n  margin-bottom: 1rem;\n  margin-right: 1rem;\n  margin-left: 1rem;\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n  display: none;\n`};\n`\n\nconst Wrapper = styled(AutoColumn)<{ showBackground: boolean; bgColor: any }>`\n  border-radius: 12px;\n  width: 100%;\n  overflow: hidden;\n  position: relative;\n  opacity: ${({ showBackground }) => (showBackground ? '1' : '1')};\n  background: ${({ theme, bgColor, showBackground }) =>\n    `radial-gradient(91.85% 100% at 1.84% 0%, ${bgColor} 0%, ${showBackground ? theme.black : theme.bg5} 100%) `};\n  color: ${({ theme, showBackground }) => (showBackground ? theme.white : theme.text1)} !important;\n\n  ${({ showBackground }) =>\n    showBackground &&\n    `  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\n    0px 24px 32px rgba(0, 0, 0, 0.01);`}\n`\n\nconst TopSection = styled.div`\n  display: grid;\n  grid-template-columns: 48px 1fr 120px;\n  grid-gap: 0px;\n  align-items: center;\n  padding: 1rem;\n  z-index: 1;\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    grid-template-columns: 48px 1fr 96px;\n  `};\n`\n\nconst BottomSection = styled.div<{ showBackground: boolean }>`\n  padding: 12px 16px;\n  opacity: ${({ showBackground }) => (showBackground ? '1' : '0.4')};\n  border-radius: 0 0 12px 12px;\n  display: flex;\n  flex-direction: row;\n  align-items: baseline;\n  justify-content: space-between;\n  z-index: 1;\n`\n\nexport default function PoolCard({ stakingInfo }: { stakingInfo: StakingInfo }) {\n  const token0 = stakingInfo.tokens[0]\n  const token1 = stakingInfo.tokens[1]\n\n  const currency0 = unwrappedToken(token0)\n  const currency1 = unwrappedToken(token1)\n\n  const isStaking = Boolean(stakingInfo.stakedAmount.greaterThan('0'))\n\n  // get the color of the token\n  const token = currency0.isNative ? token1 : token0\n  const WETH = currency0.isNative ? token0 : token1\n  const backgroundColor = useColor(token)\n\n  const totalSupplyOfStakingToken = useTotalSupply(stakingInfo.stakedAmount.currency)\n  const [, stakingTokenPair] = useV2Pair(...stakingInfo.tokens)\n\n  // let returnOverMonth: Percent = new Percent('0')\n  let valueOfTotalStakedAmountInWETH: CurrencyAmount<Token> | undefined\n  if (totalSupplyOfStakingToken && stakingTokenPair) {\n    // take the total amount of LP tokens staked, multiply by ETH value of all LP tokens, divide by all LP tokens\n    valueOfTotalStakedAmountInWETH = CurrencyAmount.fromRawAmount(\n      WETH,\n      JSBI.divide(\n        JSBI.multiply(\n          JSBI.multiply(stakingInfo.totalStakedAmount.quotient, stakingTokenPair.reserveOf(WETH).quotient),\n          JSBI.BigInt(2) // this is b/c the value of LP shares are ~double the value of the WETH they entitle owner to\n        ),\n        totalSupplyOfStakingToken.quotient\n      )\n    )\n  }\n\n  // get the USD value of staked WETH\n  const USDPrice = useUSDCPrice(WETH)\n  const valueOfTotalStakedAmountInUSDC =\n    valueOfTotalStakedAmountInWETH && USDPrice?.quote(valueOfTotalStakedAmountInWETH)\n\n  return (\n    <Wrapper showBackground={isStaking} bgColor={backgroundColor}>\n      <CardBGImage desaturate />\n      <CardNoise />\n\n      <TopSection>\n        <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={24} />\n        <ThemedText.White fontWeight={600} fontSize={24} style={{ marginLeft: '8px' }}>\n          {currency0.symbol}-{currency1.symbol}\n        </ThemedText.White>\n\n        <StyledInternalLink to={`/uni/${currencyId(currency0)}/${currencyId(currency1)}`} style={{ width: '100%' }}>\n          <ButtonPrimary padding=\"8px\" $borderRadius=\"8px\">\n            {isStaking ? <Trans>Manage</Trans> : <Trans>Deposit</Trans>}\n          </ButtonPrimary>\n        </StyledInternalLink>\n      </TopSection>\n\n      <StatContainer>\n        <RowBetween>\n          <ThemedText.White>\n            <Trans>Total deposited</Trans>\n          </ThemedText.White>\n          <ThemedText.White>\n            {valueOfTotalStakedAmountInUSDC ? (\n              <Trans>${valueOfTotalStakedAmountInUSDC.toFixed(0, { groupSeparator: ',' })}</Trans>\n            ) : (\n              <Trans>{valueOfTotalStakedAmountInWETH?.toSignificant(4, { groupSeparator: ',' }) ?? '-'} ETH</Trans>\n            )}\n          </ThemedText.White>\n        </RowBetween>\n        <RowBetween>\n          <ThemedText.White>\n            <Trans>Pool rate</Trans>\n          </ThemedText.White>\n          <ThemedText.White>\n            {stakingInfo ? (\n              stakingInfo.active ? (\n                <Trans>\n                  {stakingInfo.totalRewardRate?.multiply(BIG_INT_SECONDS_IN_WEEK)?.toFixed(0, { groupSeparator: ',' })}{' '}\n                  UNI / week\n                </Trans>\n              ) : (\n                <Trans>0 UNI / week</Trans>\n              )\n            ) : (\n              '-'\n            )}\n          </ThemedText.White>\n        </RowBetween>\n      </StatContainer>\n\n      {isStaking && (\n        <>\n          <Break />\n          <BottomSection showBackground={true}>\n            <ThemedText.Black color={'white'} fontWeight={500}>\n              <span>\n                <Trans>Your rate</Trans>\n              </span>\n            </ThemedText.Black>\n\n            <ThemedText.Black style={{ textAlign: 'right' }} color={'white'} fontWeight={500}>\n              <span role=\"img\" aria-label=\"wizard-icon\" style={{ marginRight: '0.5rem' }}>\n                ⚡\n              </span>\n              {stakingInfo ? (\n                stakingInfo.active ? (\n                  <Trans>\n                    {stakingInfo.rewardRate\n                      ?.multiply(BIG_INT_SECONDS_IN_WEEK)\n                      ?.toSignificant(4, { groupSeparator: ',' })}{' '}\n                    UNI / week\n                  </Trans>\n                ) : (\n                  <Trans>0 UNI / week</Trans>\n                )\n              ) : (\n                '-'\n              )}\n            </ThemedText.Black>\n          </BottomSection>\n        </>\n      )}\n    </Wrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}