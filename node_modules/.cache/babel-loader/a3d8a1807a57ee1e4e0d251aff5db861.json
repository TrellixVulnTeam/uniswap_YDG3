{"ast":null,"code":"import _styled from \"styled-components\";\n\nvar _jsxFileName = \"/Users/safahi/Downloads/interface-4.30.1/src/components/Web3ReactManager/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Trans } from \"@lingui/react\";\nimport { useWeb3React } from '@web3-react/core';\nimport { useEffect } from 'react';\nimport { network } from '../../connectors';\nimport { NetworkContextName } from '../../constants/misc';\nimport { useEagerConnect, useInactiveListener } from '../../hooks/web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MessageWrapper = _styled.div.withConfig({\n  displayName: \"Web3ReactManager__MessageWrapper\",\n  componentId: \"sc-1bdulxg-0\"\n})([\"display:flex;align-items:center;justify-content:center;height:20rem;\"]);\n\nconst Message = _styled.h2.withConfig({\n  displayName: \"Web3ReactManager__Message\",\n  componentId: \"sc-1bdulxg-1\"\n})([\"color:\", \";\"], ({\n  theme\n}) => theme.secondary1);\n\nexport default function Web3ReactManager({\n  children\n}) {\n  _s();\n\n  const {\n    active\n  } = useWeb3React();\n  const {\n    active: networkActive,\n    error: networkError,\n    activate: activateNetwork\n  } = useWeb3React(NetworkContextName); // try to eagerly connect to an injected provider, if it exists and has granted access already\n\n  const triedEager = useEagerConnect(); // after eagerly trying injected, if the network connect ever isn't active or in an error state, activate itd\n\n  useEffect(() => {\n    if (triedEager && !networkActive && !networkError && !active) {\n      activateNetwork(network);\n    }\n  }, [triedEager, networkActive, networkError, activateNetwork, active]); // when there's no account connected, react to logins (broadly speaking) on the injected provider, if it exists\n\n  useInactiveListener(!triedEager); // if the account context isn't active, and there's an error on the network context, it's an irrecoverable error\n\n  if (triedEager && !active && networkError) {\n    return /*#__PURE__*/_jsxDEV(MessageWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Message, {\n        children: /*#__PURE__*/_jsxDEV(Trans, {\n          id: \"Oops! An unknown error occurred. Please refresh the page, or visit from another browser or device.\"\n        }, void 0, false, void 0, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n  return children;\n}\n\n_s(Web3ReactManager, \"ikiHtfOoeXm4r79BZW+FRVKBVSE=\", false, function () {\n  return [useWeb3React, useWeb3React, useEagerConnect, useInactiveListener];\n});\n\n_c = Web3ReactManager;\n\nvar _c;\n\n$RefreshReg$(_c, \"Web3ReactManager\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/components/Web3ReactManager/index.tsx"],"names":["useWeb3React","useEffect","network","NetworkContextName","useEagerConnect","useInactiveListener","MessageWrapper","styled","div","Message","h2","theme","secondary1","Web3ReactManager","children","active","networkActive","error","networkError","activate","activateNetwork","triedEager"],"mappings":";;;;;;AACA,SAASA,YAAT,QAA6B,kBAA7B;AACA,SAASC,SAAT,QAA0B,OAA1B;AAGA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,SAASC,eAAT,EAA0BC,mBAA1B,QAAqD,kBAArD;;;AAEA,MAAMC,cAAc,GAAGC,OAAM,CAACC,GAAV;AAAA;AAAA;AAAA,4EAApB;;AAOA,MAAMC,OAAO,GAAGF,OAAM,CAACG,EAAV;AAAA;AAAA;AAAA,oBACF,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,UADnB,CAAb;;AAIA,eAAe,SAASC,gBAAT,CAA0B;AAAEC,EAAAA;AAAF,CAA1B,EAAmE;AAAA;;AAChF,QAAM;AAAEC,IAAAA;AAAF,MAAaf,YAAY,EAA/B;AACA,QAAM;AAAEe,IAAAA,MAAM,EAAEC,aAAV;AAAyBC,IAAAA,KAAK,EAAEC,YAAhC;AAA8CC,IAAAA,QAAQ,EAAEC;AAAxD,MAA4EpB,YAAY,CAACG,kBAAD,CAA9F,CAFgF,CAIhF;;AACA,QAAMkB,UAAU,GAAGjB,eAAe,EAAlC,CALgF,CAOhF;;AACAH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIoB,UAAU,IAAI,CAACL,aAAf,IAAgC,CAACE,YAAjC,IAAiD,CAACH,MAAtD,EAA8D;AAC5DK,MAAAA,eAAe,CAAClB,OAAD,CAAf;AACD;AACF,GAJQ,EAIN,CAACmB,UAAD,EAAaL,aAAb,EAA4BE,YAA5B,EAA0CE,eAA1C,EAA2DL,MAA3D,CAJM,CAAT,CARgF,CAchF;;AACAV,EAAAA,mBAAmB,CAAC,CAACgB,UAAF,CAAnB,CAfgF,CAiBhF;;AACA,MAAIA,UAAU,IAAI,CAACN,MAAf,IAAyBG,YAA7B,EAA2C;AACzC,wBACE,QAAC,cAAD;AAAA,6BACE,QAAC,OAAD;AAAA,+BACE;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAED,SAAOJ,QAAP;AACD;;GA/BuBD,gB;UACHb,Y,EAC+DA,Y,EAG/DI,e,EAUnBC,mB;;;KAfsBQ,gB","sourcesContent":["import { Trans } from '@lingui/macro'\nimport { useWeb3React } from '@web3-react/core'\nimport { useEffect } from 'react'\nimport styled from 'styled-components/macro'\n\nimport { network } from '../../connectors'\nimport { NetworkContextName } from '../../constants/misc'\nimport { useEagerConnect, useInactiveListener } from '../../hooks/web3'\n\nconst MessageWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 20rem;\n`\n\nconst Message = styled.h2`\n  color: ${({ theme }) => theme.secondary1};\n`\n\nexport default function Web3ReactManager({ children }: { children: JSX.Element }) {\n  const { active } = useWeb3React()\n  const { active: networkActive, error: networkError, activate: activateNetwork } = useWeb3React(NetworkContextName)\n\n  // try to eagerly connect to an injected provider, if it exists and has granted access already\n  const triedEager = useEagerConnect()\n\n  // after eagerly trying injected, if the network connect ever isn't active or in an error state, activate itd\n  useEffect(() => {\n    if (triedEager && !networkActive && !networkError && !active) {\n      activateNetwork(network)\n    }\n  }, [triedEager, networkActive, networkError, activateNetwork, active])\n\n  // when there's no account connected, react to logins (broadly speaking) on the injected provider, if it exists\n  useInactiveListener(!triedEager)\n\n  // if the account context isn't active, and there's an error on the network context, it's an irrecoverable error\n  if (triedEager && !active && networkError) {\n    return (\n      <MessageWrapper>\n        <Message>\n          <Trans>\n            Oops! An unknown error occurred. Please refresh the page, or visit from another browser or device.\n          </Trans>\n        </Message>\n      </MessageWrapper>\n    )\n  }\n\n  return children\n}\n"]},"metadata":{},"sourceType":"module"}