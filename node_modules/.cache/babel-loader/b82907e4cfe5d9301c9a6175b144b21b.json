{"ast":null,"code":"import { ThemeContext as _ThemeContext } from \"styled-components\";\n\nvar _jsxFileName = \"/Users/safahi/Downloads/interface-4.30.1/src/pages/RemoveLiquidity/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Trans } from \"@lingui/react\";\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { Percent } from '@uniswap/sdk-core';\nimport { useCallback, useContext, useMemo, useState } from 'react';\nimport { ArrowDown, Plus } from 'react-feather';\nimport ReactGA from 'react-ga';\nimport { Text } from 'rebass';\nimport { ButtonConfirmed, ButtonError, ButtonLight, ButtonPrimary } from '../../components/Button';\nimport { BlueCard, LightCard } from '../../components/Card';\nimport { AutoColumn, ColumnCenter } from '../../components/Column';\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel';\nimport CurrencyLogo from '../../components/CurrencyLogo';\nimport DoubleCurrencyLogo from '../../components/DoubleLogo';\nimport { AddRemoveTabs } from '../../components/NavigationTabs';\nimport { MinimalPositionCard } from '../../components/PositionCard';\nimport Row, { RowBetween, RowFixed } from '../../components/Row';\nimport Slider from '../../components/Slider';\nimport { Dots } from '../../components/swap/styleds';\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal';\nimport { WRAPPED_NATIVE_CURRENCY } from '../../constants/tokens';\nimport { useCurrency } from '../../hooks/Tokens';\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback';\nimport { usePairContract, useV2RouterContract } from '../../hooks/useContract';\nimport useDebouncedChangeHandler from '../../hooks/useDebouncedChangeHandler';\nimport { useV2LiquidityTokenPermit } from '../../hooks/useERC20Permit';\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline';\nimport { useActiveWeb3React } from '../../hooks/web3';\nimport { useWalletModalToggle } from '../../state/application/hooks';\nimport { Field } from '../../state/burn/actions';\nimport { useBurnActionHandlers, useBurnState, useDerivedBurnInfo } from '../../state/burn/hooks';\nimport { TransactionType } from '../../state/transactions/actions';\nimport { useTransactionAdder } from '../../state/transactions/hooks';\nimport { useUserSlippageToleranceWithDefault } from '../../state/user/hooks';\nimport { StyledInternalLink, ThemedText } from '../../theme';\nimport { calculateGasMargin } from '../../utils/calculateGasMargin';\nimport { calculateSlippageAmount } from '../../utils/calculateSlippageAmount';\nimport { currencyId } from '../../utils/currencyId';\nimport AppBody from '../AppBody';\nimport { ClickableText, MaxButton, Wrapper } from '../Pool/styleds';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DEFAULT_REMOVE_LIQUIDITY_SLIPPAGE_TOLERANCE = new Percent(5, 100);\nexport default function RemoveLiquidity({\n  history,\n  match: {\n    params: {\n      currencyIdA,\n      currencyIdB\n    }\n  }\n}) {\n  _s();\n\n  var _useCurrency, _useCurrency2, _parsedAmounts$Field$, _parsedAmounts$Field$2, _parsedAmounts$Field$3, _parsedAmounts$Field$4, _parsedAmounts$Field$5, _parsedAmounts$Field$6, _parsedAmounts$Field$7, _pair$liquidityToken, _parsedAmounts$Field$15, _parsedAmounts$Field$16;\n\n  const [currencyA, currencyB] = [(_useCurrency = useCurrency(currencyIdA)) !== null && _useCurrency !== void 0 ? _useCurrency : undefined, (_useCurrency2 = useCurrency(currencyIdB)) !== null && _useCurrency2 !== void 0 ? _useCurrency2 : undefined];\n  const {\n    account,\n    chainId,\n    library\n  } = useActiveWeb3React();\n  const [tokenA, tokenB] = useMemo(() => [currencyA === null || currencyA === void 0 ? void 0 : currencyA.wrapped, currencyB === null || currencyB === void 0 ? void 0 : currencyB.wrapped], [currencyA, currencyB]);\n  const theme = useContext(_ThemeContext); // toggle wallet when disconnected\n\n  const toggleWalletModal = useWalletModalToggle(); // burn state\n\n  const {\n    independentField,\n    typedValue\n  } = useBurnState();\n  const {\n    pair,\n    parsedAmounts,\n    error\n  } = useDerivedBurnInfo(currencyA !== null && currencyA !== void 0 ? currencyA : undefined, currencyB !== null && currencyB !== void 0 ? currencyB : undefined);\n  const {\n    onUserInput: _onUserInput\n  } = useBurnActionHandlers();\n  const isValid = !error; // modal and loading\n\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [showDetailed, setShowDetailed] = useState(false);\n  const [attemptingTxn, setAttemptingTxn] = useState(false); // clicked confirm\n  // txn values\n\n  const [txHash, setTxHash] = useState('');\n  const deadline = useTransactionDeadline();\n  const allowedSlippage = useUserSlippageToleranceWithDefault(DEFAULT_REMOVE_LIQUIDITY_SLIPPAGE_TOLERANCE);\n  const formattedAmounts = {\n    [Field.LIQUIDITY_PERCENT]: parsedAmounts[Field.LIQUIDITY_PERCENT].equalTo('0') ? '0' : parsedAmounts[Field.LIQUIDITY_PERCENT].lessThan(new Percent('1', '100')) ? '<1' : parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0),\n    [Field.LIQUIDITY]: independentField === Field.LIQUIDITY ? typedValue : (_parsedAmounts$Field$ = (_parsedAmounts$Field$2 = parsedAmounts[Field.LIQUIDITY]) === null || _parsedAmounts$Field$2 === void 0 ? void 0 : _parsedAmounts$Field$2.toSignificant(6)) !== null && _parsedAmounts$Field$ !== void 0 ? _parsedAmounts$Field$ : '',\n    [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? typedValue : (_parsedAmounts$Field$3 = (_parsedAmounts$Field$4 = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$4 === void 0 ? void 0 : _parsedAmounts$Field$4.toSignificant(6)) !== null && _parsedAmounts$Field$3 !== void 0 ? _parsedAmounts$Field$3 : '',\n    [Field.CURRENCY_B]: independentField === Field.CURRENCY_B ? typedValue : (_parsedAmounts$Field$5 = (_parsedAmounts$Field$6 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$6 === void 0 ? void 0 : _parsedAmounts$Field$6.toSignificant(6)) !== null && _parsedAmounts$Field$5 !== void 0 ? _parsedAmounts$Field$5 : ''\n  };\n  const atMaxAmount = (_parsedAmounts$Field$7 = parsedAmounts[Field.LIQUIDITY_PERCENT]) === null || _parsedAmounts$Field$7 === void 0 ? void 0 : _parsedAmounts$Field$7.equalTo(new Percent('1')); // pair contract\n\n  const pairContract = usePairContract(pair === null || pair === void 0 ? void 0 : (_pair$liquidityToken = pair.liquidityToken) === null || _pair$liquidityToken === void 0 ? void 0 : _pair$liquidityToken.address);\n  const router = useV2RouterContract(); // allowance handling\n\n  const {\n    gatherPermitSignature,\n    signatureData\n  } = useV2LiquidityTokenPermit(parsedAmounts[Field.LIQUIDITY], router === null || router === void 0 ? void 0 : router.address);\n  const [approval, approveCallback] = useApproveCallback(parsedAmounts[Field.LIQUIDITY], router === null || router === void 0 ? void 0 : router.address);\n\n  async function onAttemptToApprove() {\n    if (!pairContract || !pair || !library || !deadline) throw new Error('missing dependencies');\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY];\n    if (!liquidityAmount) throw new Error('missing liquidity amount');\n\n    if (gatherPermitSignature) {\n      try {\n        await gatherPermitSignature();\n      } catch (error) {\n        // try to approve if gatherPermitSignature failed for any reason other than the user rejecting it\n        if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n          await approveCallback();\n        }\n      }\n    } else {\n      await approveCallback();\n    }\n  } // wrapped onUserInput to clear signatures\n\n\n  const onUserInput = useCallback((field, typedValue) => {\n    return _onUserInput(field, typedValue);\n  }, [_onUserInput]);\n  const onLiquidityInput = useCallback(typedValue => onUserInput(Field.LIQUIDITY, typedValue), [onUserInput]);\n  const onCurrencyAInput = useCallback(typedValue => onUserInput(Field.CURRENCY_A, typedValue), [onUserInput]);\n  const onCurrencyBInput = useCallback(typedValue => onUserInput(Field.CURRENCY_B, typedValue), [onUserInput]); // tx sending\n\n  const addTransaction = useTransactionAdder();\n\n  async function onRemove() {\n    if (!chainId || !library || !account || !deadline || !router) throw new Error('missing dependencies');\n    const {\n      [Field.CURRENCY_A]: currencyAmountA,\n      [Field.CURRENCY_B]: currencyAmountB\n    } = parsedAmounts;\n\n    if (!currencyAmountA || !currencyAmountB) {\n      throw new Error('missing currency amounts');\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(currencyAmountA, allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(currencyAmountB, allowedSlippage)[0]\n    };\n    if (!currencyA || !currencyB) throw new Error('missing tokens');\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY];\n    if (!liquidityAmount) throw new Error('missing liquidity amount');\n    const currencyBIsETH = currencyB.isNative;\n    const oneCurrencyIsETH = currencyA.isNative || currencyBIsETH;\n    if (!tokenA || !tokenB) throw new Error('could not wrap');\n    let methodNames, args; // we have approval, use normal remove liquidity\n\n    if (approval === ApprovalState.APPROVED) {\n      // removeLiquidityETH\n      if (oneCurrencyIsETH) {\n        methodNames = ['removeLiquidityETH', 'removeLiquidityETHSupportingFeeOnTransferTokens'];\n        args = [currencyBIsETH ? tokenA.address : tokenB.address, liquidityAmount.quotient.toString(), amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), account, deadline.toHexString()];\n      } // removeLiquidity\n      else {\n        methodNames = ['removeLiquidity'];\n        args = [tokenA.address, tokenB.address, liquidityAmount.quotient.toString(), amountsMin[Field.CURRENCY_A].toString(), amountsMin[Field.CURRENCY_B].toString(), account, deadline.toHexString()];\n      }\n    } // we have a signature, use permit versions of remove liquidity\n    else if (signatureData !== null) {\n      // removeLiquidityETHWithPermit\n      if (oneCurrencyIsETH) {\n        methodNames = ['removeLiquidityETHWithPermit', 'removeLiquidityETHWithPermitSupportingFeeOnTransferTokens'];\n        args = [currencyBIsETH ? tokenA.address : tokenB.address, liquidityAmount.quotient.toString(), amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), account, signatureData.deadline, false, signatureData.v, signatureData.r, signatureData.s];\n      } // removeLiquidityETHWithPermit\n      else {\n        methodNames = ['removeLiquidityWithPermit'];\n        args = [tokenA.address, tokenB.address, liquidityAmount.quotient.toString(), amountsMin[Field.CURRENCY_A].toString(), amountsMin[Field.CURRENCY_B].toString(), account, signatureData.deadline, false, signatureData.v, signatureData.r, signatureData.s];\n      }\n    } else {\n      throw new Error('Attempting to confirm without approval or a signature. Please contact support.');\n    }\n\n    const safeGasEstimates = await Promise.all(methodNames.map(methodName => router.estimateGas[methodName](...args).then(estimateGas => calculateGasMargin(estimateGas)).catch(error => {\n      console.error(`estimateGas failed`, methodName, args, error);\n      return undefined;\n    })));\n    const indexOfSuccessfulEstimation = safeGasEstimates.findIndex(safeGasEstimate => BigNumber.isBigNumber(safeGasEstimate)); // all estimations failed...\n\n    if (indexOfSuccessfulEstimation === -1) {\n      console.error('This transaction would fail. Please contact support.');\n    } else {\n      const methodName = methodNames[indexOfSuccessfulEstimation];\n      const safeGasEstimate = safeGasEstimates[indexOfSuccessfulEstimation];\n      setAttemptingTxn(true);\n      await router[methodName](...args, {\n        gasLimit: safeGasEstimate\n      }).then(response => {\n        var _parsedAmounts$Field$8, _parsedAmounts$Field$9, _parsedAmounts$Field$10, _parsedAmounts$Field$11;\n\n        setAttemptingTxn(false);\n        addTransaction(response, {\n          type: TransactionType.REMOVE_LIQUIDITY_V3,\n          baseCurrencyId: currencyId(currencyA),\n          quoteCurrencyId: currencyId(currencyB),\n          expectedAmountBaseRaw: (_parsedAmounts$Field$8 = (_parsedAmounts$Field$9 = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$9 === void 0 ? void 0 : _parsedAmounts$Field$9.quotient.toString()) !== null && _parsedAmounts$Field$8 !== void 0 ? _parsedAmounts$Field$8 : '0',\n          expectedAmountQuoteRaw: (_parsedAmounts$Field$10 = (_parsedAmounts$Field$11 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$11 === void 0 ? void 0 : _parsedAmounts$Field$11.quotient.toString()) !== null && _parsedAmounts$Field$10 !== void 0 ? _parsedAmounts$Field$10 : '0'\n        });\n        setTxHash(response.hash);\n        ReactGA.event({\n          category: 'Liquidity',\n          action: 'Remove',\n          label: [currencyA.symbol, currencyB.symbol].join('/')\n        });\n      }).catch(error => {\n        setAttemptingTxn(false); // we only care if the error is something _other_ than the user rejected the tx\n\n        console.error(error);\n      });\n    }\n  }\n\n  function modalHeader() {\n    var _parsedAmounts$Field$12, _parsedAmounts$Field$13;\n\n    return /*#__PURE__*/_jsxDEV(AutoColumn, {\n      gap: 'md',\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n        align: \"flex-end\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: 24,\n          fontWeight: 500,\n          children: (_parsedAmounts$Field$12 = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$12 === void 0 ? void 0 : _parsedAmounts$Field$12.toSignificant(6)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n          gap: \"4px\",\n          children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n            currency: currencyA,\n            size: '24px'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: 24,\n            fontWeight: 500,\n            style: {\n              marginLeft: '10px'\n            },\n            children: currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n        children: /*#__PURE__*/_jsxDEV(Plus, {\n          size: \"16\",\n          color: theme.text2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n        align: \"flex-end\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: 24,\n          fontWeight: 500,\n          children: (_parsedAmounts$Field$13 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$13 === void 0 ? void 0 : _parsedAmounts$Field$13.toSignificant(6)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n          gap: \"4px\",\n          children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n            currency: currencyB,\n            size: '24px'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: 24,\n            fontWeight: 500,\n            style: {\n              marginLeft: '10px'\n            },\n            children: currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ThemedText.Italic, {\n        fontSize: 12,\n        color: theme.text2,\n        textAlign: \"left\",\n        padding: '12px 0 0 0',\n        children: /*#__PURE__*/_jsxDEV(Trans, {\n          id: \"Output is estimated. If the price changes by more than {0}% your transaction will revert.\",\n          values: {\n            0: allowedSlippage.toSignificant(4)\n          }\n        }, void 0, false, void 0, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this);\n  }\n\n  function modalBottom() {\n    var _parsedAmounts$Field$14;\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          color: theme.text2,\n          fontWeight: 500,\n          fontSize: 16,\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"UNI {0}/{1} Burned\",\n            values: {\n              0: currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol,\n              1: currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol\n            }\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n          children: [/*#__PURE__*/_jsxDEV(DoubleCurrencyLogo, {\n            currency0: currencyA,\n            currency1: currencyB,\n            margin: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            fontWeight: 500,\n            fontSize: 16,\n            children: (_parsedAmounts$Field$14 = parsedAmounts[Field.LIQUIDITY]) === null || _parsedAmounts$Field$14 === void 0 ? void 0 : _parsedAmounts$Field$14.toSignificant(6)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), pair && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            color: theme.text2,\n            fontWeight: 500,\n            fontSize: 16,\n            children: /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"Price\"\n            }, void 0, false, void 0, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            fontWeight: 500,\n            fontSize: 16,\n            color: theme.text1,\n            children: [\"1 \", currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol, \" = \", tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-', \" \", currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            fontWeight: 500,\n            fontSize: 16,\n            color: theme.text1,\n            children: [\"1 \", currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol, \" = \", tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-', \" \", currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n        disabled: !(approval === ApprovalState.APPROVED || signatureData !== null),\n        onClick: onRemove,\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontWeight: 500,\n          fontSize: 20,\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Confirm\"\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  const pendingText = /*#__PURE__*/_jsxDEV(Trans, {\n    id: \"Removing {0} {1} and{2} {3}\",\n    values: {\n      0: (_parsedAmounts$Field$15 = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$15 === void 0 ? void 0 : _parsedAmounts$Field$15.toSignificant(6),\n      1: currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol,\n      2: (_parsedAmounts$Field$16 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$16 === void 0 ? void 0 : _parsedAmounts$Field$16.toSignificant(6),\n      3: currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol\n    }\n  }, void 0, false, void 0, this);\n\n  const liquidityPercentChangeCallback = useCallback(value => {\n    onUserInput(Field.LIQUIDITY_PERCENT, value.toString());\n  }, [onUserInput]);\n  const oneCurrencyIsETH = (currencyA === null || currencyA === void 0 ? void 0 : currencyA.isNative) || (currencyB === null || currencyB === void 0 ? void 0 : currencyB.isNative);\n  const oneCurrencyIsWETH = Boolean(chainId && WRAPPED_NATIVE_CURRENCY[chainId] && ((currencyA === null || currencyA === void 0 ? void 0 : currencyA.equals(WRAPPED_NATIVE_CURRENCY[chainId])) || (currencyB === null || currencyB === void 0 ? void 0 : currencyB.equals(WRAPPED_NATIVE_CURRENCY[chainId]))));\n  const handleSelectCurrencyA = useCallback(currency => {\n    if (currencyIdB && currencyId(currency) === currencyIdB) {\n      history.push(`/remove/v2/${currencyId(currency)}/${currencyIdA}`);\n    } else {\n      history.push(`/remove/v2/${currencyId(currency)}/${currencyIdB}`);\n    }\n  }, [currencyIdA, currencyIdB, history]);\n  const handleSelectCurrencyB = useCallback(currency => {\n    if (currencyIdA && currencyId(currency) === currencyIdA) {\n      history.push(`/remove/v2/${currencyIdB}/${currencyId(currency)}`);\n    } else {\n      history.push(`/remove/v2/${currencyIdA}/${currencyId(currency)}`);\n    }\n  }, [currencyIdA, currencyIdB, history]);\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false); // if there was a tx hash, we want to clear the input\n\n    if (txHash) {\n      onUserInput(Field.LIQUIDITY_PERCENT, '0');\n    }\n\n    setTxHash('');\n  }, [onUserInput, txHash]);\n  const [innerLiquidityPercentage, setInnerLiquidityPercentage] = useDebouncedChangeHandler(Number.parseInt(parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0)), liquidityPercentChangeCallback);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBody, {\n      children: [/*#__PURE__*/_jsxDEV(AddRemoveTabs, {\n        creating: false,\n        adding: false,\n        defaultSlippage: DEFAULT_REMOVE_LIQUIDITY_SLIPPAGE_TOLERANCE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n        children: [/*#__PURE__*/_jsxDEV(TransactionConfirmationModal, {\n          isOpen: showConfirm,\n          onDismiss: handleDismissConfirmation,\n          attemptingTxn: attemptingTxn,\n          hash: txHash ? txHash : '',\n          content: () => /*#__PURE__*/_jsxDEV(ConfirmationModalContent, {\n            title: /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"You will receive\"\n            }, void 0, false, void 0, this),\n            onDismiss: handleDismissConfirmation,\n            topContent: modalHeader,\n            bottomContent: modalBottom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 15\n          }, this),\n          pendingText: pendingText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n          gap: \"md\",\n          children: [/*#__PURE__*/_jsxDEV(BlueCard, {\n            children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n              gap: \"10px\",\n              children: /*#__PURE__*/_jsxDEV(ThemedText.Link, {\n                fontWeight: 400,\n                color: 'primaryText1',\n                children: /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"<0>Tip:</0> Removing pool tokens converts your position back into underlying tokens at the current rate, proportional to your share of the pool. Accrued fees are included in the amounts you receive.\",\n                  components: {\n                    0: /*#__PURE__*/_jsxDEV(\"b\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 455,\n                      columnNumber: 21\n                    }, this)\n                  }\n                }, void 0, false, void 0, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LightCard, {\n            children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n              gap: \"20px\",\n              children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n                children: [/*#__PURE__*/_jsxDEV(Text, {\n                  fontWeight: 500,\n                  children: /*#__PURE__*/_jsxDEV(Trans, {\n                    id: \"Remove Amount\"\n                  }, void 0, false, void 0, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ClickableText, {\n                  fontWeight: 500,\n                  onClick: () => {\n                    setShowDetailed(!showDetailed);\n                  },\n                  children: showDetailed ? /*#__PURE__*/_jsxDEV(Trans, {\n                    id: \"Simple\"\n                  }, void 0, false, void 0, this) : /*#__PURE__*/_jsxDEV(Trans, {\n                    id: \"Detailed\"\n                  }, void 0, false, void 0, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                style: {\n                  alignItems: 'flex-end'\n                },\n                children: /*#__PURE__*/_jsxDEV(Text, {\n                  fontSize: 72,\n                  fontWeight: 500,\n                  children: [formattedAmounts[Field.LIQUIDITY_PERCENT], \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 17\n              }, this), !showDetailed && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Slider, {\n                  value: innerLiquidityPercentage,\n                  onChange: setInnerLiquidityPercentage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 483,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n                  children: [/*#__PURE__*/_jsxDEV(MaxButton, {\n                    onClick: () => onUserInput(Field.LIQUIDITY_PERCENT, '25'),\n                    width: \"20%\",\n                    children: \"25%\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 485,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(MaxButton, {\n                    onClick: () => onUserInput(Field.LIQUIDITY_PERCENT, '50'),\n                    width: \"20%\",\n                    children: \"50%\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 488,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(MaxButton, {\n                    onClick: () => onUserInput(Field.LIQUIDITY_PERCENT, '75'),\n                    width: \"20%\",\n                    children: \"75%\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 491,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(MaxButton, {\n                    onClick: () => onUserInput(Field.LIQUIDITY_PERCENT, '100'),\n                    width: \"20%\",\n                    children: \"Max\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 494,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 484,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 13\n          }, this), !showDetailed && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ColumnCenter, {\n              children: /*#__PURE__*/_jsxDEV(ArrowDown, {\n                size: \"16\",\n                color: theme.text2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(LightCard, {\n              children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n                gap: \"10px\",\n                children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n                  children: [/*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: 24,\n                    fontWeight: 500,\n                    children: formattedAmounts[Field.CURRENCY_A] || '-'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 510,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n                    children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n                      currency: currencyA,\n                      style: {\n                        marginRight: '12px'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 514,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Text, {\n                      fontSize: 24,\n                      fontWeight: 500,\n                      id: \"remove-liquidity-tokena-symbol\",\n                      children: currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 515,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 513,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 509,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n                  children: [/*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: 24,\n                    fontWeight: 500,\n                    children: formattedAmounts[Field.CURRENCY_B] || '-'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 521,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(RowFixed, {\n                    children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n                      currency: currencyB,\n                      style: {\n                        marginRight: '12px'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 525,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Text, {\n                      fontSize: 24,\n                      fontWeight: 500,\n                      id: \"remove-liquidity-tokenb-symbol\",\n                      children: currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 526,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 524,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 520,\n                  columnNumber: 21\n                }, this), chainId && (oneCurrencyIsWETH || oneCurrencyIsETH) ? /*#__PURE__*/_jsxDEV(RowBetween, {\n                  style: {\n                    justifyContent: 'flex-end'\n                  },\n                  children: oneCurrencyIsETH ? /*#__PURE__*/_jsxDEV(StyledInternalLink, {\n                    to: `/remove/v2/${(currencyA === null || currencyA === void 0 ? void 0 : currencyA.isNative) ? WRAPPED_NATIVE_CURRENCY[chainId].address : currencyIdA}/${(currencyB === null || currencyB === void 0 ? void 0 : currencyB.isNative) ? WRAPPED_NATIVE_CURRENCY[chainId].address : currencyIdB}`,\n                    children: \"Receive WETH\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 534,\n                    columnNumber: 27\n                  }, this) : oneCurrencyIsWETH ? /*#__PURE__*/_jsxDEV(StyledInternalLink, {\n                    to: `/remove/v2/${(currencyA === null || currencyA === void 0 ? void 0 : currencyA.equals(WRAPPED_NATIVE_CURRENCY[chainId])) ? 'ETH' : currencyIdA}/${(currencyB === null || currencyB === void 0 ? void 0 : currencyB.equals(WRAPPED_NATIVE_CURRENCY[chainId])) ? 'ETH' : currencyIdB}`,\n                    children: \"Receive ETH\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 542,\n                    columnNumber: 27\n                  }, this) : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 532,\n                  columnNumber: 23\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), showDetailed && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n              value: formattedAmounts[Field.LIQUIDITY],\n              onUserInput: onLiquidityInput,\n              onMax: () => {\n                onUserInput(Field.LIQUIDITY_PERCENT, '100');\n              },\n              showMaxButton: !atMaxAmount,\n              currency: pair === null || pair === void 0 ? void 0 : pair.liquidityToken,\n              pair: pair,\n              id: \"liquidity-amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ColumnCenter, {\n              children: /*#__PURE__*/_jsxDEV(ArrowDown, {\n                size: \"16\",\n                color: theme.text2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n              hideBalance: true,\n              value: formattedAmounts[Field.CURRENCY_A],\n              onUserInput: onCurrencyAInput,\n              onMax: () => onUserInput(Field.LIQUIDITY_PERCENT, '100'),\n              showMaxButton: !atMaxAmount,\n              currency: currencyA,\n              label: 'Output',\n              onCurrencySelect: handleSelectCurrencyA,\n              id: \"remove-liquidity-tokena\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ColumnCenter, {\n              children: /*#__PURE__*/_jsxDEV(Plus, {\n                size: \"16\",\n                color: theme.text2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 585,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n              hideBalance: true,\n              value: formattedAmounts[Field.CURRENCY_B],\n              onUserInput: onCurrencyBInput,\n              onMax: () => onUserInput(Field.LIQUIDITY_PERCENT, '100'),\n              showMaxButton: !atMaxAmount,\n              currency: currencyB,\n              label: 'Output',\n              onCurrencySelect: handleSelectCurrencyB,\n              id: \"remove-liquidity-tokenb\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), pair && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: '10px 20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n              children: [/*#__PURE__*/_jsxDEV(Trans, {\n                id: \"Price:\"\n              }, void 0, false, void 0, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"1 \", currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol, \" = \", tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-', \" \", currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 604,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 609,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"1 \", currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol, \" = \", tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-', \" \", currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 610,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'relative'\n            },\n            children: !account ? /*#__PURE__*/_jsxDEV(ButtonLight, {\n              onClick: toggleWalletModal,\n              children: /*#__PURE__*/_jsxDEV(Trans, {\n                id: \"Connect Wallet\"\n              }, void 0, false, void 0, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 618,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(RowBetween, {\n              children: [/*#__PURE__*/_jsxDEV(ButtonConfirmed, {\n                onClick: onAttemptToApprove,\n                confirmed: approval === ApprovalState.APPROVED || signatureData !== null,\n                disabled: approval !== ApprovalState.NOT_APPROVED || signatureData !== null,\n                mr: \"0.5rem\",\n                fontWeight: 500,\n                fontSize: 16,\n                children: approval === ApprovalState.PENDING ? /*#__PURE__*/_jsxDEV(Dots, {\n                  children: /*#__PURE__*/_jsxDEV(Trans, {\n                    id: \"Approving\"\n                  }, void 0, false, void 0, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 632,\n                  columnNumber: 23\n                }, this) : approval === ApprovalState.APPROVED || signatureData !== null ? /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"Approved\"\n                }, void 0, false, void 0, this) : /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"Approve\"\n                }, void 0, false, void 0, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 623,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ButtonError, {\n                onClick: () => {\n                  setShowConfirm(true);\n                },\n                disabled: !isValid || signatureData === null && approval !== ApprovalState.APPROVED,\n                error: !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B],\n                children: /*#__PURE__*/_jsxDEV(Text, {\n                  fontSize: 16,\n                  fontWeight: 500,\n                  children: error || /*#__PURE__*/_jsxDEV(Trans, {\n                    id: \"Remove\"\n                  }, void 0, false, void 0, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 648,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 641,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 622,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 7\n    }, this), pair ? /*#__PURE__*/_jsxDEV(AutoColumn, {\n      style: {\n        minWidth: '20rem',\n        width: '100%',\n        maxWidth: '400px',\n        marginTop: '1rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(MinimalPositionCard, {\n        showUnwrapped: oneCurrencyIsWETH,\n        pair: pair\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n}\n\n_s(RemoveLiquidity, \"bEi0XDi199aA0qCwgprCOb1OqkY=\", false, function () {\n  return [useCurrency, useCurrency, useActiveWeb3React, useWalletModalToggle, useBurnState, useDerivedBurnInfo, useBurnActionHandlers, useTransactionDeadline, useUserSlippageToleranceWithDefault, usePairContract, useV2RouterContract, useV2LiquidityTokenPermit, useApproveCallback, useTransactionAdder, useDebouncedChangeHandler];\n});\n\n_c = RemoveLiquidity;\n\nvar _c;\n\n$RefreshReg$(_c, \"RemoveLiquidity\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/pages/RemoveLiquidity/index.tsx"],"names":["BigNumber","Percent","useCallback","useContext","useMemo","useState","ArrowDown","Plus","ReactGA","Text","ButtonConfirmed","ButtonError","ButtonLight","ButtonPrimary","BlueCard","LightCard","AutoColumn","ColumnCenter","CurrencyInputPanel","CurrencyLogo","DoubleCurrencyLogo","AddRemoveTabs","MinimalPositionCard","Row","RowBetween","RowFixed","Slider","Dots","TransactionConfirmationModal","ConfirmationModalContent","WRAPPED_NATIVE_CURRENCY","useCurrency","ApprovalState","useApproveCallback","usePairContract","useV2RouterContract","useDebouncedChangeHandler","useV2LiquidityTokenPermit","useTransactionDeadline","useActiveWeb3React","useWalletModalToggle","Field","useBurnActionHandlers","useBurnState","useDerivedBurnInfo","TransactionType","useTransactionAdder","useUserSlippageToleranceWithDefault","StyledInternalLink","ThemedText","calculateGasMargin","calculateSlippageAmount","currencyId","AppBody","ClickableText","MaxButton","Wrapper","DEFAULT_REMOVE_LIQUIDITY_SLIPPAGE_TOLERANCE","RemoveLiquidity","history","match","params","currencyIdA","currencyIdB","currencyA","currencyB","undefined","account","chainId","library","tokenA","tokenB","wrapped","theme","ThemeContext","toggleWalletModal","independentField","typedValue","pair","parsedAmounts","error","onUserInput","_onUserInput","isValid","showConfirm","setShowConfirm","showDetailed","setShowDetailed","attemptingTxn","setAttemptingTxn","txHash","setTxHash","deadline","allowedSlippage","formattedAmounts","LIQUIDITY_PERCENT","equalTo","lessThan","toFixed","LIQUIDITY","toSignificant","CURRENCY_A","CURRENCY_B","atMaxAmount","pairContract","liquidityToken","address","router","gatherPermitSignature","signatureData","approval","approveCallback","onAttemptToApprove","Error","liquidityAmount","code","field","onLiquidityInput","onCurrencyAInput","onCurrencyBInput","addTransaction","onRemove","currencyAmountA","currencyAmountB","amountsMin","currencyBIsETH","isNative","oneCurrencyIsETH","methodNames","args","APPROVED","quotient","toString","toHexString","v","r","s","safeGasEstimates","Promise","all","map","methodName","estimateGas","then","catch","console","indexOfSuccessfulEstimation","findIndex","safeGasEstimate","isBigNumber","gasLimit","response","type","REMOVE_LIQUIDITY_V3","baseCurrencyId","quoteCurrencyId","expectedAmountBaseRaw","expectedAmountQuoteRaw","hash","event","category","action","label","symbol","join","modalHeader","marginTop","marginLeft","text2","modalBottom","text1","priceOf","pendingText","liquidityPercentChangeCallback","value","oneCurrencyIsWETH","Boolean","equals","handleSelectCurrencyA","currency","push","handleSelectCurrencyB","handleDismissConfirmation","innerLiquidityPercentage","setInnerLiquidityPercentage","Number","parseInt","alignItems","marginRight","justifyContent","padding","position","NOT_APPROVED","PENDING","minWidth","width","maxWidth"],"mappings":"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","sourcesContent":["import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trans } from '@lingui/macro'\nimport { Currency, Percent } from '@uniswap/sdk-core'\nimport { useCallback, useContext, useMemo, useState } from 'react'\nimport { ArrowDown, Plus } from 'react-feather'\nimport ReactGA from 'react-ga'\nimport { RouteComponentProps } from 'react-router'\nimport { Text } from 'rebass'\nimport { ThemeContext } from 'styled-components/macro'\n\nimport { ButtonConfirmed, ButtonError, ButtonLight, ButtonPrimary } from '../../components/Button'\nimport { BlueCard, LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Column'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport CurrencyLogo from '../../components/CurrencyLogo'\nimport DoubleCurrencyLogo from '../../components/DoubleLogo'\nimport { AddRemoveTabs } from '../../components/NavigationTabs'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row, { RowBetween, RowFixed } from '../../components/Row'\nimport Slider from '../../components/Slider'\nimport { Dots } from '../../components/swap/styleds'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport { WRAPPED_NATIVE_CURRENCY } from '../../constants/tokens'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport { usePairContract, useV2RouterContract } from '../../hooks/useContract'\nimport useDebouncedChangeHandler from '../../hooks/useDebouncedChangeHandler'\nimport { useV2LiquidityTokenPermit } from '../../hooks/useERC20Permit'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport { useWalletModalToggle } from '../../state/application/hooks'\nimport { Field } from '../../state/burn/actions'\nimport { useBurnActionHandlers, useBurnState, useDerivedBurnInfo } from '../../state/burn/hooks'\nimport { TransactionType } from '../../state/transactions/actions'\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { useUserSlippageToleranceWithDefault } from '../../state/user/hooks'\nimport { StyledInternalLink, ThemedText } from '../../theme'\nimport { calculateGasMargin } from '../../utils/calculateGasMargin'\nimport { calculateSlippageAmount } from '../../utils/calculateSlippageAmount'\nimport { currencyId } from '../../utils/currencyId'\nimport AppBody from '../AppBody'\nimport { ClickableText, MaxButton, Wrapper } from '../Pool/styleds'\n\nconst DEFAULT_REMOVE_LIQUIDITY_SLIPPAGE_TOLERANCE = new Percent(5, 100)\n\nexport default function RemoveLiquidity({\n  history,\n  match: {\n    params: { currencyIdA, currencyIdB },\n  },\n}: RouteComponentProps<{ currencyIdA: string; currencyIdB: string }>) {\n  const [currencyA, currencyB] = [useCurrency(currencyIdA) ?? undefined, useCurrency(currencyIdB) ?? undefined]\n  const { account, chainId, library } = useActiveWeb3React()\n  const [tokenA, tokenB] = useMemo(() => [currencyA?.wrapped, currencyB?.wrapped], [currencyA, currencyB])\n\n  const theme = useContext(ThemeContext)\n\n  // toggle wallet when disconnected\n  const toggleWalletModal = useWalletModalToggle()\n\n  // burn state\n  const { independentField, typedValue } = useBurnState()\n  const { pair, parsedAmounts, error } = useDerivedBurnInfo(currencyA ?? undefined, currencyB ?? undefined)\n  const { onUserInput: _onUserInput } = useBurnActionHandlers()\n  const isValid = !error\n\n  // modal and loading\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\n  const [showDetailed, setShowDetailed] = useState<boolean>(false)\n  const [attemptingTxn, setAttemptingTxn] = useState(false) // clicked confirm\n\n  // txn values\n  const [txHash, setTxHash] = useState<string>('')\n  const deadline = useTransactionDeadline()\n  const allowedSlippage = useUserSlippageToleranceWithDefault(DEFAULT_REMOVE_LIQUIDITY_SLIPPAGE_TOLERANCE)\n\n  const formattedAmounts = {\n    [Field.LIQUIDITY_PERCENT]: parsedAmounts[Field.LIQUIDITY_PERCENT].equalTo('0')\n      ? '0'\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].lessThan(new Percent('1', '100'))\n      ? '<1'\n      : parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0),\n    [Field.LIQUIDITY]:\n      independentField === Field.LIQUIDITY ? typedValue : parsedAmounts[Field.LIQUIDITY]?.toSignificant(6) ?? '',\n    [Field.CURRENCY_A]:\n      independentField === Field.CURRENCY_A ? typedValue : parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    [Field.CURRENCY_B]:\n      independentField === Field.CURRENCY_B ? typedValue : parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n  }\n\n  const atMaxAmount = parsedAmounts[Field.LIQUIDITY_PERCENT]?.equalTo(new Percent('1'))\n\n  // pair contract\n  const pairContract: Contract | null = usePairContract(pair?.liquidityToken?.address)\n\n  const router = useV2RouterContract()\n\n  // allowance handling\n  const { gatherPermitSignature, signatureData } = useV2LiquidityTokenPermit(\n    parsedAmounts[Field.LIQUIDITY],\n    router?.address\n  )\n  const [approval, approveCallback] = useApproveCallback(parsedAmounts[Field.LIQUIDITY], router?.address)\n\n  async function onAttemptToApprove() {\n    if (!pairContract || !pair || !library || !deadline) throw new Error('missing dependencies')\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\n    if (!liquidityAmount) throw new Error('missing liquidity amount')\n\n    if (gatherPermitSignature) {\n      try {\n        await gatherPermitSignature()\n      } catch (error) {\n        // try to approve if gatherPermitSignature failed for any reason other than the user rejecting it\n        if (error?.code !== 4001) {\n          await approveCallback()\n        }\n      }\n    } else {\n      await approveCallback()\n    }\n  }\n\n  // wrapped onUserInput to clear signatures\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      return _onUserInput(field, typedValue)\n    },\n    [_onUserInput]\n  )\n\n  const onLiquidityInput = useCallback(\n    (typedValue: string): void => onUserInput(Field.LIQUIDITY, typedValue),\n    [onUserInput]\n  )\n  const onCurrencyAInput = useCallback(\n    (typedValue: string): void => onUserInput(Field.CURRENCY_A, typedValue),\n    [onUserInput]\n  )\n  const onCurrencyBInput = useCallback(\n    (typedValue: string): void => onUserInput(Field.CURRENCY_B, typedValue),\n    [onUserInput]\n  )\n\n  // tx sending\n  const addTransaction = useTransactionAdder()\n\n  async function onRemove() {\n    if (!chainId || !library || !account || !deadline || !router) throw new Error('missing dependencies')\n    const { [Field.CURRENCY_A]: currencyAmountA, [Field.CURRENCY_B]: currencyAmountB } = parsedAmounts\n    if (!currencyAmountA || !currencyAmountB) {\n      throw new Error('missing currency amounts')\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(currencyAmountA, allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(currencyAmountB, allowedSlippage)[0],\n    }\n\n    if (!currencyA || !currencyB) throw new Error('missing tokens')\n    const liquidityAmount = parsedAmounts[Field.LIQUIDITY]\n    if (!liquidityAmount) throw new Error('missing liquidity amount')\n\n    const currencyBIsETH = currencyB.isNative\n    const oneCurrencyIsETH = currencyA.isNative || currencyBIsETH\n\n    if (!tokenA || !tokenB) throw new Error('could not wrap')\n\n    let methodNames: string[], args: Array<string | string[] | number | boolean>\n    // we have approval, use normal remove liquidity\n    if (approval === ApprovalState.APPROVED) {\n      // removeLiquidityETH\n      if (oneCurrencyIsETH) {\n        methodNames = ['removeLiquidityETH', 'removeLiquidityETHSupportingFeeOnTransferTokens']\n        args = [\n          currencyBIsETH ? tokenA.address : tokenB.address,\n          liquidityAmount.quotient.toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\n          account,\n          deadline.toHexString(),\n        ]\n      }\n      // removeLiquidity\n      else {\n        methodNames = ['removeLiquidity']\n        args = [\n          tokenA.address,\n          tokenB.address,\n          liquidityAmount.quotient.toString(),\n          amountsMin[Field.CURRENCY_A].toString(),\n          amountsMin[Field.CURRENCY_B].toString(),\n          account,\n          deadline.toHexString(),\n        ]\n      }\n    }\n    // we have a signature, use permit versions of remove liquidity\n    else if (signatureData !== null) {\n      // removeLiquidityETHWithPermit\n      if (oneCurrencyIsETH) {\n        methodNames = ['removeLiquidityETHWithPermit', 'removeLiquidityETHWithPermitSupportingFeeOnTransferTokens']\n        args = [\n          currencyBIsETH ? tokenA.address : tokenB.address,\n          liquidityAmount.quotient.toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\n          amountsMin[currencyBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\n          account,\n          signatureData.deadline,\n          false,\n          signatureData.v,\n          signatureData.r,\n          signatureData.s,\n        ]\n      }\n      // removeLiquidityETHWithPermit\n      else {\n        methodNames = ['removeLiquidityWithPermit']\n        args = [\n          tokenA.address,\n          tokenB.address,\n          liquidityAmount.quotient.toString(),\n          amountsMin[Field.CURRENCY_A].toString(),\n          amountsMin[Field.CURRENCY_B].toString(),\n          account,\n          signatureData.deadline,\n          false,\n          signatureData.v,\n          signatureData.r,\n          signatureData.s,\n        ]\n      }\n    } else {\n      throw new Error('Attempting to confirm without approval or a signature. Please contact support.')\n    }\n\n    const safeGasEstimates: (BigNumber | undefined)[] = await Promise.all(\n      methodNames.map((methodName) =>\n        router.estimateGas[methodName](...args)\n          .then((estimateGas) => calculateGasMargin(estimateGas))\n          .catch((error) => {\n            console.error(`estimateGas failed`, methodName, args, error)\n            return undefined\n          })\n      )\n    )\n\n    const indexOfSuccessfulEstimation = safeGasEstimates.findIndex((safeGasEstimate) =>\n      BigNumber.isBigNumber(safeGasEstimate)\n    )\n\n    // all estimations failed...\n    if (indexOfSuccessfulEstimation === -1) {\n      console.error('This transaction would fail. Please contact support.')\n    } else {\n      const methodName = methodNames[indexOfSuccessfulEstimation]\n      const safeGasEstimate = safeGasEstimates[indexOfSuccessfulEstimation]\n\n      setAttemptingTxn(true)\n      await router[methodName](...args, {\n        gasLimit: safeGasEstimate,\n      })\n        .then((response: TransactionResponse) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            type: TransactionType.REMOVE_LIQUIDITY_V3,\n            baseCurrencyId: currencyId(currencyA),\n            quoteCurrencyId: currencyId(currencyB),\n            expectedAmountBaseRaw: parsedAmounts[Field.CURRENCY_A]?.quotient.toString() ?? '0',\n            expectedAmountQuoteRaw: parsedAmounts[Field.CURRENCY_B]?.quotient.toString() ?? '0',\n          })\n\n          setTxHash(response.hash)\n\n          ReactGA.event({\n            category: 'Liquidity',\n            action: 'Remove',\n            label: [currencyA.symbol, currencyB.symbol].join('/'),\n          })\n        })\n        .catch((error: Error) => {\n          setAttemptingTxn(false)\n          // we only care if the error is something _other_ than the user rejected the tx\n          console.error(error)\n        })\n    }\n  }\n\n  function modalHeader() {\n    return (\n      <AutoColumn gap={'md'} style={{ marginTop: '20px' }}>\n        <RowBetween align=\"flex-end\">\n          <Text fontSize={24} fontWeight={500}>\n            {parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}\n          </Text>\n          <RowFixed gap=\"4px\">\n            <CurrencyLogo currency={currencyA} size={'24px'} />\n            <Text fontSize={24} fontWeight={500} style={{ marginLeft: '10px' }}>\n              {currencyA?.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowFixed>\n          <Plus size=\"16\" color={theme.text2} />\n        </RowFixed>\n        <RowBetween align=\"flex-end\">\n          <Text fontSize={24} fontWeight={500}>\n            {parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}\n          </Text>\n          <RowFixed gap=\"4px\">\n            <CurrencyLogo currency={currencyB} size={'24px'} />\n            <Text fontSize={24} fontWeight={500} style={{ marginLeft: '10px' }}>\n              {currencyB?.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n\n        <ThemedText.Italic fontSize={12} color={theme.text2} textAlign=\"left\" padding={'12px 0 0 0'}>\n          <Trans>\n            Output is estimated. If the price changes by more than {allowedSlippage.toSignificant(4)}% your transaction\n            will revert.\n          </Trans>\n        </ThemedText.Italic>\n      </AutoColumn>\n    )\n  }\n\n  function modalBottom() {\n    return (\n      <>\n        <RowBetween>\n          <Text color={theme.text2} fontWeight={500} fontSize={16}>\n            <Trans>\n              UNI {currencyA?.symbol}/{currencyB?.symbol} Burned\n            </Trans>\n          </Text>\n          <RowFixed>\n            <DoubleCurrencyLogo currency0={currencyA} currency1={currencyB} margin={true} />\n            <Text fontWeight={500} fontSize={16}>\n              {parsedAmounts[Field.LIQUIDITY]?.toSignificant(6)}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        {pair && (\n          <>\n            <RowBetween>\n              <Text color={theme.text2} fontWeight={500} fontSize={16}>\n                <Trans>Price</Trans>\n              </Text>\n              <Text fontWeight={500} fontSize={16} color={theme.text1}>\n                1 {currencyA?.symbol} = {tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-'} {currencyB?.symbol}\n              </Text>\n            </RowBetween>\n            <RowBetween>\n              <div />\n              <Text fontWeight={500} fontSize={16} color={theme.text1}>\n                1 {currencyB?.symbol} = {tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-'} {currencyA?.symbol}\n              </Text>\n            </RowBetween>\n          </>\n        )}\n        <ButtonPrimary disabled={!(approval === ApprovalState.APPROVED || signatureData !== null)} onClick={onRemove}>\n          <Text fontWeight={500} fontSize={20}>\n            <Trans>Confirm</Trans>\n          </Text>\n        </ButtonPrimary>\n      </>\n    )\n  }\n\n  const pendingText = (\n    <Trans>\n      Removing {parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)} {currencyA?.symbol} and\n      {parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)} {currencyB?.symbol}\n    </Trans>\n  )\n\n  const liquidityPercentChangeCallback = useCallback(\n    (value: number) => {\n      onUserInput(Field.LIQUIDITY_PERCENT, value.toString())\n    },\n    [onUserInput]\n  )\n\n  const oneCurrencyIsETH = currencyA?.isNative || currencyB?.isNative\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      WRAPPED_NATIVE_CURRENCY[chainId] &&\n      (currencyA?.equals(WRAPPED_NATIVE_CURRENCY[chainId]) || currencyB?.equals(WRAPPED_NATIVE_CURRENCY[chainId]))\n  )\n\n  const handleSelectCurrencyA = useCallback(\n    (currency: Currency) => {\n      if (currencyIdB && currencyId(currency) === currencyIdB) {\n        history.push(`/remove/v2/${currencyId(currency)}/${currencyIdA}`)\n      } else {\n        history.push(`/remove/v2/${currencyId(currency)}/${currencyIdB}`)\n      }\n    },\n    [currencyIdA, currencyIdB, history]\n  )\n  const handleSelectCurrencyB = useCallback(\n    (currency: Currency) => {\n      if (currencyIdA && currencyId(currency) === currencyIdA) {\n        history.push(`/remove/v2/${currencyIdB}/${currencyId(currency)}`)\n      } else {\n        history.push(`/remove/v2/${currencyIdA}/${currencyId(currency)}`)\n      }\n    },\n    [currencyIdA, currencyIdB, history]\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false)\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.LIQUIDITY_PERCENT, '0')\n    }\n    setTxHash('')\n  }, [onUserInput, txHash])\n\n  const [innerLiquidityPercentage, setInnerLiquidityPercentage] = useDebouncedChangeHandler(\n    Number.parseInt(parsedAmounts[Field.LIQUIDITY_PERCENT].toFixed(0)),\n    liquidityPercentChangeCallback\n  )\n\n  return (\n    <>\n      <AppBody>\n        <AddRemoveTabs creating={false} adding={false} defaultSlippage={DEFAULT_REMOVE_LIQUIDITY_SLIPPAGE_TOLERANCE} />\n        <Wrapper>\n          <TransactionConfirmationModal\n            isOpen={showConfirm}\n            onDismiss={handleDismissConfirmation}\n            attemptingTxn={attemptingTxn}\n            hash={txHash ? txHash : ''}\n            content={() => (\n              <ConfirmationModalContent\n                title={<Trans>You will receive</Trans>}\n                onDismiss={handleDismissConfirmation}\n                topContent={modalHeader}\n                bottomContent={modalBottom}\n              />\n            )}\n            pendingText={pendingText}\n          />\n          <AutoColumn gap=\"md\">\n            <BlueCard>\n              <AutoColumn gap=\"10px\">\n                <ThemedText.Link fontWeight={400} color={'primaryText1'}>\n                  <Trans>\n                    <b>Tip:</b> Removing pool tokens converts your position back into underlying tokens at the current\n                    rate, proportional to your share of the pool. Accrued fees are included in the amounts you receive.\n                  </Trans>\n                </ThemedText.Link>\n              </AutoColumn>\n            </BlueCard>\n            <LightCard>\n              <AutoColumn gap=\"20px\">\n                <RowBetween>\n                  <Text fontWeight={500}>\n                    <Trans>Remove Amount</Trans>\n                  </Text>\n                  <ClickableText\n                    fontWeight={500}\n                    onClick={() => {\n                      setShowDetailed(!showDetailed)\n                    }}\n                  >\n                    {showDetailed ? <Trans>Simple</Trans> : <Trans>Detailed</Trans>}\n                  </ClickableText>\n                </RowBetween>\n                <Row style={{ alignItems: 'flex-end' }}>\n                  <Text fontSize={72} fontWeight={500}>\n                    {formattedAmounts[Field.LIQUIDITY_PERCENT]}%\n                  </Text>\n                </Row>\n                {!showDetailed && (\n                  <>\n                    <Slider value={innerLiquidityPercentage} onChange={setInnerLiquidityPercentage} />\n                    <RowBetween>\n                      <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '25')} width=\"20%\">\n                        25%\n                      </MaxButton>\n                      <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '50')} width=\"20%\">\n                        50%\n                      </MaxButton>\n                      <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '75')} width=\"20%\">\n                        75%\n                      </MaxButton>\n                      <MaxButton onClick={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')} width=\"20%\">\n                        Max\n                      </MaxButton>\n                    </RowBetween>\n                  </>\n                )}\n              </AutoColumn>\n            </LightCard>\n            {!showDetailed && (\n              <>\n                <ColumnCenter>\n                  <ArrowDown size=\"16\" color={theme.text2} />\n                </ColumnCenter>\n                <LightCard>\n                  <AutoColumn gap=\"10px\">\n                    <RowBetween>\n                      <Text fontSize={24} fontWeight={500}>\n                        {formattedAmounts[Field.CURRENCY_A] || '-'}\n                      </Text>\n                      <RowFixed>\n                        <CurrencyLogo currency={currencyA} style={{ marginRight: '12px' }} />\n                        <Text fontSize={24} fontWeight={500} id=\"remove-liquidity-tokena-symbol\">\n                          {currencyA?.symbol}\n                        </Text>\n                      </RowFixed>\n                    </RowBetween>\n                    <RowBetween>\n                      <Text fontSize={24} fontWeight={500}>\n                        {formattedAmounts[Field.CURRENCY_B] || '-'}\n                      </Text>\n                      <RowFixed>\n                        <CurrencyLogo currency={currencyB} style={{ marginRight: '12px' }} />\n                        <Text fontSize={24} fontWeight={500} id=\"remove-liquidity-tokenb-symbol\">\n                          {currencyB?.symbol}\n                        </Text>\n                      </RowFixed>\n                    </RowBetween>\n                    {chainId && (oneCurrencyIsWETH || oneCurrencyIsETH) ? (\n                      <RowBetween style={{ justifyContent: 'flex-end' }}>\n                        {oneCurrencyIsETH ? (\n                          <StyledInternalLink\n                            to={`/remove/v2/${\n                              currencyA?.isNative ? WRAPPED_NATIVE_CURRENCY[chainId].address : currencyIdA\n                            }/${currencyB?.isNative ? WRAPPED_NATIVE_CURRENCY[chainId].address : currencyIdB}`}\n                          >\n                            Receive WETH\n                          </StyledInternalLink>\n                        ) : oneCurrencyIsWETH ? (\n                          <StyledInternalLink\n                            to={`/remove/v2/${\n                              currencyA?.equals(WRAPPED_NATIVE_CURRENCY[chainId]) ? 'ETH' : currencyIdA\n                            }/${currencyB?.equals(WRAPPED_NATIVE_CURRENCY[chainId]) ? 'ETH' : currencyIdB}`}\n                          >\n                            Receive ETH\n                          </StyledInternalLink>\n                        ) : null}\n                      </RowBetween>\n                    ) : null}\n                  </AutoColumn>\n                </LightCard>\n              </>\n            )}\n\n            {showDetailed && (\n              <>\n                <CurrencyInputPanel\n                  value={formattedAmounts[Field.LIQUIDITY]}\n                  onUserInput={onLiquidityInput}\n                  onMax={() => {\n                    onUserInput(Field.LIQUIDITY_PERCENT, '100')\n                  }}\n                  showMaxButton={!atMaxAmount}\n                  currency={pair?.liquidityToken}\n                  pair={pair}\n                  id=\"liquidity-amount\"\n                />\n                <ColumnCenter>\n                  <ArrowDown size=\"16\" color={theme.text2} />\n                </ColumnCenter>\n                <CurrencyInputPanel\n                  hideBalance={true}\n                  value={formattedAmounts[Field.CURRENCY_A]}\n                  onUserInput={onCurrencyAInput}\n                  onMax={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')}\n                  showMaxButton={!atMaxAmount}\n                  currency={currencyA}\n                  label={'Output'}\n                  onCurrencySelect={handleSelectCurrencyA}\n                  id=\"remove-liquidity-tokena\"\n                />\n                <ColumnCenter>\n                  <Plus size=\"16\" color={theme.text2} />\n                </ColumnCenter>\n                <CurrencyInputPanel\n                  hideBalance={true}\n                  value={formattedAmounts[Field.CURRENCY_B]}\n                  onUserInput={onCurrencyBInput}\n                  onMax={() => onUserInput(Field.LIQUIDITY_PERCENT, '100')}\n                  showMaxButton={!atMaxAmount}\n                  currency={currencyB}\n                  label={'Output'}\n                  onCurrencySelect={handleSelectCurrencyB}\n                  id=\"remove-liquidity-tokenb\"\n                />\n              </>\n            )}\n            {pair && (\n              <div style={{ padding: '10px 20px' }}>\n                <RowBetween>\n                  <Trans>Price:</Trans>\n                  <div>\n                    1 {currencyA?.symbol} = {tokenA ? pair.priceOf(tokenA).toSignificant(6) : '-'} {currencyB?.symbol}\n                  </div>\n                </RowBetween>\n                <RowBetween>\n                  <div />\n                  <div>\n                    1 {currencyB?.symbol} = {tokenB ? pair.priceOf(tokenB).toSignificant(6) : '-'} {currencyA?.symbol}\n                  </div>\n                </RowBetween>\n              </div>\n            )}\n            <div style={{ position: 'relative' }}>\n              {!account ? (\n                <ButtonLight onClick={toggleWalletModal}>\n                  <Trans>Connect Wallet</Trans>\n                </ButtonLight>\n              ) : (\n                <RowBetween>\n                  <ButtonConfirmed\n                    onClick={onAttemptToApprove}\n                    confirmed={approval === ApprovalState.APPROVED || signatureData !== null}\n                    disabled={approval !== ApprovalState.NOT_APPROVED || signatureData !== null}\n                    mr=\"0.5rem\"\n                    fontWeight={500}\n                    fontSize={16}\n                  >\n                    {approval === ApprovalState.PENDING ? (\n                      <Dots>\n                        <Trans>Approving</Trans>\n                      </Dots>\n                    ) : approval === ApprovalState.APPROVED || signatureData !== null ? (\n                      <Trans>Approved</Trans>\n                    ) : (\n                      <Trans>Approve</Trans>\n                    )}\n                  </ButtonConfirmed>\n                  <ButtonError\n                    onClick={() => {\n                      setShowConfirm(true)\n                    }}\n                    disabled={!isValid || (signatureData === null && approval !== ApprovalState.APPROVED)}\n                    error={!isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]}\n                  >\n                    <Text fontSize={16} fontWeight={500}>\n                      {error || <Trans>Remove</Trans>}\n                    </Text>\n                  </ButtonError>\n                </RowBetween>\n              )}\n            </div>\n          </AutoColumn>\n        </Wrapper>\n      </AppBody>\n\n      {pair ? (\n        <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n          <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n        </AutoColumn>\n      ) : null}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}