{"ast":null,"code":"import _objectSpread from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _defineProperty from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import{createReducer}from'@reduxjs/toolkit';import{parsedQueryString}from'hooks/useParsedQueryString';import{Field,replaceSwapState,selectCurrency,setRecipient,switchCurrencies,typeInput}from'./actions';import{queryParametersToSwapState}from'./hooks';var initialState=queryParametersToSwapState(parsedQueryString());export default createReducer(initialState,function(builder){return builder.addCase(replaceSwapState,function(state,_ref){var _ref2;var _ref$payload=_ref.payload,typedValue=_ref$payload.typedValue,recipient=_ref$payload.recipient,field=_ref$payload.field,inputCurrencyId=_ref$payload.inputCurrencyId,outputCurrencyId=_ref$payload.outputCurrencyId;return _ref2={},_defineProperty(_ref2,Field.INPUT,{currencyId:inputCurrencyId!==null&&inputCurrencyId!==void 0?inputCurrencyId:null}),_defineProperty(_ref2,Field.OUTPUT,{currencyId:outputCurrencyId!==null&&outputCurrencyId!==void 0?outputCurrencyId:null}),_defineProperty(_ref2,\"independentField\",field),_defineProperty(_ref2,\"typedValue\",typedValue),_defineProperty(_ref2,\"recipient\",recipient),_ref2;}).addCase(selectCurrency,function(state,_ref3){var _ref3$payload=_ref3.payload,currencyId=_ref3$payload.currencyId,field=_ref3$payload.field;var otherField=field===Field.INPUT?Field.OUTPUT:Field.INPUT;if(currencyId===state[otherField].currencyId){var _objectSpread2;// the case where we have to swap the order\nreturn _objectSpread(_objectSpread({},state),{},(_objectSpread2={independentField:state.independentField===Field.INPUT?Field.OUTPUT:Field.INPUT},_defineProperty(_objectSpread2,field,{currencyId:currencyId}),_defineProperty(_objectSpread2,otherField,{currencyId:state[field].currencyId}),_objectSpread2));}else{// the normal case\nreturn _objectSpread(_objectSpread({},state),{},_defineProperty({},field,{currencyId:currencyId}));}}).addCase(switchCurrencies,function(state){var _objectSpread4;return _objectSpread(_objectSpread({},state),{},(_objectSpread4={independentField:state.independentField===Field.INPUT?Field.OUTPUT:Field.INPUT},_defineProperty(_objectSpread4,Field.INPUT,{currencyId:state[Field.OUTPUT].currencyId}),_defineProperty(_objectSpread4,Field.OUTPUT,{currencyId:state[Field.INPUT].currencyId}),_objectSpread4));}).addCase(typeInput,function(state,_ref4){var _ref4$payload=_ref4.payload,field=_ref4$payload.field,typedValue=_ref4$payload.typedValue;return _objectSpread(_objectSpread({},state),{},{independentField:field,typedValue:typedValue});}).addCase(setRecipient,function(state,_ref5){var recipient=_ref5.payload.recipient;state.recipient=recipient;});});","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/state/swap/reducer.ts"],"names":["createReducer","parsedQueryString","Field","replaceSwapState","selectCurrency","setRecipient","switchCurrencies","typeInput","queryParametersToSwapState","initialState","builder","addCase","state","payload","typedValue","recipient","field","inputCurrencyId","outputCurrencyId","INPUT","currencyId","OUTPUT","otherField","independentField"],"mappings":"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","sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\nimport { parsedQueryString } from 'hooks/useParsedQueryString'\n\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { queryParametersToSwapState } from './hooks'\n\nexport interface SwapState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined | null\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined | null\n  }\n  // the typed recipient address or ENS name, or null if swap should go to sender\n  readonly recipient: string | null\n}\n\nconst initialState: SwapState = queryParametersToSwapState(parsedQueryString())\n\nexport default createReducer<SwapState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId ?? null,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId ?? null,\n          },\n          independentField: field,\n          typedValue,\n          recipient,\n        }\n      }\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      } else {\n        // the normal case\n        return {\n          ...state,\n          [field]: { currencyId },\n        }\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    })\n)\n"]},"metadata":{},"sourceType":"module"}