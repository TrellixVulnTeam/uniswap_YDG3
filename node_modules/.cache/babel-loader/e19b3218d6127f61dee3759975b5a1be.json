{"ast":null,"code":"import { ThemeContext as _ThemeContext } from \"styled-components\";\nimport _styled from \"styled-components\";\n\nvar _jsxFileName = \"/Users/safahi/Downloads/interface-4.30.1/src/pages/Swap/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Trans } from \"@lingui/react\";\nimport { Trade as V2Trade } from '@uniswap/v2-sdk';\nimport { Trade as V3Trade } from '@uniswap/v3-sdk';\nimport { NetworkAlert } from 'components/NetworkAlert/NetworkAlert';\nimport SwapDetailsDropdown from 'components/swap/SwapDetailsDropdown';\nimport UnsupportedCurrencyFooter from 'components/swap/UnsupportedCurrencyFooter';\nimport { MouseoverTooltip } from 'components/Tooltip';\nimport JSBI from 'jsbi';\nimport { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { ArrowDown, CheckCircle, HelpCircle } from 'react-feather';\nimport ReactGA from 'react-ga';\nimport { Text } from 'rebass';\nimport { TradeState } from 'state/routing/types';\nimport AddressInputPanel from '../../components/AddressInputPanel';\nimport { ButtonConfirmed, ButtonError, ButtonLight, ButtonPrimary } from '../../components/Button';\nimport { GreyCard } from '../../components/Card';\nimport { AutoColumn } from '../../components/Column';\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel';\nimport CurrencyLogo from '../../components/CurrencyLogo';\nimport Loader from '../../components/Loader';\nimport { AutoRow } from '../../components/Row';\nimport confirmPriceImpactWithoutFee from '../../components/swap/confirmPriceImpactWithoutFee';\nimport ConfirmSwapModal from '../../components/swap/ConfirmSwapModal';\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from '../../components/swap/styleds';\nimport SwapHeader from '../../components/swap/SwapHeader';\nimport { SwitchLocaleLink } from '../../components/SwitchLocaleLink';\nimport TokenWarningModal from '../../components/TokenWarningModal';\nimport { useAllTokens, useCurrency } from '../../hooks/Tokens';\nimport { ApprovalState, useApprovalOptimizedTrade, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback';\nimport useENSAddress from '../../hooks/useENSAddress';\nimport { useERC20PermitFromTrade, UseERC20PermitState } from '../../hooks/useERC20Permit';\nimport useIsArgentWallet from '../../hooks/useIsArgentWallet';\nimport { useIsSwapUnsupported } from '../../hooks/useIsSwapUnsupported';\nimport { useSwapCallback } from '../../hooks/useSwapCallback';\nimport { useUSDCValue } from '../../hooks/useUSDCPrice';\nimport useWrapCallback, { WrapErrorText, WrapType } from '../../hooks/useWrapCallback';\nimport { useActiveWeb3React } from '../../hooks/web3';\nimport { useWalletModalToggle } from '../../state/application/hooks';\nimport { Field } from '../../state/swap/actions';\nimport { useDefaultsFromURLSearch, useDerivedSwapInfo, useSwapActionHandlers, useSwapState } from '../../state/swap/hooks';\nimport { useExpertModeManager } from '../../state/user/hooks';\nimport { LinkStyledButton, ThemedText } from '../../theme';\nimport { computeFiatValuePriceImpact } from '../../utils/computeFiatValuePriceImpact';\nimport { maxAmountSpend } from '../../utils/maxAmountSpend';\nimport { warningSeverity } from '../../utils/prices';\nimport AppBody from '../AppBody';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AlertWrapper = _styled.div.withConfig({\n  displayName: \"Swap__AlertWrapper\",\n  componentId: \"sc-1es900k-0\"\n})([\"max-width:460px;width:100%;\"]);\n\nexport default function Swap({\n  history\n}) {\n  _s();\n\n  var _parsedAmounts$indepe3, _approvalOptimizedTra2, _parsedAmounts$Field$, _approvalOptimizedTra7, _approvalOptimizedTra8, _approvalOptimizedTra9, _approvalOptimizedTra10, _currencies$Field$INP, _currencies$Field$INP2, _currencies$Field$INP3;\n\n  const {\n    account\n  } = useActiveWeb3React();\n  const loadedUrlParams = useDefaultsFromURLSearch(); // token warning stuff\n\n  const [loadedInputCurrency, loadedOutputCurrency] = [useCurrency(loadedUrlParams === null || loadedUrlParams === void 0 ? void 0 : loadedUrlParams.inputCurrencyId), useCurrency(loadedUrlParams === null || loadedUrlParams === void 0 ? void 0 : loadedUrlParams.outputCurrencyId)];\n  const [dismissTokenWarning, setDismissTokenWarning] = useState(false);\n  const urlLoadedTokens = useMemo(() => {\n    var _filter, _ref;\n\n    return (_filter = (_ref = [loadedInputCurrency, loadedOutputCurrency]) === null || _ref === void 0 ? void 0 : _ref.filter(c => {\n      var _c$isToken;\n\n      return (_c$isToken = c === null || c === void 0 ? void 0 : c.isToken) !== null && _c$isToken !== void 0 ? _c$isToken : false;\n    })) !== null && _filter !== void 0 ? _filter : [];\n  }, [loadedInputCurrency, loadedOutputCurrency]);\n  const handleConfirmTokenWarning = useCallback(() => {\n    setDismissTokenWarning(true);\n  }, []); // dismiss warning if all imported tokens are in active lists\n\n  const defaultTokens = useAllTokens();\n  const importTokensNotInDefault = useMemo(() => urlLoadedTokens && urlLoadedTokens.filter(token => {\n    return !Boolean(token.address in defaultTokens);\n  }), [defaultTokens, urlLoadedTokens]);\n  const theme = useContext(_ThemeContext); // toggle wallet when disconnected\n\n  const toggleWalletModal = useWalletModalToggle(); // for expert mode\n\n  const [isExpertMode] = useExpertModeManager(); // swap state\n\n  const {\n    independentField,\n    typedValue,\n    recipient\n  } = useSwapState();\n  const {\n    trade: {\n      state: tradeState,\n      trade\n    },\n    allowedSlippage,\n    currencyBalances,\n    parsedAmount,\n    currencies,\n    inputError: swapInputError\n  } = useDerivedSwapInfo();\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue);\n  const showWrap = wrapType !== WrapType.NOT_APPLICABLE;\n  const {\n    address: recipientAddress\n  } = useENSAddress(recipient);\n  const parsedAmounts = useMemo(() => showWrap ? {\n    [Field.INPUT]: parsedAmount,\n    [Field.OUTPUT]: parsedAmount\n  } : {\n    [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade === null || trade === void 0 ? void 0 : trade.inputAmount,\n    [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade === null || trade === void 0 ? void 0 : trade.outputAmount\n  }, [independentField, parsedAmount, showWrap, trade]);\n  const [routeNotFound, routeIsLoading, routeIsSyncing] = useMemo(() => [!(trade === null || trade === void 0 ? void 0 : trade.swaps), TradeState.LOADING === tradeState, TradeState.SYNCING === tradeState], [trade, tradeState]);\n  const fiatValueInput = useUSDCValue(parsedAmounts[Field.INPUT]);\n  const fiatValueOutput = useUSDCValue(parsedAmounts[Field.OUTPUT]);\n  const priceImpact = routeIsSyncing ? undefined : computeFiatValuePriceImpact(fiatValueInput, fiatValueOutput);\n  const {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient\n  } = useSwapActionHandlers();\n  const isValid = !swapInputError;\n  const dependentField = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT;\n  const handleTypeInput = useCallback(value => {\n    onUserInput(Field.INPUT, value);\n  }, [onUserInput]);\n  const handleTypeOutput = useCallback(value => {\n    onUserInput(Field.OUTPUT, value);\n  }, [onUserInput]); // reset if they close warning without tokens in params\n\n  const handleDismissTokenWarning = useCallback(() => {\n    setDismissTokenWarning(true);\n    history.push('/swap/');\n  }, [history]); // modal and loading\n\n  const [{\n    showConfirm,\n    tradeToConfirm,\n    swapErrorMessage,\n    attemptingTxn,\n    txHash\n  }, setSwapState] = useState({\n    showConfirm: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined\n  });\n  const formattedAmounts = useMemo(() => {\n    var _parsedAmounts$indepe, _parsedAmounts$indepe2, _parsedAmounts$depend, _parsedAmounts$depend2;\n\n    return {\n      [independentField]: typedValue,\n      [dependentField]: showWrap ? (_parsedAmounts$indepe = (_parsedAmounts$indepe2 = parsedAmounts[independentField]) === null || _parsedAmounts$indepe2 === void 0 ? void 0 : _parsedAmounts$indepe2.toExact()) !== null && _parsedAmounts$indepe !== void 0 ? _parsedAmounts$indepe : '' : (_parsedAmounts$depend = (_parsedAmounts$depend2 = parsedAmounts[dependentField]) === null || _parsedAmounts$depend2 === void 0 ? void 0 : _parsedAmounts$depend2.toSignificant(6)) !== null && _parsedAmounts$depend !== void 0 ? _parsedAmounts$depend : ''\n    };\n  }, [dependentField, independentField, parsedAmounts, showWrap, typedValue]);\n  const userHasSpecifiedInputOutput = Boolean(currencies[Field.INPUT] && currencies[Field.OUTPUT] && ((_parsedAmounts$indepe3 = parsedAmounts[independentField]) === null || _parsedAmounts$indepe3 === void 0 ? void 0 : _parsedAmounts$indepe3.greaterThan(JSBI.BigInt(0))));\n  const approvalOptimizedTrade = useApprovalOptimizedTrade(trade, allowedSlippage);\n  const approvalOptimizedTradeString = approvalOptimizedTrade instanceof V2Trade ? 'V2SwapRouter' : approvalOptimizedTrade instanceof V3Trade ? 'V3SwapRouter' : 'SwapRouter'; // check whether the user has approved the router on the input token\n\n  const [approvalState, approveCallback] = useApproveCallbackFromTrade(approvalOptimizedTrade, allowedSlippage);\n  const {\n    state: signatureState,\n    signatureData,\n    gatherPermitSignature\n  } = useERC20PermitFromTrade(approvalOptimizedTrade, allowedSlippage);\n  const handleApprove = useCallback(async () => {\n    if (signatureState === UseERC20PermitState.NOT_SIGNED && gatherPermitSignature) {\n      try {\n        await gatherPermitSignature();\n      } catch (error) {\n        // try to approve if gatherPermitSignature failed for any reason other than the user rejecting it\n        if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n          await approveCallback();\n        }\n      }\n    } else {\n      var _approvalOptimizedTra;\n\n      await approveCallback();\n      ReactGA.event({\n        category: 'Swap',\n        action: 'Approve',\n        label: [approvalOptimizedTradeString, approvalOptimizedTrade === null || approvalOptimizedTrade === void 0 ? void 0 : (_approvalOptimizedTra = approvalOptimizedTrade.inputAmount) === null || _approvalOptimizedTra === void 0 ? void 0 : _approvalOptimizedTra.currency.symbol].join('/')\n      });\n    }\n  }, [signatureState, gatherPermitSignature, approveCallback, approvalOptimizedTradeString, approvalOptimizedTrade === null || approvalOptimizedTrade === void 0 ? void 0 : (_approvalOptimizedTra2 = approvalOptimizedTrade.inputAmount) === null || _approvalOptimizedTra2 === void 0 ? void 0 : _approvalOptimizedTra2.currency.symbol]); // check if user has gone through approval process, used to show two step buttons, reset on token change\n\n  const [approvalSubmitted, setApprovalSubmitted] = useState(false); // mark when a user has submitted an approval, reset onTokenSelection for input field\n\n  useEffect(() => {\n    if (approvalState === ApprovalState.PENDING) {\n      setApprovalSubmitted(true);\n    }\n  }, [approvalState, approvalSubmitted]);\n  const maxInputAmount = useMemo(() => maxAmountSpend(currencyBalances[Field.INPUT]), [currencyBalances]);\n  const showMaxButton = Boolean((maxInputAmount === null || maxInputAmount === void 0 ? void 0 : maxInputAmount.greaterThan(0)) && !((_parsedAmounts$Field$ = parsedAmounts[Field.INPUT]) === null || _parsedAmounts$Field$ === void 0 ? void 0 : _parsedAmounts$Field$.equalTo(maxInputAmount))); // the callback to execute the swap\n\n  const {\n    callback: swapCallback,\n    error: swapCallbackError\n  } = useSwapCallback(approvalOptimizedTrade, allowedSlippage, recipient, signatureData);\n  const handleSwap = useCallback(() => {\n    if (!swapCallback) {\n      return;\n    }\n\n    if (priceImpact && !confirmPriceImpactWithoutFee(priceImpact)) {\n      return;\n    }\n\n    setSwapState({\n      attemptingTxn: true,\n      tradeToConfirm,\n      showConfirm,\n      swapErrorMessage: undefined,\n      txHash: undefined\n    });\n    swapCallback().then(hash => {\n      var _approvalOptimizedTra3, _approvalOptimizedTra4, _approvalOptimizedTra5, _approvalOptimizedTra6;\n\n      setSwapState({\n        attemptingTxn: false,\n        tradeToConfirm,\n        showConfirm,\n        swapErrorMessage: undefined,\n        txHash: hash\n      });\n      ReactGA.event({\n        category: 'Swap',\n        action: recipient === null ? 'Swap w/o Send' : (recipientAddress !== null && recipientAddress !== void 0 ? recipientAddress : recipient) === account ? 'Swap w/o Send + recipient' : 'Swap w/ Send',\n        label: [approvalOptimizedTradeString, approvalOptimizedTrade === null || approvalOptimizedTrade === void 0 ? void 0 : (_approvalOptimizedTra3 = approvalOptimizedTrade.inputAmount) === null || _approvalOptimizedTra3 === void 0 ? void 0 : (_approvalOptimizedTra4 = _approvalOptimizedTra3.currency) === null || _approvalOptimizedTra4 === void 0 ? void 0 : _approvalOptimizedTra4.symbol, approvalOptimizedTrade === null || approvalOptimizedTrade === void 0 ? void 0 : (_approvalOptimizedTra5 = approvalOptimizedTrade.outputAmount) === null || _approvalOptimizedTra5 === void 0 ? void 0 : (_approvalOptimizedTra6 = _approvalOptimizedTra5.currency) === null || _approvalOptimizedTra6 === void 0 ? void 0 : _approvalOptimizedTra6.symbol, 'MH'].join('/')\n      });\n    }).catch(error => {\n      setSwapState({\n        attemptingTxn: false,\n        tradeToConfirm,\n        showConfirm,\n        swapErrorMessage: error.message,\n        txHash: undefined\n      });\n    });\n  }, [swapCallback, priceImpact, tradeToConfirm, showConfirm, recipient, recipientAddress, account, approvalOptimizedTradeString, approvalOptimizedTrade === null || approvalOptimizedTrade === void 0 ? void 0 : (_approvalOptimizedTra7 = approvalOptimizedTrade.inputAmount) === null || _approvalOptimizedTra7 === void 0 ? void 0 : (_approvalOptimizedTra8 = _approvalOptimizedTra7.currency) === null || _approvalOptimizedTra8 === void 0 ? void 0 : _approvalOptimizedTra8.symbol, approvalOptimizedTrade === null || approvalOptimizedTrade === void 0 ? void 0 : (_approvalOptimizedTra9 = approvalOptimizedTrade.outputAmount) === null || _approvalOptimizedTra9 === void 0 ? void 0 : (_approvalOptimizedTra10 = _approvalOptimizedTra9.currency) === null || _approvalOptimizedTra10 === void 0 ? void 0 : _approvalOptimizedTra10.symbol]); // errors\n\n  const [showInverted, setShowInverted] = useState(false); // warnings on the greater of fiat value price impact and execution price impact\n\n  const priceImpactSeverity = useMemo(() => {\n    const executionPriceImpact = trade === null || trade === void 0 ? void 0 : trade.priceImpact;\n    return warningSeverity(executionPriceImpact && priceImpact ? executionPriceImpact.greaterThan(priceImpact) ? executionPriceImpact : priceImpact : executionPriceImpact !== null && executionPriceImpact !== void 0 ? executionPriceImpact : priceImpact);\n  }, [priceImpact, trade]);\n  const isArgentWallet = useIsArgentWallet(); // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n\n  const showApproveFlow = !isArgentWallet && !swapInputError && (approvalState === ApprovalState.NOT_APPROVED || approvalState === ApprovalState.PENDING || approvalSubmitted && approvalState === ApprovalState.APPROVED) && !(priceImpactSeverity > 3 && !isExpertMode);\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({\n      showConfirm: false,\n      tradeToConfirm,\n      attemptingTxn,\n      swapErrorMessage,\n      txHash\n    }); // if there was a tx hash, we want to clear the input\n\n    if (txHash) {\n      onUserInput(Field.INPUT, '');\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash]);\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({\n      tradeToConfirm: trade,\n      swapErrorMessage,\n      txHash,\n      attemptingTxn,\n      showConfirm\n    });\n  }, [attemptingTxn, showConfirm, swapErrorMessage, trade, txHash]);\n  const handleInputSelect = useCallback(inputCurrency => {\n    setApprovalSubmitted(false); // reset 2 step UI for approvals\n\n    onCurrencySelection(Field.INPUT, inputCurrency);\n  }, [onCurrencySelection]);\n  const handleMaxInput = useCallback(() => {\n    maxInputAmount && onUserInput(Field.INPUT, maxInputAmount.toExact());\n    ReactGA.event({\n      category: 'Swap',\n      action: 'Max'\n    });\n  }, [maxInputAmount, onUserInput]);\n  const handleOutputSelect = useCallback(outputCurrency => onCurrencySelection(Field.OUTPUT, outputCurrency), [onCurrencySelection]);\n  const swapIsUnsupported = useIsSwapUnsupported(currencies[Field.INPUT], currencies[Field.OUTPUT]);\n  const priceImpactTooHigh = priceImpactSeverity > 3 && !isExpertMode;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TokenWarningModal, {\n      isOpen: importTokensNotInDefault.length > 0 && !dismissTokenWarning,\n      tokens: importTokensNotInDefault,\n      onConfirm: handleConfirmTokenWarning,\n      onDismiss: handleDismissTokenWarning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppBody, {\n      children: [/*#__PURE__*/_jsxDEV(SwapHeader, {\n        allowedSlippage: allowedSlippage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n        id: \"swap-page\",\n        children: [/*#__PURE__*/_jsxDEV(ConfirmSwapModal, {\n          isOpen: showConfirm,\n          trade: trade,\n          originalTrade: tradeToConfirm,\n          onAcceptChanges: handleAcceptChanges,\n          attemptingTxn: attemptingTxn,\n          txHash: txHash,\n          recipient: recipient,\n          allowedSlippage: allowedSlippage,\n          onConfirm: handleSwap,\n          swapErrorMessage: swapErrorMessage,\n          onDismiss: handleConfirmDismiss\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n          gap: 'sm',\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'relative'\n            },\n            children: [/*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n              label: independentField === Field.OUTPUT && !showWrap ? /*#__PURE__*/_jsxDEV(Trans, {\n                id: \"From (at most)\"\n              }, void 0, false, void 0, this) : /*#__PURE__*/_jsxDEV(Trans, {\n                id: \"From\"\n              }, void 0, false, void 0, this),\n              value: formattedAmounts[Field.INPUT],\n              showMaxButton: showMaxButton,\n              currency: currencies[Field.INPUT],\n              onUserInput: handleTypeInput,\n              onMax: handleMaxInput,\n              fiatValue: fiatValueInput !== null && fiatValueInput !== void 0 ? fiatValueInput : undefined,\n              onCurrencySelect: handleInputSelect,\n              otherCurrency: currencies[Field.OUTPUT],\n              showCommonBases: true,\n              id: \"swap-currency-input\",\n              loading: independentField === Field.OUTPUT && routeIsSyncing\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ArrowWrapper, {\n              clickable: true,\n              children: /*#__PURE__*/_jsxDEV(ArrowDown, {\n                size: \"16\",\n                onClick: () => {\n                  setApprovalSubmitted(false); // reset 2 step UI for approvals\n\n                  onSwitchTokens();\n                },\n                color: currencies[Field.INPUT] && currencies[Field.OUTPUT] ? theme.text1 : theme.text3\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n              value: formattedAmounts[Field.OUTPUT],\n              onUserInput: handleTypeOutput,\n              label: independentField === Field.INPUT && !showWrap ? /*#__PURE__*/_jsxDEV(Trans, {\n                id: \"To (at least)\"\n              }, void 0, false, void 0, this) : /*#__PURE__*/_jsxDEV(Trans, {\n                id: \"To\"\n              }, void 0, false, void 0, this),\n              showMaxButton: false,\n              hideBalance: false,\n              fiatValue: fiatValueOutput !== null && fiatValueOutput !== void 0 ? fiatValueOutput : undefined,\n              priceImpact: priceImpact,\n              currency: currencies[Field.OUTPUT],\n              onCurrencySelect: handleOutputSelect,\n              otherCurrency: currencies[Field.INPUT],\n              showCommonBases: true,\n              id: \"swap-currency-output\",\n              loading: independentField === Field.INPUT && routeIsSyncing\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this), recipient !== null && !showWrap ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n              justify: \"space-between\",\n              style: {\n                padding: '0 1rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(ArrowWrapper, {\n                clickable: false,\n                children: /*#__PURE__*/_jsxDEV(ArrowDown, {\n                  size: \"16\",\n                  color: theme.text2\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(LinkStyledButton, {\n                id: \"remove-recipient-button\",\n                onClick: () => onChangeRecipient(null),\n                children: /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"- Remove recipient\"\n                }, void 0, false, void 0, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(AddressInputPanel, {\n              id: \"recipient\",\n              value: recipient,\n              onChange: onChangeRecipient\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : null, !showWrap && userHasSpecifiedInputOutput && (trade || routeIsLoading || routeIsSyncing) && /*#__PURE__*/_jsxDEV(SwapDetailsDropdown, {\n            trade: trade,\n            syncing: routeIsSyncing,\n            loading: routeIsLoading,\n            showInverted: showInverted,\n            setShowInverted: setShowInverted,\n            allowedSlippage: allowedSlippage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [swapIsUnsupported ? /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n              disabled: true,\n              children: /*#__PURE__*/_jsxDEV(ThemedText.Main, {\n                mb: \"4px\",\n                children: /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"Unsupported Asset\"\n                }, void 0, false, void 0, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 17\n            }, this) : !account ? /*#__PURE__*/_jsxDEV(ButtonLight, {\n              onClick: toggleWalletModal,\n              children: /*#__PURE__*/_jsxDEV(Trans, {\n                id: \"Connect Wallet\"\n              }, void 0, false, void 0, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 17\n            }, this) : showWrap ? /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n              disabled: Boolean(wrapInputError),\n              onClick: onWrap,\n              children: wrapInputError ? /*#__PURE__*/_jsxDEV(WrapErrorText, {\n                wrapInputError: wrapInputError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 21\n              }, this) : wrapType === WrapType.WRAP ? /*#__PURE__*/_jsxDEV(Trans, {\n                id: \"Wrap\"\n              }, void 0, false, void 0, this) : wrapType === WrapType.UNWRAP ? /*#__PURE__*/_jsxDEV(Trans, {\n                id: \"Unwrap\"\n              }, void 0, false, void 0, this) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 17\n            }, this) : routeNotFound && userHasSpecifiedInputOutput && !routeIsLoading && !routeIsSyncing ? /*#__PURE__*/_jsxDEV(GreyCard, {\n              style: {\n                textAlign: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(ThemedText.Main, {\n                mb: \"4px\",\n                children: /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"Insufficient liquidity for this trade.\"\n                }, void 0, false, void 0, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 17\n            }, this) : showApproveFlow ? /*#__PURE__*/_jsxDEV(AutoRow, {\n              style: {\n                flexWrap: 'nowrap',\n                width: '100%'\n              },\n              children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n                style: {\n                  width: '100%'\n                },\n                gap: \"12px\",\n                children: [/*#__PURE__*/_jsxDEV(ButtonConfirmed, {\n                  onClick: handleApprove,\n                  disabled: approvalState !== ApprovalState.NOT_APPROVED || approvalSubmitted || signatureState === UseERC20PermitState.SIGNED,\n                  width: \"100%\",\n                  altDisabledStyle: approvalState === ApprovalState.PENDING // show solid button while waiting\n                  ,\n                  confirmed: approvalState === ApprovalState.APPROVED || signatureState === UseERC20PermitState.SIGNED,\n                  children: /*#__PURE__*/_jsxDEV(AutoRow, {\n                    justify: \"space-between\",\n                    style: {\n                      flexWrap: 'nowrap'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        display: 'flex',\n                        alignItems: 'center'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n                        currency: currencies[Field.INPUT],\n                        size: '20px',\n                        style: {\n                          marginRight: '8px',\n                          flexShrink: 0\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 512,\n                        columnNumber: 27\n                      }, this), approvalState === ApprovalState.APPROVED || signatureState === UseERC20PermitState.SIGNED ? /*#__PURE__*/_jsxDEV(Trans, {\n                        id: \"You can now trade {0}\",\n                        values: {\n                          0: (_currencies$Field$INP = currencies[Field.INPUT]) === null || _currencies$Field$INP === void 0 ? void 0 : _currencies$Field$INP.symbol\n                        }\n                      }, void 0, false, void 0, this) : /*#__PURE__*/_jsxDEV(Trans, {\n                        id: \"Allow the Uniswap Protocol to use your {0}\",\n                        values: {\n                          0: (_currencies$Field$INP2 = currencies[Field.INPUT]) === null || _currencies$Field$INP2 === void 0 ? void 0 : _currencies$Field$INP2.symbol\n                        }\n                      }, void 0, false, void 0, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 511,\n                      columnNumber: 25\n                    }, this), approvalState === ApprovalState.PENDING ? /*#__PURE__*/_jsxDEV(Loader, {\n                      stroke: \"white\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 525,\n                      columnNumber: 27\n                    }, this) : approvalSubmitted && approvalState === ApprovalState.APPROVED || signatureState === UseERC20PermitState.SIGNED ? /*#__PURE__*/_jsxDEV(CheckCircle, {\n                      size: \"20\",\n                      color: theme.green1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 528,\n                      columnNumber: 27\n                    }, this) : /*#__PURE__*/_jsxDEV(MouseoverTooltip, {\n                      text: /*#__PURE__*/_jsxDEV(Trans, {\n                        id: \"You must give the Uniswap smart contracts permission to use your {0}. You only have to do this once per token.\",\n                        values: {\n                          0: (_currencies$Field$INP3 = currencies[Field.INPUT]) === null || _currencies$Field$INP3 === void 0 ? void 0 : _currencies$Field$INP3.symbol\n                        }\n                      }, void 0, false, void 0, this),\n                      children: /*#__PURE__*/_jsxDEV(HelpCircle, {\n                        size: \"20\",\n                        color: 'white',\n                        style: {\n                          marginLeft: '8px'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 538,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 530,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 510,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 497,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ButtonError, {\n                  onClick: () => {\n                    if (isExpertMode) {\n                      handleSwap();\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        showConfirm: true,\n                        txHash: undefined\n                      });\n                    }\n                  },\n                  width: \"100%\",\n                  id: \"swap-button\",\n                  disabled: !isValid || routeIsSyncing || routeIsLoading || approvalState !== ApprovalState.APPROVED && signatureState !== UseERC20PermitState.SIGNED || priceImpactTooHigh,\n                  error: isValid && priceImpactSeverity > 2,\n                  children: /*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: 16,\n                    fontWeight: 500,\n                    children: priceImpactTooHigh ? /*#__PURE__*/_jsxDEV(Trans, {\n                      id: \"High Price Impact\"\n                    }, void 0, false, void 0, this) : trade && priceImpactSeverity > 2 ? /*#__PURE__*/_jsxDEV(Trans, {\n                      id: \"Swap Anyway\"\n                    }, void 0, false, void 0, this) : /*#__PURE__*/_jsxDEV(Trans, {\n                      id: \"Swap\"\n                    }, void 0, false, void 0, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 568,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 543,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(ButtonError, {\n              onClick: () => {\n                if (isExpertMode) {\n                  handleSwap();\n                } else {\n                  setSwapState({\n                    tradeToConfirm: trade,\n                    attemptingTxn: false,\n                    swapErrorMessage: undefined,\n                    showConfirm: true,\n                    txHash: undefined\n                  });\n                }\n              },\n              id: \"swap-button\",\n              disabled: !isValid || routeIsSyncing || routeIsLoading || priceImpactTooHigh || !!swapCallbackError,\n              error: isValid && priceImpactSeverity > 2 && !swapCallbackError,\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                fontSize: 20,\n                fontWeight: 500,\n                children: swapInputError ? swapInputError : routeIsSyncing || routeIsLoading ? /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"Swap\"\n                }, void 0, false, void 0, this) : priceImpactSeverity > 2 ? /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"Swap Anyway\"\n                }, void 0, false, void 0, this) : priceImpactTooHigh ? /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"Price Impact Too High\"\n                }, void 0, false, void 0, this) : /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"Swap\"\n                }, void 0, false, void 0, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 599,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 17\n            }, this), isExpertMode && swapErrorMessage ? /*#__PURE__*/_jsxDEV(SwapCallbackError, {\n              error: swapErrorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 51\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AlertWrapper, {\n      children: /*#__PURE__*/_jsxDEV(NetworkAlert, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SwitchLocaleLink, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 7\n    }, this), !swapIsUnsupported ? null : /*#__PURE__*/_jsxDEV(UnsupportedCurrencyFooter, {\n      show: swapIsUnsupported,\n      currencies: [currencies[Field.INPUT], currencies[Field.OUTPUT]]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Swap, \"nvFl0x3JMu0bakZeKKdCRxccJ3k=\", false, function () {\n  return [useActiveWeb3React, useDefaultsFromURLSearch, useCurrency, useCurrency, useAllTokens, useWalletModalToggle, useExpertModeManager, useSwapState, useDerivedSwapInfo, useWrapCallback, useENSAddress, useUSDCValue, useUSDCValue, useSwapActionHandlers, useApprovalOptimizedTrade, useApproveCallbackFromTrade, useERC20PermitFromTrade, useSwapCallback, useIsArgentWallet, useIsSwapUnsupported];\n});\n\n_c = Swap;\n\nvar _c;\n\n$RefreshReg$(_c, \"Swap\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/pages/Swap/index.tsx"],"names":["Trade","V2Trade","V3Trade","NetworkAlert","SwapDetailsDropdown","UnsupportedCurrencyFooter","MouseoverTooltip","JSBI","useCallback","useContext","useEffect","useMemo","useState","ArrowDown","CheckCircle","HelpCircle","ReactGA","Text","TradeState","AddressInputPanel","ButtonConfirmed","ButtonError","ButtonLight","ButtonPrimary","GreyCard","AutoColumn","CurrencyInputPanel","CurrencyLogo","Loader","AutoRow","confirmPriceImpactWithoutFee","ConfirmSwapModal","ArrowWrapper","SwapCallbackError","Wrapper","SwapHeader","SwitchLocaleLink","TokenWarningModal","useAllTokens","useCurrency","ApprovalState","useApprovalOptimizedTrade","useApproveCallbackFromTrade","useENSAddress","useERC20PermitFromTrade","UseERC20PermitState","useIsArgentWallet","useIsSwapUnsupported","useSwapCallback","useUSDCValue","useWrapCallback","WrapErrorText","WrapType","useActiveWeb3React","useWalletModalToggle","Field","useDefaultsFromURLSearch","useDerivedSwapInfo","useSwapActionHandlers","useSwapState","useExpertModeManager","LinkStyledButton","ThemedText","computeFiatValuePriceImpact","maxAmountSpend","warningSeverity","AppBody","AlertWrapper","styled","div","Swap","history","account","loadedUrlParams","loadedInputCurrency","loadedOutputCurrency","inputCurrencyId","outputCurrencyId","dismissTokenWarning","setDismissTokenWarning","urlLoadedTokens","filter","c","isToken","handleConfirmTokenWarning","defaultTokens","importTokensNotInDefault","token","Boolean","address","theme","ThemeContext","toggleWalletModal","isExpertMode","independentField","typedValue","recipient","trade","state","tradeState","allowedSlippage","currencyBalances","parsedAmount","currencies","inputError","swapInputError","wrapType","execute","onWrap","wrapInputError","INPUT","OUTPUT","showWrap","NOT_APPLICABLE","recipientAddress","parsedAmounts","inputAmount","outputAmount","routeNotFound","routeIsLoading","routeIsSyncing","swaps","LOADING","SYNCING","fiatValueInput","fiatValueOutput","priceImpact","undefined","onSwitchTokens","onCurrencySelection","onUserInput","onChangeRecipient","isValid","dependentField","handleTypeInput","value","handleTypeOutput","handleDismissTokenWarning","push","showConfirm","tradeToConfirm","swapErrorMessage","attemptingTxn","txHash","setSwapState","formattedAmounts","toExact","toSignificant","userHasSpecifiedInputOutput","greaterThan","BigInt","approvalOptimizedTrade","approvalOptimizedTradeString","approvalState","approveCallback","signatureState","signatureData","gatherPermitSignature","handleApprove","NOT_SIGNED","error","code","event","category","action","label","currency","symbol","join","approvalSubmitted","setApprovalSubmitted","PENDING","maxInputAmount","showMaxButton","equalTo","callback","swapCallback","swapCallbackError","handleSwap","then","hash","catch","message","showInverted","setShowInverted","priceImpactSeverity","executionPriceImpact","isArgentWallet","showApproveFlow","NOT_APPROVED","APPROVED","handleConfirmDismiss","handleAcceptChanges","handleInputSelect","inputCurrency","handleMaxInput","handleOutputSelect","outputCurrency","swapIsUnsupported","priceImpactTooHigh","length","display","text1","text3","padding","text2","WRAP","UNWRAP","textAlign","flexWrap","width","SIGNED","alignItems","marginRight","flexShrink","green1","marginLeft"],"mappings":"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","sourcesContent":["import { Trans } from '@lingui/macro'\nimport { Trade } from '@uniswap/router-sdk'\nimport { Currency, CurrencyAmount, Token, TradeType } from '@uniswap/sdk-core'\nimport { Trade as V2Trade } from '@uniswap/v2-sdk'\nimport { Trade as V3Trade } from '@uniswap/v3-sdk'\nimport { NetworkAlert } from 'components/NetworkAlert/NetworkAlert'\nimport SwapDetailsDropdown from 'components/swap/SwapDetailsDropdown'\nimport UnsupportedCurrencyFooter from 'components/swap/UnsupportedCurrencyFooter'\nimport { MouseoverTooltip } from 'components/Tooltip'\nimport JSBI from 'jsbi'\nimport { useCallback, useContext, useEffect, useMemo, useState } from 'react'\nimport { ArrowDown, CheckCircle, HelpCircle } from 'react-feather'\nimport ReactGA from 'react-ga'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { Text } from 'rebass'\nimport { TradeState } from 'state/routing/types'\nimport styled, { ThemeContext } from 'styled-components/macro'\n\nimport AddressInputPanel from '../../components/AddressInputPanel'\nimport { ButtonConfirmed, ButtonError, ButtonLight, ButtonPrimary } from '../../components/Button'\nimport { GreyCard } from '../../components/Card'\nimport { AutoColumn } from '../../components/Column'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport CurrencyLogo from '../../components/CurrencyLogo'\nimport Loader from '../../components/Loader'\nimport { AutoRow } from '../../components/Row'\nimport confirmPriceImpactWithoutFee from '../../components/swap/confirmPriceImpactWithoutFee'\nimport ConfirmSwapModal from '../../components/swap/ConfirmSwapModal'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from '../../components/swap/styleds'\nimport SwapHeader from '../../components/swap/SwapHeader'\nimport { SwitchLocaleLink } from '../../components/SwitchLocaleLink'\nimport TokenWarningModal from '../../components/TokenWarningModal'\nimport { useAllTokens, useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApprovalOptimizedTrade, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\nimport useENSAddress from '../../hooks/useENSAddress'\nimport { useERC20PermitFromTrade, UseERC20PermitState } from '../../hooks/useERC20Permit'\nimport useIsArgentWallet from '../../hooks/useIsArgentWallet'\nimport { useIsSwapUnsupported } from '../../hooks/useIsSwapUnsupported'\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\nimport { useUSDCValue } from '../../hooks/useUSDCPrice'\nimport useWrapCallback, { WrapErrorText, WrapType } from '../../hooks/useWrapCallback'\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport { useWalletModalToggle } from '../../state/application/hooks'\nimport { Field } from '../../state/swap/actions'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks'\nimport { useExpertModeManager } from '../../state/user/hooks'\nimport { LinkStyledButton, ThemedText } from '../../theme'\nimport { computeFiatValuePriceImpact } from '../../utils/computeFiatValuePriceImpact'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { warningSeverity } from '../../utils/prices'\nimport AppBody from '../AppBody'\n\nconst AlertWrapper = styled.div`\n  max-width: 460px;\n  width: 100%;\n`\n\nexport default function Swap({ history }: RouteComponentProps) {\n  const { account } = useActiveWeb3React()\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const [dismissTokenWarning, setDismissTokenWarning] = useState<boolean>(false)\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c?.isToken ?? false) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency]\n  )\n  const handleConfirmTokenWarning = useCallback(() => {\n    setDismissTokenWarning(true)\n  }, [])\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault = useMemo(\n    () =>\n      urlLoadedTokens &&\n      urlLoadedTokens.filter((token: Token) => {\n        return !Boolean(token.address in defaultTokens)\n      }),\n    [defaultTokens, urlLoadedTokens]\n  )\n\n  const theme = useContext(ThemeContext)\n\n  // toggle wallet when disconnected\n  const toggleWalletModal = useWalletModalToggle()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const {\n    trade: { state: tradeState, trade },\n    allowedSlippage,\n    currencyBalances,\n    parsedAmount,\n    currencies,\n    inputError: swapInputError,\n  } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const { address: recipientAddress } = useENSAddress(recipient)\n\n  const parsedAmounts = useMemo(\n    () =>\n      showWrap\n        ? {\n            [Field.INPUT]: parsedAmount,\n            [Field.OUTPUT]: parsedAmount,\n          }\n        : {\n            [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n            [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n          },\n    [independentField, parsedAmount, showWrap, trade]\n  )\n\n  const [routeNotFound, routeIsLoading, routeIsSyncing] = useMemo(\n    () => [!trade?.swaps, TradeState.LOADING === tradeState, TradeState.SYNCING === tradeState],\n    [trade, tradeState]\n  )\n\n  const fiatValueInput = useUSDCValue(parsedAmounts[Field.INPUT])\n  const fiatValueOutput = useUSDCValue(parsedAmounts[Field.OUTPUT])\n  const priceImpact = routeIsSyncing ? undefined : computeFiatValuePriceImpact(fiatValueInput, fiatValueOutput)\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput]\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput]\n  )\n\n  // reset if they close warning without tokens in params\n  const handleDismissTokenWarning = useCallback(() => {\n    setDismissTokenWarning(true)\n    history.push('/swap/')\n  }, [history])\n\n  // modal and loading\n  const [{ showConfirm, tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    showConfirm: boolean\n    tradeToConfirm: Trade<Currency, Currency, TradeType> | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    showConfirm: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = useMemo(\n    () => ({\n      [independentField]: typedValue,\n      [dependentField]: showWrap\n        ? parsedAmounts[independentField]?.toExact() ?? ''\n        : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n    }),\n    [dependentField, independentField, parsedAmounts, showWrap, typedValue]\n  )\n\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0))\n  )\n\n  const approvalOptimizedTrade = useApprovalOptimizedTrade(trade, allowedSlippage)\n  const approvalOptimizedTradeString =\n    approvalOptimizedTrade instanceof V2Trade\n      ? 'V2SwapRouter'\n      : approvalOptimizedTrade instanceof V3Trade\n      ? 'V3SwapRouter'\n      : 'SwapRouter'\n\n  // check whether the user has approved the router on the input token\n  const [approvalState, approveCallback] = useApproveCallbackFromTrade(approvalOptimizedTrade, allowedSlippage)\n  const {\n    state: signatureState,\n    signatureData,\n    gatherPermitSignature,\n  } = useERC20PermitFromTrade(approvalOptimizedTrade, allowedSlippage)\n\n  const handleApprove = useCallback(async () => {\n    if (signatureState === UseERC20PermitState.NOT_SIGNED && gatherPermitSignature) {\n      try {\n        await gatherPermitSignature()\n      } catch (error) {\n        // try to approve if gatherPermitSignature failed for any reason other than the user rejecting it\n        if (error?.code !== 4001) {\n          await approveCallback()\n        }\n      }\n    } else {\n      await approveCallback()\n\n      ReactGA.event({\n        category: 'Swap',\n        action: 'Approve',\n        label: [approvalOptimizedTradeString, approvalOptimizedTrade?.inputAmount?.currency.symbol].join('/'),\n      })\n    }\n  }, [\n    signatureState,\n    gatherPermitSignature,\n    approveCallback,\n    approvalOptimizedTradeString,\n    approvalOptimizedTrade?.inputAmount?.currency.symbol,\n  ])\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approvalState === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approvalState, approvalSubmitted])\n\n  const maxInputAmount: CurrencyAmount<Currency> | undefined = useMemo(\n    () => maxAmountSpend(currencyBalances[Field.INPUT]),\n    [currencyBalances]\n  )\n  const showMaxButton = Boolean(maxInputAmount?.greaterThan(0) && !parsedAmounts[Field.INPUT]?.equalTo(maxInputAmount))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(\n    approvalOptimizedTrade,\n    allowedSlippage,\n    recipient,\n    signatureData\n  )\n\n  const handleSwap = useCallback(() => {\n    if (!swapCallback) {\n      return\n    }\n    if (priceImpact && !confirmPriceImpactWithoutFee(priceImpact)) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, showConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, showConfirm, swapErrorMessage: undefined, txHash: hash })\n        ReactGA.event({\n          category: 'Swap',\n          action:\n            recipient === null\n              ? 'Swap w/o Send'\n              : (recipientAddress ?? recipient) === account\n              ? 'Swap w/o Send + recipient'\n              : 'Swap w/ Send',\n          label: [\n            approvalOptimizedTradeString,\n            approvalOptimizedTrade?.inputAmount?.currency?.symbol,\n            approvalOptimizedTrade?.outputAmount?.currency?.symbol,\n            'MH',\n          ].join('/'),\n        })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          showConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [\n    swapCallback,\n    priceImpact,\n    tradeToConfirm,\n    showConfirm,\n    recipient,\n    recipientAddress,\n    account,\n    approvalOptimizedTradeString,\n    approvalOptimizedTrade?.inputAmount?.currency?.symbol,\n    approvalOptimizedTrade?.outputAmount?.currency?.symbol,\n  ])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on the greater of fiat value price impact and execution price impact\n  const priceImpactSeverity = useMemo(() => {\n    const executionPriceImpact = trade?.priceImpact\n    return warningSeverity(\n      executionPriceImpact && priceImpact\n        ? executionPriceImpact.greaterThan(priceImpact)\n          ? executionPriceImpact\n          : priceImpact\n        : executionPriceImpact ?? priceImpact\n    )\n  }, [priceImpact, trade])\n\n  const isArgentWallet = useIsArgentWallet()\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !isArgentWallet &&\n    !swapInputError &&\n    (approvalState === ApprovalState.NOT_APPROVED ||\n      approvalState === ApprovalState.PENDING ||\n      (approvalSubmitted && approvalState === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ showConfirm: false, tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn, showConfirm })\n  }, [attemptingTxn, showConfirm, swapErrorMessage, trade, txHash])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n    },\n    [onCurrencySelection]\n  )\n\n  const handleMaxInput = useCallback(() => {\n    maxInputAmount && onUserInput(Field.INPUT, maxInputAmount.toExact())\n    ReactGA.event({\n      category: 'Swap',\n      action: 'Max',\n    })\n  }, [maxInputAmount, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => onCurrencySelection(Field.OUTPUT, outputCurrency),\n    [onCurrencySelection]\n  )\n\n  const swapIsUnsupported = useIsSwapUnsupported(currencies[Field.INPUT], currencies[Field.OUTPUT])\n\n  const priceImpactTooHigh = priceImpactSeverity > 3 && !isExpertMode\n\n  return (\n    <>\n      <TokenWarningModal\n        isOpen={importTokensNotInDefault.length > 0 && !dismissTokenWarning}\n        tokens={importTokensNotInDefault}\n        onConfirm={handleConfirmTokenWarning}\n        onDismiss={handleDismissTokenWarning}\n      />\n      <AppBody>\n        <SwapHeader allowedSlippage={allowedSlippage} />\n        <Wrapper id=\"swap-page\">\n          <ConfirmSwapModal\n            isOpen={showConfirm}\n            trade={trade}\n            originalTrade={tradeToConfirm}\n            onAcceptChanges={handleAcceptChanges}\n            attemptingTxn={attemptingTxn}\n            txHash={txHash}\n            recipient={recipient}\n            allowedSlippage={allowedSlippage}\n            onConfirm={handleSwap}\n            swapErrorMessage={swapErrorMessage}\n            onDismiss={handleConfirmDismiss}\n          />\n\n          <AutoColumn gap={'sm'}>\n            <div style={{ display: 'relative' }}>\n              <CurrencyInputPanel\n                label={\n                  independentField === Field.OUTPUT && !showWrap ? <Trans>From (at most)</Trans> : <Trans>From</Trans>\n                }\n                value={formattedAmounts[Field.INPUT]}\n                showMaxButton={showMaxButton}\n                currency={currencies[Field.INPUT]}\n                onUserInput={handleTypeInput}\n                onMax={handleMaxInput}\n                fiatValue={fiatValueInput ?? undefined}\n                onCurrencySelect={handleInputSelect}\n                otherCurrency={currencies[Field.OUTPUT]}\n                showCommonBases={true}\n                id=\"swap-currency-input\"\n                loading={independentField === Field.OUTPUT && routeIsSyncing}\n              />\n              <ArrowWrapper clickable>\n                <ArrowDown\n                  size=\"16\"\n                  onClick={() => {\n                    setApprovalSubmitted(false) // reset 2 step UI for approvals\n                    onSwitchTokens()\n                  }}\n                  color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? theme.text1 : theme.text3}\n                />\n              </ArrowWrapper>\n              <CurrencyInputPanel\n                value={formattedAmounts[Field.OUTPUT]}\n                onUserInput={handleTypeOutput}\n                label={independentField === Field.INPUT && !showWrap ? <Trans>To (at least)</Trans> : <Trans>To</Trans>}\n                showMaxButton={false}\n                hideBalance={false}\n                fiatValue={fiatValueOutput ?? undefined}\n                priceImpact={priceImpact}\n                currency={currencies[Field.OUTPUT]}\n                onCurrencySelect={handleOutputSelect}\n                otherCurrency={currencies[Field.INPUT]}\n                showCommonBases={true}\n                id=\"swap-currency-output\"\n                loading={independentField === Field.INPUT && routeIsSyncing}\n              />\n            </div>\n\n            {recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDown size=\"16\" color={theme.text2} />\n                  </ArrowWrapper>\n                  <LinkStyledButton id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    <Trans>- Remove recipient</Trans>\n                  </LinkStyledButton>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n            {!showWrap && userHasSpecifiedInputOutput && (trade || routeIsLoading || routeIsSyncing) && (\n              <SwapDetailsDropdown\n                trade={trade}\n                syncing={routeIsSyncing}\n                loading={routeIsLoading}\n                showInverted={showInverted}\n                setShowInverted={setShowInverted}\n                allowedSlippage={allowedSlippage}\n              />\n            )}\n            <div>\n              {swapIsUnsupported ? (\n                <ButtonPrimary disabled={true}>\n                  <ThemedText.Main mb=\"4px\">\n                    <Trans>Unsupported Asset</Trans>\n                  </ThemedText.Main>\n                </ButtonPrimary>\n              ) : !account ? (\n                <ButtonLight onClick={toggleWalletModal}>\n                  <Trans>Connect Wallet</Trans>\n                </ButtonLight>\n              ) : showWrap ? (\n                <ButtonPrimary disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                  {wrapInputError ? (\n                    <WrapErrorText wrapInputError={wrapInputError} />\n                  ) : wrapType === WrapType.WRAP ? (\n                    <Trans>Wrap</Trans>\n                  ) : wrapType === WrapType.UNWRAP ? (\n                    <Trans>Unwrap</Trans>\n                  ) : null}\n                </ButtonPrimary>\n              ) : routeNotFound && userHasSpecifiedInputOutput && !routeIsLoading && !routeIsSyncing ? (\n                <GreyCard style={{ textAlign: 'center' }}>\n                  <ThemedText.Main mb=\"4px\">\n                    <Trans>Insufficient liquidity for this trade.</Trans>\n                  </ThemedText.Main>\n                </GreyCard>\n              ) : showApproveFlow ? (\n                <AutoRow style={{ flexWrap: 'nowrap', width: '100%' }}>\n                  <AutoColumn style={{ width: '100%' }} gap=\"12px\">\n                    <ButtonConfirmed\n                      onClick={handleApprove}\n                      disabled={\n                        approvalState !== ApprovalState.NOT_APPROVED ||\n                        approvalSubmitted ||\n                        signatureState === UseERC20PermitState.SIGNED\n                      }\n                      width=\"100%\"\n                      altDisabledStyle={approvalState === ApprovalState.PENDING} // show solid button while waiting\n                      confirmed={\n                        approvalState === ApprovalState.APPROVED || signatureState === UseERC20PermitState.SIGNED\n                      }\n                    >\n                      <AutoRow justify=\"space-between\" style={{ flexWrap: 'nowrap' }}>\n                        <span style={{ display: 'flex', alignItems: 'center' }}>\n                          <CurrencyLogo\n                            currency={currencies[Field.INPUT]}\n                            size={'20px'}\n                            style={{ marginRight: '8px', flexShrink: 0 }}\n                          />\n                          {/* we need to shorten this string on mobile */}\n                          {approvalState === ApprovalState.APPROVED || signatureState === UseERC20PermitState.SIGNED ? (\n                            <Trans>You can now trade {currencies[Field.INPUT]?.symbol}</Trans>\n                          ) : (\n                            <Trans>Allow the Uniswap Protocol to use your {currencies[Field.INPUT]?.symbol}</Trans>\n                          )}\n                        </span>\n                        {approvalState === ApprovalState.PENDING ? (\n                          <Loader stroke=\"white\" />\n                        ) : (approvalSubmitted && approvalState === ApprovalState.APPROVED) ||\n                          signatureState === UseERC20PermitState.SIGNED ? (\n                          <CheckCircle size=\"20\" color={theme.green1} />\n                        ) : (\n                          <MouseoverTooltip\n                            text={\n                              <Trans>\n                                You must give the Uniswap smart contracts permission to use your{' '}\n                                {currencies[Field.INPUT]?.symbol}. You only have to do this once per token.\n                              </Trans>\n                            }\n                          >\n                            <HelpCircle size=\"20\" color={'white'} style={{ marginLeft: '8px' }} />\n                          </MouseoverTooltip>\n                        )}\n                      </AutoRow>\n                    </ButtonConfirmed>\n                    <ButtonError\n                      onClick={() => {\n                        if (isExpertMode) {\n                          handleSwap()\n                        } else {\n                          setSwapState({\n                            tradeToConfirm: trade,\n                            attemptingTxn: false,\n                            swapErrorMessage: undefined,\n                            showConfirm: true,\n                            txHash: undefined,\n                          })\n                        }\n                      }}\n                      width=\"100%\"\n                      id=\"swap-button\"\n                      disabled={\n                        !isValid ||\n                        routeIsSyncing ||\n                        routeIsLoading ||\n                        (approvalState !== ApprovalState.APPROVED && signatureState !== UseERC20PermitState.SIGNED) ||\n                        priceImpactTooHigh\n                      }\n                      error={isValid && priceImpactSeverity > 2}\n                    >\n                      <Text fontSize={16} fontWeight={500}>\n                        {priceImpactTooHigh ? (\n                          <Trans>High Price Impact</Trans>\n                        ) : trade && priceImpactSeverity > 2 ? (\n                          <Trans>Swap Anyway</Trans>\n                        ) : (\n                          <Trans>Swap</Trans>\n                        )}\n                      </Text>\n                    </ButtonError>\n                  </AutoColumn>\n                </AutoRow>\n              ) : (\n                <ButtonError\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        showConfirm: true,\n                        txHash: undefined,\n                      })\n                    }\n                  }}\n                  id=\"swap-button\"\n                  disabled={!isValid || routeIsSyncing || routeIsLoading || priceImpactTooHigh || !!swapCallbackError}\n                  error={isValid && priceImpactSeverity > 2 && !swapCallbackError}\n                >\n                  <Text fontSize={20} fontWeight={500}>\n                    {swapInputError ? (\n                      swapInputError\n                    ) : routeIsSyncing || routeIsLoading ? (\n                      <Trans>Swap</Trans>\n                    ) : priceImpactSeverity > 2 ? (\n                      <Trans>Swap Anyway</Trans>\n                    ) : priceImpactTooHigh ? (\n                      <Trans>Price Impact Too High</Trans>\n                    ) : (\n                      <Trans>Swap</Trans>\n                    )}\n                  </Text>\n                </ButtonError>\n              )}\n              {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n            </div>\n          </AutoColumn>\n        </Wrapper>\n      </AppBody>\n      <AlertWrapper>\n        <NetworkAlert />\n      </AlertWrapper>\n      <SwitchLocaleLink />\n      {!swapIsUnsupported ? null : (\n        <UnsupportedCurrencyFooter\n          show={swapIsUnsupported}\n          currencies={[currencies[Field.INPUT], currencies[Field.OUTPUT]]}\n        />\n      )}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}