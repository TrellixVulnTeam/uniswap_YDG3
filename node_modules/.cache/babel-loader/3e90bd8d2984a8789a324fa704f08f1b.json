{"ast":null,"code":"/**\n * Promise-based replacement for setTimeout / clearTimeout.\n */\nconst {\n  promiseFinally,\n  toError\n} = require('./utils');\n\nmodule.exports = class Timeout {\n  static set(delay, rejectReason) {\n    return new Timeout().set(delay, rejectReason);\n  }\n\n  static wrap(promise, delay, rejectReason) {\n    return new Timeout().wrap(promise, delay, rejectReason);\n  }\n\n  constructor() {\n    this._id = null;\n    this._delay = null;\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  get delay() {\n    return this._delay;\n  }\n\n  set(delay, rejectReason = '') {\n    return new Promise((resolve, reject) => {\n      this.clear();\n      const fn = rejectReason ? () => reject(toError(rejectReason)) : resolve;\n      this._id = setTimeout(fn, delay);\n      this._delay = delay;\n    });\n  }\n\n  wrap(promise, delay, rejectReason = '') {\n    const wrappedPromise = promiseFinally(promise, () => this.clear());\n    const timer = this.set(delay, rejectReason);\n    return Promise.race([wrappedPromise, timer]);\n  }\n\n  clear() {\n    if (this._id) {\n      clearTimeout(this._id);\n    }\n  }\n\n};","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/node_modules/await-timeout/src/index.js"],"names":["promiseFinally","toError","require","module","exports","Timeout","set","delay","rejectReason","wrap","promise","constructor","_id","_delay","id","Promise","resolve","reject","clear","fn","setTimeout","wrappedPromise","timer","race","clearTimeout"],"mappings":"AAAA;AACA;AACA;AAEA,MAAM;AAACA,EAAAA,cAAD;AAAiBC,EAAAA;AAAjB,IAA4BC,OAAO,CAAC,SAAD,CAAzC;;AAEAC,MAAM,CAACC,OAAP,GAAiB,MAAMC,OAAN,CAAc;AACnB,SAAHC,GAAG,CAACC,KAAD,EAAQC,YAAR,EAAsB;AAC9B,WAAO,IAAIH,OAAJ,GAAcC,GAAd,CAAkBC,KAAlB,EAAyBC,YAAzB,CAAP;AACD;;AAEU,SAAJC,IAAI,CAACC,OAAD,EAAUH,KAAV,EAAiBC,YAAjB,EAA+B;AACxC,WAAO,IAAIH,OAAJ,GAAcI,IAAd,CAAmBC,OAAnB,EAA4BH,KAA5B,EAAmCC,YAAnC,CAAP;AACD;;AAEDG,EAAAA,WAAW,GAAG;AACZ,SAAKC,GAAL,GAAW,IAAX;AACA,SAAKC,MAAL,GAAc,IAAd;AACD;;AAEK,MAAFC,EAAE,GAAG;AACP,WAAO,KAAKF,GAAZ;AACD;;AAEQ,MAALL,KAAK,GAAG;AACV,WAAO,KAAKM,MAAZ;AACD;;AAEDP,EAAAA,GAAG,CAACC,KAAD,EAAQC,YAAY,GAAG,EAAvB,EAA2B;AAC5B,WAAO,IAAIO,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,WAAKC,KAAL;AACA,YAAMC,EAAE,GAAGX,YAAY,GAAG,MAAMS,MAAM,CAAChB,OAAO,CAACO,YAAD,CAAR,CAAf,GAAyCQ,OAAhE;AACA,WAAKJ,GAAL,GAAWQ,UAAU,CAACD,EAAD,EAAKZ,KAAL,CAArB;AACA,WAAKM,MAAL,GAAcN,KAAd;AACD,KALM,CAAP;AAMD;;AAEDE,EAAAA,IAAI,CAACC,OAAD,EAAUH,KAAV,EAAiBC,YAAY,GAAG,EAAhC,EAAoC;AACtC,UAAMa,cAAc,GAAGrB,cAAc,CAACU,OAAD,EAAU,MAAM,KAAKQ,KAAL,EAAhB,CAArC;AACA,UAAMI,KAAK,GAAG,KAAKhB,GAAL,CAASC,KAAT,EAAgBC,YAAhB,CAAd;AACA,WAAOO,OAAO,CAACQ,IAAR,CAAa,CAClBF,cADkB,EAElBC,KAFkB,CAAb,CAAP;AAID;;AAEDJ,EAAAA,KAAK,GAAG;AACN,QAAI,KAAKN,GAAT,EAAc;AACZY,MAAAA,YAAY,CAAC,KAAKZ,GAAN,CAAZ;AACD;AACF;;AA5C4B,CAA/B","sourcesContent":["/**\n * Promise-based replacement for setTimeout / clearTimeout.\n */\n\nconst {promiseFinally, toError} = require('./utils');\n\nmodule.exports = class Timeout {\n  static set(delay, rejectReason) {\n    return new Timeout().set(delay, rejectReason);\n  }\n\n  static wrap(promise, delay, rejectReason) {\n    return new Timeout().wrap(promise, delay, rejectReason);\n  }\n\n  constructor() {\n    this._id = null;\n    this._delay = null;\n  }\n\n  get id() {\n    return this._id;\n  }\n\n  get delay() {\n    return this._delay;\n  }\n\n  set(delay, rejectReason = '') {\n    return new Promise((resolve, reject) => {\n      this.clear();\n      const fn = rejectReason ? () => reject(toError(rejectReason)) : resolve;\n      this._id = setTimeout(fn, delay);\n      this._delay = delay;\n    });\n  }\n\n  wrap(promise, delay, rejectReason = '') {\n    const wrappedPromise = promiseFinally(promise, () => this.clear());\n    const timer = this.set(delay, rejectReason);\n    return Promise.race([\n      wrappedPromise,\n      timer\n    ]);\n  }\n\n  clear() {\n    if (this._id) {\n      clearTimeout(this._id);\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"script"}