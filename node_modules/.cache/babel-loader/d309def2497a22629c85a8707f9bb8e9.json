{"ast":null,"code":"import { ThemeContext as _ThemeContext } from \"styled-components\";\nimport _styled from \"styled-components\";\n\nvar _jsxFileName = \"/Users/safahi/Downloads/interface-4.30.1/src/components/Settings/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Trans } from \"@lingui/react\";\nimport { i18n } from \"@lingui/core\";\nimport { useActiveWeb3React } from 'hooks/web3';\nimport { useContext, useRef, useState } from 'react';\nimport { Settings, X } from 'react-feather';\nimport ReactGA from 'react-ga';\nimport { Text } from 'rebass';\nimport { AUTO_ROUTER_SUPPORTED_CHAINS } from 'state/routing/clientSideSmartOrderRouter/constants';\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside';\nimport { useModalOpen, useToggleSettingsMenu } from '../../state/application/hooks';\nimport { ApplicationModal } from '../../state/application/reducer';\nimport { useClientSideRouter, useExpertModeManager } from '../../state/user/hooks';\nimport { ThemedText } from '../../theme';\nimport { ButtonError } from '../Button';\nimport { AutoColumn } from '../Column';\nimport Modal from '../Modal';\nimport QuestionHelper from '../QuestionHelper';\nimport { RowBetween, RowFixed } from '../Row';\nimport Toggle from '../Toggle';\nimport TransactionSettings from '../TransactionSettings';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StyledMenuIcon = _styled(Settings).withConfig({\n  displayName: \"Settings__StyledMenuIcon\",\n  componentId: \"sc-1ndknrv-0\"\n})([\"height:20px;width:20px;> *{stroke:\", \";}:hover{opacity:0.7;}\"], ({\n  theme\n}) => theme.text1);\n\nconst StyledCloseIcon = _styled(X).withConfig({\n  displayName: \"Settings__StyledCloseIcon\",\n  componentId: \"sc-1ndknrv-1\"\n})([\"height:20px;width:20px;:hover{cursor:pointer;}> *{stroke:\", \";}\"], ({\n  theme\n}) => theme.text1);\n\nconst StyledMenuButton = _styled.button.withConfig({\n  displayName: \"Settings__StyledMenuButton\",\n  componentId: \"sc-1ndknrv-2\"\n})([\"position:relative;width:100%;height:100%;border:none;background-color:transparent;margin:0;padding:0;border-radius:0.5rem;height:20px;:hover,:focus{cursor:pointer;outline:none;}\"]);\n\nconst EmojiWrapper = _styled.div.withConfig({\n  displayName: \"Settings__EmojiWrapper\",\n  componentId: \"sc-1ndknrv-3\"\n})([\"position:absolute;bottom:-6px;right:0px;font-size:14px;\"]);\n\nconst StyledMenu = _styled.div.withConfig({\n  displayName: \"Settings__StyledMenu\",\n  componentId: \"sc-1ndknrv-4\"\n})([\"margin-left:0.5rem;display:flex;justify-content:center;align-items:center;position:relative;border:none;text-align:left;\"]);\n\nconst MenuFlyout = _styled.span.withConfig({\n  displayName: \"Settings__MenuFlyout\",\n  componentId: \"sc-1ndknrv-5\"\n})([\"min-width:20.125rem;background-color:\", \";border:1px solid \", \";box-shadow:0px 0px 1px rgba(0,0,0,0.01),0px 4px 8px rgba(0,0,0,0.04),0px 16px 24px rgba(0,0,0,0.04),0px 24px 32px rgba(0,0,0,0.01);border-radius:12px;display:flex;flex-direction:column;font-size:1rem;position:absolute;top:2rem;right:0rem;z-index:100;\", \";user-select:none;\"], ({\n  theme\n}) => theme.bg2, ({\n  theme\n}) => theme.bg3, ({\n  theme\n}) => theme.mediaWidth.upToMedium`\n    min-width: 18.125rem;\n  `);\n\nconst Break = _styled.div.withConfig({\n  displayName: \"Settings__Break\",\n  componentId: \"sc-1ndknrv-6\"\n})([\"width:100%;height:1px;background-color:\", \";\"], ({\n  theme\n}) => theme.bg3);\n\nconst ModalContentWrapper = _styled.div.withConfig({\n  displayName: \"Settings__ModalContentWrapper\",\n  componentId: \"sc-1ndknrv-7\"\n})([\"display:flex;align-items:center;justify-content:center;padding:2rem 0;background-color:\", \";border-radius:20px;\"], ({\n  theme\n}) => theme.bg2);\n\nexport default function SettingsTab({\n  placeholderSlippage\n}) {\n  _s();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const node = useRef();\n  const open = useModalOpen(ApplicationModal.SETTINGS);\n  const toggle = useToggleSettingsMenu();\n  const theme = useContext(_ThemeContext);\n  const [expertMode, toggleExpertMode] = useExpertModeManager();\n  const [clientSideRouter, setClientSideRouter] = useClientSideRouter(); // show confirmation view before turning on\n\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  useOnClickOutside(node, open ? toggle : undefined);\n  return (\n    /*#__PURE__*/\n    // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/30451\n    _jsxDEV(StyledMenu, {\n      ref: node,\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: showConfirmation,\n        onDismiss: () => setShowConfirmation(false),\n        maxHeight: 100,\n        children: /*#__PURE__*/_jsxDEV(ModalContentWrapper, {\n          children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n            gap: \"lg\",\n            children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n              style: {\n                padding: '0 2rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                fontWeight: 500,\n                fontSize: 20,\n                children: /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"Are you sure?\"\n                }, void 0, false, void 0, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(StyledCloseIcon, {\n                onClick: () => setShowConfirmation(false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Break, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n              gap: \"lg\",\n              style: {\n                padding: '0 2rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                fontWeight: 500,\n                fontSize: 20,\n                children: /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"Expert mode turns off the confirm transaction prompt and allows high slippage trades that often result in bad rates and lost funds.\"\n                }, void 0, false, void 0, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                fontWeight: 600,\n                fontSize: 20,\n                children: /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"ONLY USE THIS MODE IF YOU KNOW WHAT YOU ARE DOING.\"\n                }, void 0, false, void 0, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(ButtonError, {\n                error: true,\n                padding: '12px',\n                onClick: () => {\n                  const confirmWord =\n                  /*i18n*/\n                  i18n._(\"confirm\");\n\n                  if (window.prompt(\n                  /*i18n*/\n                  i18n._(\"Please type the word \\\"{confirmWord}\\\" to enable expert mode.\", {\n                    confirmWord: confirmWord\n                  })) === confirmWord) {\n                    toggleExpertMode();\n                    setShowConfirmation(false);\n                  }\n                },\n                children: /*#__PURE__*/_jsxDEV(Text, {\n                  fontSize: 20,\n                  fontWeight: 500,\n                  id: \"confirm-expert-mode\",\n                  children: /*#__PURE__*/_jsxDEV(Trans, {\n                    id: \"Turn On Expert Mode\"\n                  }, void 0, false, void 0, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(StyledMenuButton, {\n        onClick: toggle,\n        id: \"open-settings-dialog-button\",\n        \"aria-label\":\n        /*i18n*/\n        i18n._(\"Transaction Settings\"),\n        children: [/*#__PURE__*/_jsxDEV(StyledMenuIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 9\n        }, this), expertMode ? /*#__PURE__*/_jsxDEV(EmojiWrapper, {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"img\",\n            \"aria-label\": \"wizard-icon\",\n            children: \"\\uD83E\\uDDD9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 7\n      }, this), open && /*#__PURE__*/_jsxDEV(MenuFlyout, {\n        children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n          gap: \"md\",\n          style: {\n            padding: '1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontWeight: 600,\n            fontSize: 14,\n            children: /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"Transaction Settings\"\n            }, void 0, false, void 0, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TransactionSettings, {\n            placeholderSlippage: placeholderSlippage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            fontWeight: 600,\n            fontSize: 14,\n            children: /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"Interface Settings\"\n            }, void 0, false, void 0, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), chainId && AUTO_ROUTER_SUPPORTED_CHAINS.includes(chainId) && /*#__PURE__*/_jsxDEV(RowBetween, {\n            children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n              children: [/*#__PURE__*/_jsxDEV(ThemedText.Black, {\n                fontWeight: 400,\n                fontSize: 14,\n                color: theme.text2,\n                children: /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"Auto Router API\"\n                }, void 0, false, void 0, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n                text: /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"Use the Uniswap Labs API to get faster quotes.\"\n                }, void 0, false, void 0, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Toggle, {\n              id: \"toggle-optimized-router-button\",\n              isActive: !clientSideRouter,\n              toggle: () => {\n                ReactGA.event({\n                  category: 'Routing',\n                  action: clientSideRouter ? 'enable routing API' : 'disable routing API'\n                });\n                setClientSideRouter(!clientSideRouter);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n            children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n              children: [/*#__PURE__*/_jsxDEV(ThemedText.Black, {\n                fontWeight: 400,\n                fontSize: 14,\n                color: theme.text2,\n                children: /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"Expert Mode\"\n                }, void 0, false, void 0, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(QuestionHelper, {\n                text: /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"Allow high price impact trades and skip the confirm screen. Use at your own risk.\"\n                }, void 0, false, void 0, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Toggle, {\n              id: \"toggle-expert-mode-button\",\n              isActive: expertMode,\n              toggle: expertMode ? () => {\n                toggleExpertMode();\n                setShowConfirmation(false);\n              } : () => {\n                toggle();\n                setShowConfirmation(true);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(SettingsTab, \"cYW23UjeUgUj8Hj865376zTRE/A=\", false, function () {\n  return [useActiveWeb3React, useModalOpen, useToggleSettingsMenu, useExpertModeManager, useClientSideRouter, useOnClickOutside];\n});\n\n_c = SettingsTab;\n\nvar _c;\n\n$RefreshReg$(_c, \"SettingsTab\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/components/Settings/index.tsx"],"names":["useActiveWeb3React","useContext","useRef","useState","Settings","X","ReactGA","Text","AUTO_ROUTER_SUPPORTED_CHAINS","useOnClickOutside","useModalOpen","useToggleSettingsMenu","ApplicationModal","useClientSideRouter","useExpertModeManager","ThemedText","ButtonError","AutoColumn","Modal","QuestionHelper","RowBetween","RowFixed","Toggle","TransactionSettings","StyledMenuIcon","styled","theme","text1","StyledCloseIcon","StyledMenuButton","button","EmojiWrapper","div","StyledMenu","MenuFlyout","span","bg2","bg3","mediaWidth","upToMedium","Break","ModalContentWrapper","SettingsTab","placeholderSlippage","chainId","node","open","SETTINGS","toggle","ThemeContext","expertMode","toggleExpertMode","clientSideRouter","setClientSideRouter","showConfirmation","setShowConfirmation","undefined","padding","confirmWord","window","prompt","includes","text2","event","category","action"],"mappings":"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","sourcesContent":["// eslint-disable-next-line no-restricted-imports\nimport { t, Trans } from '@lingui/macro'\nimport { Percent } from '@uniswap/sdk-core'\nimport { useActiveWeb3React } from 'hooks/web3'\nimport { useContext, useRef, useState } from 'react'\nimport { Settings, X } from 'react-feather'\nimport ReactGA from 'react-ga'\nimport { Text } from 'rebass'\nimport { AUTO_ROUTER_SUPPORTED_CHAINS } from 'state/routing/clientSideSmartOrderRouter/constants'\nimport styled, { ThemeContext } from 'styled-components/macro'\n\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside'\nimport { useModalOpen, useToggleSettingsMenu } from '../../state/application/hooks'\nimport { ApplicationModal } from '../../state/application/reducer'\nimport { useClientSideRouter, useExpertModeManager } from '../../state/user/hooks'\nimport { ThemedText } from '../../theme'\nimport { ButtonError } from '../Button'\nimport { AutoColumn } from '../Column'\nimport Modal from '../Modal'\nimport QuestionHelper from '../QuestionHelper'\nimport { RowBetween, RowFixed } from '../Row'\nimport Toggle from '../Toggle'\nimport TransactionSettings from '../TransactionSettings'\n\nconst StyledMenuIcon = styled(Settings)`\n  height: 20px;\n  width: 20px;\n\n  > * {\n    stroke: ${({ theme }) => theme.text1};\n  }\n\n  :hover {\n    opacity: 0.7;\n  }\n`\n\nconst StyledCloseIcon = styled(X)`\n  height: 20px;\n  width: 20px;\n  :hover {\n    cursor: pointer;\n  }\n\n  > * {\n    stroke: ${({ theme }) => theme.text1};\n  }\n`\n\nconst StyledMenuButton = styled.button`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  border: none;\n  background-color: transparent;\n  margin: 0;\n  padding: 0;\n  border-radius: 0.5rem;\n  height: 20px;\n\n  :hover,\n  :focus {\n    cursor: pointer;\n    outline: none;\n  }\n`\nconst EmojiWrapper = styled.div`\n  position: absolute;\n  bottom: -6px;\n  right: 0px;\n  font-size: 14px;\n`\n\nconst StyledMenu = styled.div`\n  margin-left: 0.5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  border: none;\n  text-align: left;\n`\n\nconst MenuFlyout = styled.span`\n  min-width: 20.125rem;\n  background-color: ${({ theme }) => theme.bg2};\n  border: 1px solid ${({ theme }) => theme.bg3};\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\n    0px 24px 32px rgba(0, 0, 0, 0.01);\n  border-radius: 12px;\n  display: flex;\n  flex-direction: column;\n  font-size: 1rem;\n  position: absolute;\n  top: 2rem;\n  right: 0rem;\n  z-index: 100;\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    min-width: 18.125rem;\n  `};\n\n  user-select: none;\n`\n\nconst Break = styled.div`\n  width: 100%;\n  height: 1px;\n  background-color: ${({ theme }) => theme.bg3};\n`\n\nconst ModalContentWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 2rem 0;\n  background-color: ${({ theme }) => theme.bg2};\n  border-radius: 20px;\n`\n\nexport default function SettingsTab({ placeholderSlippage }: { placeholderSlippage: Percent }) {\n  const { chainId } = useActiveWeb3React()\n\n  const node = useRef<HTMLDivElement>()\n  const open = useModalOpen(ApplicationModal.SETTINGS)\n  const toggle = useToggleSettingsMenu()\n\n  const theme = useContext(ThemeContext)\n\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\n\n  const [clientSideRouter, setClientSideRouter] = useClientSideRouter()\n\n  // show confirmation view before turning on\n  const [showConfirmation, setShowConfirmation] = useState(false)\n\n  useOnClickOutside(node, open ? toggle : undefined)\n\n  return (\n    // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/30451\n    <StyledMenu ref={node as any}>\n      <Modal isOpen={showConfirmation} onDismiss={() => setShowConfirmation(false)} maxHeight={100}>\n        <ModalContentWrapper>\n          <AutoColumn gap=\"lg\">\n            <RowBetween style={{ padding: '0 2rem' }}>\n              <div />\n              <Text fontWeight={500} fontSize={20}>\n                <Trans>Are you sure?</Trans>\n              </Text>\n              <StyledCloseIcon onClick={() => setShowConfirmation(false)} />\n            </RowBetween>\n            <Break />\n            <AutoColumn gap=\"lg\" style={{ padding: '0 2rem' }}>\n              <Text fontWeight={500} fontSize={20}>\n                <Trans>\n                  Expert mode turns off the confirm transaction prompt and allows high slippage trades that often result\n                  in bad rates and lost funds.\n                </Trans>\n              </Text>\n              <Text fontWeight={600} fontSize={20}>\n                <Trans>ONLY USE THIS MODE IF YOU KNOW WHAT YOU ARE DOING.</Trans>\n              </Text>\n              <ButtonError\n                error={true}\n                padding={'12px'}\n                onClick={() => {\n                  const confirmWord = t`confirm`\n                  if (window.prompt(t`Please type the word \"${confirmWord}\" to enable expert mode.`) === confirmWord) {\n                    toggleExpertMode()\n                    setShowConfirmation(false)\n                  }\n                }}\n              >\n                <Text fontSize={20} fontWeight={500} id=\"confirm-expert-mode\">\n                  <Trans>Turn On Expert Mode</Trans>\n                </Text>\n              </ButtonError>\n            </AutoColumn>\n          </AutoColumn>\n        </ModalContentWrapper>\n      </Modal>\n      <StyledMenuButton onClick={toggle} id=\"open-settings-dialog-button\" aria-label={t`Transaction Settings`}>\n        <StyledMenuIcon />\n        {expertMode ? (\n          <EmojiWrapper>\n            <span role=\"img\" aria-label=\"wizard-icon\">\n              🧙\n            </span>\n          </EmojiWrapper>\n        ) : null}\n      </StyledMenuButton>\n      {open && (\n        <MenuFlyout>\n          <AutoColumn gap=\"md\" style={{ padding: '1rem' }}>\n            <Text fontWeight={600} fontSize={14}>\n              <Trans>Transaction Settings</Trans>\n            </Text>\n            <TransactionSettings placeholderSlippage={placeholderSlippage} />\n            <Text fontWeight={600} fontSize={14}>\n              <Trans>Interface Settings</Trans>\n            </Text>\n            {chainId && AUTO_ROUTER_SUPPORTED_CHAINS.includes(chainId) && (\n              <RowBetween>\n                <RowFixed>\n                  <ThemedText.Black fontWeight={400} fontSize={14} color={theme.text2}>\n                    <Trans>Auto Router API</Trans>\n                  </ThemedText.Black>\n                  <QuestionHelper text={<Trans>Use the Uniswap Labs API to get faster quotes.</Trans>} />\n                </RowFixed>\n                <Toggle\n                  id=\"toggle-optimized-router-button\"\n                  isActive={!clientSideRouter}\n                  toggle={() => {\n                    ReactGA.event({\n                      category: 'Routing',\n                      action: clientSideRouter ? 'enable routing API' : 'disable routing API',\n                    })\n                    setClientSideRouter(!clientSideRouter)\n                  }}\n                />\n              </RowBetween>\n            )}\n            <RowBetween>\n              <RowFixed>\n                <ThemedText.Black fontWeight={400} fontSize={14} color={theme.text2}>\n                  <Trans>Expert Mode</Trans>\n                </ThemedText.Black>\n                <QuestionHelper\n                  text={\n                    <Trans>Allow high price impact trades and skip the confirm screen. Use at your own risk.</Trans>\n                  }\n                />\n              </RowFixed>\n              <Toggle\n                id=\"toggle-expert-mode-button\"\n                isActive={expertMode}\n                toggle={\n                  expertMode\n                    ? () => {\n                        toggleExpertMode()\n                        setShowConfirmation(false)\n                      }\n                    : () => {\n                        toggle()\n                        setShowConfirmation(true)\n                      }\n                }\n              />\n            </RowBetween>\n          </AutoColumn>\n        </MenuFlyout>\n      )}\n    </StyledMenu>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}