{"ast":null,"code":"import _styled from \"styled-components\";\n\nvar _jsxFileName = \"/Users/safahi/Downloads/interface-4.30.1/src/components/LiquidityChartRangeInput/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Trans } from \"@lingui/react\";\nimport { FeeAmount } from '@uniswap/v3-sdk';\nimport { AutoColumn, ColumnCenter } from 'components/Column';\nimport Loader from 'components/Loader';\nimport { format } from 'd3';\nimport { useColor } from 'hooks/useColor';\nimport useTheme from 'hooks/useTheme';\nimport { saturate } from 'polished';\nimport React, { useCallback, useMemo } from 'react';\nimport { BarChart2, CloudOff, Inbox } from 'react-feather';\nimport ReactGA from 'react-ga';\nimport { batch } from 'react-redux';\nimport { Bound } from 'state/mint/v3/actions';\nimport { ThemedText } from '../../theme';\nimport { Chart } from './Chart';\nimport { useDensityChartData } from './hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ZOOM_LEVELS = {\n  [FeeAmount.LOWEST]: {\n    initialMin: 0.999,\n    initialMax: 1.001,\n    min: 0.00001,\n    max: 1.5\n  },\n  [FeeAmount.LOW]: {\n    initialMin: 0.999,\n    initialMax: 1.001,\n    min: 0.00001,\n    max: 1.5\n  },\n  [FeeAmount.MEDIUM]: {\n    initialMin: 0.5,\n    initialMax: 2,\n    min: 0.00001,\n    max: 20\n  },\n  [FeeAmount.HIGH]: {\n    initialMin: 0.5,\n    initialMax: 2,\n    min: 0.00001,\n    max: 20\n  }\n};\n\nconst ChartWrapper = _styled.div.withConfig({\n  displayName: \"LiquidityChartRangeInput__ChartWrapper\",\n  componentId: \"sc-acskj6-0\"\n})([\"position:relative;justify-content:center;align-content:center;\"]);\n\nfunction InfoBox({\n  message,\n  icon\n}) {\n  return /*#__PURE__*/_jsxDEV(ColumnCenter, {\n    style: {\n      height: '100%',\n      justifyContent: 'center'\n    },\n    children: [icon, message && /*#__PURE__*/_jsxDEV(ThemedText.MediumHeader, {\n      padding: 10,\n      marginTop: \"20px\",\n      textAlign: \"center\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_c = InfoBox;\nexport default function LiquidityChartRangeInput({\n  currencyA,\n  currencyB,\n  feeAmount,\n  ticksAtLimit,\n  price,\n  priceLower,\n  priceUpper,\n  onLeftRangeInput,\n  onRightRangeInput,\n  interactive\n}) {\n  _s();\n\n  var _saturate, _saturate2;\n\n  const theme = useTheme();\n  const tokenAColor = useColor(currencyA === null || currencyA === void 0 ? void 0 : currencyA.wrapped);\n  const tokenBColor = useColor(currencyB === null || currencyB === void 0 ? void 0 : currencyB.wrapped);\n  const isSorted = currencyA && currencyB && (currencyA === null || currencyA === void 0 ? void 0 : currencyA.wrapped.sortsBefore(currencyB === null || currencyB === void 0 ? void 0 : currencyB.wrapped));\n  const {\n    isLoading,\n    isUninitialized,\n    isError,\n    error,\n    formattedData\n  } = useDensityChartData({\n    currencyA,\n    currencyB,\n    feeAmount\n  });\n  const onBrushDomainChangeEnded = useCallback((domain, mode) => {\n    let leftRangeValue = Number(domain[0]);\n    const rightRangeValue = Number(domain[1]);\n\n    if (leftRangeValue <= 0) {\n      leftRangeValue = 1 / 10 ** 6;\n    }\n\n    batch(() => {\n      // simulate user input for auto-formatting and other validations\n      if ((!ticksAtLimit[isSorted ? Bound.LOWER : Bound.UPPER] || mode === 'handle' || mode === 'reset') && leftRangeValue > 0) {\n        onLeftRangeInput(leftRangeValue.toFixed(6));\n      }\n\n      if ((!ticksAtLimit[isSorted ? Bound.UPPER : Bound.LOWER] || mode === 'reset') && rightRangeValue > 0) {\n        // todo: remove this check. Upper bound for large numbers\n        // sometimes fails to parse to tick.\n        if (rightRangeValue < 1e35) {\n          onRightRangeInput(rightRangeValue.toFixed(6));\n        }\n      }\n    });\n  }, [isSorted, onLeftRangeInput, onRightRangeInput, ticksAtLimit]);\n  interactive = interactive && Boolean(formattedData === null || formattedData === void 0 ? void 0 : formattedData.length);\n  const brushDomain = useMemo(() => {\n    const leftPrice = isSorted ? priceLower : priceUpper === null || priceUpper === void 0 ? void 0 : priceUpper.invert();\n    const rightPrice = isSorted ? priceUpper : priceLower === null || priceLower === void 0 ? void 0 : priceLower.invert();\n    return leftPrice && rightPrice ? [parseFloat(leftPrice === null || leftPrice === void 0 ? void 0 : leftPrice.toSignificant(6)), parseFloat(rightPrice === null || rightPrice === void 0 ? void 0 : rightPrice.toSignificant(6))] : undefined;\n  }, [isSorted, priceLower, priceUpper]);\n  const brushLabelValue = useCallback((d, x) => {\n    if (!price) return '';\n    if (d === 'w' && ticksAtLimit[isSorted ? Bound.LOWER : Bound.UPPER]) return '0';\n    if (d === 'e' && ticksAtLimit[isSorted ? Bound.UPPER : Bound.LOWER]) return 'âˆž';\n    const percent = (x < price ? -1 : 1) * ((Math.max(x, price) - Math.min(x, price)) / price) * 100;\n    return price ? `${format(Math.abs(percent) > 1 ? '.2~s' : '.2~f')(percent)}%` : '';\n  }, [isSorted, price, ticksAtLimit]);\n\n  if (isError) {\n    ReactGA.exception({ ...error,\n      category: 'Liquidity',\n      fatal: false\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(AutoColumn, {\n    gap: \"md\",\n    style: {\n      minHeight: '200px'\n    },\n    children: isUninitialized ? /*#__PURE__*/_jsxDEV(InfoBox, {\n      message: /*#__PURE__*/_jsxDEV(Trans, {\n        id: \"Your position will appear here.\"\n      }, void 0, false, void 0, this),\n      icon: /*#__PURE__*/_jsxDEV(Inbox, {\n        size: 56,\n        stroke: theme.text1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this) : isLoading ? /*#__PURE__*/_jsxDEV(InfoBox, {\n      icon: /*#__PURE__*/_jsxDEV(Loader, {\n        size: \"40px\",\n        stroke: theme.text4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 24\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this) : isError ? /*#__PURE__*/_jsxDEV(InfoBox, {\n      message: /*#__PURE__*/_jsxDEV(Trans, {\n        id: \"Liquidity data not available.\"\n      }, void 0, false, void 0, this),\n      icon: /*#__PURE__*/_jsxDEV(CloudOff, {\n        size: 56,\n        stroke: theme.text4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this) : !formattedData || formattedData === [] || !price ? /*#__PURE__*/_jsxDEV(InfoBox, {\n      message: /*#__PURE__*/_jsxDEV(Trans, {\n        id: \"There is no liquidity data.\"\n      }, void 0, false, void 0, this),\n      icon: /*#__PURE__*/_jsxDEV(BarChart2, {\n        size: 56,\n        stroke: theme.text4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ChartWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        data: {\n          series: formattedData,\n          current: price\n        },\n        dimensions: {\n          width: 400,\n          height: 200\n        },\n        margins: {\n          top: 10,\n          right: 2,\n          bottom: 20,\n          left: 0\n        },\n        styles: {\n          area: {\n            selection: theme.blue1\n          },\n          brush: {\n            handle: {\n              west: (_saturate = saturate(0.1, tokenAColor)) !== null && _saturate !== void 0 ? _saturate : theme.red1,\n              east: (_saturate2 = saturate(0.1, tokenBColor)) !== null && _saturate2 !== void 0 ? _saturate2 : theme.blue1\n            }\n          }\n        },\n        interactive: interactive,\n        brushLabels: brushLabelValue,\n        brushDomain: brushDomain,\n        onBrushDomainChange: onBrushDomainChangeEnded,\n        zoomLevels: ZOOM_LEVELS[feeAmount !== null && feeAmount !== void 0 ? feeAmount : FeeAmount.MEDIUM],\n        ticksAtLimit: ticksAtLimit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LiquidityChartRangeInput, \"F1zCE6S1dcyL2QzuW2bM8ICiuLo=\", false, function () {\n  return [useTheme, useColor, useColor, useDensityChartData];\n});\n\n_c2 = LiquidityChartRangeInput;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"InfoBox\");\n$RefreshReg$(_c2, \"LiquidityChartRangeInput\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/components/LiquidityChartRangeInput/index.tsx"],"names":["FeeAmount","AutoColumn","ColumnCenter","Loader","format","useColor","useTheme","saturate","React","useCallback","useMemo","BarChart2","CloudOff","Inbox","ReactGA","batch","Bound","ThemedText","Chart","useDensityChartData","ZOOM_LEVELS","LOWEST","initialMin","initialMax","min","max","LOW","MEDIUM","HIGH","ChartWrapper","styled","div","InfoBox","message","icon","height","justifyContent","LiquidityChartRangeInput","currencyA","currencyB","feeAmount","ticksAtLimit","price","priceLower","priceUpper","onLeftRangeInput","onRightRangeInput","interactive","theme","tokenAColor","wrapped","tokenBColor","isSorted","sortsBefore","isLoading","isUninitialized","isError","error","formattedData","onBrushDomainChangeEnded","domain","mode","leftRangeValue","Number","rightRangeValue","LOWER","UPPER","toFixed","Boolean","length","brushDomain","leftPrice","invert","rightPrice","parseFloat","toSignificant","undefined","brushLabelValue","d","x","percent","Math","abs","exception","category","fatal","minHeight","text1","text4","series","current","width","top","right","bottom","left","area","selection","blue1","brush","handle","west","red1","east"],"mappings":"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","sourcesContent":["import { Trans } from '@lingui/macro'\nimport { Currency, Price, Token } from '@uniswap/sdk-core'\nimport { FeeAmount } from '@uniswap/v3-sdk'\nimport { AutoColumn, ColumnCenter } from 'components/Column'\nimport Loader from 'components/Loader'\nimport { format } from 'd3'\nimport { useColor } from 'hooks/useColor'\nimport useTheme from 'hooks/useTheme'\nimport { saturate } from 'polished'\nimport React, { ReactNode, useCallback, useMemo } from 'react'\nimport { BarChart2, CloudOff, Inbox } from 'react-feather'\nimport ReactGA from 'react-ga'\nimport { batch } from 'react-redux'\nimport { Bound } from 'state/mint/v3/actions'\nimport styled from 'styled-components/macro'\n\nimport { ThemedText } from '../../theme'\nimport { Chart } from './Chart'\nimport { useDensityChartData } from './hooks'\nimport { ZoomLevels } from './types'\n\nconst ZOOM_LEVELS: Record<FeeAmount, ZoomLevels> = {\n  [FeeAmount.LOWEST]: {\n    initialMin: 0.999,\n    initialMax: 1.001,\n    min: 0.00001,\n    max: 1.5,\n  },\n  [FeeAmount.LOW]: {\n    initialMin: 0.999,\n    initialMax: 1.001,\n    min: 0.00001,\n    max: 1.5,\n  },\n  [FeeAmount.MEDIUM]: {\n    initialMin: 0.5,\n    initialMax: 2,\n    min: 0.00001,\n    max: 20,\n  },\n  [FeeAmount.HIGH]: {\n    initialMin: 0.5,\n    initialMax: 2,\n    min: 0.00001,\n    max: 20,\n  },\n}\n\nconst ChartWrapper = styled.div`\n  position: relative;\n\n  justify-content: center;\n  align-content: center;\n`\n\nfunction InfoBox({ message, icon }: { message?: ReactNode; icon: ReactNode }) {\n  return (\n    <ColumnCenter style={{ height: '100%', justifyContent: 'center' }}>\n      {icon}\n      {message && (\n        <ThemedText.MediumHeader padding={10} marginTop=\"20px\" textAlign=\"center\">\n          {message}\n        </ThemedText.MediumHeader>\n      )}\n    </ColumnCenter>\n  )\n}\n\nexport default function LiquidityChartRangeInput({\n  currencyA,\n  currencyB,\n  feeAmount,\n  ticksAtLimit,\n  price,\n  priceLower,\n  priceUpper,\n  onLeftRangeInput,\n  onRightRangeInput,\n  interactive,\n}: {\n  currencyA: Currency | undefined\n  currencyB: Currency | undefined\n  feeAmount?: FeeAmount\n  ticksAtLimit: { [bound in Bound]?: boolean | undefined }\n  price: number | undefined\n  priceLower?: Price<Token, Token>\n  priceUpper?: Price<Token, Token>\n  onLeftRangeInput: (typedValue: string) => void\n  onRightRangeInput: (typedValue: string) => void\n  interactive: boolean\n}) {\n  const theme = useTheme()\n\n  const tokenAColor = useColor(currencyA?.wrapped)\n  const tokenBColor = useColor(currencyB?.wrapped)\n\n  const isSorted = currencyA && currencyB && currencyA?.wrapped.sortsBefore(currencyB?.wrapped)\n\n  const { isLoading, isUninitialized, isError, error, formattedData } = useDensityChartData({\n    currencyA,\n    currencyB,\n    feeAmount,\n  })\n\n  const onBrushDomainChangeEnded = useCallback(\n    (domain, mode) => {\n      let leftRangeValue = Number(domain[0])\n      const rightRangeValue = Number(domain[1])\n\n      if (leftRangeValue <= 0) {\n        leftRangeValue = 1 / 10 ** 6\n      }\n\n      batch(() => {\n        // simulate user input for auto-formatting and other validations\n        if (\n          (!ticksAtLimit[isSorted ? Bound.LOWER : Bound.UPPER] || mode === 'handle' || mode === 'reset') &&\n          leftRangeValue > 0\n        ) {\n          onLeftRangeInput(leftRangeValue.toFixed(6))\n        }\n\n        if ((!ticksAtLimit[isSorted ? Bound.UPPER : Bound.LOWER] || mode === 'reset') && rightRangeValue > 0) {\n          // todo: remove this check. Upper bound for large numbers\n          // sometimes fails to parse to tick.\n          if (rightRangeValue < 1e35) {\n            onRightRangeInput(rightRangeValue.toFixed(6))\n          }\n        }\n      })\n    },\n    [isSorted, onLeftRangeInput, onRightRangeInput, ticksAtLimit]\n  )\n\n  interactive = interactive && Boolean(formattedData?.length)\n\n  const brushDomain: [number, number] | undefined = useMemo(() => {\n    const leftPrice = isSorted ? priceLower : priceUpper?.invert()\n    const rightPrice = isSorted ? priceUpper : priceLower?.invert()\n\n    return leftPrice && rightPrice\n      ? [parseFloat(leftPrice?.toSignificant(6)), parseFloat(rightPrice?.toSignificant(6))]\n      : undefined\n  }, [isSorted, priceLower, priceUpper])\n\n  const brushLabelValue = useCallback(\n    (d: 'w' | 'e', x: number) => {\n      if (!price) return ''\n\n      if (d === 'w' && ticksAtLimit[isSorted ? Bound.LOWER : Bound.UPPER]) return '0'\n      if (d === 'e' && ticksAtLimit[isSorted ? Bound.UPPER : Bound.LOWER]) return 'âˆž'\n\n      const percent = (x < price ? -1 : 1) * ((Math.max(x, price) - Math.min(x, price)) / price) * 100\n\n      return price ? `${format(Math.abs(percent) > 1 ? '.2~s' : '.2~f')(percent)}%` : ''\n    },\n    [isSorted, price, ticksAtLimit]\n  )\n\n  if (isError) {\n    ReactGA.exception({\n      ...error,\n      category: 'Liquidity',\n      fatal: false,\n    })\n  }\n\n  return (\n    <AutoColumn gap=\"md\" style={{ minHeight: '200px' }}>\n      {isUninitialized ? (\n        <InfoBox\n          message={<Trans>Your position will appear here.</Trans>}\n          icon={<Inbox size={56} stroke={theme.text1} />}\n        />\n      ) : isLoading ? (\n        <InfoBox icon={<Loader size=\"40px\" stroke={theme.text4} />} />\n      ) : isError ? (\n        <InfoBox\n          message={<Trans>Liquidity data not available.</Trans>}\n          icon={<CloudOff size={56} stroke={theme.text4} />}\n        />\n      ) : !formattedData || formattedData === [] || !price ? (\n        <InfoBox\n          message={<Trans>There is no liquidity data.</Trans>}\n          icon={<BarChart2 size={56} stroke={theme.text4} />}\n        />\n      ) : (\n        <ChartWrapper>\n          <Chart\n            data={{ series: formattedData, current: price }}\n            dimensions={{ width: 400, height: 200 }}\n            margins={{ top: 10, right: 2, bottom: 20, left: 0 }}\n            styles={{\n              area: {\n                selection: theme.blue1,\n              },\n              brush: {\n                handle: {\n                  west: saturate(0.1, tokenAColor) ?? theme.red1,\n                  east: saturate(0.1, tokenBColor) ?? theme.blue1,\n                },\n              },\n            }}\n            interactive={interactive}\n            brushLabels={brushLabelValue}\n            brushDomain={brushDomain}\n            onBrushDomainChange={onBrushDomainChangeEnded}\n            zoomLevels={ZOOM_LEVELS[feeAmount ?? FeeAmount.MEDIUM]}\n            ticksAtLimit={ticksAtLimit}\n          />\n        </ChartWrapper>\n      )}\n    </AutoColumn>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}