{"ast":null,"code":"import _classCallCheck from \"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar NullLogger = /*#__PURE__*/function () {\n  function NullLogger() {\n    _classCallCheck(this, NullLogger);\n\n    this.ERROR_MESSAGE = 'NullLogger does not support. Instantiate a valid logger using \"setGlobalLogger\"';\n    this.src = true;\n  }\n\n  _createClass(NullLogger, [{\n    key: \"addStream\",\n    value: function addStream(_stream) {\n      throw new Error(this.ERROR_MESSAGE);\n    }\n  }, {\n    key: \"addSerializers\",\n    value: function addSerializers(_serializers) {\n      throw new Error(this.ERROR_MESSAGE);\n    }\n  }, {\n    key: \"child\",\n    value: function child(_options, _simple) {\n      return this;\n    }\n  }, {\n    key: \"reopenFileStreams\",\n    value: function reopenFileStreams() {\n      throw new Error(this.ERROR_MESSAGE);\n    }\n  }, {\n    key: \"level\",\n    value: function level(_value) {\n      return;\n    }\n  }, {\n    key: \"levels\",\n    value: function levels(_name, _value) {\n      return;\n    }\n  }, {\n    key: \"trace\",\n    value: function trace() {\n      return true;\n    }\n  }, {\n    key: \"debug\",\n    value: function debug() {\n      return true;\n    }\n  }, {\n    key: \"info\",\n    value: function info() {\n      return true;\n    }\n  }, {\n    key: \"warn\",\n    value: function warn() {\n      return true;\n    }\n  }, {\n    key: \"error\",\n    value: function error() {\n      return true;\n    }\n  }, {\n    key: \"fatal\",\n    value: function fatal() {\n      return true;\n    }\n  }, {\n    key: \"addListener\",\n    value: function addListener(_event, _listener) {\n      throw new Error(this.ERROR_MESSAGE);\n    }\n  }, {\n    key: \"on\",\n    value: function on(_event, _listener) {\n      throw new Error(this.ERROR_MESSAGE);\n    }\n  }, {\n    key: \"once\",\n    value: function once(_event, _listener) {\n      throw new Error(this.ERROR_MESSAGE);\n    }\n  }, {\n    key: \"removeListener\",\n    value: function removeListener(_event, _listener) {\n      throw new Error(this.ERROR_MESSAGE);\n    }\n  }, {\n    key: \"off\",\n    value: function off(_event, _listener) {\n      throw new Error(this.ERROR_MESSAGE);\n    }\n  }, {\n    key: \"removeAllListeners\",\n    value: function removeAllListeners(_event) {\n      throw new Error(this.ERROR_MESSAGE);\n    }\n  }, {\n    key: \"setMaxListeners\",\n    value: function setMaxListeners(_n) {\n      throw new Error(this.ERROR_MESSAGE);\n    }\n  }, {\n    key: \"getMaxListeners\",\n    value: function getMaxListeners() {\n      throw new Error(this.ERROR_MESSAGE);\n    }\n  }, {\n    key: \"listeners\",\n    value: function listeners(_event) {\n      throw new Error(this.ERROR_MESSAGE);\n    }\n  }, {\n    key: \"rawListeners\",\n    value: function rawListeners(_event) {\n      throw new Error(this.ERROR_MESSAGE);\n    }\n  }, {\n    key: \"emit\",\n    value: function emit(_event) {\n      throw new Error(this.ERROR_MESSAGE);\n    }\n  }, {\n    key: \"listenerCount\",\n    value: function listenerCount(_event) {\n      throw new Error(this.ERROR_MESSAGE);\n    }\n  }, {\n    key: \"prependListener\",\n    value: function prependListener(_event, _listener) {\n      throw new Error(this.ERROR_MESSAGE);\n    }\n  }, {\n    key: \"prependOnceListener\",\n    value: function prependOnceListener(_event, _listener) {\n      throw new Error(this.ERROR_MESSAGE);\n    }\n  }, {\n    key: \"eventNames\",\n    value: function eventNames() {\n      throw new Error(this.ERROR_MESSAGE);\n    }\n  }]);\n\n  return NullLogger;\n}();\n\nexport var log = new NullLogger();\nexport var setGlobalLogger = function setGlobalLogger(_log) {\n  log = _log;\n};","map":{"version":3,"sources":["../../../../src/util/log.ts"],"names":[],"mappings":";;;IAEM,U;AAAN,wBAAA;AAAA;;AACU,SAAA,aAAA,GACN,iFADM;AA0BR,SAAA,GAAA,GAAe,IAAf;AAoGD;;;;WA5HC,mBAAU,OAAV,EAAgC;AAC9B,YAAM,IAAI,KAAJ,CAAU,KAAK,aAAf,CAAN;AACD;;;WACD,wBAAe,YAAf,EAA+C;AAC7C,YAAM,IAAI,KAAJ,CAAU,KAAK,aAAf,CAAN;AACD;;;WACD,eAAM,QAAN,EAAwB,OAAxB,EAAyC;AACvC,aAAO,IAAP;AACD;;;WACD,6BAAiB;AACf,YAAM,IAAI,KAAJ,CAAU,KAAK,aAAf,CAAN;AACD;;;WAGD,eAAM,MAAN,EAAkB;AAChB;AACD;;;WAID,gBAAO,KAAP,EAAoB,MAApB,EAAgC;AAC9B;AACD;;;WAOD,iBAAmB;AACjB,aAAO,IAAP;AACD;;;WAKD,iBAAmB;AACjB,aAAO,IAAP;AACD;;;WAKD,gBAAkB;AAChB,aAAO,IAAP;AACD;;;WAKD,gBAAkB;AAChB,aAAO,IAAP;AACD;;;WAKD,iBAAmB;AACjB,aAAO,IAAP;AACD;;;WAKD,iBAAmB;AACjB,aAAO,IAAP;AACD;;;WACD,qBACE,MADF,EAEE,SAFF,EAEqC;AAEnC,YAAM,IAAI,KAAJ,CAAU,KAAK,aAAf,CAAN;AACD;;;WACD,YAAG,MAAH,EAA4B,SAA5B,EAA+D;AAC7D,YAAM,IAAI,KAAJ,CAAU,KAAK,aAAf,CAAN;AACD;;;WACD,cAAK,MAAL,EAA8B,SAA9B,EAAiE;AAC/D,YAAM,IAAI,KAAJ,CAAU,KAAK,aAAf,CAAN;AACD;;;WACD,wBACE,MADF,EAEE,SAFF,EAEqC;AAEnC,YAAM,IAAI,KAAJ,CAAU,KAAK,aAAf,CAAN;AACD;;;WACD,aAAI,MAAJ,EAA6B,SAA7B,EAAgE;AAC9D,YAAM,IAAI,KAAJ,CAAU,KAAK,aAAf,CAAN;AACD;;;WACD,4BAAmB,MAAnB,EAA2C;AACzC,YAAM,IAAI,KAAJ,CAAU,KAAK,aAAf,CAAN;AACD;;;WACD,yBAAgB,EAAhB,EAA0B;AACxB,YAAM,IAAI,KAAJ,CAAU,KAAK,aAAf,CAAN;AACD;;;WACD,2BAAe;AACb,YAAM,IAAI,KAAJ,CAAU,KAAK,aAAf,CAAN;AACD;;;WACD,mBAAU,MAAV,EAAiC;AAC/B,YAAM,IAAI,KAAJ,CAAU,KAAK,aAAf,CAAN;AACD;;;WACD,sBAAa,MAAb,EAAoC;AAClC,YAAM,IAAI,KAAJ,CAAU,KAAK,aAAf,CAAN;AACD;;;WACD,cAAK,MAAL,EAA6C;AAC3C,YAAM,IAAI,KAAJ,CAAU,KAAK,aAAf,CAAN;AACD;;;WACD,uBAAc,MAAd,EAAqC;AACnC,YAAM,IAAI,KAAJ,CAAU,KAAK,aAAf,CAAN;AACD;;;WACD,yBACE,MADF,EAEE,SAFF,EAEqC;AAEnC,YAAM,IAAI,KAAJ,CAAU,KAAK,aAAf,CAAN;AACD;;;WACD,6BACE,MADF,EAEE,SAFF,EAEqC;AAEnC,YAAM,IAAI,KAAJ,CAAU,KAAK,aAAf,CAAN;AACD;;;WACD,sBAAU;AACR,YAAM,IAAI,KAAJ,CAAU,KAAK,aAAf,CAAN;AACD;;;;;;AAGH,OAAO,IAAI,GAAG,GAAW,IAAI,UAAJ,EAAlB;AAEP,OAAO,IAAM,eAAe,GAAG,SAAlB,eAAkB,CAAC,IAAD,EAAiB;AAC9C,EAAA,GAAG,GAAG,IAAN;AACD,CAFM","sourceRoot":"","sourcesContent":["class NullLogger {\n    constructor() {\n        this.ERROR_MESSAGE = 'NullLogger does not support. Instantiate a valid logger using \"setGlobalLogger\"';\n        this.src = true;\n    }\n    addStream(_stream) {\n        throw new Error(this.ERROR_MESSAGE);\n    }\n    addSerializers(_serializers) {\n        throw new Error(this.ERROR_MESSAGE);\n    }\n    child(_options, _simple) {\n        return this;\n    }\n    reopenFileStreams() {\n        throw new Error(this.ERROR_MESSAGE);\n    }\n    level(_value) {\n        return;\n    }\n    levels(_name, _value) {\n        return;\n    }\n    trace(..._rest) {\n        return true;\n    }\n    debug(..._rest) {\n        return true;\n    }\n    info(..._rest) {\n        return true;\n    }\n    warn(..._rest) {\n        return true;\n    }\n    error(..._rest) {\n        return true;\n    }\n    fatal(..._rest) {\n        return true;\n    }\n    addListener(_event, _listener) {\n        throw new Error(this.ERROR_MESSAGE);\n    }\n    on(_event, _listener) {\n        throw new Error(this.ERROR_MESSAGE);\n    }\n    once(_event, _listener) {\n        throw new Error(this.ERROR_MESSAGE);\n    }\n    removeListener(_event, _listener) {\n        throw new Error(this.ERROR_MESSAGE);\n    }\n    off(_event, _listener) {\n        throw new Error(this.ERROR_MESSAGE);\n    }\n    removeAllListeners(_event) {\n        throw new Error(this.ERROR_MESSAGE);\n    }\n    setMaxListeners(_n) {\n        throw new Error(this.ERROR_MESSAGE);\n    }\n    getMaxListeners() {\n        throw new Error(this.ERROR_MESSAGE);\n    }\n    listeners(_event) {\n        throw new Error(this.ERROR_MESSAGE);\n    }\n    rawListeners(_event) {\n        throw new Error(this.ERROR_MESSAGE);\n    }\n    emit(_event, ..._args) {\n        throw new Error(this.ERROR_MESSAGE);\n    }\n    listenerCount(_event) {\n        throw new Error(this.ERROR_MESSAGE);\n    }\n    prependListener(_event, _listener) {\n        throw new Error(this.ERROR_MESSAGE);\n    }\n    prependOnceListener(_event, _listener) {\n        throw new Error(this.ERROR_MESSAGE);\n    }\n    eventNames() {\n        throw new Error(this.ERROR_MESSAGE);\n    }\n}\nexport let log = new NullLogger();\nexport const setGlobalLogger = (_log) => {\n    log = _log;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3V0aWwvbG9nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE1BQU0sVUFBVTtJQUFoQjtRQUNVLGtCQUFhLEdBQ25CLGlGQUFpRixDQUFDO1FBeUJwRixRQUFHLEdBQVksSUFBSSxDQUFDO0lBb0d0QixDQUFDO0lBNUhDLFNBQVMsQ0FBQyxPQUFzQjtRQUM5QixNQUFNLElBQUksS0FBSyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUN0QyxDQUFDO0lBQ0QsY0FBYyxDQUFDLFlBQWdDO1FBQzdDLE1BQU0sSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQ3RDLENBQUM7SUFDRCxLQUFLLENBQUMsUUFBZ0IsRUFBRSxPQUFpQjtRQUN2QyxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFDRCxpQkFBaUI7UUFDZixNQUFNLElBQUksS0FBSyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUN0QyxDQUFDO0lBR0QsS0FBSyxDQUFDLE1BQVk7UUFDaEIsT0FBTztJQUNULENBQUM7SUFJRCxNQUFNLENBQUMsS0FBVyxFQUFFLE1BQVk7UUFDOUIsT0FBTztJQUNULENBQUM7SUFPRCxLQUFLLENBQUMsR0FBRyxLQUFVO1FBQ2pCLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUtELEtBQUssQ0FBQyxHQUFHLEtBQVU7UUFDakIsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBS0QsSUFBSSxDQUFDLEdBQUcsS0FBVTtRQUNoQixPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFLRCxJQUFJLENBQUMsR0FBRyxLQUFVO1FBQ2hCLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUtELEtBQUssQ0FBQyxHQUFHLEtBQVU7UUFDakIsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBS0QsS0FBSyxDQUFDLEdBQUcsS0FBVTtR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"]},"metadata":{},"sourceType":"module"}