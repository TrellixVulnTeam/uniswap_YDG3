{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$(),\n    _s8 = $RefreshSig$(),\n    _s9 = $RefreshSig$(),\n    _s10 = $RefreshSig$(),\n    _s11 = $RefreshSig$(),\n    _s12 = $RefreshSig$();\n\nimport { i18n } from \"@lingui/core\";\nimport { defaultAbiCoder, Interface } from '@ethersproject/abi';\nimport { isAddress } from '@ethersproject/address';\nimport { toUtf8String, Utf8ErrorFuncs, Utf8ErrorReason } from '@ethersproject/strings';\nimport { formatUnits } from '@ethersproject/units'; // eslint-disable-next-line no-restricted-imports\n\nimport { abi as GOV_ABI } from '@uniswap/governance/build/GovernorAlpha.json';\nimport { CurrencyAmount } from '@uniswap/sdk-core';\nimport { POLYGON_PROPOSAL_TITLE } from 'constants/proposals/polygon_proposal_title';\nimport { UNISWAP_GRANTS_PROPOSAL_DESCRIPTION } from 'constants/proposals/uniswap_grants_proposal_description';\nimport { useGovernanceBravoContract, useGovernanceV0Contract, useGovernanceV1Contract, useLatestGovernanceContract, useUniContract } from 'hooks/useContract';\nimport { useActiveWeb3React } from 'hooks/web3';\nimport { useCallback, useMemo } from 'react';\nimport { calculateGasMargin } from 'utils/calculateGasMargin';\nimport { SupportedChainId } from '../../constants/chains';\nimport { BRAVO_START_BLOCK, ONE_BIP_START_BLOCK, POLYGON_START_BLOCK, UNISWAP_GRANTS_START_BLOCK } from '../../constants/proposals';\nimport { UNI } from '../../constants/tokens';\nimport { useLogs } from '../logs/hooks';\nimport { useSingleCallResult, useSingleContractMultipleData } from '../multicall/hooks';\nimport { TransactionType } from '../transactions/actions';\nimport { useTransactionAdder } from '../transactions/hooks';\nimport { VoteOption } from './types';\nexport let ProposalState;\n\n(function (ProposalState) {\n  ProposalState[ProposalState[\"UNDETERMINED\"] = -1] = \"UNDETERMINED\";\n  ProposalState[ProposalState[\"PENDING\"] = 0] = \"PENDING\";\n  ProposalState[ProposalState[\"ACTIVE\"] = 1] = \"ACTIVE\";\n  ProposalState[ProposalState[\"CANCELED\"] = 2] = \"CANCELED\";\n  ProposalState[ProposalState[\"DEFEATED\"] = 3] = \"DEFEATED\";\n  ProposalState[ProposalState[\"SUCCEEDED\"] = 4] = \"SUCCEEDED\";\n  ProposalState[ProposalState[\"QUEUED\"] = 5] = \"QUEUED\";\n  ProposalState[ProposalState[\"EXPIRED\"] = 6] = \"EXPIRED\";\n  ProposalState[ProposalState[\"EXECUTED\"] = 7] = \"EXECUTED\";\n})(ProposalState || (ProposalState = {}));\n\nconst GovernanceInterface = new Interface(GOV_ABI); // get count of all proposals made in the latest governor contract\n\nfunction useProposalCount(contract) {\n  _s();\n\n  var _result$;\n\n  const {\n    result\n  } = useSingleCallResult(contract, 'proposalCount');\n  return result === null || result === void 0 ? void 0 : (_result$ = result[0]) === null || _result$ === void 0 ? void 0 : _result$.toNumber();\n}\n\n_s(useProposalCount, \"NTxwZxkjXTi1EZcYu00rh8WMff0=\", false, function () {\n  return [useSingleCallResult];\n});\n\n/**\n * Need proposal events to get description data emitted from\n * new proposal event.\n */\nfunction useFormattedProposalCreatedLogs(contract, indices) {\n  _s2();\n\n  // create filters for ProposalCreated events\n  const filter = useMemo(() => {\n    var _contract$filters;\n\n    return contract === null || contract === void 0 ? void 0 : (_contract$filters = contract.filters) === null || _contract$filters === void 0 ? void 0 : _contract$filters.ProposalCreated();\n  }, [contract]);\n  const useLogsResult = useLogs(filter);\n  return useMemo(() => {\n    var _useLogsResult$logs, _useLogsResult$logs$m, _useLogsResult$logs$m2;\n\n    return useLogsResult === null || useLogsResult === void 0 ? void 0 : (_useLogsResult$logs = useLogsResult.logs) === null || _useLogsResult$logs === void 0 ? void 0 : (_useLogsResult$logs$m = _useLogsResult$logs.map(log => {\n      const parsed = GovernanceInterface.parseLog(log).args;\n      return parsed;\n    })) === null || _useLogsResult$logs$m === void 0 ? void 0 : (_useLogsResult$logs$m2 = _useLogsResult$logs$m.filter(parsed => indices.flat().some(i => i === parsed.id.toNumber()))) === null || _useLogsResult$logs$m2 === void 0 ? void 0 : _useLogsResult$logs$m2.map(parsed => {\n      var _parsed$startBlock;\n\n      let description;\n      const startBlock = parseInt((_parsed$startBlock = parsed.startBlock) === null || _parsed$startBlock === void 0 ? void 0 : _parsed$startBlock.toString());\n\n      try {\n        description = parsed.description;\n      } catch (error) {\n        // replace invalid UTF-8 in the description with replacement characters\n        let onError = Utf8ErrorFuncs.replace; // Bravo proposal reverses the codepoints for U+2018 (‘) and U+2026 (…)\n\n        if (startBlock === BRAVO_START_BLOCK) {\n          const U2018 = [0xe2, 0x80, 0x98].toString();\n          const U2026 = [0xe2, 0x80, 0xa6].toString();\n\n          onError = (reason, offset, bytes, output) => {\n            if (reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n              const charCode = [bytes[offset], bytes[offset + 1], bytes[offset + 2]].reverse().toString();\n\n              if (charCode === U2018) {\n                output.push(0x2018);\n                return 2;\n              } else if (charCode === U2026) {\n                output.push(0x2026);\n                return 2;\n              }\n            }\n\n            return Utf8ErrorFuncs.replace(reason, offset, bytes, output);\n          };\n        }\n\n        description = JSON.parse(toUtf8String(error.error.value, onError)) || '';\n      } // Bravo and one bip proposals omit newlines\n\n\n      if (startBlock === BRAVO_START_BLOCK || startBlock === ONE_BIP_START_BLOCK) {\n        description = description.replace(/ {2}/g, '\\n').replace(/\\d\\. /g, '\\n$&');\n      }\n\n      return {\n        description,\n        details: parsed.targets.map((target, i) => {\n          const signature = parsed.signatures[i];\n          const [name, types] = signature.substr(0, signature.length - 1).split('(');\n          const calldata = parsed.calldatas[i];\n          const decoded = defaultAbiCoder.decode(types.split(','), calldata);\n          return {\n            target,\n            functionSig: name,\n            callData: decoded.join(', ')\n          };\n        })\n      };\n    });\n  }, [indices, useLogsResult]);\n}\n\n_s2(useFormattedProposalCreatedLogs, \"87VzP9ENkLkhHlnTplROMDmpLUQ=\", false, function () {\n  return [useLogs];\n});\n\nconst V0_PROPOSAL_IDS = [[1], [2], [3], [4]];\nconst V1_PROPOSAL_IDS = [[1], [2], [3]];\n\nfunction countToIndices(count, skip = 0) {\n  return typeof count === 'number' ? new Array(count - skip).fill(0).map((_, i) => [i + 1 + skip]) : [];\n} // get data for all past and active proposals\n\n\nexport function useAllProposalData() {\n  _s3();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const gov0 = useGovernanceV0Contract();\n  const gov1 = useGovernanceV1Contract();\n  const gov2 = useGovernanceBravoContract();\n  const proposalCount0 = useProposalCount(gov0);\n  const proposalCount1 = useProposalCount(gov1);\n  const proposalCount2 = useProposalCount(gov2);\n  const gov0ProposalIndexes = useMemo(() => {\n    return chainId === SupportedChainId.MAINNET ? V0_PROPOSAL_IDS : countToIndices(proposalCount0);\n  }, [chainId, proposalCount0]);\n  const gov1ProposalIndexes = useMemo(() => {\n    return chainId === SupportedChainId.MAINNET ? V1_PROPOSAL_IDS : countToIndices(proposalCount1);\n  }, [chainId, proposalCount1]);\n  const gov2ProposalIndexes = useMemo(() => {\n    return countToIndices(proposalCount2, 8);\n  }, [proposalCount2]);\n  const proposalsV0 = useSingleContractMultipleData(gov0, 'proposals', gov0ProposalIndexes);\n  const proposalsV1 = useSingleContractMultipleData(gov1, 'proposals', gov1ProposalIndexes);\n  const proposalsV2 = useSingleContractMultipleData(gov2, 'proposals', gov2ProposalIndexes); // get all proposal states\n\n  const proposalStatesV0 = useSingleContractMultipleData(gov0, 'state', gov0ProposalIndexes);\n  const proposalStatesV1 = useSingleContractMultipleData(gov1, 'state', gov1ProposalIndexes);\n  const proposalStatesV2 = useSingleContractMultipleData(gov2, 'state', gov2ProposalIndexes); // get metadata from past events\n\n  const formattedLogsV0 = useFormattedProposalCreatedLogs(gov0, gov0ProposalIndexes);\n  const formattedLogsV1 = useFormattedProposalCreatedLogs(gov1, gov1ProposalIndexes);\n  const formattedLogsV2 = useFormattedProposalCreatedLogs(gov2, gov2ProposalIndexes); // early return until events are fetched\n\n  return useMemo(() => {\n    const proposalsCallData = [...proposalsV0, ...proposalsV1, ...proposalsV2];\n    const proposalStatesCallData = [...proposalStatesV0, ...proposalStatesV1, ...proposalStatesV2];\n    const formattedLogs = [...(formattedLogsV0 !== null && formattedLogsV0 !== void 0 ? formattedLogsV0 : []), ...(formattedLogsV1 !== null && formattedLogsV1 !== void 0 ? formattedLogsV1 : []), ...(formattedLogsV2 !== null && formattedLogsV2 !== void 0 ? formattedLogsV2 : [])];\n\n    if (proposalsCallData.some(p => p.loading) || proposalStatesCallData.some(p => p.loading) || gov0 && !formattedLogsV0 || gov1 && !formattedLogsV1 || gov2 && !formattedLogsV2) {\n      return {\n        data: [],\n        loading: true\n      };\n    }\n\n    return {\n      data: proposalsCallData.map((proposal, i) => {\n        var _proposal$result, _proposal$result$star, _formattedLogs$i, _description, _proposal$result2, _title, _description2, _proposal$result3, _proposalStatesCallDa, _proposalStatesCallDa2, _proposalStatesCallDa3, _proposal$result$forV, _proposal$result4, _proposal$result4$for, _proposal$result$agai, _proposal$result5, _proposal$result5$aga, _proposal$result$abst, _proposal$result6, _proposal$result6$abs, _proposal$result7, _proposal$result7$end, _formattedLogs$i2;\n\n        const startBlock = parseInt(proposal === null || proposal === void 0 ? void 0 : (_proposal$result = proposal.result) === null || _proposal$result === void 0 ? void 0 : (_proposal$result$star = _proposal$result.startBlock) === null || _proposal$result$star === void 0 ? void 0 : _proposal$result$star.toString());\n        let description = (_formattedLogs$i = formattedLogs[i]) === null || _formattedLogs$i === void 0 ? void 0 : _formattedLogs$i.description;\n\n        if (startBlock === UNISWAP_GRANTS_START_BLOCK) {\n          description = UNISWAP_GRANTS_PROPOSAL_DESCRIPTION;\n        }\n\n        let title = (_description = description) === null || _description === void 0 ? void 0 : _description.split(/#+\\s|\\n/g)[1];\n\n        if (startBlock === POLYGON_START_BLOCK) {\n          title = POLYGON_PROPOSAL_TITLE;\n        }\n\n        return {\n          id: proposal === null || proposal === void 0 ? void 0 : (_proposal$result2 = proposal.result) === null || _proposal$result2 === void 0 ? void 0 : _proposal$result2.id.toString(),\n          title: (_title = title) !== null && _title !== void 0 ? _title :\n          /*i18n*/\n          i18n._(\"Untitled\"),\n          description: (_description2 = description) !== null && _description2 !== void 0 ? _description2 :\n          /*i18n*/\n          i18n._(\"No description.\"),\n          proposer: proposal === null || proposal === void 0 ? void 0 : (_proposal$result3 = proposal.result) === null || _proposal$result3 === void 0 ? void 0 : _proposal$result3.proposer,\n          status: (_proposalStatesCallDa = (_proposalStatesCallDa2 = proposalStatesCallData[i]) === null || _proposalStatesCallDa2 === void 0 ? void 0 : (_proposalStatesCallDa3 = _proposalStatesCallDa2.result) === null || _proposalStatesCallDa3 === void 0 ? void 0 : _proposalStatesCallDa3[0]) !== null && _proposalStatesCallDa !== void 0 ? _proposalStatesCallDa : ProposalState.UNDETERMINED,\n          forCount: parseFloat(formatUnits((_proposal$result$forV = proposal === null || proposal === void 0 ? void 0 : (_proposal$result4 = proposal.result) === null || _proposal$result4 === void 0 ? void 0 : (_proposal$result4$for = _proposal$result4.forVotes) === null || _proposal$result4$for === void 0 ? void 0 : _proposal$result4$for.toString()) !== null && _proposal$result$forV !== void 0 ? _proposal$result$forV : 0, 18)),\n          againstCount: parseFloat(formatUnits((_proposal$result$agai = proposal === null || proposal === void 0 ? void 0 : (_proposal$result5 = proposal.result) === null || _proposal$result5 === void 0 ? void 0 : (_proposal$result5$aga = _proposal$result5.againstVotes) === null || _proposal$result5$aga === void 0 ? void 0 : _proposal$result5$aga.toString()) !== null && _proposal$result$agai !== void 0 ? _proposal$result$agai : 0, 18)),\n          abstainCount: parseFloat(formatUnits((_proposal$result$abst = proposal === null || proposal === void 0 ? void 0 : (_proposal$result6 = proposal.result) === null || _proposal$result6 === void 0 ? void 0 : (_proposal$result6$abs = _proposal$result6.abstainVotes) === null || _proposal$result6$abs === void 0 ? void 0 : _proposal$result6$abs.toString()) !== null && _proposal$result$abst !== void 0 ? _proposal$result$abst : 0, 18)),\n          startBlock,\n          endBlock: parseInt(proposal === null || proposal === void 0 ? void 0 : (_proposal$result7 = proposal.result) === null || _proposal$result7 === void 0 ? void 0 : (_proposal$result7$end = _proposal$result7.endBlock) === null || _proposal$result7$end === void 0 ? void 0 : _proposal$result7$end.toString()),\n          details: (_formattedLogs$i2 = formattedLogs[i]) === null || _formattedLogs$i2 === void 0 ? void 0 : _formattedLogs$i2.details,\n          governorIndex: i >= proposalsV0.length + proposalsV1.length ? 2 : i >= proposalsV0.length ? 1 : 0\n        };\n      }),\n      loading: false\n    };\n  }, [formattedLogsV0, formattedLogsV1, formattedLogsV2, gov0, gov1, gov2, proposalStatesV0, proposalStatesV1, proposalStatesV2, proposalsV0, proposalsV1, proposalsV2]);\n}\n\n_s3(useAllProposalData, \"JZtkzKSBFhO1mGbHZfZgi4/ZuVQ=\", false, function () {\n  return [useActiveWeb3React, useGovernanceV0Contract, useGovernanceV1Contract, useGovernanceBravoContract, useProposalCount, useProposalCount, useProposalCount, useSingleContractMultipleData, useSingleContractMultipleData, useSingleContractMultipleData, useSingleContractMultipleData, useSingleContractMultipleData, useSingleContractMultipleData, useFormattedProposalCreatedLogs, useFormattedProposalCreatedLogs, useFormattedProposalCreatedLogs];\n});\n\nexport function useProposalData(governorIndex, id) {\n  _s4();\n\n  var _data$filter;\n\n  const {\n    data\n  } = useAllProposalData();\n  return (_data$filter = data.filter(p => p.governorIndex === governorIndex)) === null || _data$filter === void 0 ? void 0 : _data$filter.find(p => p.id === id);\n} // get the users delegatee if it exists\n\n_s4(useProposalData, \"2T3Fjp+LBa2ObShRgnDSChorH98=\", false, function () {\n  return [useAllProposalData];\n});\n\nexport function useUserDelegatee() {\n  _s5();\n\n  var _result$2;\n\n  const {\n    account\n  } = useActiveWeb3React();\n  const uniContract = useUniContract();\n  const {\n    result\n  } = useSingleCallResult(uniContract, 'delegates', [account !== null && account !== void 0 ? account : undefined]);\n  return (_result$2 = result === null || result === void 0 ? void 0 : result[0]) !== null && _result$2 !== void 0 ? _result$2 : undefined;\n} // gets the users current votes\n\n_s5(useUserDelegatee, \"eFppHS3EelWrPCls/KfVDgdoxrA=\", false, function () {\n  return [useActiveWeb3React, useUniContract, useSingleCallResult];\n});\n\nexport function useUserVotes() {\n  _s6();\n\n  const {\n    account,\n    chainId\n  } = useActiveWeb3React();\n  const uniContract = useUniContract(); // check for available votes\n\n  const {\n    result,\n    loading\n  } = useSingleCallResult(uniContract, 'getCurrentVotes', [account !== null && account !== void 0 ? account : undefined]);\n  return useMemo(() => {\n    const uni = chainId ? UNI[chainId] : undefined;\n    return {\n      loading,\n      votes: uni && result ? CurrencyAmount.fromRawAmount(uni, result === null || result === void 0 ? void 0 : result[0]) : undefined\n    };\n  }, [chainId, loading, result]);\n} // fetch available votes as of block (usually proposal start block)\n\n_s6(useUserVotes, \"jfU9dIpkf8xhKingKifORMSOJWE=\", false, function () {\n  return [useActiveWeb3React, useUniContract, useSingleCallResult];\n});\n\nexport function useUserVotesAsOfBlock(block) {\n  _s7();\n\n  var _useSingleCallResult, _useSingleCallResult$;\n\n  const {\n    account,\n    chainId\n  } = useActiveWeb3React();\n  const uniContract = useUniContract(); // check for available votes\n\n  const uni = chainId ? UNI[chainId] : undefined;\n  const votes = (_useSingleCallResult = useSingleCallResult(uniContract, 'getPriorVotes', [account !== null && account !== void 0 ? account : undefined, block !== null && block !== void 0 ? block : undefined])) === null || _useSingleCallResult === void 0 ? void 0 : (_useSingleCallResult$ = _useSingleCallResult.result) === null || _useSingleCallResult$ === void 0 ? void 0 : _useSingleCallResult$[0];\n  return votes && uni ? CurrencyAmount.fromRawAmount(uni, votes) : undefined;\n}\n\n_s7(useUserVotesAsOfBlock, \"Oj1EIAaOA8kFSVIG4a7iJEAv6gM=\", false, function () {\n  return [useActiveWeb3React, useUniContract, useSingleCallResult];\n});\n\nexport function useDelegateCallback() {\n  _s8();\n\n  const {\n    account,\n    chainId,\n    library\n  } = useActiveWeb3React();\n  const addTransaction = useTransactionAdder();\n  const uniContract = useUniContract();\n  return useCallback(delegatee => {\n    if (!library || !chainId || !account || !delegatee || !isAddress(delegatee !== null && delegatee !== void 0 ? delegatee : '')) return undefined;\n    const args = [delegatee];\n    if (!uniContract) throw new Error('No UNI Contract!');\n    return uniContract.estimateGas.delegate(...args, {}).then(estimatedGasLimit => {\n      return uniContract.delegate(...args, {\n        value: null,\n        gasLimit: calculateGasMargin(estimatedGasLimit)\n      }).then(response => {\n        addTransaction(response, {\n          type: TransactionType.DELEGATE,\n          delegatee\n        });\n        return response.hash;\n      });\n    });\n  }, [account, addTransaction, chainId, library, uniContract]);\n}\n\n_s8(useDelegateCallback, \"U/KI23NLrlfHj0yXDkveqwkfyxQ=\", false, function () {\n  return [useActiveWeb3React, useTransactionAdder, useUniContract];\n});\n\nexport function useVoteCallback() {\n  _s9();\n\n  const {\n    account,\n    chainId\n  } = useActiveWeb3React();\n  const latestGovernanceContract = useLatestGovernanceContract();\n  const addTransaction = useTransactionAdder();\n  const voteCallback = useCallback((proposalId, voteOption) => {\n    if (!account || !latestGovernanceContract || !proposalId || !chainId) return;\n    const args = [proposalId, voteOption === VoteOption.Against ? 0 : voteOption === VoteOption.For ? 1 : 2];\n    return latestGovernanceContract.estimateGas.castVote(...args, {}).then(estimatedGasLimit => {\n      return latestGovernanceContract.castVote(...args, {\n        value: null,\n        gasLimit: calculateGasMargin(estimatedGasLimit)\n      }).then(response => {\n        addTransaction(response, {\n          type: TransactionType.VOTE,\n          decision: voteOption,\n          governorAddress: latestGovernanceContract.address,\n          proposalId: parseInt(proposalId),\n          reason: ''\n        });\n        return response.hash;\n      });\n    });\n  }, [account, addTransaction, latestGovernanceContract, chainId]);\n  return {\n    voteCallback\n  };\n}\n\n_s9(useVoteCallback, \"FG5WxBiapQzcMEjz53AE2YwV/fs=\", false, function () {\n  return [useActiveWeb3React, useLatestGovernanceContract, useTransactionAdder];\n});\n\nexport function useCreateProposalCallback() {\n  _s10();\n\n  const {\n    account,\n    chainId\n  } = useActiveWeb3React();\n  const latestGovernanceContract = useLatestGovernanceContract();\n  const addTransaction = useTransactionAdder();\n  return useCallback(createProposalData => {\n    if (!account || !latestGovernanceContract || !createProposalData || !chainId) return undefined;\n    const args = [createProposalData.targets, createProposalData.values, createProposalData.signatures, createProposalData.calldatas, createProposalData.description];\n    return latestGovernanceContract.estimateGas.propose(...args).then(estimatedGasLimit => {\n      return latestGovernanceContract.propose(...args, {\n        gasLimit: calculateGasMargin(estimatedGasLimit)\n      }).then(response => {\n        addTransaction(response, {\n          type: TransactionType.SUBMIT_PROPOSAL\n        });\n        return response.hash;\n      });\n    });\n  }, [account, addTransaction, latestGovernanceContract, chainId]);\n}\n\n_s10(useCreateProposalCallback, \"n/3rasDw89tVUY2wohXDLsaNdyI=\", false, function () {\n  return [useActiveWeb3React, useLatestGovernanceContract, useTransactionAdder];\n});\n\nexport function useLatestProposalId(address) {\n  _s11();\n\n  var _res$result, _res$result$;\n\n  const latestGovernanceContract = useLatestGovernanceContract();\n  const res = useSingleCallResult(latestGovernanceContract, 'latestProposalIds', [address]);\n  return res === null || res === void 0 ? void 0 : (_res$result = res.result) === null || _res$result === void 0 ? void 0 : (_res$result$ = _res$result[0]) === null || _res$result$ === void 0 ? void 0 : _res$result$.toString();\n}\n\n_s11(useLatestProposalId, \"bpiq817eS0/PkLCKZdsWiIr/f/0=\", false, function () {\n  return [useLatestGovernanceContract, useSingleCallResult];\n});\n\nexport function useProposalThreshold() {\n  _s12();\n\n  var _res$result2;\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const latestGovernanceContract = useLatestGovernanceContract();\n  const res = useSingleCallResult(latestGovernanceContract, 'proposalThreshold');\n  const uni = chainId ? UNI[chainId] : undefined;\n\n  if ((res === null || res === void 0 ? void 0 : (_res$result2 = res.result) === null || _res$result2 === void 0 ? void 0 : _res$result2[0]) && uni) {\n    return CurrencyAmount.fromRawAmount(uni, res.result[0]);\n  }\n\n  return undefined;\n}\n\n_s12(useProposalThreshold, \"pKKLKRB3if0F6zklE7IHmXgg/FY=\", false, function () {\n  return [useActiveWeb3React, useLatestGovernanceContract, useSingleCallResult];\n});","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/state/governance/hooks.ts"],"names":["defaultAbiCoder","Interface","isAddress","toUtf8String","Utf8ErrorFuncs","Utf8ErrorReason","formatUnits","abi","GOV_ABI","CurrencyAmount","POLYGON_PROPOSAL_TITLE","UNISWAP_GRANTS_PROPOSAL_DESCRIPTION","useGovernanceBravoContract","useGovernanceV0Contract","useGovernanceV1Contract","useLatestGovernanceContract","useUniContract","useActiveWeb3React","useCallback","useMemo","calculateGasMargin","SupportedChainId","BRAVO_START_BLOCK","ONE_BIP_START_BLOCK","POLYGON_START_BLOCK","UNISWAP_GRANTS_START_BLOCK","UNI","useLogs","useSingleCallResult","useSingleContractMultipleData","TransactionType","useTransactionAdder","VoteOption","ProposalState","GovernanceInterface","useProposalCount","contract","result","toNumber","useFormattedProposalCreatedLogs","indices","filter","filters","ProposalCreated","useLogsResult","logs","map","log","parsed","parseLog","args","flat","some","i","id","description","startBlock","parseInt","toString","error","onError","replace","U2018","U2026","reason","offset","bytes","output","UNEXPECTED_CONTINUE","charCode","reverse","push","JSON","parse","value","details","targets","target","signature","signatures","name","types","substr","length","split","calldata","calldatas","decoded","decode","functionSig","callData","join","V0_PROPOSAL_IDS","V1_PROPOSAL_IDS","countToIndices","count","skip","Array","fill","_","useAllProposalData","chainId","gov0","gov1","gov2","proposalCount0","proposalCount1","proposalCount2","gov0ProposalIndexes","MAINNET","gov1ProposalIndexes","gov2ProposalIndexes","proposalsV0","proposalsV1","proposalsV2","proposalStatesV0","proposalStatesV1","proposalStatesV2","formattedLogsV0","formattedLogsV1","formattedLogsV2","proposalsCallData","proposalStatesCallData","formattedLogs","p","loading","data","proposal","title","proposer","status","UNDETERMINED","forCount","parseFloat","forVotes","againstCount","againstVotes","abstainCount","abstainVotes","endBlock","governorIndex","useProposalData","find","useUserDelegatee","account","uniContract","undefined","useUserVotes","uni","votes","fromRawAmount","useUserVotesAsOfBlock","block","useDelegateCallback","library","addTransaction","delegatee","Error","estimateGas","delegate","then","estimatedGasLimit","gasLimit","response","type","DELEGATE","hash","useVoteCallback","latestGovernanceContract","voteCallback","proposalId","voteOption","Against","For","castVote","VOTE","decision","governorAddress","address","useCreateProposalCallback","createProposalData","values","propose","SUBMIT_PROPOSAL","useLatestProposalId","res","useProposalThreshold"],"mappings":"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","sourcesContent":["import { defaultAbiCoder, Interface } from '@ethersproject/abi'\nimport { isAddress } from '@ethersproject/address'\nimport { Contract } from '@ethersproject/contracts'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { toUtf8String, Utf8ErrorFuncs, Utf8ErrorReason } from '@ethersproject/strings'\nimport { formatUnits } from '@ethersproject/units'\n// eslint-disable-next-line no-restricted-imports\nimport { t } from '@lingui/macro'\nimport { abi as GOV_ABI } from '@uniswap/governance/build/GovernorAlpha.json'\nimport { CurrencyAmount, Token } from '@uniswap/sdk-core'\nimport { POLYGON_PROPOSAL_TITLE } from 'constants/proposals/polygon_proposal_title'\nimport { UNISWAP_GRANTS_PROPOSAL_DESCRIPTION } from 'constants/proposals/uniswap_grants_proposal_description'\nimport {\n  useGovernanceBravoContract,\n  useGovernanceV0Contract,\n  useGovernanceV1Contract,\n  useLatestGovernanceContract,\n  useUniContract,\n} from 'hooks/useContract'\nimport { useActiveWeb3React } from 'hooks/web3'\nimport { useCallback, useMemo } from 'react'\nimport { calculateGasMargin } from 'utils/calculateGasMargin'\n\nimport { SupportedChainId } from '../../constants/chains'\nimport {\n  BRAVO_START_BLOCK,\n  ONE_BIP_START_BLOCK,\n  POLYGON_START_BLOCK,\n  UNISWAP_GRANTS_START_BLOCK,\n} from '../../constants/proposals'\nimport { UNI } from '../../constants/tokens'\nimport { useLogs } from '../logs/hooks'\nimport { useSingleCallResult, useSingleContractMultipleData } from '../multicall/hooks'\nimport { TransactionType } from '../transactions/actions'\nimport { useTransactionAdder } from '../transactions/hooks'\nimport { VoteOption } from './types'\n\ninterface ProposalDetail {\n  target: string\n  functionSig: string\n  callData: string\n}\n\nexport interface ProposalData {\n  id: string\n  title: string\n  description: string\n  proposer: string\n  status: ProposalState\n  forCount: number\n  againstCount: number\n  startBlock: number\n  endBlock: number\n  details: ProposalDetail[]\n  governorIndex: number // index in the governance address array for which this proposal pertains\n}\n\nexport interface CreateProposalData {\n  targets: string[]\n  values: string[]\n  signatures: string[]\n  calldatas: string[]\n  description: string\n}\n\nexport enum ProposalState {\n  UNDETERMINED = -1,\n  PENDING,\n  ACTIVE,\n  CANCELED,\n  DEFEATED,\n  SUCCEEDED,\n  QUEUED,\n  EXPIRED,\n  EXECUTED,\n}\n\nconst GovernanceInterface = new Interface(GOV_ABI)\n\n// get count of all proposals made in the latest governor contract\nfunction useProposalCount(contract: Contract | null): number | undefined {\n  const { result } = useSingleCallResult(contract, 'proposalCount')\n\n  return result?.[0]?.toNumber()\n}\n\ninterface FormattedProposalLog {\n  description: string\n  details: { target: string; functionSig: string; callData: string }[]\n}\n/**\n * Need proposal events to get description data emitted from\n * new proposal event.\n */\nfunction useFormattedProposalCreatedLogs(\n  contract: Contract | null,\n  indices: number[][]\n): FormattedProposalLog[] | undefined {\n  // create filters for ProposalCreated events\n  const filter = useMemo(() => contract?.filters?.ProposalCreated(), [contract])\n\n  const useLogsResult = useLogs(filter)\n\n  return useMemo(() => {\n    return useLogsResult?.logs\n      ?.map((log) => {\n        const parsed = GovernanceInterface.parseLog(log).args\n        return parsed\n      })\n      ?.filter((parsed) => indices.flat().some((i) => i === parsed.id.toNumber()))\n      ?.map((parsed) => {\n        let description!: string\n\n        const startBlock = parseInt(parsed.startBlock?.toString())\n        try {\n          description = parsed.description\n        } catch (error) {\n          // replace invalid UTF-8 in the description with replacement characters\n          let onError = Utf8ErrorFuncs.replace\n\n          // Bravo proposal reverses the codepoints for U+2018 (‘) and U+2026 (…)\n          if (startBlock === BRAVO_START_BLOCK) {\n            const U2018 = [0xe2, 0x80, 0x98].toString()\n            const U2026 = [0xe2, 0x80, 0xa6].toString()\n            onError = (reason, offset, bytes, output) => {\n              if (reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n                const charCode = [bytes[offset], bytes[offset + 1], bytes[offset + 2]].reverse().toString()\n                if (charCode === U2018) {\n                  output.push(0x2018)\n                  return 2\n                } else if (charCode === U2026) {\n                  output.push(0x2026)\n                  return 2\n                }\n              }\n              return Utf8ErrorFuncs.replace(reason, offset, bytes, output)\n            }\n          }\n\n          description = JSON.parse(toUtf8String(error.error.value, onError)) || ''\n        }\n\n        // Bravo and one bip proposals omit newlines\n        if (startBlock === BRAVO_START_BLOCK || startBlock === ONE_BIP_START_BLOCK) {\n          description = description.replace(/ {2}/g, '\\n').replace(/\\d\\. /g, '\\n$&')\n        }\n\n        return {\n          description,\n          details: parsed.targets.map((target: string, i: number) => {\n            const signature = parsed.signatures[i]\n            const [name, types] = signature.substr(0, signature.length - 1).split('(')\n            const calldata = parsed.calldatas[i]\n            const decoded = defaultAbiCoder.decode(types.split(','), calldata)\n            return {\n              target,\n              functionSig: name,\n              callData: decoded.join(', '),\n            }\n          }),\n        }\n      })\n  }, [indices, useLogsResult])\n}\n\nconst V0_PROPOSAL_IDS = [[1], [2], [3], [4]]\nconst V1_PROPOSAL_IDS = [[1], [2], [3]]\n\nfunction countToIndices(count: number | undefined, skip = 0) {\n  return typeof count === 'number' ? new Array(count - skip).fill(0).map((_, i) => [i + 1 + skip]) : []\n}\n\n// get data for all past and active proposals\nexport function useAllProposalData(): { data: ProposalData[]; loading: boolean } {\n  const { chainId } = useActiveWeb3React()\n  const gov0 = useGovernanceV0Contract()\n  const gov1 = useGovernanceV1Contract()\n  const gov2 = useGovernanceBravoContract()\n\n  const proposalCount0 = useProposalCount(gov0)\n  const proposalCount1 = useProposalCount(gov1)\n  const proposalCount2 = useProposalCount(gov2)\n\n  const gov0ProposalIndexes = useMemo(() => {\n    return chainId === SupportedChainId.MAINNET ? V0_PROPOSAL_IDS : countToIndices(proposalCount0)\n  }, [chainId, proposalCount0])\n  const gov1ProposalIndexes = useMemo(() => {\n    return chainId === SupportedChainId.MAINNET ? V1_PROPOSAL_IDS : countToIndices(proposalCount1)\n  }, [chainId, proposalCount1])\n  const gov2ProposalIndexes = useMemo(() => {\n    return countToIndices(proposalCount2, 8)\n  }, [proposalCount2])\n\n  const proposalsV0 = useSingleContractMultipleData(gov0, 'proposals', gov0ProposalIndexes)\n  const proposalsV1 = useSingleContractMultipleData(gov1, 'proposals', gov1ProposalIndexes)\n  const proposalsV2 = useSingleContractMultipleData(gov2, 'proposals', gov2ProposalIndexes)\n\n  // get all proposal states\n  const proposalStatesV0 = useSingleContractMultipleData(gov0, 'state', gov0ProposalIndexes)\n  const proposalStatesV1 = useSingleContractMultipleData(gov1, 'state', gov1ProposalIndexes)\n  const proposalStatesV2 = useSingleContractMultipleData(gov2, 'state', gov2ProposalIndexes)\n\n  // get metadata from past events\n  const formattedLogsV0 = useFormattedProposalCreatedLogs(gov0, gov0ProposalIndexes)\n  const formattedLogsV1 = useFormattedProposalCreatedLogs(gov1, gov1ProposalIndexes)\n  const formattedLogsV2 = useFormattedProposalCreatedLogs(gov2, gov2ProposalIndexes)\n\n  // early return until events are fetched\n  return useMemo(() => {\n    const proposalsCallData = [...proposalsV0, ...proposalsV1, ...proposalsV2]\n    const proposalStatesCallData = [...proposalStatesV0, ...proposalStatesV1, ...proposalStatesV2]\n    const formattedLogs = [...(formattedLogsV0 ?? []), ...(formattedLogsV1 ?? []), ...(formattedLogsV2 ?? [])]\n\n    if (\n      proposalsCallData.some((p) => p.loading) ||\n      proposalStatesCallData.some((p) => p.loading) ||\n      (gov0 && !formattedLogsV0) ||\n      (gov1 && !formattedLogsV1) ||\n      (gov2 && !formattedLogsV2)\n    ) {\n      return { data: [], loading: true }\n    }\n\n    return {\n      data: proposalsCallData.map((proposal, i) => {\n        const startBlock = parseInt(proposal?.result?.startBlock?.toString())\n\n        let description = formattedLogs[i]?.description\n        if (startBlock === UNISWAP_GRANTS_START_BLOCK) {\n          description = UNISWAP_GRANTS_PROPOSAL_DESCRIPTION\n        }\n\n        let title = description?.split(/#+\\s|\\n/g)[1]\n        if (startBlock === POLYGON_START_BLOCK) {\n          title = POLYGON_PROPOSAL_TITLE\n        }\n\n        return {\n          id: proposal?.result?.id.toString(),\n          title: title ?? t`Untitled`,\n          description: description ?? t`No description.`,\n          proposer: proposal?.result?.proposer,\n          status: proposalStatesCallData[i]?.result?.[0] ?? ProposalState.UNDETERMINED,\n          forCount: parseFloat(formatUnits(proposal?.result?.forVotes?.toString() ?? 0, 18)),\n          againstCount: parseFloat(formatUnits(proposal?.result?.againstVotes?.toString() ?? 0, 18)),\n          abstainCount: parseFloat(formatUnits(proposal?.result?.abstainVotes?.toString() ?? 0, 18)),\n          startBlock,\n          endBlock: parseInt(proposal?.result?.endBlock?.toString()),\n          details: formattedLogs[i]?.details,\n          governorIndex: i >= proposalsV0.length + proposalsV1.length ? 2 : i >= proposalsV0.length ? 1 : 0,\n        }\n      }),\n      loading: false,\n    }\n  }, [\n    formattedLogsV0,\n    formattedLogsV1,\n    formattedLogsV2,\n    gov0,\n    gov1,\n    gov2,\n    proposalStatesV0,\n    proposalStatesV1,\n    proposalStatesV2,\n    proposalsV0,\n    proposalsV1,\n    proposalsV2,\n  ])\n}\n\nexport function useProposalData(governorIndex: number, id: string): ProposalData | undefined {\n  const { data } = useAllProposalData()\n  return data.filter((p) => p.governorIndex === governorIndex)?.find((p) => p.id === id)\n}\n\n// get the users delegatee if it exists\nexport function useUserDelegatee(): string {\n  const { account } = useActiveWeb3React()\n  const uniContract = useUniContract()\n  const { result } = useSingleCallResult(uniContract, 'delegates', [account ?? undefined])\n  return result?.[0] ?? undefined\n}\n\n// gets the users current votes\nexport function useUserVotes(): { loading: boolean; votes: CurrencyAmount<Token> | undefined } {\n  const { account, chainId } = useActiveWeb3React()\n  const uniContract = useUniContract()\n\n  // check for available votes\n  const { result, loading } = useSingleCallResult(uniContract, 'getCurrentVotes', [account ?? undefined])\n  return useMemo(() => {\n    const uni = chainId ? UNI[chainId] : undefined\n    return { loading, votes: uni && result ? CurrencyAmount.fromRawAmount(uni, result?.[0]) : undefined }\n  }, [chainId, loading, result])\n}\n\n// fetch available votes as of block (usually proposal start block)\nexport function useUserVotesAsOfBlock(block: number | undefined): CurrencyAmount<Token> | undefined {\n  const { account, chainId } = useActiveWeb3React()\n  const uniContract = useUniContract()\n\n  // check for available votes\n  const uni = chainId ? UNI[chainId] : undefined\n  const votes = useSingleCallResult(uniContract, 'getPriorVotes', [account ?? undefined, block ?? undefined])\n    ?.result?.[0]\n  return votes && uni ? CurrencyAmount.fromRawAmount(uni, votes) : undefined\n}\n\nexport function useDelegateCallback(): (delegatee: string | undefined) => undefined | Promise<string> {\n  const { account, chainId, library } = useActiveWeb3React()\n  const addTransaction = useTransactionAdder()\n\n  const uniContract = useUniContract()\n\n  return useCallback(\n    (delegatee: string | undefined) => {\n      if (!library || !chainId || !account || !delegatee || !isAddress(delegatee ?? '')) return undefined\n      const args = [delegatee]\n      if (!uniContract) throw new Error('No UNI Contract!')\n      return uniContract.estimateGas.delegate(...args, {}).then((estimatedGasLimit) => {\n        return uniContract\n          .delegate(...args, { value: null, gasLimit: calculateGasMargin(estimatedGasLimit) })\n          .then((response: TransactionResponse) => {\n            addTransaction(response, {\n              type: TransactionType.DELEGATE,\n              delegatee,\n            })\n            return response.hash\n          })\n      })\n    },\n    [account, addTransaction, chainId, library, uniContract]\n  )\n}\n\nexport function useVoteCallback(): {\n  voteCallback: (proposalId: string | undefined, voteOption: VoteOption) => undefined | Promise<string>\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const latestGovernanceContract = useLatestGovernanceContract()\n\n  const addTransaction = useTransactionAdder()\n\n  const voteCallback = useCallback(\n    (proposalId: string | undefined, voteOption: VoteOption) => {\n      if (!account || !latestGovernanceContract || !proposalId || !chainId) return\n      const args = [proposalId, voteOption === VoteOption.Against ? 0 : voteOption === VoteOption.For ? 1 : 2]\n      return latestGovernanceContract.estimateGas.castVote(...args, {}).then((estimatedGasLimit) => {\n        return latestGovernanceContract\n          .castVote(...args, { value: null, gasLimit: calculateGasMargin(estimatedGasLimit) })\n          .then((response: TransactionResponse) => {\n            addTransaction(response, {\n              type: TransactionType.VOTE,\n              decision: voteOption,\n              governorAddress: latestGovernanceContract.address,\n              proposalId: parseInt(proposalId),\n              reason: '',\n            })\n            return response.hash\n          })\n      })\n    },\n    [account, addTransaction, latestGovernanceContract, chainId]\n  )\n  return { voteCallback }\n}\n\nexport function useCreateProposalCallback(): (\n  createProposalData: CreateProposalData | undefined\n) => undefined | Promise<string> {\n  const { account, chainId } = useActiveWeb3React()\n\n  const latestGovernanceContract = useLatestGovernanceContract()\n  const addTransaction = useTransactionAdder()\n\n  return useCallback(\n    (createProposalData: CreateProposalData | undefined) => {\n      if (!account || !latestGovernanceContract || !createProposalData || !chainId) return undefined\n\n      const args = [\n        createProposalData.targets,\n        createProposalData.values,\n        createProposalData.signatures,\n        createProposalData.calldatas,\n        createProposalData.description,\n      ]\n\n      return latestGovernanceContract.estimateGas.propose(...args).then((estimatedGasLimit) => {\n        return latestGovernanceContract\n          .propose(...args, { gasLimit: calculateGasMargin(estimatedGasLimit) })\n          .then((response: TransactionResponse) => {\n            addTransaction(response, {\n              type: TransactionType.SUBMIT_PROPOSAL,\n            })\n            return response.hash\n          })\n      })\n    },\n    [account, addTransaction, latestGovernanceContract, chainId]\n  )\n}\n\nexport function useLatestProposalId(address: string | undefined): string | undefined {\n  const latestGovernanceContract = useLatestGovernanceContract()\n  const res = useSingleCallResult(latestGovernanceContract, 'latestProposalIds', [address])\n  return res?.result?.[0]?.toString()\n}\n\nexport function useProposalThreshold(): CurrencyAmount<Token> | undefined {\n  const { chainId } = useActiveWeb3React()\n\n  const latestGovernanceContract = useLatestGovernanceContract()\n  const res = useSingleCallResult(latestGovernanceContract, 'proposalThreshold')\n  const uni = chainId ? UNI[chainId] : undefined\n\n  if (res?.result?.[0] && uni) {\n    return CurrencyAmount.fromRawAmount(uni, res.result[0])\n  }\n\n  return undefined\n}\n"]},"metadata":{},"sourceType":"module"}