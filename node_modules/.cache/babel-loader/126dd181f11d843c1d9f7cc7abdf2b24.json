{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Downloads/interface-4.30.1/src/components/AnimatedDropdown/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { animated, useSpring } from 'react-spring';\nimport useResizeObserver from 'use-resize-observer';\n/**\n * @param open conditional to show content or hide\n * @returns Wrapper to smoothly hide and expand content\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AnimatedDropdown({\n  open,\n  children\n}) {\n  _s();\n\n  const {\n    ref,\n    height\n  } = useResizeObserver();\n  const props = useSpring({\n    height: open ? height !== null && height !== void 0 ? height : 0 : 0,\n    config: {\n      mass: 1.2,\n      tension: 300,\n      friction: 20,\n      clamp: true,\n      velocity: 0.01\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(animated.div, {\n    style: { ...props,\n      overflow: 'hidden',\n      width: '100%',\n      willChange: 'height'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AnimatedDropdown, \"RQL92nVJKjQlhfiOX4aF0AqsUFU=\", false, function () {\n  return [useResizeObserver, useSpring];\n});\n\n_c = AnimatedDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnimatedDropdown\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/components/AnimatedDropdown/index.tsx"],"names":["animated","useSpring","useResizeObserver","AnimatedDropdown","open","children","ref","height","props","config","mass","tension","friction","clamp","velocity","overflow","width","willChange"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,cAApC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AAEA;AACA;AACA;AACA;;;AACA,eAAe,SAASC,gBAAT,CAA0B;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAA1B,EAA0F;AAAA;;AACvG,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAkBL,iBAAiB,EAAzC;AAEA,QAAMM,KAAK,GAAGP,SAAS,CAAC;AACtBM,IAAAA,MAAM,EAAEH,IAAI,GAAGG,MAAH,aAAGA,MAAH,cAAGA,MAAH,GAAa,CAAb,GAAiB,CADP;AAEtBE,IAAAA,MAAM,EAAE;AACNC,MAAAA,IAAI,EAAE,GADA;AAENC,MAAAA,OAAO,EAAE,GAFH;AAGNC,MAAAA,QAAQ,EAAE,EAHJ;AAINC,MAAAA,KAAK,EAAE,IAJD;AAKNC,MAAAA,QAAQ,EAAE;AALJ;AAFc,GAAD,CAAvB;AAWA,sBACE,QAAC,QAAD,CAAU,GAAV;AACE,IAAA,KAAK,EAAE,EACL,GAAGN,KADE;AAELO,MAAAA,QAAQ,EAAE,QAFL;AAGLC,MAAAA,KAAK,EAAE,MAHF;AAILC,MAAAA,UAAU,EAAE;AAJP,KADT;AAAA,2BAQE;AAAK,MAAA,GAAG,EAAEX,GAAV;AAAA,gBAAgBD;AAAhB;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GA1BuBF,gB;UACED,iB,EAEVD,S;;;KAHQE,gB","sourcesContent":["import { animated, useSpring } from 'react-spring'\nimport useResizeObserver from 'use-resize-observer'\n\n/**\n * @param open conditional to show content or hide\n * @returns Wrapper to smoothly hide and expand content\n */\nexport default function AnimatedDropdown({ open, children }: React.PropsWithChildren<{ open: boolean }>) {\n  const { ref, height } = useResizeObserver()\n\n  const props = useSpring({\n    height: open ? height ?? 0 : 0,\n    config: {\n      mass: 1.2,\n      tension: 300,\n      friction: 20,\n      clamp: true,\n      velocity: 0.01,\n    },\n  })\n\n  return (\n    <animated.div\n      style={{\n        ...props,\n        overflow: 'hidden',\n        width: '100%',\n        willChange: 'height',\n      }}\n    >\n      <div ref={ref}>{children}</div>\n    </animated.div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}