{"ast":null,"code":"import { Ether, NativeCurrency, Token, WETH9 } from '@uniswap/sdk-core';\nimport { UNI_ADDRESS } from './addresses';\nimport { SupportedChainId } from './chains';\nexport const AMPL = new Token(SupportedChainId.MAINNET, '0xD46bA6D942050d489DBd938a2C909A5d5039A161', 9, 'AMPL', 'Ampleforth');\nexport const DAI = new Token(SupportedChainId.MAINNET, '0x6B175474E89094C44Da98b954EedeAC495271d0F', 18, 'DAI', 'Dai Stablecoin');\nexport const DAI_ARBITRUM_ONE = new Token(SupportedChainId.ARBITRUM_ONE, '0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1', 18, 'DAI', 'Dai stable coin');\nexport const DAI_OPTIMISM = new Token(SupportedChainId.OPTIMISM, '0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1', 18, 'DAI', 'Dai stable coin');\nexport const USDC = new Token(SupportedChainId.MAINNET, '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', 6, 'USDC', 'USD//C');\nexport const USDC_ARBITRUM = new Token(SupportedChainId.ARBITRUM_ONE, '0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8', 6, 'USDC', 'USD//C');\nexport const USDC_POLYGON = new Token(SupportedChainId.POLYGON, '0x2791bca1f2de4661ed88a30c99a7a9449aa84174', 6, 'USDC', 'USD//C');\nexport const DAI_POLYGON = new Token(SupportedChainId.POLYGON, '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063', 18, 'DAI', 'Dai Stablecoin');\nexport const USDT_POLYGON = new Token(SupportedChainId.POLYGON, '0xc2132d05d31c914a87c6611c10748aeb04b58e8f', 6, 'USDT', 'Tether USD');\nexport const WBTC_POLYGON = new Token(SupportedChainId.POLYGON, '0x1bfd67037b42cf73acf2047067bd4f2c47d9bfd6', 8, 'WBTC', 'Wrapped BTC');\nexport const USDC_OPTIMISM = new Token(SupportedChainId.OPTIMISM, '0x7F5c764cBc14f9669B88837ca1490cCa17c31607', 6, 'USDC', 'USD//C');\nexport const USDT = new Token(SupportedChainId.MAINNET, '0xdAC17F958D2ee523a2206206994597C13D831ec7', 6, 'USDT', 'Tether USD');\nexport const USDT_ARBITRUM_ONE = new Token(SupportedChainId.ARBITRUM_ONE, '0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9', 6, 'USDT', 'Tether USD');\nexport const USDT_OPTIMISM = new Token(SupportedChainId.OPTIMISM, '0x94b008aA00579c1307B0EF2c499aD98a8ce58e58', 6, 'USDT', 'Tether USD');\nexport const WBTC = new Token(SupportedChainId.MAINNET, '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599', 8, 'WBTC', 'Wrapped BTC');\nexport const WBTC_ARBITRUM_ONE = new Token(SupportedChainId.ARBITRUM_ONE, '0x2f2a2543B76A4166549F7aaB2e75Bef0aefC5B0f', 8, 'WBTC', 'Wrapped BTC');\nexport const WBTC_OPTIMISM = new Token(SupportedChainId.OPTIMISM, '0x68f180fcCe6836688e9084f035309E29Bf0A2095', 8, 'WBTC', 'Wrapped BTC');\nexport const FEI = new Token(SupportedChainId.MAINNET, '0x956F47F50A910163D8BF957Cf5846D573E7f87CA', 18, 'FEI', 'Fei USD');\nexport const TRIBE = new Token(SupportedChainId.MAINNET, '0xc7283b66Eb1EB5FB86327f08e1B5816b0720212B', 18, 'TRIBE', 'Tribe');\nexport const FRAX = new Token(SupportedChainId.MAINNET, '0x853d955aCEf822Db058eb8505911ED77F175b99e', 18, 'FRAX', 'Frax');\nexport const FXS = new Token(SupportedChainId.MAINNET, '0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0', 18, 'FXS', 'Frax Share');\nexport const renBTC = new Token(SupportedChainId.MAINNET, '0xEB4C2781e4ebA804CE9a9803C67d0893436bB27D', 8, 'renBTC', 'renBTC');\nexport const ETH2X_FLI = new Token(SupportedChainId.MAINNET, '0xAa6E8127831c9DE45ae56bB1b0d4D4Da6e5665BD', 18, 'ETH2x-FLI', 'ETH 2x Flexible Leverage Index');\nexport const sETH2 = new Token(SupportedChainId.MAINNET, '0xFe2e637202056d30016725477c5da089Ab0A043A', 18, 'sETH2', 'StakeWise Staked ETH2');\nexport const rETH2 = new Token(SupportedChainId.MAINNET, '0x20BC832ca081b91433ff6c17f85701B6e92486c5', 18, 'rETH2', 'StakeWise Reward ETH2');\nexport const SWISE = new Token(SupportedChainId.MAINNET, '0x48C3399719B582dD63eB5AADf12A40B4C3f52FA2', 18, 'SWISE', 'StakeWise');\nexport const WETH_POLYGON_MUMBAI = new Token(SupportedChainId.POLYGON_MUMBAI, '0xa6fa4fb5f76172d178d61b04b0ecd319c5d1c0aa', 18, 'WETH', 'Wrapped Ether');\nexport const WETH_POLYGON = new Token(SupportedChainId.POLYGON, '0x7ceb23fd6bc0add59e62ac25578270cff1b9f619', 18, 'WETH', 'Wrapped Ether');\nexport const UNI = {\n  [SupportedChainId.MAINNET]: new Token(SupportedChainId.MAINNET, UNI_ADDRESS[1], 18, 'UNI', 'Uniswap'),\n  [SupportedChainId.RINKEBY]: new Token(SupportedChainId.RINKEBY, UNI_ADDRESS[4], 18, 'UNI', 'Uniswap'),\n  [SupportedChainId.ROPSTEN]: new Token(SupportedChainId.ROPSTEN, UNI_ADDRESS[3], 18, 'UNI', 'Uniswap'),\n  [SupportedChainId.GOERLI]: new Token(SupportedChainId.GOERLI, UNI_ADDRESS[5], 18, 'UNI', 'Uniswap'),\n  [SupportedChainId.KOVAN]: new Token(SupportedChainId.KOVAN, UNI_ADDRESS[42], 18, 'UNI', 'Uniswap')\n};\nexport const WRAPPED_NATIVE_CURRENCY = { ...WETH9,\n  [SupportedChainId.OPTIMISM]: new Token(SupportedChainId.OPTIMISM, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),\n  [SupportedChainId.OPTIMISTIC_KOVAN]: new Token(SupportedChainId.OPTIMISTIC_KOVAN, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),\n  [SupportedChainId.ARBITRUM_ONE]: new Token(SupportedChainId.ARBITRUM_ONE, '0x82aF49447D8a07e3bd95BD0d56f35241523fBab1', 18, 'WETH', 'Wrapped Ether'),\n  [SupportedChainId.ARBITRUM_RINKEBY]: new Token(SupportedChainId.ARBITRUM_RINKEBY, '0xB47e6A5f8b33b3F17603C83a0535A9dcD7E32681', 18, 'WETH', 'Wrapped Ether'),\n  [SupportedChainId.POLYGON]: new Token(SupportedChainId.POLYGON, '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', 18, 'WMATIC', 'Wrapped MATIC'),\n  [SupportedChainId.POLYGON_MUMBAI]: new Token(SupportedChainId.POLYGON_MUMBAI, '0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', 18, 'WMATIC', 'Wrapped MATIC')\n};\n\nfunction isMatic(chainId) {\n  return chainId === SupportedChainId.POLYGON_MUMBAI || chainId === SupportedChainId.POLYGON;\n}\n\nclass MaticNativeCurrency extends NativeCurrency {\n  equals(other) {\n    return other.isNative && other.chainId === this.chainId;\n  }\n\n  get wrapped() {\n    if (!isMatic(this.chainId)) throw new Error('Not matic');\n    return WRAPPED_NATIVE_CURRENCY[this.chainId];\n  }\n\n  constructor(chainId) {\n    if (!isMatic(chainId)) throw new Error('Not matic');\n    super(chainId, 18, 'MATIC', 'Polygon Matic');\n  }\n\n}\n\nexport class ExtendedEther extends Ether {\n  get wrapped() {\n    if (this.chainId in WRAPPED_NATIVE_CURRENCY) return WRAPPED_NATIVE_CURRENCY[this.chainId];\n    throw new Error('Unsupported chain ID');\n  }\n\n  static onChain(chainId) {\n    var _this$_cachedExtended;\n\n    return (_this$_cachedExtended = this._cachedExtendedEther[chainId]) !== null && _this$_cachedExtended !== void 0 ? _this$_cachedExtended : this._cachedExtendedEther[chainId] = new ExtendedEther(chainId);\n  }\n\n}\nExtendedEther._cachedExtendedEther = {};\nconst cachedNativeCurrency = {};\nexport function nativeOnChain(chainId) {\n  var _cachedNativeCurrency;\n\n  return (_cachedNativeCurrency = cachedNativeCurrency[chainId]) !== null && _cachedNativeCurrency !== void 0 ? _cachedNativeCurrency : cachedNativeCurrency[chainId] = isMatic(chainId) ? new MaticNativeCurrency(chainId) : ExtendedEther.onChain(chainId);\n}","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/constants/tokens.ts"],"names":["Ether","NativeCurrency","Token","WETH9","UNI_ADDRESS","SupportedChainId","AMPL","MAINNET","DAI","DAI_ARBITRUM_ONE","ARBITRUM_ONE","DAI_OPTIMISM","OPTIMISM","USDC","USDC_ARBITRUM","USDC_POLYGON","POLYGON","DAI_POLYGON","USDT_POLYGON","WBTC_POLYGON","USDC_OPTIMISM","USDT","USDT_ARBITRUM_ONE","USDT_OPTIMISM","WBTC","WBTC_ARBITRUM_ONE","WBTC_OPTIMISM","FEI","TRIBE","FRAX","FXS","renBTC","ETH2X_FLI","sETH2","rETH2","SWISE","WETH_POLYGON_MUMBAI","POLYGON_MUMBAI","WETH_POLYGON","UNI","RINKEBY","ROPSTEN","GOERLI","KOVAN","WRAPPED_NATIVE_CURRENCY","OPTIMISTIC_KOVAN","ARBITRUM_RINKEBY","isMatic","chainId","MaticNativeCurrency","equals","other","isNative","wrapped","Error","constructor","ExtendedEther","onChain","_cachedExtendedEther","cachedNativeCurrency","nativeOnChain"],"mappings":"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","sourcesContent":["import { Currency, Ether, NativeCurrency, Token, WETH9 } from '@uniswap/sdk-core'\n\nimport { UNI_ADDRESS } from './addresses'\nimport { SupportedChainId } from './chains'\n\nexport const AMPL = new Token(\n  SupportedChainId.MAINNET,\n  '0xD46bA6D942050d489DBd938a2C909A5d5039A161',\n  9,\n  'AMPL',\n  'Ampleforth'\n)\nexport const DAI = new Token(\n  SupportedChainId.MAINNET,\n  '0x6B175474E89094C44Da98b954EedeAC495271d0F',\n  18,\n  'DAI',\n  'Dai Stablecoin'\n)\nexport const DAI_ARBITRUM_ONE = new Token(\n  SupportedChainId.ARBITRUM_ONE,\n  '0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1',\n  18,\n  'DAI',\n  'Dai stable coin'\n)\nexport const DAI_OPTIMISM = new Token(\n  SupportedChainId.OPTIMISM,\n  '0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1',\n  18,\n  'DAI',\n  'Dai stable coin'\n)\nexport const USDC = new Token(\n  SupportedChainId.MAINNET,\n  '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n  6,\n  'USDC',\n  'USD//C'\n)\nexport const USDC_ARBITRUM = new Token(\n  SupportedChainId.ARBITRUM_ONE,\n  '0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8',\n  6,\n  'USDC',\n  'USD//C'\n)\nexport const USDC_POLYGON = new Token(\n  SupportedChainId.POLYGON,\n  '0x2791bca1f2de4661ed88a30c99a7a9449aa84174',\n  6,\n  'USDC',\n  'USD//C'\n)\nexport const DAI_POLYGON = new Token(\n  SupportedChainId.POLYGON,\n  '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n  18,\n  'DAI',\n  'Dai Stablecoin'\n)\nexport const USDT_POLYGON = new Token(\n  SupportedChainId.POLYGON,\n  '0xc2132d05d31c914a87c6611c10748aeb04b58e8f',\n  6,\n  'USDT',\n  'Tether USD'\n)\nexport const WBTC_POLYGON = new Token(\n  SupportedChainId.POLYGON,\n  '0x1bfd67037b42cf73acf2047067bd4f2c47d9bfd6',\n  8,\n  'WBTC',\n  'Wrapped BTC'\n)\nexport const USDC_OPTIMISM = new Token(\n  SupportedChainId.OPTIMISM,\n  '0x7F5c764cBc14f9669B88837ca1490cCa17c31607',\n  6,\n  'USDC',\n  'USD//C'\n)\nexport const USDT = new Token(\n  SupportedChainId.MAINNET,\n  '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n  6,\n  'USDT',\n  'Tether USD'\n)\nexport const USDT_ARBITRUM_ONE = new Token(\n  SupportedChainId.ARBITRUM_ONE,\n  '0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9',\n  6,\n  'USDT',\n  'Tether USD'\n)\nexport const USDT_OPTIMISM = new Token(\n  SupportedChainId.OPTIMISM,\n  '0x94b008aA00579c1307B0EF2c499aD98a8ce58e58',\n  6,\n  'USDT',\n  'Tether USD'\n)\nexport const WBTC = new Token(\n  SupportedChainId.MAINNET,\n  '0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599',\n  8,\n  'WBTC',\n  'Wrapped BTC'\n)\nexport const WBTC_ARBITRUM_ONE = new Token(\n  SupportedChainId.ARBITRUM_ONE,\n  '0x2f2a2543B76A4166549F7aaB2e75Bef0aefC5B0f',\n  8,\n  'WBTC',\n  'Wrapped BTC'\n)\nexport const WBTC_OPTIMISM = new Token(\n  SupportedChainId.OPTIMISM,\n  '0x68f180fcCe6836688e9084f035309E29Bf0A2095',\n  8,\n  'WBTC',\n  'Wrapped BTC'\n)\nexport const FEI = new Token(\n  SupportedChainId.MAINNET,\n  '0x956F47F50A910163D8BF957Cf5846D573E7f87CA',\n  18,\n  'FEI',\n  'Fei USD'\n)\nexport const TRIBE = new Token(\n  SupportedChainId.MAINNET,\n  '0xc7283b66Eb1EB5FB86327f08e1B5816b0720212B',\n  18,\n  'TRIBE',\n  'Tribe'\n)\nexport const FRAX = new Token(\n  SupportedChainId.MAINNET,\n  '0x853d955aCEf822Db058eb8505911ED77F175b99e',\n  18,\n  'FRAX',\n  'Frax'\n)\nexport const FXS = new Token(\n  SupportedChainId.MAINNET,\n  '0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0',\n  18,\n  'FXS',\n  'Frax Share'\n)\nexport const renBTC = new Token(\n  SupportedChainId.MAINNET,\n  '0xEB4C2781e4ebA804CE9a9803C67d0893436bB27D',\n  8,\n  'renBTC',\n  'renBTC'\n)\nexport const ETH2X_FLI = new Token(\n  SupportedChainId.MAINNET,\n  '0xAa6E8127831c9DE45ae56bB1b0d4D4Da6e5665BD',\n  18,\n  'ETH2x-FLI',\n  'ETH 2x Flexible Leverage Index'\n)\nexport const sETH2 = new Token(\n  SupportedChainId.MAINNET,\n  '0xFe2e637202056d30016725477c5da089Ab0A043A',\n  18,\n  'sETH2',\n  'StakeWise Staked ETH2'\n)\nexport const rETH2 = new Token(\n  SupportedChainId.MAINNET,\n  '0x20BC832ca081b91433ff6c17f85701B6e92486c5',\n  18,\n  'rETH2',\n  'StakeWise Reward ETH2'\n)\nexport const SWISE = new Token(\n  SupportedChainId.MAINNET,\n  '0x48C3399719B582dD63eB5AADf12A40B4C3f52FA2',\n  18,\n  'SWISE',\n  'StakeWise'\n)\nexport const WETH_POLYGON_MUMBAI = new Token(\n  SupportedChainId.POLYGON_MUMBAI,\n  '0xa6fa4fb5f76172d178d61b04b0ecd319c5d1c0aa',\n  18,\n  'WETH',\n  'Wrapped Ether'\n)\n\nexport const WETH_POLYGON = new Token(\n  SupportedChainId.POLYGON,\n  '0x7ceb23fd6bc0add59e62ac25578270cff1b9f619',\n  18,\n  'WETH',\n  'Wrapped Ether'\n)\nexport const UNI: { [chainId: number]: Token } = {\n  [SupportedChainId.MAINNET]: new Token(SupportedChainId.MAINNET, UNI_ADDRESS[1], 18, 'UNI', 'Uniswap'),\n  [SupportedChainId.RINKEBY]: new Token(SupportedChainId.RINKEBY, UNI_ADDRESS[4], 18, 'UNI', 'Uniswap'),\n  [SupportedChainId.ROPSTEN]: new Token(SupportedChainId.ROPSTEN, UNI_ADDRESS[3], 18, 'UNI', 'Uniswap'),\n  [SupportedChainId.GOERLI]: new Token(SupportedChainId.GOERLI, UNI_ADDRESS[5], 18, 'UNI', 'Uniswap'),\n  [SupportedChainId.KOVAN]: new Token(SupportedChainId.KOVAN, UNI_ADDRESS[42], 18, 'UNI', 'Uniswap'),\n}\n\nexport const WRAPPED_NATIVE_CURRENCY: { [chainId: number]: Token } = {\n  ...WETH9,\n  [SupportedChainId.OPTIMISM]: new Token(\n    SupportedChainId.OPTIMISM,\n    '0x4200000000000000000000000000000000000006',\n    18,\n    'WETH',\n    'Wrapped Ether'\n  ),\n  [SupportedChainId.OPTIMISTIC_KOVAN]: new Token(\n    SupportedChainId.OPTIMISTIC_KOVAN,\n    '0x4200000000000000000000000000000000000006',\n    18,\n    'WETH',\n    'Wrapped Ether'\n  ),\n  [SupportedChainId.ARBITRUM_ONE]: new Token(\n    SupportedChainId.ARBITRUM_ONE,\n    '0x82aF49447D8a07e3bd95BD0d56f35241523fBab1',\n    18,\n    'WETH',\n    'Wrapped Ether'\n  ),\n  [SupportedChainId.ARBITRUM_RINKEBY]: new Token(\n    SupportedChainId.ARBITRUM_RINKEBY,\n    '0xB47e6A5f8b33b3F17603C83a0535A9dcD7E32681',\n    18,\n    'WETH',\n    'Wrapped Ether'\n  ),\n  [SupportedChainId.POLYGON]: new Token(\n    SupportedChainId.POLYGON,\n    '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270',\n    18,\n    'WMATIC',\n    'Wrapped MATIC'\n  ),\n  [SupportedChainId.POLYGON_MUMBAI]: new Token(\n    SupportedChainId.POLYGON_MUMBAI,\n    '0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889',\n    18,\n    'WMATIC',\n    'Wrapped MATIC'\n  ),\n}\n\nfunction isMatic(chainId: number): chainId is SupportedChainId.POLYGON | SupportedChainId.POLYGON_MUMBAI {\n  return chainId === SupportedChainId.POLYGON_MUMBAI || chainId === SupportedChainId.POLYGON\n}\n\nclass MaticNativeCurrency extends NativeCurrency {\n  equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n\n  get wrapped(): Token {\n    if (!isMatic(this.chainId)) throw new Error('Not matic')\n    return WRAPPED_NATIVE_CURRENCY[this.chainId]\n  }\n\n  public constructor(chainId: number) {\n    if (!isMatic(chainId)) throw new Error('Not matic')\n    super(chainId, 18, 'MATIC', 'Polygon Matic')\n  }\n}\n\nexport class ExtendedEther extends Ether {\n  public get wrapped(): Token {\n    if (this.chainId in WRAPPED_NATIVE_CURRENCY) return WRAPPED_NATIVE_CURRENCY[this.chainId]\n    throw new Error('Unsupported chain ID')\n  }\n\n  private static _cachedExtendedEther: { [chainId: number]: NativeCurrency } = {}\n\n  public static onChain(chainId: number): ExtendedEther {\n    return this._cachedExtendedEther[chainId] ?? (this._cachedExtendedEther[chainId] = new ExtendedEther(chainId))\n  }\n}\n\nconst cachedNativeCurrency: { [chainId: number]: NativeCurrency } = {}\nexport function nativeOnChain(chainId: number): NativeCurrency {\n  return (\n    cachedNativeCurrency[chainId] ??\n    (cachedNativeCurrency[chainId] = isMatic(chainId)\n      ? new MaticNativeCurrency(chainId)\n      : ExtendedEther.onChain(chainId))\n  )\n}\n"]},"metadata":{},"sourceType":"module"}