{"ast":null,"code":"import _createClass from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _regeneratorRuntime from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _createForOfIteratorHelper from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _asyncToGenerator from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _inherits from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _wrapNativeSuper from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper\";import{AbstractConnector}from'@web3-react/abstract-connector';import invariant from'tiny-invariant';var RequestError=/*#__PURE__*/function(_Error){_inherits(RequestError,_Error);var _super=_createSuper(RequestError);function RequestError(message,code,data){var _this;_classCallCheck(this,RequestError);_this=_super.call(this,message);_this.code=code;_this.data=data;return _this;}return RequestError;}(/*#__PURE__*/_wrapNativeSuper(Error));var MiniRpcProvider=function MiniRpcProvider(connector,chainId,url,batchWaitTimeMs){var _this2=this;_classCallCheck(this,MiniRpcProvider);this.isMetaMask=false;this.chainId=void 0;this.url=void 0;this.host=void 0;this.path=void 0;this.batchWaitTimeMs=void 0;this.connector=void 0;this.nextId=1;this.batchTimeoutId=null;this.batch=[];this.clearBatch=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var batch,response,json,byKey,_iterator,_step,_result,_byKey$_result$id,resolve,reject,method,_result$error,_result$error2,_result$error3;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.debug('Clearing batch',_this2.batch);batch=_this2.batch;batch=batch.filter(function(b){if(b.request.method==='wallet_switchEthereumChain'){try{_this2.connector.changeChainId(parseInt(b.request.params[0].chainId));b.resolve({id:b.request.id});}catch(error){b.reject(error);}return false;}return true;});_this2.batch=[];_this2.batchTimeoutId=null;_context.prev=5;_context.next=8;return fetch(_this2.url,{method:'POST',headers:{'content-type':'application/json',accept:'application/json'},body:JSON.stringify(batch.map(function(item){return item.request;}))});case 8:response=_context.sent;_context.next=15;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](5);batch.forEach(function(_ref2){var reject=_ref2.reject;return reject(new Error('Failed to send batch call'));});return _context.abrupt(\"return\");case 15:if(response.ok){_context.next=18;break;}batch.forEach(function(_ref3){var reject=_ref3.reject;return reject(new RequestError(\"\".concat(response.status,\": \").concat(response.statusText),-32000));});return _context.abrupt(\"return\");case 18:_context.prev=18;_context.next=21;return response.json();case 21:json=_context.sent;_context.next=28;break;case 24:_context.prev=24;_context.t1=_context[\"catch\"](18);batch.forEach(function(_ref4){var reject=_ref4.reject;return reject(new Error('Failed to parse JSON response'));});return _context.abrupt(\"return\");case 28:byKey=batch.reduce(function(memo,current){memo[current.request.id]=current;return memo;},{});_iterator=_createForOfIteratorHelper(json);try{for(_iterator.s();!(_step=_iterator.n()).done;){_result=_step.value;_byKey$_result$id=byKey[_result.id],resolve=_byKey$_result$id.resolve,reject=_byKey$_result$id.reject,method=_byKey$_result$id.request.method;if('error'in _result){reject(new RequestError(_result===null||_result===void 0?void 0:(_result$error=_result.error)===null||_result$error===void 0?void 0:_result$error.message,_result===null||_result===void 0?void 0:(_result$error2=_result.error)===null||_result$error2===void 0?void 0:_result$error2.code,_result===null||_result===void 0?void 0:(_result$error3=_result.error)===null||_result$error3===void 0?void 0:_result$error3.data));}else if('result'in _result&&resolve){resolve(_result.result);}else{reject(new RequestError(\"Received unexpected JSON-RPC response to \".concat(method,\" request.\"),-32000,_result));}}}catch(err){_iterator.e(err);}finally{_iterator.f();}case 31:case\"end\":return _context.stop();}}},_callee,null,[[5,11],[18,24]]);}));this.sendAsync=function(request,callback){_this2.request(request.method,request.params).then(function(result){return callback(null,{jsonrpc:'2.0',id:request.id,result:result});}).catch(function(error){return callback(error,null);});};this.request=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(method,params){var _this2$batchTimeoutId;var promise;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(typeof method!=='string')){_context2.next=2;break;}return _context2.abrupt(\"return\",_this2.request(method.method,method.params));case 2:if(!(method==='eth_chainId')){_context2.next=4;break;}return _context2.abrupt(\"return\",\"0x\".concat(_this2.chainId.toString(16)));case 4:promise=new Promise(function(resolve,reject){_this2.batch.push({request:{jsonrpc:'2.0',id:_this2.nextId++,method:method,params:params},resolve:resolve,reject:reject});});_this2.batchTimeoutId=(_this2$batchTimeoutId=_this2.batchTimeoutId)!==null&&_this2$batchTimeoutId!==void 0?_this2$batchTimeoutId:setTimeout(_this2.clearBatch,_this2.batchWaitTimeMs);return _context2.abrupt(\"return\",promise);case 7:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x,_x2){return _ref5.apply(this,arguments);};}();this.connector=connector;this.chainId=chainId;this.url=url;var parsed=new URL(url);this.host=parsed.host;this.path=parsed.pathname;// how long to wait to batch calls\nthis.batchWaitTimeMs=batchWaitTimeMs!==null&&batchWaitTimeMs!==void 0?batchWaitTimeMs:50;};export var NetworkConnector=/*#__PURE__*/function(_AbstractConnector){_inherits(NetworkConnector,_AbstractConnector);var _super2=_createSuper(NetworkConnector);function NetworkConnector(_ref6){var _this3;var urls=_ref6.urls,defaultChainId=_ref6.defaultChainId;_classCallCheck(this,NetworkConnector);invariant(defaultChainId||Object.keys(urls).length===1,'defaultChainId is a required argument with >1 url');_this3=_super2.call(this,{supportedChainIds:Object.keys(urls).map(function(k){return Number(k);})});_this3.providers=void 0;_this3.currentChainId=void 0;_this3.currentChainId=defaultChainId!==null&&defaultChainId!==void 0?defaultChainId:Number(Object.keys(urls)[0]);_this3.providers=Object.keys(urls).reduce(function(accumulator,chainId){accumulator[Number(chainId)]=new MiniRpcProvider(_assertThisInitialized(_this3),Number(chainId),urls[Number(chainId)]);return accumulator;},{});return _this3;}_createClass(NetworkConnector,[{key:\"provider\",get:function get(){return this.providers[this.currentChainId];}},{key:\"activate\",value:function(){var _activate=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:return _context3.abrupt(\"return\",{provider:this.providers[this.currentChainId],chainId:this.currentChainId,account:null});case 1:case\"end\":return _context3.stop();}}},_callee3,this);}));function activate(){return _activate.apply(this,arguments);}return activate;}()},{key:\"getProvider\",value:function(){var _getProvider=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:return _context4.abrupt(\"return\",this.providers[this.currentChainId]);case 1:case\"end\":return _context4.stop();}}},_callee4,this);}));function getProvider(){return _getProvider.apply(this,arguments);}return getProvider;}()},{key:\"getChainId\",value:function(){var _getChainId=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:return _context5.abrupt(\"return\",this.currentChainId);case 1:case\"end\":return _context5.stop();}}},_callee5,this);}));function getChainId(){return _getChainId.apply(this,arguments);}return getChainId;}()},{key:\"getAccount\",value:function(){var _getAccount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(){return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:return _context6.abrupt(\"return\",null);case 1:case\"end\":return _context6.stop();}}},_callee6);}));function getAccount(){return _getAccount.apply(this,arguments);}return getAccount;}()},{key:\"deactivate\",value:function deactivate(){return;}/**\n   * Meant to be called only by MiniRpcProvider\n   * @param chainId the new chain id\n   */},{key:\"changeChainId\",value:function changeChainId(chainId){if(chainId in this.providers){this.currentChainId=chainId;this.emitUpdate({chainId:chainId,account:null,provider:this.providers[chainId]});}else{throw new Error(\"Unsupported chain ID: \".concat(chainId));}}}]);return NetworkConnector;}(AbstractConnector);","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/connectors/NetworkConnector.ts"],"names":["AbstractConnector","invariant","RequestError","message","code","data","Error","MiniRpcProvider","connector","chainId","url","batchWaitTimeMs","isMetaMask","host","path","nextId","batchTimeoutId","batch","clearBatch","console","debug","filter","b","request","method","changeChainId","parseInt","params","resolve","id","error","reject","fetch","headers","accept","body","JSON","stringify","map","item","response","forEach","ok","status","statusText","json","byKey","reduce","memo","current","result","sendAsync","callback","then","jsonrpc","catch","toString","promise","Promise","push","setTimeout","parsed","URL","pathname","NetworkConnector","urls","defaultChainId","Object","keys","length","supportedChainIds","k","Number","providers","currentChainId","accumulator","provider","account","emitUpdate"],"mappings":"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","sourcesContent":["import { AbstractConnector } from '@web3-react/abstract-connector'\nimport { ConnectorUpdate } from '@web3-react/types'\nimport invariant from 'tiny-invariant'\n\ninterface NetworkConnectorArguments {\n  urls: { [chainId: number]: string }\n  defaultChainId?: number\n}\n\n// taken from ethers.js, compatible interface with web3 provider\ntype AsyncSendable = {\n  isMetaMask?: boolean\n  host?: string\n  path?: string\n  sendAsync?: (request: any, callback: (error: any, response: any) => void) => void\n  send?: (request: any, callback: (error: any, response: any) => void) => void\n}\n\nclass RequestError extends Error {\n  constructor(message: string, public code: number, public data?: unknown) {\n    super(message)\n  }\n}\n\ninterface BatchItem {\n  request: { jsonrpc: '2.0'; id: number; method: string; params: unknown }\n  resolve: (result: any) => void\n  reject: (error: Error) => void\n}\n\nclass MiniRpcProvider implements AsyncSendable {\n  public readonly isMetaMask: false = false\n  public readonly chainId: number\n  public readonly url: string\n  public readonly host: string\n  public readonly path: string\n  public readonly batchWaitTimeMs: number\n\n  private readonly connector: NetworkConnector\n\n  private nextId = 1\n  private batchTimeoutId: ReturnType<typeof setTimeout> | null = null\n  private batch: BatchItem[] = []\n\n  constructor(connector: NetworkConnector, chainId: number, url: string, batchWaitTimeMs?: number) {\n    this.connector = connector\n    this.chainId = chainId\n    this.url = url\n    const parsed = new URL(url)\n    this.host = parsed.host\n    this.path = parsed.pathname\n    // how long to wait to batch calls\n    this.batchWaitTimeMs = batchWaitTimeMs ?? 50\n  }\n\n  public readonly clearBatch = async () => {\n    console.debug('Clearing batch', this.batch)\n    let batch = this.batch\n\n    batch = batch.filter((b) => {\n      if (b.request.method === 'wallet_switchEthereumChain') {\n        try {\n          this.connector.changeChainId(parseInt((b.request.params as [{ chainId: string }])[0].chainId))\n          b.resolve({ id: b.request.id })\n        } catch (error) {\n          b.reject(error)\n        }\n        return false\n      }\n      return true\n    })\n\n    this.batch = []\n    this.batchTimeoutId = null\n    let response: Response\n    try {\n      response = await fetch(this.url, {\n        method: 'POST',\n        headers: { 'content-type': 'application/json', accept: 'application/json' },\n        body: JSON.stringify(batch.map((item) => item.request)),\n      })\n    } catch (error) {\n      batch.forEach(({ reject }) => reject(new Error('Failed to send batch call')))\n      return\n    }\n\n    if (!response.ok) {\n      batch.forEach(({ reject }) => reject(new RequestError(`${response.status}: ${response.statusText}`, -32000)))\n      return\n    }\n\n    let json\n    try {\n      json = await response.json()\n    } catch (error) {\n      batch.forEach(({ reject }) => reject(new Error('Failed to parse JSON response')))\n      return\n    }\n    const byKey = batch.reduce<{ [id: number]: BatchItem }>((memo, current) => {\n      memo[current.request.id] = current\n      return memo\n    }, {})\n    for (const result of json) {\n      const {\n        resolve,\n        reject,\n        request: { method },\n      } = byKey[result.id]\n      if ('error' in result) {\n        reject(new RequestError(result?.error?.message, result?.error?.code, result?.error?.data))\n      } else if ('result' in result && resolve) {\n        resolve(result.result)\n      } else {\n        reject(new RequestError(`Received unexpected JSON-RPC response to ${method} request.`, -32000, result))\n      }\n    }\n  }\n\n  public readonly sendAsync = (\n    request: {\n      jsonrpc: '2.0'\n      id: number | string | null\n      method: string\n      params?: unknown[] | Record<string, unknown>\n    },\n    callback: (error: any, response: any) => void\n  ): void => {\n    this.request(request.method, request.params)\n      .then((result) => callback(null, { jsonrpc: '2.0', id: request.id, result }))\n      .catch((error) => callback(error, null))\n  }\n\n  public readonly request = async (\n    method: string | { method: string; params: unknown[] },\n    params?: unknown[] | Record<string, unknown>\n  ): Promise<unknown> => {\n    if (typeof method !== 'string') {\n      return this.request(method.method, method.params)\n    }\n    if (method === 'eth_chainId') {\n      return `0x${this.chainId.toString(16)}`\n    }\n    const promise = new Promise((resolve, reject) => {\n      this.batch.push({\n        request: {\n          jsonrpc: '2.0',\n          id: this.nextId++,\n          method,\n          params,\n        },\n        resolve,\n        reject,\n      })\n    })\n    this.batchTimeoutId = this.batchTimeoutId ?? setTimeout(this.clearBatch, this.batchWaitTimeMs)\n    return promise\n  }\n}\n\nexport class NetworkConnector extends AbstractConnector {\n  private readonly providers: { [chainId: number]: MiniRpcProvider }\n  private currentChainId: number\n\n  constructor({ urls, defaultChainId }: NetworkConnectorArguments) {\n    invariant(defaultChainId || Object.keys(urls).length === 1, 'defaultChainId is a required argument with >1 url')\n    super({ supportedChainIds: Object.keys(urls).map((k): number => Number(k)) })\n\n    this.currentChainId = defaultChainId ?? Number(Object.keys(urls)[0])\n    this.providers = Object.keys(urls).reduce<{ [chainId: number]: MiniRpcProvider }>((accumulator, chainId) => {\n      accumulator[Number(chainId)] = new MiniRpcProvider(this, Number(chainId), urls[Number(chainId)])\n      return accumulator\n    }, {})\n  }\n\n  public get provider(): MiniRpcProvider {\n    return this.providers[this.currentChainId]\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    return { provider: this.providers[this.currentChainId], chainId: this.currentChainId, account: null }\n  }\n\n  public async getProvider(): Promise<MiniRpcProvider> {\n    return this.providers[this.currentChainId]\n  }\n\n  public async getChainId(): Promise<number> {\n    return this.currentChainId\n  }\n\n  public async getAccount(): Promise<null> {\n    return null\n  }\n\n  public deactivate() {\n    return\n  }\n\n  /**\n   * Meant to be called only by MiniRpcProvider\n   * @param chainId the new chain id\n   */\n  public changeChainId(chainId: number) {\n    if (chainId in this.providers) {\n      this.currentChainId = chainId\n      this.emitUpdate({\n        chainId,\n        account: null,\n        provider: this.providers[chainId],\n      })\n    } else {\n      throw new Error(`Unsupported chain ID: ${chainId}`)\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}