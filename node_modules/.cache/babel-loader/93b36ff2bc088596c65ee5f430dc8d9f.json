{"ast":null,"code":"import{useActiveWeb3React}from'../../hooks/web3';import{useBlockNumber}from'../application/hooks';import{multicall}from'./instance';// re-export for convenience\nexport{NEVER_RELOAD}from'@uniswap/redux-multicall';// re-export for convenience\nvar _multicall$hooks=multicall.hooks,_useMultipleContractSingleData=_multicall$hooks.useMultipleContractSingleData,_useSingleCallResult=_multicall$hooks.useSingleCallResult,_useSingleContractMultipleData=_multicall$hooks.useSingleContractMultipleData,_useSingleContractWithCallData=_multicall$hooks.useSingleContractWithCallData;// Create wrappers for hooks so consumers don't need to get latest block themselves\nexport function useMultipleContractSingleData(){var _useCallContext=useCallContext(),chainId=_useCallContext.chainId,latestBlock=_useCallContext.latestBlock;for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return _useMultipleContractSingleData.apply(void 0,[chainId,latestBlock].concat(args));}export function useSingleCallResult(){var _useCallContext2=useCallContext(),chainId=_useCallContext2.chainId,latestBlock=_useCallContext2.latestBlock;for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++){args[_key2]=arguments[_key2];}return _useSingleCallResult.apply(void 0,[chainId,latestBlock].concat(args));}export function useSingleContractMultipleData(){var _useCallContext3=useCallContext(),chainId=_useCallContext3.chainId,latestBlock=_useCallContext3.latestBlock;for(var _len3=arguments.length,args=new Array(_len3),_key3=0;_key3<_len3;_key3++){args[_key3]=arguments[_key3];}return _useSingleContractMultipleData.apply(void 0,[chainId,latestBlock].concat(args));}export function useSingleContractWithCallData(){var _useCallContext4=useCallContext(),chainId=_useCallContext4.chainId,latestBlock=_useCallContext4.latestBlock;for(var _len4=arguments.length,args=new Array(_len4),_key4=0;_key4<_len4;_key4++){args[_key4]=arguments[_key4];}return _useSingleContractWithCallData.apply(void 0,[chainId,latestBlock].concat(args));}function useCallContext(){var _useActiveWeb3React=useActiveWeb3React(),chainId=_useActiveWeb3React.chainId;var latestBlock=useBlockNumber();return{chainId:chainId,latestBlock:latestBlock};}","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/state/multicall/hooks.ts"],"names":["useActiveWeb3React","useBlockNumber","multicall","NEVER_RELOAD","hooks","_useMultipleContractSingleData","useMultipleContractSingleData","_useSingleCallResult","useSingleCallResult","_useSingleContractMultipleData","useSingleContractMultipleData","_useSingleContractWithCallData","useSingleContractWithCallData","useCallContext","chainId","latestBlock","args"],"mappings":"AAAA,OAASA,kBAAT,KAAmC,kBAAnC,CAEA,OAASC,cAAT,KAA+B,sBAA/B,CACA,OAASC,SAAT,KAA0B,YAA1B,CACgE;AAChE,OAASC,YAAT,KAA6B,0BAA7B,CAAwD;AAExD,qBAKID,SAAS,CAACE,KALd,CACiCC,8BADjC,kBACEC,6BADF,CAEuBC,oBAFvB,kBAEEC,mBAFF,CAGiCC,8BAHjC,kBAGEC,6BAHF,CAIiCC,8BAJjC,kBAIEC,6BAJF,CAOA;AAIA,MAAO,SAASN,CAAAA,6BAAT,EAA2G,CAChH,oBAAiCO,cAAc,EAA/C,CAAQC,OAAR,iBAAQA,OAAR,CAAiBC,WAAjB,iBAAiBA,WAAjB,CADgH,8BAAjEC,IAAiE,0CAAjEA,IAAiE,wBAEhH,MAAOX,CAAAA,8BAA8B,MAA9B,SAA+BS,OAA/B,CAAwCC,WAAxC,SAAwDC,IAAxD,EAAP,CACD,CAED,MAAO,SAASR,CAAAA,mBAAT,EAAuF,CAC5F,qBAAiCK,cAAc,EAA/C,CAAQC,OAAR,kBAAQA,OAAR,CAAiBC,WAAjB,kBAAiBA,WAAjB,CAD4F,+BAAvDC,IAAuD,+CAAvDA,IAAuD,0BAE5F,MAAOT,CAAAA,oBAAoB,MAApB,SAAqBO,OAArB,CAA8BC,WAA9B,SAA8CC,IAA9C,EAAP,CACD,CAED,MAAO,SAASN,CAAAA,6BAAT,EAA2G,CAChH,qBAAiCG,cAAc,EAA/C,CAAQC,OAAR,kBAAQA,OAAR,CAAiBC,WAAjB,kBAAiBA,WAAjB,CADgH,+BAAjEC,IAAiE,+CAAjEA,IAAiE,0BAEhH,MAAOP,CAAAA,8BAA8B,MAA9B,SAA+BK,OAA/B,CAAwCC,WAAxC,SAAwDC,IAAxD,EAAP,CACD,CAED,MAAO,SAASJ,CAAAA,6BAAT,EAA2G,CAChH,qBAAiCC,cAAc,EAA/C,CAAQC,OAAR,kBAAQA,OAAR,CAAiBC,WAAjB,kBAAiBA,WAAjB,CADgH,+BAAjEC,IAAiE,+CAAjEA,IAAiE,0BAEhH,MAAOL,CAAAA,8BAA8B,MAA9B,SAA+BG,OAA/B,CAAwCC,WAAxC,SAAwDC,IAAxD,EAAP,CACD,CAED,QAASH,CAAAA,cAAT,EAA0B,CACxB,wBAAoBb,kBAAkB,EAAtC,CAAQc,OAAR,qBAAQA,OAAR,CACA,GAAMC,CAAAA,WAAW,CAAGd,cAAc,EAAlC,CACA,MAAO,CAAEa,OAAO,CAAPA,OAAF,CAAWC,WAAW,CAAXA,WAAX,CAAP,CACD","sourcesContent":["import { useActiveWeb3React } from '../../hooks/web3'\nimport { SkipFirst } from '../../types/tuple'\nimport { useBlockNumber } from '../application/hooks'\nimport { multicall } from './instance'\nexport type { CallStateResult } from '@uniswap/redux-multicall' // re-export for convenience\nexport { NEVER_RELOAD } from '@uniswap/redux-multicall' // re-export for convenience\n\nconst {\n  useMultipleContractSingleData: _useMultipleContractSingleData,\n  useSingleCallResult: _useSingleCallResult,\n  useSingleContractMultipleData: _useSingleContractMultipleData,\n  useSingleContractWithCallData: _useSingleContractWithCallData,\n} = multicall.hooks\n\n// Create wrappers for hooks so consumers don't need to get latest block themselves\n\ntype SkipFirstTwoParams<T extends (...args: any) => any> = SkipFirst<Parameters<T>, 2>\n\nexport function useMultipleContractSingleData(...args: SkipFirstTwoParams<typeof _useMultipleContractSingleData>) {\n  const { chainId, latestBlock } = useCallContext()\n  return _useMultipleContractSingleData(chainId, latestBlock, ...args)\n}\n\nexport function useSingleCallResult(...args: SkipFirstTwoParams<typeof _useSingleCallResult>) {\n  const { chainId, latestBlock } = useCallContext()\n  return _useSingleCallResult(chainId, latestBlock, ...args)\n}\n\nexport function useSingleContractMultipleData(...args: SkipFirstTwoParams<typeof _useSingleContractMultipleData>) {\n  const { chainId, latestBlock } = useCallContext()\n  return _useSingleContractMultipleData(chainId, latestBlock, ...args)\n}\n\nexport function useSingleContractWithCallData(...args: SkipFirstTwoParams<typeof _useSingleContractWithCallData>) {\n  const { chainId, latestBlock } = useCallContext()\n  return _useSingleContractWithCallData(chainId, latestBlock, ...args)\n}\n\nfunction useCallContext() {\n  const { chainId } = useActiveWeb3React()\n  const latestBlock = useBlockNumber()\n  return { chainId, latestBlock }\n}\n"]},"metadata":{},"sourceType":"module"}