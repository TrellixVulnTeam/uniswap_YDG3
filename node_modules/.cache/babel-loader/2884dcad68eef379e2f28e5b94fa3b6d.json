{"ast":null,"code":"import { ThemeContext as _ThemeContext } from \"styled-components\";\n\nvar _jsxFileName = \"/Users/safahi/Downloads/interface-4.30.1/src/pages/MigrateV2/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Trans } from \"@lingui/react\";\nimport { getCreate2Address } from '@ethersproject/address';\nimport { keccak256, pack } from '@ethersproject/solidity';\nimport { Token } from '@uniswap/sdk-core';\nimport MigrateSushiPositionCard from 'components/PositionCard/Sushi';\nimport MigrateV2PositionCard from 'components/PositionCard/V2';\nimport { SwitchLocaleLink } from 'components/SwitchLocaleLink';\nimport { PairState, useV2Pairs } from 'hooks/useV2Pairs';\nimport { useContext, useMemo } from 'react';\nimport { Text } from 'rebass';\nimport { LightCard } from '../../components/Card';\nimport { AutoColumn } from '../../components/Column';\nimport QuestionHelper from '../../components/QuestionHelper';\nimport { AutoRow } from '../../components/Row';\nimport { Dots } from '../../components/swap/styleds';\nimport { V2_FACTORY_ADDRESSES } from '../../constants/addresses';\nimport { useActiveWeb3React } from '../../hooks/web3';\nimport { toV2LiquidityToken, useTrackedTokenPairs } from '../../state/user/hooks';\nimport { useTokenBalancesWithLoadingIndicator } from '../../state/wallet/hooks';\nimport { BackArrow, StyledInternalLink, ThemedText } from '../../theme';\nimport { BodyWrapper } from '../AppBody';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction EmptyState({\n  message\n}) {\n  return /*#__PURE__*/_jsxDEV(AutoColumn, {\n    style: {\n      minHeight: 200,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(ThemedText.Body, {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n} // quick hack because sushi init code hash is different\n\n\n_c = EmptyState;\n\nconst computeSushiPairAddress = ({\n  tokenA,\n  tokenB\n}) => {\n  const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]; // does safety checks\n\n  return getCreate2Address('0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac', keccak256(['bytes'], [pack(['address', 'address'], [token0.address, token1.address])]), '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303');\n};\n/**\n * Given two tokens return the sushiswap liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\n\n\nfunction toSushiLiquidityToken([tokenA, tokenB]) {\n  return new Token(tokenA.chainId, computeSushiPairAddress({\n    tokenA,\n    tokenB\n  }), 18, 'SLP', 'SushiSwap LP Token');\n}\n\nexport default function MigrateV2() {\n  _s();\n\n  const theme = useContext(_ThemeContext);\n  const {\n    account,\n    chainId\n  } = useActiveWeb3React();\n  const v2FactoryAddress = chainId ? V2_FACTORY_ADDRESSES[chainId] : undefined; // fetch the user's balances of all tracked V2 LP tokens\n\n  const trackedTokenPairs = useTrackedTokenPairs(); // calculate v2 + sushi pair contract addresses for all token pairs\n\n  const tokenPairsWithLiquidityTokens = useMemo(() => trackedTokenPairs.map(tokens => {\n    // sushi liquidity token or null\n    const sushiLiquidityToken = chainId === 1 ? toSushiLiquidityToken(tokens) : null;\n    return {\n      v2liquidityToken: v2FactoryAddress ? toV2LiquidityToken(tokens) : undefined,\n      sushiLiquidityToken,\n      tokens\n    };\n  }), [trackedTokenPairs, chainId, v2FactoryAddress]); //  get pair liquidity token addresses for balance-fetching purposes\n\n  const allLiquidityTokens = useMemo(() => {\n    const v2 = tokenPairsWithLiquidityTokens.map(({\n      v2liquidityToken\n    }) => v2liquidityToken);\n    const sushi = tokenPairsWithLiquidityTokens.map(({\n      sushiLiquidityToken\n    }) => sushiLiquidityToken).filter(token => !!token);\n    return [...v2, ...sushi];\n  }, [tokenPairsWithLiquidityTokens]); // fetch pair balances\n\n  const [pairBalances, fetchingPairBalances] = useTokenBalancesWithLoadingIndicator(account !== null && account !== void 0 ? account : undefined, allLiquidityTokens); // filter for v2 liquidity tokens that the user has a balance in\n\n  const tokenPairsWithV2Balance = useMemo(() => {\n    if (fetchingPairBalances) return [];\n    return tokenPairsWithLiquidityTokens.filter(({\n      v2liquidityToken\n    }) => {\n      var _pairBalances$v2liqui;\n\n      return v2liquidityToken && ((_pairBalances$v2liqui = pairBalances[v2liquidityToken.address]) === null || _pairBalances$v2liqui === void 0 ? void 0 : _pairBalances$v2liqui.greaterThan(0));\n    }).map(tokenPairsWithLiquidityTokens => tokenPairsWithLiquidityTokens.tokens);\n  }, [fetchingPairBalances, tokenPairsWithLiquidityTokens, pairBalances]); // filter for v2 liquidity tokens that the user has a balance in\n\n  const tokenPairsWithSushiBalance = useMemo(() => {\n    if (fetchingPairBalances) return [];\n    return tokenPairsWithLiquidityTokens.filter(({\n      sushiLiquidityToken\n    }) => {\n      var _pairBalances$sushiLi;\n\n      return !!sushiLiquidityToken && ((_pairBalances$sushiLi = pairBalances[sushiLiquidityToken.address]) === null || _pairBalances$sushiLi === void 0 ? void 0 : _pairBalances$sushiLi.greaterThan(0));\n    });\n  }, [fetchingPairBalances, tokenPairsWithLiquidityTokens, pairBalances]);\n  const v2Pairs = useV2Pairs(tokenPairsWithV2Balance);\n  const v2IsLoading = fetchingPairBalances || v2Pairs.some(([pairState]) => pairState === PairState.LOADING);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BodyWrapper, {\n      style: {\n        padding: 24\n      },\n      children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n        gap: \"16px\",\n        children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n          style: {\n            alignItems: 'center',\n            justifyContent: 'space-between'\n          },\n          gap: \"8px\",\n          children: [/*#__PURE__*/_jsxDEV(BackArrow, {\n            to: \"/pool/v2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ThemedText.MediumHeader, {\n            children: /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"Migrate V2 Liquidity\"\n            }, void 0, false, void 0, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(QuestionHelper, {\n              text: /*#__PURE__*/_jsxDEV(Trans, {\n                id: \"Migrate your liquidity tokens from Uniswap V2 to Uniswap V3.\"\n              }, void 0, false, void 0, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ThemedText.Body, {\n          style: {\n            marginBottom: 8,\n            fontWeight: 400\n          },\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"For each pool shown below, click migrate to remove your liquidity from Uniswap V2 and deposit it into Uniswap V3.\"\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), !account ? /*#__PURE__*/_jsxDEV(LightCard, {\n          padding: \"40px\",\n          children: /*#__PURE__*/_jsxDEV(ThemedText.Body, {\n            color: theme.text3,\n            textAlign: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"Connect to a wallet to view your V2 liquidity.\"\n            }, void 0, false, void 0, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this) : v2IsLoading ? /*#__PURE__*/_jsxDEV(LightCard, {\n          padding: \"40px\",\n          children: /*#__PURE__*/_jsxDEV(ThemedText.Body, {\n            color: theme.text3,\n            textAlign: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Dots, {\n              children: /*#__PURE__*/_jsxDEV(Trans, {\n                id: \"Loading\"\n              }, void 0, false, void 0, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this) : v2Pairs.filter(([, pair]) => !!pair).length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [v2Pairs.filter(([, pair]) => !!pair).map(([, pair]) => /*#__PURE__*/_jsxDEV(MigrateV2PositionCard, {\n            pair: pair\n          }, pair.liquidityToken.address, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 19\n          }, this)), tokenPairsWithSushiBalance.map(({\n            sushiLiquidityToken,\n            tokens\n          }) => {\n            return /*#__PURE__*/_jsxDEV(MigrateSushiPositionCard, {\n              tokenA: tokens[0],\n              tokenB: tokens[1],\n              liquidityToken: sushiLiquidityToken\n            }, sushiLiquidityToken.address, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 19\n            }, this);\n          })]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(EmptyState, {\n          message: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"No V2 Liquidity found.\"\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n          justify: 'center',\n          gap: \"md\",\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            textAlign: \"center\",\n            fontSize: 14,\n            style: {\n              padding: '.5rem 0 .5rem 0'\n            },\n            children: /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"Don\\u2019t see one of your v2 positions? <0>Import it.</0>\",\n              components: {\n                0: /*#__PURE__*/_jsxDEV(StyledInternalLink, {\n                  id: \"import-pool-link\",\n                  to: '/find?origin=/migrate/v2'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 17\n                }, this)\n              }\n            }, void 0, false, void 0, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SwitchLocaleLink, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MigrateV2, \"jr1bQ+8uLGXWg2+vAZq+N2WdD7Y=\", false, function () {\n  return [useActiveWeb3React, useTrackedTokenPairs, useTokenBalancesWithLoadingIndicator, useV2Pairs];\n});\n\n_c2 = MigrateV2;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EmptyState\");\n$RefreshReg$(_c2, \"MigrateV2\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/pages/MigrateV2/index.tsx"],"names":["getCreate2Address","keccak256","pack","Token","MigrateSushiPositionCard","MigrateV2PositionCard","SwitchLocaleLink","PairState","useV2Pairs","useContext","useMemo","Text","LightCard","AutoColumn","QuestionHelper","AutoRow","Dots","V2_FACTORY_ADDRESSES","useActiveWeb3React","toV2LiquidityToken","useTrackedTokenPairs","useTokenBalancesWithLoadingIndicator","BackArrow","StyledInternalLink","ThemedText","BodyWrapper","EmptyState","message","minHeight","justifyContent","alignItems","computeSushiPairAddress","tokenA","tokenB","token0","token1","sortsBefore","address","toSushiLiquidityToken","chainId","MigrateV2","theme","ThemeContext","account","v2FactoryAddress","undefined","trackedTokenPairs","tokenPairsWithLiquidityTokens","map","tokens","sushiLiquidityToken","v2liquidityToken","allLiquidityTokens","v2","sushi","filter","token","pairBalances","fetchingPairBalances","tokenPairsWithV2Balance","greaterThan","tokenPairsWithSushiBalance","v2Pairs","v2IsLoading","some","pairState","LOADING","padding","marginBottom","fontWeight","text3","pair","length","liquidityToken"],"mappings":"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","sourcesContent":["import { getCreate2Address } from '@ethersproject/address'\nimport { keccak256, pack } from '@ethersproject/solidity'\nimport { Trans } from '@lingui/macro'\nimport { Token } from '@uniswap/sdk-core'\nimport { Pair } from '@uniswap/v2-sdk'\nimport MigrateSushiPositionCard from 'components/PositionCard/Sushi'\nimport MigrateV2PositionCard from 'components/PositionCard/V2'\nimport { SwitchLocaleLink } from 'components/SwitchLocaleLink'\nimport { PairState, useV2Pairs } from 'hooks/useV2Pairs'\nimport { ReactNode, useContext, useMemo } from 'react'\nimport { Text } from 'rebass'\nimport { ThemeContext } from 'styled-components/macro'\n\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn } from '../../components/Column'\nimport QuestionHelper from '../../components/QuestionHelper'\nimport { AutoRow } from '../../components/Row'\nimport { Dots } from '../../components/swap/styleds'\nimport { V2_FACTORY_ADDRESSES } from '../../constants/addresses'\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport { toV2LiquidityToken, useTrackedTokenPairs } from '../../state/user/hooks'\nimport { useTokenBalancesWithLoadingIndicator } from '../../state/wallet/hooks'\nimport { BackArrow, StyledInternalLink, ThemedText } from '../../theme'\nimport { BodyWrapper } from '../AppBody'\n\nfunction EmptyState({ message }: { message: ReactNode }) {\n  return (\n    <AutoColumn style={{ minHeight: 200, justifyContent: 'center', alignItems: 'center' }}>\n      <ThemedText.Body>{message}</ThemedText.Body>\n    </AutoColumn>\n  )\n}\n\n// quick hack because sushi init code hash is different\nconst computeSushiPairAddress = ({ tokenA, tokenB }: { tokenA: Token; tokenB: Token }): string => {\n  const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA] // does safety checks\n  return getCreate2Address(\n    '0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac',\n    keccak256(['bytes'], [pack(['address', 'address'], [token0.address, token1.address])]),\n    '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303'\n  )\n}\n\n/**\n * Given two tokens return the sushiswap liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nfunction toSushiLiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, computeSushiPairAddress({ tokenA, tokenB }), 18, 'SLP', 'SushiSwap LP Token')\n}\n\nexport default function MigrateV2() {\n  const theme = useContext(ThemeContext)\n  const { account, chainId } = useActiveWeb3React()\n\n  const v2FactoryAddress = chainId ? V2_FACTORY_ADDRESSES[chainId] : undefined\n\n  // fetch the user's balances of all tracked V2 LP tokens\n  const trackedTokenPairs = useTrackedTokenPairs()\n\n  // calculate v2 + sushi pair contract addresses for all token pairs\n  const tokenPairsWithLiquidityTokens = useMemo(\n    () =>\n      trackedTokenPairs.map((tokens) => {\n        // sushi liquidity token or null\n        const sushiLiquidityToken = chainId === 1 ? toSushiLiquidityToken(tokens) : null\n        return {\n          v2liquidityToken: v2FactoryAddress ? toV2LiquidityToken(tokens) : undefined,\n          sushiLiquidityToken,\n          tokens,\n        }\n      }),\n    [trackedTokenPairs, chainId, v2FactoryAddress]\n  )\n\n  //  get pair liquidity token addresses for balance-fetching purposes\n  const allLiquidityTokens = useMemo(() => {\n    const v2 = tokenPairsWithLiquidityTokens.map(({ v2liquidityToken }) => v2liquidityToken)\n    const sushi = tokenPairsWithLiquidityTokens\n      .map(({ sushiLiquidityToken }) => sushiLiquidityToken)\n      .filter((token): token is Token => !!token)\n\n    return [...v2, ...sushi]\n  }, [tokenPairsWithLiquidityTokens])\n\n  // fetch pair balances\n  const [pairBalances, fetchingPairBalances] = useTokenBalancesWithLoadingIndicator(\n    account ?? undefined,\n    allLiquidityTokens\n  )\n\n  // filter for v2 liquidity tokens that the user has a balance in\n  const tokenPairsWithV2Balance = useMemo(() => {\n    if (fetchingPairBalances) return []\n\n    return tokenPairsWithLiquidityTokens\n      .filter(({ v2liquidityToken }) => v2liquidityToken && pairBalances[v2liquidityToken.address]?.greaterThan(0))\n      .map((tokenPairsWithLiquidityTokens) => tokenPairsWithLiquidityTokens.tokens)\n  }, [fetchingPairBalances, tokenPairsWithLiquidityTokens, pairBalances])\n\n  // filter for v2 liquidity tokens that the user has a balance in\n  const tokenPairsWithSushiBalance = useMemo(() => {\n    if (fetchingPairBalances) return []\n\n    return tokenPairsWithLiquidityTokens.filter(\n      ({ sushiLiquidityToken }) => !!sushiLiquidityToken && pairBalances[sushiLiquidityToken.address]?.greaterThan(0)\n    )\n  }, [fetchingPairBalances, tokenPairsWithLiquidityTokens, pairBalances])\n\n  const v2Pairs = useV2Pairs(tokenPairsWithV2Balance)\n  const v2IsLoading = fetchingPairBalances || v2Pairs.some(([pairState]) => pairState === PairState.LOADING)\n\n  return (\n    <>\n      <BodyWrapper style={{ padding: 24 }}>\n        <AutoColumn gap=\"16px\">\n          <AutoRow style={{ alignItems: 'center', justifyContent: 'space-between' }} gap=\"8px\">\n            <BackArrow to=\"/pool/v2\" />\n            <ThemedText.MediumHeader>\n              <Trans>Migrate V2 Liquidity</Trans>\n            </ThemedText.MediumHeader>\n            <div>\n              <QuestionHelper text={<Trans>Migrate your liquidity tokens from Uniswap V2 to Uniswap V3.</Trans>} />\n            </div>\n          </AutoRow>\n\n          <ThemedText.Body style={{ marginBottom: 8, fontWeight: 400 }}>\n            <Trans>\n              For each pool shown below, click migrate to remove your liquidity from Uniswap V2 and deposit it into\n              Uniswap V3.\n            </Trans>\n          </ThemedText.Body>\n\n          {!account ? (\n            <LightCard padding=\"40px\">\n              <ThemedText.Body color={theme.text3} textAlign=\"center\">\n                <Trans>Connect to a wallet to view your V2 liquidity.</Trans>\n              </ThemedText.Body>\n            </LightCard>\n          ) : v2IsLoading ? (\n            <LightCard padding=\"40px\">\n              <ThemedText.Body color={theme.text3} textAlign=\"center\">\n                <Dots>\n                  <Trans>Loading</Trans>\n                </Dots>\n              </ThemedText.Body>\n            </LightCard>\n          ) : v2Pairs.filter(([, pair]) => !!pair).length > 0 ? (\n            <>\n              {v2Pairs\n                .filter(([, pair]) => !!pair)\n                .map(([, pair]) => (\n                  <MigrateV2PositionCard key={(pair as Pair).liquidityToken.address} pair={pair as Pair} />\n                ))}\n\n              {tokenPairsWithSushiBalance.map(({ sushiLiquidityToken, tokens }) => {\n                return (\n                  <MigrateSushiPositionCard\n                    key={(sushiLiquidityToken as Token).address}\n                    tokenA={tokens[0]}\n                    tokenB={tokens[1]}\n                    liquidityToken={sushiLiquidityToken as Token}\n                  />\n                )\n              })}\n            </>\n          ) : (\n            <EmptyState message={<Trans>No V2 Liquidity found.</Trans>} />\n          )}\n\n          <AutoColumn justify={'center'} gap=\"md\">\n            <Text textAlign=\"center\" fontSize={14} style={{ padding: '.5rem 0 .5rem 0' }}>\n              <Trans>\n                Don’t see one of your v2 positions?{' '}\n                <StyledInternalLink id=\"import-pool-link\" to={'/find?origin=/migrate/v2'}>\n                  Import it.\n                </StyledInternalLink>\n              </Trans>\n            </Text>\n          </AutoColumn>\n        </AutoColumn>\n      </BodyWrapper>\n      <SwitchLocaleLink />\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}