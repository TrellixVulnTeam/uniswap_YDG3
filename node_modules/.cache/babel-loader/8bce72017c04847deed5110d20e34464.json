{"ast":null,"code":"import { css as _css } from \"styled-components\";\nimport _styled from \"styled-components\";\n\nvar _jsxFileName = \"/Users/safahi/Downloads/interface-4.30.1/src/components/Modal/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { DialogContent, DialogOverlay } from '@reach/dialog';\nimport { transparentize } from 'polished';\nimport React from 'react';\nimport { animated, useSpring, useTransition } from 'react-spring';\nimport { useGesture } from 'react-use-gesture';\nimport { isMobile } from '../../utils/userAgent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AnimatedDialogOverlay = animated(DialogOverlay); // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n_c = AnimatedDialogOverlay;\n\nconst StyledDialogOverlay = _styled(AnimatedDialogOverlay).withConfig({\n  displayName: \"Modal__StyledDialogOverlay\",\n  componentId: \"sc-jajvtp-0\"\n})([\"&[data-reach-dialog-overlay]{z-index:2;background-color:transparent;overflow:hidden;display:flex;align-items:center;justify-content:center;background-color:\", \";}\"], ({\n  theme\n}) => theme.modalBG);\n\nconst AnimatedDialogContent = animated(DialogContent); // destructure to not pass custom props to Dialog DOM element\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n_c2 = AnimatedDialogContent;\n\nconst StyledDialogContent = _styled(({\n  minHeight,\n  maxHeight,\n  mobile,\n  isOpen,\n  ...rest\n}) => /*#__PURE__*/_jsxDEV(AnimatedDialogContent, { ...rest\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 3\n}, this)).attrs({\n  'aria-label': 'dialog'\n}).withConfig({\n  displayName: \"Modal__StyledDialogContent\",\n  componentId: \"sc-jajvtp-1\"\n})([\"overflow-y:auto;&[data-reach-dialog-content]{margin:0 0 2rem 0;background-color:\", \";border:1px solid \", \";box-shadow:0 4px 8px 0 \", \";padding:0px;width:50vw;overflow-y:auto;overflow-x:hidden;align-self:\", \";max-width:420px;\", \" \", \" display:flex;border-radius:20px;\", \" \", \"}\"], ({\n  theme\n}) => theme.bg0, ({\n  theme\n}) => theme.bg1, ({\n  theme\n}) => transparentize(0.95, theme.shadow1), ({\n  mobile\n}) => mobile ? 'flex-end' : 'center', ({\n  maxHeight\n}) => maxHeight && _css`\n        max-height: ${maxHeight}vh;\n      `, ({\n  minHeight\n}) => minHeight && _css`\n        min-height: ${minHeight}vh;\n      `, ({\n  theme\n}) => theme.mediaWidth.upToMedium`\n      width: 65vw;\n      margin: 0;\n    `, ({\n  theme,\n  mobile\n}) => theme.mediaWidth.upToSmall`\n      width:  85vw;\n      ${mobile && _css`\n          width: 100vw;\n          border-radius: 20px;\n          border-bottom-left-radius: 0;\n          border-bottom-right-radius: 0;\n        `}\n    `);\n\nexport default function Modal({\n  isOpen,\n  onDismiss,\n  minHeight = false,\n  maxHeight = 90,\n  initialFocusRef,\n  children\n}) {\n  _s();\n\n  const fadeTransition = useTransition(isOpen, null, {\n    config: {\n      duration: 200\n    },\n    from: {\n      opacity: 0\n    },\n    enter: {\n      opacity: 1\n    },\n    leave: {\n      opacity: 0\n    }\n  });\n  const [{\n    y\n  }, set] = useSpring(() => ({\n    y: 0,\n    config: {\n      mass: 1,\n      tension: 210,\n      friction: 20\n    }\n  }));\n  const bind = useGesture({\n    onDrag: state => {\n      set({\n        y: state.down ? state.movement[1] : 0\n      });\n\n      if (state.movement[1] > 300 || state.velocity > 3 && state.direction[1] > 0) {\n        onDismiss();\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: fadeTransition.map(({\n      item,\n      key,\n      props\n    }) => item && /*#__PURE__*/_jsxDEV(StyledDialogOverlay, {\n      style: props,\n      onDismiss: onDismiss,\n      initialFocusRef: initialFocusRef,\n      unstable_lockFocusAcrossFrames: false,\n      children: /*#__PURE__*/_jsxDEV(StyledDialogContent, { ...(isMobile ? { ...bind(),\n          style: {\n            transform: y.interpolate(y => `translateY(${y > 0 ? y : 0}px)`)\n          }\n        } : {}),\n        \"aria-label\": \"dialog content\",\n        minHeight: minHeight,\n        maxHeight: maxHeight,\n        mobile: isMobile,\n        children: [!initialFocusRef && isMobile ? /*#__PURE__*/_jsxDEV(\"div\", {\n          tabIndex: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 49\n        }, this) : null, children]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }, this)\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this))\n  }, void 0, false);\n}\n\n_s(Modal, \"d9mJIJbkwDAHinmawY5z+bq26pw=\", false, function () {\n  return [useTransition, useSpring, useGesture];\n});\n\n_c3 = Modal;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"AnimatedDialogOverlay\");\n$RefreshReg$(_c2, \"AnimatedDialogContent\");\n$RefreshReg$(_c3, \"Modal\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/components/Modal/index.tsx"],"names":["DialogContent","DialogOverlay","transparentize","React","animated","useSpring","useTransition","useGesture","isMobile","AnimatedDialogOverlay","StyledDialogOverlay","styled","theme","modalBG","AnimatedDialogContent","StyledDialogContent","minHeight","maxHeight","mobile","isOpen","rest","attrs","bg0","bg1","shadow1","css","mediaWidth","upToMedium","upToSmall","Modal","onDismiss","initialFocusRef","children","fadeTransition","config","duration","from","opacity","enter","leave","y","set","mass","tension","friction","bind","onDrag","state","down","movement","velocity","direction","map","item","key","props","style","transform","interpolate"],"mappings":"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","sourcesContent":["import { DialogContent, DialogOverlay } from '@reach/dialog'\nimport { transparentize } from 'polished'\nimport React from 'react'\nimport { animated, useSpring, useTransition } from 'react-spring'\nimport { useGesture } from 'react-use-gesture'\nimport styled, { css } from 'styled-components/macro'\n\nimport { isMobile } from '../../utils/userAgent'\n\nconst AnimatedDialogOverlay = animated(DialogOverlay)\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst StyledDialogOverlay = styled(AnimatedDialogOverlay)`\n  &[data-reach-dialog-overlay] {\n    z-index: 2;\n    background-color: transparent;\n    overflow: hidden;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    background-color: ${({ theme }) => theme.modalBG};\n  }\n`\n\nconst AnimatedDialogContent = animated(DialogContent)\n// destructure to not pass custom props to Dialog DOM element\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst StyledDialogContent = styled(({ minHeight, maxHeight, mobile, isOpen, ...rest }) => (\n  <AnimatedDialogContent {...rest} />\n)).attrs({\n  'aria-label': 'dialog',\n})`\n  overflow-y: auto;\n\n  &[data-reach-dialog-content] {\n    margin: 0 0 2rem 0;\n    background-color: ${({ theme }) => theme.bg0};\n    border: 1px solid ${({ theme }) => theme.bg1};\n    box-shadow: 0 4px 8px 0 ${({ theme }) => transparentize(0.95, theme.shadow1)};\n    padding: 0px;\n    width: 50vw;\n    overflow-y: auto;\n    overflow-x: hidden;\n\n    align-self: ${({ mobile }) => (mobile ? 'flex-end' : 'center')};\n\n    max-width: 420px;\n    ${({ maxHeight }) =>\n      maxHeight &&\n      css`\n        max-height: ${maxHeight}vh;\n      `}\n    ${({ minHeight }) =>\n      minHeight &&\n      css`\n        min-height: ${minHeight}vh;\n      `}\n    display: flex;\n    border-radius: 20px;\n    ${({ theme }) => theme.mediaWidth.upToMedium`\n      width: 65vw;\n      margin: 0;\n    `}\n    ${({ theme, mobile }) => theme.mediaWidth.upToSmall`\n      width:  85vw;\n      ${\n        mobile &&\n        css`\n          width: 100vw;\n          border-radius: 20px;\n          border-bottom-left-radius: 0;\n          border-bottom-right-radius: 0;\n        `\n      }\n    `}\n  }\n`\n\ninterface ModalProps {\n  isOpen: boolean\n  onDismiss: () => void\n  minHeight?: number | false\n  maxHeight?: number\n  initialFocusRef?: React.RefObject<any>\n  children?: React.ReactNode\n}\n\nexport default function Modal({\n  isOpen,\n  onDismiss,\n  minHeight = false,\n  maxHeight = 90,\n  initialFocusRef,\n  children,\n}: ModalProps) {\n  const fadeTransition = useTransition(isOpen, null, {\n    config: { duration: 200 },\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n    leave: { opacity: 0 },\n  })\n\n  const [{ y }, set] = useSpring(() => ({ y: 0, config: { mass: 1, tension: 210, friction: 20 } }))\n  const bind = useGesture({\n    onDrag: (state) => {\n      set({\n        y: state.down ? state.movement[1] : 0,\n      })\n      if (state.movement[1] > 300 || (state.velocity > 3 && state.direction[1] > 0)) {\n        onDismiss()\n      }\n    },\n  })\n\n  return (\n    <>\n      {fadeTransition.map(\n        ({ item, key, props }) =>\n          item && (\n            <StyledDialogOverlay\n              key={key}\n              style={props}\n              onDismiss={onDismiss}\n              initialFocusRef={initialFocusRef}\n              unstable_lockFocusAcrossFrames={false}\n            >\n              <StyledDialogContent\n                {...(isMobile\n                  ? {\n                      ...bind(),\n                      style: { transform: y.interpolate((y) => `translateY(${(y as number) > 0 ? y : 0}px)`) },\n                    }\n                  : {})}\n                aria-label=\"dialog content\"\n                minHeight={minHeight}\n                maxHeight={maxHeight}\n                mobile={isMobile}\n              >\n                {/* prevents the automatic focusing of inputs on mobile by the reach dialog */}\n                {!initialFocusRef && isMobile ? <div tabIndex={1} /> : null}\n                {children}\n              </StyledDialogContent>\n            </StyledDialogOverlay>\n          )\n      )}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}