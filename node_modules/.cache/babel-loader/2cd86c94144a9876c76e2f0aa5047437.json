{"ast":null,"code":"import { Percent } from '@uniswap/sdk-core';\nimport { Pool } from '@uniswap/v3-sdk';\nimport _ from 'lodash';\nimport { CurrencyAmount } from '.';\nexport var routeToString = function routeToString(route) {\n  var isV3Route = function isV3Route(route) {\n    return route.pools != undefined;\n  };\n\n  var routeStr = [];\n  var tokens = isV3Route(route) ? route.tokenPath : route.path;\n\n  var tokenPath = _.map(tokens, function (token) {\n    return \"\".concat(token.symbol);\n  });\n\n  var pools = isV3Route(route) ? route.pools : route.pairs;\n\n  var poolFeePath = _.map(pools, function (pool) {\n    return \"\".concat(pool instanceof Pool ? \" -- \".concat(pool.fee / 10000, \"%\") : '', \" --> \");\n  });\n\n  for (var i = 0; i < tokenPath.length; i++) {\n    routeStr.push(tokenPath[i]);\n\n    if (i < poolFeePath.length) {\n      routeStr.push(poolFeePath[i]);\n    }\n  }\n\n  return routeStr.join('');\n};\nexport var routeAmountsToString = function routeAmountsToString(routeAmounts) {\n  var total = _.reduce(routeAmounts, function (total, cur) {\n    return total.add(cur.amount);\n  }, CurrencyAmount.fromRawAmount(routeAmounts[0].amount.currency, 0));\n\n  var routeStrings = _.map(routeAmounts, function (_ref) {\n    var protocol = _ref.protocol,\n        route = _ref.route,\n        amount = _ref.amount;\n    var portion = amount.divide(total);\n    var percent = new Percent(portion.numerator, portion.denominator);\n    return \"[\".concat(protocol, \"] \").concat(percent.toFixed(2), \"% = \").concat(routeToString(route));\n  });\n\n  return _.join(routeStrings, ', ');\n};\nexport var routeAmountToString = function routeAmountToString(routeAmount) {\n  var route = routeAmount.route,\n      amount = routeAmount.amount;\n  return \"\".concat(amount.toExact(), \" = \").concat(routeToString(route));\n};\nexport var poolToString = function poolToString(p) {\n  return \"\".concat(p.token0.symbol, \"/\").concat(p.token1.symbol, \"/\").concat(p.fee / 10000, \"%\");\n};","map":{"version":3,"sources":["../../../../src/util/routes.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { Percent } from '@uniswap/sdk-core';\nimport { Pool } from '@uniswap/v3-sdk';\nimport _ from 'lodash';\nimport { CurrencyAmount } from '.';\nexport const routeToString = (route) => {\n    const isV3Route = (route) => route.pools != undefined;\n    const routeStr = [];\n    const tokens = isV3Route(route) ? route.tokenPath : route.path;\n    const tokenPath = _.map(tokens, (token) => `${token.symbol}`);\n    const pools = isV3Route(route) ? route.pools : route.pairs;\n    const poolFeePath = _.map(pools, (pool) => `${pool instanceof Pool ? ` -- ${pool.fee / 10000}%` : ''} --> `);\n    for (let i = 0; i < tokenPath.length; i++) {\n        routeStr.push(tokenPath[i]);\n        if (i < poolFeePath.length) {\n            routeStr.push(poolFeePath[i]);\n        }\n    }\n    return routeStr.join('');\n};\nexport const routeAmountsToString = (routeAmounts) => {\n    const total = _.reduce(routeAmounts, (total, cur) => {\n        return total.add(cur.amount);\n    }, CurrencyAmount.fromRawAmount(routeAmounts[0].amount.currency, 0));\n    const routeStrings = _.map(routeAmounts, ({ protocol, route, amount }) => {\n        const portion = amount.divide(total);\n        const percent = new Percent(portion.numerator, portion.denominator);\n        return `[${protocol}] ${percent.toFixed(2)}% = ${routeToString(route)}`;\n    });\n    return _.join(routeStrings, ', ');\n};\nexport const routeAmountToString = (routeAmount) => {\n    const { route, amount } = routeAmount;\n    return `${amount.toExact()} = ${routeToString(route)}`;\n};\nexport const poolToString = (p) => {\n    return `${p.token0.symbol}/${p.token1.symbol}/${p.fee / 10000}%`;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3V0aWwvcm91dGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUM1QyxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDdkMsT0FBTyxDQUFDLE1BQU0sUUFBUSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxHQUFHLENBQUM7QUFJbkMsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFHLENBQUMsS0FBd0IsRUFBVSxFQUFFO0lBQ2hFLE1BQU0sU0FBUyxHQUFHLENBQUMsS0FBd0IsRUFBb0IsRUFBRSxDQUM5RCxLQUFpQixDQUFDLEtBQUssSUFBSSxTQUFTLENBQUM7SUFDeEMsTUFBTSxRQUFRLEdBQUcsRUFBRSxDQUFDO0lBQ3BCLE1BQU0sTUFBTSxHQUFHLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQztJQUMvRCxNQUFNLFNBQVMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsR0FBRyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQztJQUM5RCxNQUFNLEtBQUssR0FBRyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUM7SUFDM0QsTUFBTSxXQUFXLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FDdkIsS0FBSyxFQUNMLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxHQUFHLElBQUksWUFBWSxJQUFJLENBQUMsQ0FBQyxDQUFDLE9BQU8sSUFBSSxDQUFDLEdBQUcsR0FBRyxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxPQUFPLENBQzNFLENBQUM7SUFFRixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsU0FBUyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUN6QyxRQUFRLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzVCLElBQUksQ0FBQyxHQUFHLFdBQVcsQ0FBQyxNQUFNLEVBQUU7WUFDMUIsUUFBUSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUMvQjtLQUNGO0lBRUQsT0FBTyxRQUFRLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBQzNCLENBQUMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLG9CQUFvQixHQUFHLENBQ2xDLFlBQW1DLEVBQzNCLEVBQUU7SUFDVixNQUFNLEtBQUssR0FBRyxDQUFDLENBQUMsTUFBTSxDQUNwQixZQUFZLEVBQ1osQ0FBQyxLQUFxQixFQUFFLEdBQXdCLEVBQUUsRUFBRTtRQUNsRCxPQUFPLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQy9CLENBQUMsRUFDRCxjQUFjLENBQUMsYUFBYSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUUsQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUNsRSxDQUFDO0lBRUYsTUFBTSxZQUFZLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxZQUFZLEVBQUUsQ0FBQyxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLEVBQUUsRUFBRTtRQUN2RSxNQUFNLE9BQU8sR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3JDLE1BQU0sT0FBTyxHQUFHLElBQUksT0FBTyxDQUFDLE9BQU8sQ0FBQyxTQUFTLEVBQUUsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQ3BFLE9BQU8sSUFBSSxRQUFRLEtBQUssT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsT0FBTyxhQUFhLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQztJQUMxRSxDQUFDLENBQUMsQ0FBQztJQUVILE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDcEMsQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQUcsQ0FDakMsV0FBZ0MsRUFDeEIsRUFBRTtJQUNWLE1BQU0sRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLEdBQUcsV0FBVyxDQUFDO0lBQ3RDLE9BQU8sR0FBRyxNQUFNLENBQUMsT0FBTyxFQUFFLE1BQU0sYUFBYSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUM7QUFDekQsQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFHLENBQUMsQ0FBTyxFQUFVLEVBQUU7SUFDOUMsT0FBTyxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBTSxJQUFJLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBTSxJQUFJLENBQUMsQ0FBQyxHQUFHLEdBQUcsS0FBSyxHQUFHLENBQUM7QUFDbkUsQ0FBQyxDQUFDIn0="]},"metadata":{},"sourceType":"module"}