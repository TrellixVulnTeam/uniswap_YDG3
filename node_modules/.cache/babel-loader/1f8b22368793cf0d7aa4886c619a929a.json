{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import{keyframes as _keyframes}from\"styled-components\";import _styled from\"styled-components\";var _templateObject;import{Trans}from\"@lingui/react\";import{useCallback,useEffect}from'react';import{Heart,X}from'react-feather';import ReactGA from'react-ga';import tokenLogo from'../../assets/images/token-logo.png';import{useActiveWeb3React}from'../../hooks/web3';import{useModalOpen,useShowClaimPopup,useToggleSelfClaimModal,useToggleShowClaimPopup}from'../../state/application/hooks';import{ApplicationModal}from'../../state/application/reducer';import{useUserHasAvailableClaim,useUserUnclaimedAmount}from'../../state/claim/hooks';import{ThemedText}from'../../theme';import{ButtonPrimary}from'../Button';import{AutoColumn}from'../Column';import{CardBGImage,CardNoise}from'../earn/styled';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var StyledClaimPopup=_styled(AutoColumn).withConfig({componentId:\"sc-fwaiaw-0\"})([\"background:radial-gradient(76.02% 75.41% at 1.84% 0%,#ff007a 0%,#021d43 100%);border-radius:20px;padding:1.5rem;overflow:hidden;position:relative;max-width:360px;box-shadow:0px 4px 10px rgba(0,0,0,0.1);\"]);var StyledClose=_styled(X).withConfig({componentId:\"sc-fwaiaw-1\"})([\"position:absolute;right:10px;top:10px;:hover{cursor:pointer;}\"]);var rotate=_keyframes(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  0% {\\n    transform: perspective(1000px) rotateY(0deg);\\n  }\\n\\n  100% {\\n    transform: perspective(1000px) rotateY(360deg);\\n  }\\n\"])));var UniToken=_styled.img.withConfig({componentId:\"sc-fwaiaw-2\"})([\"animation:\",\" 5s cubic-bezier(0.83,0,0.17,1) infinite;\"],rotate);export default function ClaimPopup(){var _groupSeparator;var _useActiveWeb3React=useActiveWeb3React(),account=_useActiveWeb3React.account;// dont store these in persisted state yet\nvar showClaimPopup=useShowClaimPopup();var toggleShowClaimPopup=useToggleShowClaimPopup();// toggle for showing this modal\nvar showClaimModal=useModalOpen(ApplicationModal.SELF_CLAIM);var toggleSelfClaimModal=useToggleSelfClaimModal();var handleToggleSelfClaimModal=useCallback(function(){ReactGA.event({category:'MerkleDrop',action:'Toggle self claim modal'});toggleSelfClaimModal();},[toggleSelfClaimModal]);// const userHasAvailableclaim = useUserHasAvailableClaim()\nvar userHasAvailableclaim=useUserHasAvailableClaim(account);var unclaimedAmount=useUserUnclaimedAmount(account);// listen for available claim and show popup if needed\nuseEffect(function(){if(userHasAvailableclaim){ReactGA.event({category:'MerkleDrop',action:'Show claim popup'});toggleShowClaimPopup();}// the toggleShowClaimPopup function changes every time the popup changes, so this will cause an infinite loop.\n// eslint-disable-next-line react-hooks/exhaustive-deps\n},[userHasAvailableclaim]);return/*#__PURE__*/_jsx(_Fragment,{children:showClaimPopup&&!showClaimModal&&/*#__PURE__*/_jsxs(StyledClaimPopup,{gap:\"md\",children:[/*#__PURE__*/_jsx(CardBGImage,{}),/*#__PURE__*/_jsx(CardNoise,{}),/*#__PURE__*/_jsx(StyledClose,{stroke:\"white\",onClick:toggleShowClaimPopup}),/*#__PURE__*/_jsxs(AutoColumn,{style:{padding:'2rem 0',zIndex:10},justify:\"center\",children:[/*#__PURE__*/_jsx(UniToken,{width:\"48px\",src:tokenLogo}),' ',/*#__PURE__*/_jsxs(ThemedText.White,{style:{marginTop:'1rem'},fontSize:36,fontWeight:600,children:[unclaimedAmount===null||unclaimedAmount===void 0?void 0:unclaimedAmount.toFixed(0,(_groupSeparator={groupSeparator:','})!==null&&_groupSeparator!==void 0?_groupSeparator:'-'),\" UNI\"]}),/*#__PURE__*/_jsxs(ThemedText.White,{style:{paddingTop:'1.25rem',textAlign:'center'},fontWeight:600,color:\"white\",children:[/*#__PURE__*/_jsx(\"span\",{role:\"img\",\"aria-label\":\"party\",children:\"\\uD83C\\uDF89\"}),' ',/*#__PURE__*/_jsx(Trans,{id:\"UNI has arrived\"}),' ',/*#__PURE__*/_jsx(\"span\",{role:\"img\",\"aria-label\":\"party\",children:\"\\uD83C\\uDF89\"})]}),/*#__PURE__*/_jsx(ThemedText.SubHeader,{style:{paddingTop:'0.5rem',textAlign:'center'},color:\"white\",children:/*#__PURE__*/_jsx(Trans,{id:\"Thanks for being part of the Uniswap community <0/>\",components:{0:/*#__PURE__*/_jsx(Heart,{size:12})}})})]}),/*#__PURE__*/_jsx(AutoColumn,{style:{zIndex:10},justify:\"center\",children:/*#__PURE__*/_jsx(ButtonPrimary,{padding:\"8px\",$borderRadius:\"8px\",width:'fit-content',onClick:handleToggleSelfClaimModal,children:/*#__PURE__*/_jsx(Trans,{id:\"Claim your UNI tokens\"})})})]})});}","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/components/Popups/ClaimPopup.tsx"],"names":["useCallback","useEffect","Heart","X","ReactGA","tokenLogo","useActiveWeb3React","useModalOpen","useShowClaimPopup","useToggleSelfClaimModal","useToggleShowClaimPopup","ApplicationModal","useUserHasAvailableClaim","useUserUnclaimedAmount","ThemedText","ButtonPrimary","AutoColumn","CardBGImage","CardNoise","StyledClaimPopup","styled","StyledClose","rotate","keyframes","UniToken","img","ClaimPopup","account","showClaimPopup","toggleShowClaimPopup","showClaimModal","SELF_CLAIM","toggleSelfClaimModal","handleToggleSelfClaimModal","event","category","action","userHasAvailableclaim","unclaimedAmount","padding","zIndex","marginTop","toFixed","groupSeparator","paddingTop","textAlign"],"mappings":"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","sourcesContent":["import { Trans } from '@lingui/macro'\nimport { CurrencyAmount, Token } from '@uniswap/sdk-core'\nimport { useCallback, useEffect } from 'react'\nimport { Heart, X } from 'react-feather'\nimport ReactGA from 'react-ga'\nimport styled, { keyframes } from 'styled-components/macro'\n\nimport tokenLogo from '../../assets/images/token-logo.png'\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport {\n  useModalOpen,\n  useShowClaimPopup,\n  useToggleSelfClaimModal,\n  useToggleShowClaimPopup,\n} from '../../state/application/hooks'\nimport { ApplicationModal } from '../../state/application/reducer'\nimport { useUserHasAvailableClaim, useUserUnclaimedAmount } from '../../state/claim/hooks'\nimport { ThemedText } from '../../theme'\nimport { ButtonPrimary } from '../Button'\nimport { AutoColumn } from '../Column'\nimport { CardBGImage, CardNoise } from '../earn/styled'\n\nconst StyledClaimPopup = styled(AutoColumn)`\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #ff007a 0%, #021d43 100%);\n  border-radius: 20px;\n  padding: 1.5rem;\n  overflow: hidden;\n  position: relative;\n  max-width: 360px;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n`\n\nconst StyledClose = styled(X)`\n  position: absolute;\n  right: 10px;\n  top: 10px;\n\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst rotate = keyframes`\n  0% {\n    transform: perspective(1000px) rotateY(0deg);\n  }\n\n  100% {\n    transform: perspective(1000px) rotateY(360deg);\n  }\n`\n\nconst UniToken = styled.img`\n  animation: ${rotate} 5s cubic-bezier(0.83, 0, 0.17, 1) infinite;\n`\n\nexport default function ClaimPopup() {\n  const { account } = useActiveWeb3React()\n\n  // dont store these in persisted state yet\n  const showClaimPopup: boolean = useShowClaimPopup()\n  const toggleShowClaimPopup = useToggleShowClaimPopup()\n\n  // toggle for showing this modal\n  const showClaimModal = useModalOpen(ApplicationModal.SELF_CLAIM)\n  const toggleSelfClaimModal = useToggleSelfClaimModal()\n  const handleToggleSelfClaimModal = useCallback(() => {\n    ReactGA.event({\n      category: 'MerkleDrop',\n      action: 'Toggle self claim modal',\n    })\n    toggleSelfClaimModal()\n  }, [toggleSelfClaimModal])\n\n  // const userHasAvailableclaim = useUserHasAvailableClaim()\n  const userHasAvailableclaim: boolean = useUserHasAvailableClaim(account)\n  const unclaimedAmount: CurrencyAmount<Token> | undefined = useUserUnclaimedAmount(account)\n\n  // listen for available claim and show popup if needed\n  useEffect(() => {\n    if (userHasAvailableclaim) {\n      ReactGA.event({\n        category: 'MerkleDrop',\n        action: 'Show claim popup',\n      })\n      toggleShowClaimPopup()\n    }\n    // the toggleShowClaimPopup function changes every time the popup changes, so this will cause an infinite loop.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userHasAvailableclaim])\n\n  return (\n    <>\n      {showClaimPopup && !showClaimModal && (\n        <StyledClaimPopup gap=\"md\">\n          <CardBGImage />\n          <CardNoise />\n          <StyledClose stroke=\"white\" onClick={toggleShowClaimPopup} />\n          <AutoColumn style={{ padding: '2rem 0', zIndex: 10 }} justify=\"center\">\n            <UniToken width=\"48px\" src={tokenLogo} />{' '}\n            <ThemedText.White style={{ marginTop: '1rem' }} fontSize={36} fontWeight={600}>\n              {unclaimedAmount?.toFixed(0, { groupSeparator: ',' } ?? '-')} UNI\n            </ThemedText.White>\n            <ThemedText.White style={{ paddingTop: '1.25rem', textAlign: 'center' }} fontWeight={600} color=\"white\">\n              <span role=\"img\" aria-label=\"party\">\n                🎉\n              </span>{' '}\n              <Trans>UNI has arrived</Trans>{' '}\n              <span role=\"img\" aria-label=\"party\">\n                🎉\n              </span>\n            </ThemedText.White>\n            <ThemedText.SubHeader style={{ paddingTop: '0.5rem', textAlign: 'center' }} color=\"white\">\n              <Trans>\n                Thanks for being part of the Uniswap community <Heart size={12} />\n              </Trans>\n            </ThemedText.SubHeader>\n          </AutoColumn>\n          <AutoColumn style={{ zIndex: 10 }} justify=\"center\">\n            <ButtonPrimary padding=\"8px\" $borderRadius=\"8px\" width={'fit-content'} onClick={handleToggleSelfClaimModal}>\n              <Trans>Claim your UNI tokens</Trans>\n            </ButtonPrimary>\n          </AutoColumn>\n        </StyledClaimPopup>\n      )}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}