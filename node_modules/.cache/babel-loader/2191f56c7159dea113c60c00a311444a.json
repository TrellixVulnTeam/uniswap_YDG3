{"ast":null,"code":"import { SwapRouter02__factory } from '../types/other';\nimport { log } from '../util';\nconst SWAP_ROUTER_ADDRESS = '0x075B36dE1Bd11cb361c5B3B1E80A9ab0e7aa8a60';\nexport class SwapRouterProvider {\n  constructor(multicall2Provider) {\n    this.multicall2Provider = multicall2Provider;\n  }\n\n  async getApprovalType(tokenInAmount, tokenOutAmount) {\n    var _a, _b;\n\n    const functionParams = [[tokenInAmount.currency.wrapped.address, tokenInAmount.quotient.toString()], [tokenOutAmount.currency.wrapped.address, tokenOutAmount.quotient.toString()]];\n    const tx = await this.multicall2Provider.callSameFunctionOnContractWithMultipleParams({\n      address: SWAP_ROUTER_ADDRESS,\n      contractInterface: SwapRouter02__factory.createInterface(),\n      functionName: 'getApprovalType',\n      functionParams\n    });\n\n    if (!((_a = tx.results[0]) === null || _a === void 0 ? void 0 : _a.success) || !((_b = tx.results[1]) === null || _b === void 0 ? void 0 : _b.success)) {\n      log.info({\n        results: tx.results\n      }, 'Failed to get approval type from swap router for token in or token out');\n      throw new Error('Failed to get approval type from swap router for token in or token out');\n    }\n\n    const {\n      result: approvalTokenIn\n    } = tx.results[0];\n    const {\n      result: approvalTokenOut\n    } = tx.results[1];\n    return {\n      approvalTokenIn: approvalTokenIn[0],\n      approvalTokenOut: approvalTokenOut[0]\n    };\n  }\n\n}","map":{"version":3,"sources":["../../../../src/providers/swap-router-provider.ts"],"names":[],"mappings":"AAEA,SAAS,qBAAT,QAAsC,gBAAtC;AACA,SAAS,GAAT,QAAoB,SAApB;AAQA,MAAM,mBAAmB,GAAG,4CAA5B;AAsBA,OAAM,MAAO,kBAAP,CAAyB;AAC7B,EAAA,WAAA,CAAsB,kBAAtB,EAA4D;AAAtC,SAAA,kBAAA,GAAA,kBAAA;AAA0C;;AAEpC,QAAf,eAAe,CAC1B,aAD0B,EAE1B,cAF0B,EAEc;;;AAExC,UAAM,cAAc,GAAuB,CACzC,CACE,aAAa,CAAC,QAAd,CAAuB,OAAvB,CAA+B,OADjC,EAEE,aAAa,CAAC,QAAd,CAAuB,QAAvB,EAFF,CADyC,EAKzC,CACE,cAAc,CAAC,QAAf,CAAwB,OAAxB,CAAgC,OADlC,EAEE,cAAc,CAAC,QAAf,CAAwB,QAAxB,EAFF,CALyC,CAA3C;AAWA,UAAM,EAAE,GACN,MAAM,KAAK,kBAAL,CAAwB,4CAAxB,CAGJ;AACA,MAAA,OAAO,EAAE,mBADT;AAEA,MAAA,iBAAiB,EAAE,qBAAqB,CAAC,eAAtB,EAFnB;AAGA,MAAA,YAAY,EAAE,iBAHd;AAIA,MAAA;AAJA,KAHI,CADR;;AAWA,QAAI,EAAC,CAAA,EAAA,GAAA,EAAE,CAAC,OAAH,CAAW,CAAX,CAAA,MAAa,IAAb,IAAa,EAAA,KAAA,KAAA,CAAb,GAAa,KAAA,CAAb,GAAa,EAAA,CAAE,OAAhB,KAA2B,EAAC,CAAA,EAAA,GAAA,EAAE,CAAC,OAAH,CAAW,CAAX,CAAA,MAAa,IAAb,IAAa,EAAA,KAAA,KAAA,CAAb,GAAa,KAAA,CAAb,GAAa,EAAA,CAAE,OAAhB,CAA/B,EAAwD;AACtD,MAAA,GAAG,CAAC,IAAJ,CACE;AAAE,QAAA,OAAO,EAAE,EAAE,CAAC;AAAd,OADF,EAEE,wEAFF;AAIA,YAAM,IAAI,KAAJ,CACJ,wEADI,CAAN;AAGD;;AAED,UAAM;AAAE,MAAA,MAAM,EAAE;AAAV,QAA8B,EAAE,CAAC,OAAH,CAAY,CAAZ,CAApC;AACA,UAAM;AAAE,MAAA,MAAM,EAAE;AAAV,QAA+B,EAAE,CAAC,OAAH,CAAY,CAAZ,CAArC;AAEA,WAAO;AACL,MAAA,eAAe,EAAE,eAAe,CAAC,CAAD,CAD3B;AAEL,MAAA,gBAAgB,EAAE,gBAAgB,CAAC,CAAD;AAF7B,KAAP;AAID;;AA9C4B","sourceRoot":"","sourcesContent":["import { SwapRouter02__factory } from '../types/other';\nimport { log } from '../util';\nconst SWAP_ROUTER_ADDRESS = '0x075B36dE1Bd11cb361c5B3B1E80A9ab0e7aa8a60';\nexport class SwapRouterProvider {\n    constructor(multicall2Provider) {\n        this.multicall2Provider = multicall2Provider;\n    }\n    async getApprovalType(tokenInAmount, tokenOutAmount) {\n        var _a, _b;\n        const functionParams = [\n            [\n                tokenInAmount.currency.wrapped.address,\n                tokenInAmount.quotient.toString(),\n            ],\n            [\n                tokenOutAmount.currency.wrapped.address,\n                tokenOutAmount.quotient.toString(),\n            ],\n        ];\n        const tx = await this.multicall2Provider.callSameFunctionOnContractWithMultipleParams({\n            address: SWAP_ROUTER_ADDRESS,\n            contractInterface: SwapRouter02__factory.createInterface(),\n            functionName: 'getApprovalType',\n            functionParams,\n        });\n        if (!((_a = tx.results[0]) === null || _a === void 0 ? void 0 : _a.success) || !((_b = tx.results[1]) === null || _b === void 0 ? void 0 : _b.success)) {\n            log.info({ results: tx.results }, 'Failed to get approval type from swap router for token in or token out');\n            throw new Error('Failed to get approval type from swap router for token in or token out');\n        }\n        const { result: approvalTokenIn } = tx.results[0];\n        const { result: approvalTokenOut } = tx.results[1];\n        return {\n            approvalTokenIn: approvalTokenIn[0],\n            approvalTokenOut: approvalTokenOut[0],\n        };\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3dhcC1yb3V0ZXItcHJvdmlkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvcHJvdmlkZXJzL3N3YXAtcm91dGVyLXByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFROUIsTUFBTSxtQkFBbUIsR0FBRyw0Q0FBNEMsQ0FBQztBQXNCekUsTUFBTSxPQUFPLGtCQUFrQjtJQUM3QixZQUFzQixrQkFBc0M7UUFBdEMsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFvQjtJQUFHLENBQUM7SUFFekQsS0FBSyxDQUFDLGVBQWUsQ0FDMUIsYUFBdUMsRUFDdkMsY0FBd0M7O1FBRXhDLE1BQU0sY0FBYyxHQUF1QjtZQUN6QztnQkFDRSxhQUFhLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxPQUFPO2dCQUN0QyxhQUFhLENBQUMsUUFBUSxDQUFDLFFBQVEsRUFBRTthQUNsQztZQUNEO2dCQUNFLGNBQWMsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLE9BQU87Z0JBQ3ZDLGNBQWMsQ0FBQyxRQUFRLENBQUMsUUFBUSxFQUFFO2FBQ25DO1NBQ0YsQ0FBQztRQUVGLE1BQU0sRUFBRSxHQUNOLE1BQU0sSUFBSSxDQUFDLGtCQUFrQixDQUFDLDRDQUE0QyxDQUd4RTtZQUNBLE9BQU8sRUFBRSxtQkFBbUI7WUFDNUIsaUJBQWlCLEVBQUUscUJBQXFCLENBQUMsZUFBZSxFQUFFO1lBQzFELFlBQVksRUFBRSxpQkFBaUI7WUFDL0IsY0FBYztTQUNmLENBQUMsQ0FBQztRQUVMLElBQUksQ0FBQyxDQUFBLE1BQUEsRUFBRSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsMENBQUUsT0FBTyxDQUFBLElBQUksQ0FBQyxDQUFBLE1BQUEsRUFBRSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsMENBQUUsT0FBTyxDQUFBLEVBQUU7WUFDdEQsR0FBRyxDQUFDLElBQUksQ0FDTixFQUFFLE9BQU8sRUFBRSxFQUFFLENBQUMsT0FBTyxFQUFFLEVBQ3ZCLHdFQUF3RSxDQUN6RSxDQUFDO1lBQ0YsTUFBTSxJQUFJLEtBQUssQ0FDYix3RUFBd0UsQ0FDekUsQ0FBQztTQUNIO1FBRUQsTUFBTSxFQUFFLE1BQU0sRUFBRSxlQUFlLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ25ELE1BQU0sRUFBRSxNQUFNLEVBQUUsZ0JBQWdCLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRXBELE9BQU87WUFDTCxlQUFlLEVBQUUsZUFBZSxDQUFDLENBQUMsQ0FBQztZQUNuQyxnQkFBZ0IsRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDLENBQUM7U0FDdEMsQ0FBQztJQUNKLENBQUM7Q0FDRiJ9"]},"metadata":{},"sourceType":"module"}