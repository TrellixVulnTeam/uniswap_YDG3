{"ast":null,"code":"import { DAI_MAINNET, USDC_MAINNET, USDT_MAINNET, WBTC_MAINNET, WMATIC_POLYGON, WMATIC_POLYGON_MUMBAI } from '../../providers/token-provider';\nimport { ChainId, WRAPPED_NATIVE_CURRENCY } from '../../util/chains';\nexport const BASES_TO_CHECK_TRADES_AGAINST = _tokenProvider => {\n  return {\n    [ChainId.MAINNET]: [WRAPPED_NATIVE_CURRENCY[ChainId.MAINNET], DAI_MAINNET, USDC_MAINNET, USDT_MAINNET, WBTC_MAINNET],\n    [ChainId.ROPSTEN]: [WRAPPED_NATIVE_CURRENCY[ChainId.ROPSTEN]],\n    [ChainId.RINKEBY]: [WRAPPED_NATIVE_CURRENCY[ChainId.RINKEBY]],\n    [ChainId.GÖRLI]: [WRAPPED_NATIVE_CURRENCY[ChainId.GÖRLI]],\n    [ChainId.KOVAN]: [WRAPPED_NATIVE_CURRENCY[ChainId.KOVAN]],\n    [ChainId.OPTIMISM]: [WRAPPED_NATIVE_CURRENCY[ChainId.OPTIMISM]],\n    [ChainId.OPTIMISTIC_KOVAN]: [WRAPPED_NATIVE_CURRENCY[ChainId.OPTIMISTIC_KOVAN]],\n    [ChainId.ARBITRUM_ONE]: [WRAPPED_NATIVE_CURRENCY[ChainId.ARBITRUM_ONE]],\n    [ChainId.ARBITRUM_RINKEBY]: [WRAPPED_NATIVE_CURRENCY[ChainId.ARBITRUM_RINKEBY]],\n    [ChainId.POLYGON]: [WMATIC_POLYGON],\n    [ChainId.POLYGON_MUMBAI]: [WMATIC_POLYGON_MUMBAI]\n  };\n};\n\nconst getBasePairByAddress = async (tokenProvider, _chainId, fromAddress, toAddress) => {\n  const accessor = await tokenProvider.getTokens([toAddress]);\n  const toToken = accessor.getTokenByAddress(toAddress);\n  if (!toToken) return {};\n  return {\n    [fromAddress]: [toToken]\n  };\n};\n\nexport const ADDITIONAL_BASES = async tokenProvider => {\n  return {\n    [ChainId.MAINNET]: { ...(await getBasePairByAddress(tokenProvider, ChainId.MAINNET, '0xA948E86885e12Fb09AfEF8C52142EBDbDf73cD18', '0x1f9840a85d5af5bf1d1762f925bdaddc4201f984')),\n      ...(await getBasePairByAddress(tokenProvider, ChainId.MAINNET, '0x561a4717537ff4AF5c687328c0f7E90a319705C0', '0x1f9840a85d5af5bf1d1762f925bdaddc4201f984')),\n      ...(await getBasePairByAddress(tokenProvider, ChainId.MAINNET, '0x956F47F50A910163D8BF957Cf5846D573E7f87CA', '0xc7283b66Eb1EB5FB86327f08e1B5816b0720212B')),\n      ...(await getBasePairByAddress(tokenProvider, ChainId.MAINNET, '0xc7283b66Eb1EB5FB86327f08e1B5816b0720212B', '0x956F47F50A910163D8BF957Cf5846D573E7f87CA')),\n      ...(await getBasePairByAddress(tokenProvider, ChainId.MAINNET, '0x853d955acef822db058eb8505911ed77f175b99e', '0x3432b6a60d23ca0dfca7761b7ab56459d9c964d0')),\n      ...(await getBasePairByAddress(tokenProvider, ChainId.MAINNET, '0x3432b6a60d23ca0dfca7761b7ab56459d9c964d0', '0x853d955acef822db058eb8505911ed77f175b99e')),\n      ...(await getBasePairByAddress(tokenProvider, ChainId.MAINNET, '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599', '0xeb4c2781e4eba804ce9a9803c67d0893436bb27d')),\n      ...(await getBasePairByAddress(tokenProvider, ChainId.MAINNET, '0xeb4c2781e4eba804ce9a9803c67d0893436bb27d', '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599'))\n    }\n  };\n};\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n */\n\nexport const CUSTOM_BASES = async tokenProvider => {\n  return {\n    [ChainId.MAINNET]: { ...(await getBasePairByAddress(tokenProvider, ChainId.MAINNET, '0xd46ba6d942050d489dbd938a2c909a5d5039a161', DAI_MAINNET.address)),\n      ...(await getBasePairByAddress(tokenProvider, ChainId.MAINNET, '0xd46ba6d942050d489dbd938a2c909a5d5039a161', WRAPPED_NATIVE_CURRENCY[1].address))\n    }\n  };\n};","map":{"version":3,"sources":["../../../../../src/routers/legacy-router/bases.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { DAI_MAINNET, USDC_MAINNET, USDT_MAINNET, WBTC_MAINNET, WMATIC_POLYGON, WMATIC_POLYGON_MUMBAI, } from '../../providers/token-provider';\nimport { ChainId, WRAPPED_NATIVE_CURRENCY } from '../../util/chains';\nexport const BASES_TO_CHECK_TRADES_AGAINST = (_tokenProvider) => {\n    return {\n        [ChainId.MAINNET]: [\n            WRAPPED_NATIVE_CURRENCY[ChainId.MAINNET],\n            DAI_MAINNET,\n            USDC_MAINNET,\n            USDT_MAINNET,\n            WBTC_MAINNET,\n        ],\n        [ChainId.ROPSTEN]: [WRAPPED_NATIVE_CURRENCY[ChainId.ROPSTEN]],\n        [ChainId.RINKEBY]: [WRAPPED_NATIVE_CURRENCY[ChainId.RINKEBY]],\n        [ChainId.GÖRLI]: [WRAPPED_NATIVE_CURRENCY[ChainId.GÖRLI]],\n        [ChainId.KOVAN]: [WRAPPED_NATIVE_CURRENCY[ChainId.KOVAN]],\n        [ChainId.OPTIMISM]: [WRAPPED_NATIVE_CURRENCY[ChainId.OPTIMISM]],\n        [ChainId.OPTIMISTIC_KOVAN]: [\n            WRAPPED_NATIVE_CURRENCY[ChainId.OPTIMISTIC_KOVAN],\n        ],\n        [ChainId.ARBITRUM_ONE]: [WRAPPED_NATIVE_CURRENCY[ChainId.ARBITRUM_ONE]],\n        [ChainId.ARBITRUM_RINKEBY]: [\n            WRAPPED_NATIVE_CURRENCY[ChainId.ARBITRUM_RINKEBY],\n        ],\n        [ChainId.POLYGON]: [WMATIC_POLYGON],\n        [ChainId.POLYGON_MUMBAI]: [WMATIC_POLYGON_MUMBAI],\n    };\n};\nconst getBasePairByAddress = async (tokenProvider, _chainId, fromAddress, toAddress) => {\n    const accessor = await tokenProvider.getTokens([toAddress]);\n    const toToken = accessor.getTokenByAddress(toAddress);\n    if (!toToken)\n        return {};\n    return {\n        [fromAddress]: [toToken],\n    };\n};\nexport const ADDITIONAL_BASES = async (tokenProvider) => {\n    return {\n        [ChainId.MAINNET]: {\n            ...(await getBasePairByAddress(tokenProvider, ChainId.MAINNET, '0xA948E86885e12Fb09AfEF8C52142EBDbDf73cD18', '0x1f9840a85d5af5bf1d1762f925bdaddc4201f984')),\n            ...(await getBasePairByAddress(tokenProvider, ChainId.MAINNET, '0x561a4717537ff4AF5c687328c0f7E90a319705C0', '0x1f9840a85d5af5bf1d1762f925bdaddc4201f984')),\n            ...(await getBasePairByAddress(tokenProvider, ChainId.MAINNET, '0x956F47F50A910163D8BF957Cf5846D573E7f87CA', '0xc7283b66Eb1EB5FB86327f08e1B5816b0720212B')),\n            ...(await getBasePairByAddress(tokenProvider, ChainId.MAINNET, '0xc7283b66Eb1EB5FB86327f08e1B5816b0720212B', '0x956F47F50A910163D8BF957Cf5846D573E7f87CA')),\n            ...(await getBasePairByAddress(tokenProvider, ChainId.MAINNET, '0x853d955acef822db058eb8505911ed77f175b99e', '0x3432b6a60d23ca0dfca7761b7ab56459d9c964d0')),\n            ...(await getBasePairByAddress(tokenProvider, ChainId.MAINNET, '0x3432b6a60d23ca0dfca7761b7ab56459d9c964d0', '0x853d955acef822db058eb8505911ed77f175b99e')),\n            ...(await getBasePairByAddress(tokenProvider, ChainId.MAINNET, '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599', '0xeb4c2781e4eba804ce9a9803c67d0893436bb27d')),\n            ...(await getBasePairByAddress(tokenProvider, ChainId.MAINNET, '0xeb4c2781e4eba804ce9a9803c67d0893436bb27d', '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599')),\n        },\n    };\n};\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n */\nexport const CUSTOM_BASES = async (tokenProvider) => {\n    return {\n        [ChainId.MAINNET]: {\n            ...(await getBasePairByAddress(tokenProvider, ChainId.MAINNET, '0xd46ba6d942050d489dbd938a2c909a5d5039a161', DAI_MAINNET.address)),\n            ...(await getBasePairByAddress(tokenProvider, ChainId.MAINNET, '0xd46ba6d942050d489dbd938a2c909a5d5039a161', WRAPPED_NATIVE_CURRENCY[1].address)),\n        },\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvcm91dGVycy9sZWdhY3ktcm91dGVyL2Jhc2VzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFDTCxXQUFXLEVBRVgsWUFBWSxFQUNaLFlBQVksRUFDWixZQUFZLEVBQ1osY0FBYyxFQUNkLHFCQUFxQixHQUN0QixNQUFNLGdDQUFnQyxDQUFDO0FBQ3hDLE9BQU8sRUFBRSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQU1yRSxNQUFNLENBQUMsTUFBTSw2QkFBNkIsR0FBRyxDQUMzQyxjQUE4QixFQUNkLEVBQUU7SUFDbEIsT0FBTztRQUNMLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQ2pCLHVCQUF1QixDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUU7WUFDekMsV0FBVztZQUNYLFlBQVk7WUFDWixZQUFZO1lBQ1osWUFBWTtTQUNiO1FBQ0QsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFFLENBQUM7UUFDOUQsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFFLENBQUM7UUFDOUQsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFFLENBQUM7UUFDMUQsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFFLENBQUM7UUFDMUQsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFFLENBQUM7UUFDaEUsQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsRUFBRTtZQUMxQix1QkFBdUIsQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLENBQUU7U0FDbkQ7UUFDRCxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLHVCQUF1QixDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUUsQ0FBQztRQUN4RSxDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFFO1lBQzFCLHVCQUF1QixDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBRTtTQUNuRDtRQUNELENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsY0FBYyxDQUFDO1FBQ25DLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxFQUFFLENBQUMscUJBQXFCLENBQUM7S0FDbEQsQ0FBQztBQUNKLENBQUMsQ0FBQztBQUVGLE1BQU0sb0JBQW9CLEdBQUcsS0FBSyxFQUNoQyxhQUE2QixFQUM3QixRQUFpQixFQUNqQixXQUFtQixFQUNuQixTQUFpQixFQUM2QixFQUFFO0lBQ2hELE1BQU0sUUFBUSxHQUFHLE1BQU0sYUFBYSxDQUFDLFNBQVMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7SUFDNUQsTUFBTSxPQUFPLEdBQXNCLFFBQVEsQ0FBQyxpQkFBaUIsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUV6RSxJQUFJLENBQUMsT0FBTztRQUFFLE9BQU8sRUFBRSxDQUFDO0lBRXhCLE9BQU87UUFDTCxDQUFDLFdBQVcsQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDO0tBQ3pCLENBQUM7QUFDSixDQUFDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxnQkFBZ0IsR0FBRyxLQUFLLEVBQ25DLGFBQTZCLEVBSzdCLEVBQUU7SUFDRixPQUFPO1FBQ0wsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUU7WUFDakIsR0FBRyxDQUFDLE1BQU0sb0JBQW9CLENBQzVCLGFBQWEsRUFDYixPQUFPLENBQUMsT0FBTyxFQUNmLDRDQUE0QyxFQUM1Qyw0Q0FBNEMsQ0FDN0MsQ0FBQztZQUNGLEdBQUcsQ0FBQyxNQUFNLG9CQUFvQixDQUM1QixhQUFhLEVBQ2IsT0FBTyxDQUFDLE9BQU8sRUFDZiw0Q0FBNEMsRUFDNUMsNENBQTRDLENBQzdDLENBQUM7WUFDRixHQUFHLENBQUMsTUFBTSxvQkFBb0IsQ0FDNUIsYUFBYSxFQUNiLE9BQU8sQ0FBQyxPQUFPLEVBQ2YsNENBQTRDLEVBQzVDLDRDQUE0QyxDQUM3QyxDQUFDO1lBQ0YsR0FBRyxDQUFDLE1BQU0sb0JBQW9CLENBQzVCLGFBQWEsRUFDYixPQUFPLENBQUMsT0FBTyxFQUNmLDRDQUE0QyxFQUM1Qyw0Q0FBNEMsQ0FDN0MsQ0FBQztZQUNGLEdBQUcsQ0FBQyxNQUFNLG9CQUFvQixDQUM1QixhQUFhLEVBQ2IsT0FBTyxDQUFDLE9BQU8sRUFDZiw0Q0FBNEMsRUFDNUMsNENBQTRDLENBQzdDLENBQUM7WUFDRixHQUFHLENBQUMsTUFBTSxvQkFBb0IsQ0FDNUIsYUFBYSxFQUNiLE9BQU8sQ0FBQyxPQUFPLEVBQ2YsNENBQTRDLEVBQzVDLDRDQUE0QyxDQUM3QyxDQUFDO1lBQ0YsR0FBRyxDQUFDLE1BQU0sb0JBQW9CLENBQzVCLGFBQWEsRUFDYixPQUFPLENBQUMsT0FBTyxFQUNmLDRDQUE0QyxFQUM1Qyw0Q0FBNEMsQ0FDN0MsQ0FBQztZQUNGLEdBQUcsQ0FBQyxNQUFNLG9CQUFvQixDQUM1QixhQUFhLEVBQ2IsT0FBTyxDQUFDLE9BQU8sRUFDZiw0Q0FBNEMsRUFDNUMsNENBQTRDLENBQzdDLENBQUM7U0FDSDtLQUNGLENBQUM7QUFDSixDQUFDLENBQUM7QUFFRjs7O0dBR0c7QUFDSCxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsS0FBSyxFQUMvQixhQUE2QixFQUs3QixFQUFFO0lBQ0YsT0FBTztRQUNMLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQ2pCLEdBQUcsQ0FBQyxNQUFNLG9CQUFvQixDQUM1QixhQUFhLEVBQ2IsT0FBTyxDQUFDLE9BQU8sRUFDZiw0Q0FBNEMsRUFDNUMsV0FBVyxDQUFDLE9BQU8sQ0FDcEIsQ0FBQztZQUNGLEdBQUcsQ0FBQyxNQUFNLG9CQUFvQixDQUM1QixhQUFhLEVBQ2IsT0FBTyxDQUFDLE9BQU8sRUFDZiw0Q0FBNEMsRUFDNUMsdUJBQXVCLENBQUMsQ0FBQyxDQUFFLENBQUMsT0FBTyxDQUNwQyxDQUFDO1NBQ0g7S0FDRixDQUFDO0FBQ0osQ0FBQyxDQUFDIn0="]},"metadata":{},"sourceType":"module"}