{"ast":null,"code":"import _styled from \"styled-components\";\n\nvar _jsxFileName = \"/Users/safahi/Downloads/interface-4.30.1/src/components/SearchModal/ImportRow.tsx\",\n    _s = $RefreshSig$();\n\nimport { Trans } from \"@lingui/react\";\nimport { ButtonPrimary } from 'components/Button';\nimport { AutoColumn } from 'components/Column';\nimport CurrencyLogo from 'components/CurrencyLogo';\nimport ListLogo from 'components/ListLogo';\nimport { AutoRow, RowFixed } from 'components/Row';\nimport { useIsTokenActive, useIsUserAddedToken } from 'hooks/Tokens';\nimport useTheme from 'hooks/useTheme';\nimport { CheckCircle } from 'react-feather';\nimport { ThemedText } from 'theme';\nimport { WrappedTokenInfo } from '../../state/lists/wrappedTokenInfo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TokenSection = _styled.div.withConfig({\n  displayName: \"ImportRow__TokenSection\",\n  componentId: \"sc-1x3jvxb-0\"\n})([\"padding:4px 20px;height:56px;display:grid;grid-template-columns:auto minmax(auto,1fr) auto;grid-gap:16px;align-items:center;opacity:\", \";\"], ({\n  dim\n}) => dim ? '0.4' : '1');\n\nconst CheckIcon = _styled(CheckCircle).withConfig({\n  displayName: \"ImportRow__CheckIcon\",\n  componentId: \"sc-1x3jvxb-1\"\n})([\"height:16px;width:16px;margin-right:6px;stroke:\", \";\"], ({\n  theme\n}) => theme.green1);\n\nconst NameOverflow = _styled.div.withConfig({\n  displayName: \"ImportRow__NameOverflow\",\n  componentId: \"sc-1x3jvxb-2\"\n})([\"white-space:nowrap;text-overflow:ellipsis;overflow:hidden;text-overflow:ellipsis;max-width:140px;font-size:12px;\"]);\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken\n}) {\n  _s();\n\n  const theme = useTheme(); // check if already active on list or local storage tokens\n\n  const isAdded = useIsUserAddedToken(token);\n  const isActive = useIsTokenActive(token);\n  const list = token instanceof WrappedTokenInfo ? token.list : undefined;\n  return /*#__PURE__*/_jsxDEV(TokenSection, {\n    style: style,\n    children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n      currency: token,\n      size: '24px',\n      style: {\n        opacity: dim ? '0.6' : '1'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n      gap: \"4px\",\n      style: {\n        opacity: dim ? '0.6' : '1'\n      },\n      children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n        children: [/*#__PURE__*/_jsxDEV(ThemedText.Body, {\n          fontWeight: 500,\n          children: token.symbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ThemedText.DarkGray, {\n          ml: \"8px\",\n          fontWeight: 300,\n          children: /*#__PURE__*/_jsxDEV(NameOverflow, {\n            title: token.name,\n            children: token.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), list && list.logoURI && /*#__PURE__*/_jsxDEV(RowFixed, {\n        children: [/*#__PURE__*/_jsxDEV(ThemedText.Small, {\n          mr: \"4px\",\n          color: theme.text3,\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"via {0}\",\n            values: {\n              0: list.name\n            }\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListLogo, {\n          logoURI: list.logoURI,\n          size: \"12px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), !isActive && !isAdded ? /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n      width: \"fit-content\",\n      padding: \"6px 12px\",\n      fontWeight: 500,\n      fontSize: \"14px\",\n      onClick: () => {\n        setImportToken && setImportToken(token);\n        showImportView();\n      },\n      children: /*#__PURE__*/_jsxDEV(Trans, {\n        id: \"Import\"\n      }, void 0, false, void 0, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(RowFixed, {\n      style: {\n        minWidth: 'fit-content'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ThemedText.Main, {\n        color: theme.green1,\n        children: /*#__PURE__*/_jsxDEV(Trans, {\n          id: \"Active\"\n        }, void 0, false, void 0, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ImportRow, \"BwOy5VJMsb7y2DnoLFIDw7P4pxM=\", false, function () {\n  return [useTheme, useIsUserAddedToken, useIsTokenActive];\n});\n\n_c = ImportRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImportRow\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/components/SearchModal/ImportRow.tsx"],"names":["ButtonPrimary","AutoColumn","CurrencyLogo","ListLogo","AutoRow","RowFixed","useIsTokenActive","useIsUserAddedToken","useTheme","CheckCircle","ThemedText","WrappedTokenInfo","TokenSection","styled","div","dim","CheckIcon","theme","green1","NameOverflow","ImportRow","token","style","showImportView","setImportToken","isAdded","isActive","list","undefined","opacity","symbol","name","logoURI","text3","minWidth"],"mappings":"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","sourcesContent":["import { Trans } from '@lingui/macro'\nimport { Token } from '@uniswap/sdk-core'\nimport { ButtonPrimary } from 'components/Button'\nimport { AutoColumn } from 'components/Column'\nimport CurrencyLogo from 'components/CurrencyLogo'\nimport ListLogo from 'components/ListLogo'\nimport { AutoRow, RowFixed } from 'components/Row'\nimport { useIsTokenActive, useIsUserAddedToken } from 'hooks/Tokens'\nimport useTheme from 'hooks/useTheme'\nimport { CSSProperties } from 'react'\nimport { CheckCircle } from 'react-feather'\nimport styled from 'styled-components/macro'\nimport { ThemedText } from 'theme'\n\nimport { WrappedTokenInfo } from '../../state/lists/wrappedTokenInfo'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckCircle)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.green1};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  const theme = useTheme()\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  const list = token instanceof WrappedTokenInfo ? token.list : undefined\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size={'24px'} style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <ThemedText.Body fontWeight={500}>{token.symbol}</ThemedText.Body>\n          <ThemedText.DarkGray ml=\"8px\" fontWeight={300}>\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </ThemedText.DarkGray>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <ThemedText.Small mr=\"4px\" color={theme.text3}>\n              <Trans>via {list.name} </Trans>\n            </ThemedText.Small>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <ButtonPrimary\n          width=\"fit-content\"\n          padding=\"6px 12px\"\n          fontWeight={500}\n          fontSize=\"14px\"\n          onClick={() => {\n            setImportToken && setImportToken(token)\n            showImportView()\n          }}\n        >\n          <Trans>Import</Trans>\n        </ButtonPrimary>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <ThemedText.Main color={theme.green1}>\n            <Trans>Active</Trans>\n          </ThemedText.Main>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}