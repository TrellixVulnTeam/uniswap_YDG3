{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useMemo } from 'react';\nimport { isAddress } from '../utils';\nimport useENSAddress from './useENSAddress';\nimport useENSName from './useENSName';\n/**\n * Given a name or address, does a lookup to resolve to an address and name\n * @param nameOrAddress ENS name or address\n */\n\nexport default function useENS(nameOrAddress) {\n  _s();\n\n  const validated = isAddress(nameOrAddress);\n  const reverseLookup = useENSName(validated ? validated : undefined);\n  const lookup = useENSAddress(nameOrAddress);\n  return useMemo(() => ({\n    loading: reverseLookup.loading || lookup.loading,\n    address: validated ? validated : lookup.address,\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null\n  }), [lookup.address, lookup.loading, nameOrAddress, reverseLookup.ENSName, reverseLookup.loading, validated]);\n}\n\n_s(useENS, \"koDmIo1Qy5oMhRGypXe0P7AgCLQ=\", false, function () {\n  return [useENSName, useENSAddress];\n});","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/hooks/useENS.ts"],"names":["useMemo","isAddress","useENSAddress","useENSName","useENS","nameOrAddress","validated","reverseLookup","undefined","lookup","loading","address","name","ENSName"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,OAAxB;AAEA,SAASC,SAAT,QAA0B,UAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA;AACA;AACA;AACA;;AACA,eAAe,SAASC,MAAT,CAAgBC,aAAhB,EAIb;AAAA;;AACA,QAAMC,SAAS,GAAGL,SAAS,CAACI,aAAD,CAA3B;AACA,QAAME,aAAa,GAAGJ,UAAU,CAACG,SAAS,GAAGA,SAAH,GAAeE,SAAzB,CAAhC;AACA,QAAMC,MAAM,GAAGP,aAAa,CAACG,aAAD,CAA5B;AAEA,SAAOL,OAAO,CACZ,OAAO;AACLU,IAAAA,OAAO,EAAEH,aAAa,CAACG,OAAd,IAAyBD,MAAM,CAACC,OADpC;AAELC,IAAAA,OAAO,EAAEL,SAAS,GAAGA,SAAH,GAAeG,MAAM,CAACE,OAFnC;AAGLC,IAAAA,IAAI,EAAEL,aAAa,CAACM,OAAd,GAAwBN,aAAa,CAACM,OAAtC,GAAgD,CAACP,SAAD,IAAcG,MAAM,CAACE,OAArB,GAA+BN,aAAa,IAAI,IAAhD,GAAuD;AAHxG,GAAP,CADY,EAMZ,CAACI,MAAM,CAACE,OAAR,EAAiBF,MAAM,CAACC,OAAxB,EAAiCL,aAAjC,EAAgDE,aAAa,CAACM,OAA9D,EAAuEN,aAAa,CAACG,OAArF,EAA8FJ,SAA9F,CANY,CAAd;AAQD;;GAjBuBF,M;UAMAD,U,EACPD,a","sourcesContent":["import { useMemo } from 'react'\n\nimport { isAddress } from '../utils'\nimport useENSAddress from './useENSAddress'\nimport useENSName from './useENSName'\n\n/**\n * Given a name or address, does a lookup to resolve to an address and name\n * @param nameOrAddress ENS name or address\n */\nexport default function useENS(nameOrAddress?: string | null): {\n  loading: boolean\n  address: string | null\n  name: string | null\n} {\n  const validated = isAddress(nameOrAddress)\n  const reverseLookup = useENSName(validated ? validated : undefined)\n  const lookup = useENSAddress(nameOrAddress)\n\n  return useMemo(\n    () => ({\n      loading: reverseLookup.loading || lookup.loading,\n      address: validated ? validated : lookup.address,\n      name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\n    }),\n    [lookup.address, lookup.loading, nameOrAddress, reverseLookup.ENSName, reverseLookup.loading, validated]\n  )\n}\n"]},"metadata":{},"sourceType":"module"}