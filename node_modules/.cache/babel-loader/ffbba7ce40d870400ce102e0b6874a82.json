{"ast":null,"code":"import { ThemeContext as _ThemeContext } from \"styled-components\";\nimport _styled from \"styled-components\";\n\nvar _jsxFileName = \"/Users/safahi/Downloads/interface-4.30.1/src/components/Popups/TransactionPopup.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { AlertCircle, CheckCircle } from 'react-feather';\nimport { useActiveWeb3React } from '../../hooks/web3';\nimport { useTransaction } from '../../state/transactions/hooks';\nimport { ThemedText } from '../../theme';\nimport { ExternalLink } from '../../theme';\nimport { ExplorerDataType, getExplorerLink } from '../../utils/getExplorerLink';\nimport { TransactionSummary } from '../AccountDetails/TransactionSummary';\nimport { AutoColumn } from '../Column';\nimport { AutoRow } from '../Row';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RowNoFlex = _styled(AutoRow).withConfig({\n  displayName: \"TransactionPopup__RowNoFlex\",\n  componentId: \"sc-13d9pmm-0\"\n})([\"flex-wrap:nowrap;\"]);\n\nexport default function TransactionPopup({\n  hash\n}) {\n  _s();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const tx = useTransaction(hash);\n  const theme = useContext(_ThemeContext);\n  if (!tx) return null;\n  const success = Boolean(tx.receipt && tx.receipt.status === 1);\n  return /*#__PURE__*/_jsxDEV(RowNoFlex, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingRight: 16\n      },\n      children: success ? /*#__PURE__*/_jsxDEV(CheckCircle, {\n        color: theme.green1,\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 20\n      }, this) : /*#__PURE__*/_jsxDEV(AlertCircle, {\n        color: theme.red1,\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 69\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n      gap: \"8px\",\n      children: [/*#__PURE__*/_jsxDEV(ThemedText.Body, {\n        fontWeight: 500,\n        children: /*#__PURE__*/_jsxDEV(TransactionSummary, {\n          info: tx.info\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), chainId && /*#__PURE__*/_jsxDEV(ExternalLink, {\n        href: getExplorerLink(chainId, hash, ExplorerDataType.TRANSACTION),\n        children: \"View on Explorer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TransactionPopup, \"QeRus8HN4ZmOv4dOSeG3iDBvFFI=\", false, function () {\n  return [useActiveWeb3React, useTransaction];\n});\n\n_c = TransactionPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionPopup\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/components/Popups/TransactionPopup.tsx"],"names":["useContext","AlertCircle","CheckCircle","useActiveWeb3React","useTransaction","ThemedText","ExternalLink","ExplorerDataType","getExplorerLink","TransactionSummary","AutoColumn","AutoRow","RowNoFlex","styled","TransactionPopup","hash","chainId","tx","theme","ThemeContext","success","Boolean","receipt","status","paddingRight","green1","red1","info","TRANSACTION"],"mappings":";;;;;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,eAAzC;AAGA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,cAAT,QAA+B,gCAA/B;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,SAASC,gBAAT,EAA2BC,eAA3B,QAAkD,6BAAlD;AACA,SAASC,kBAAT,QAAmC,sCAAnC;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,SAASC,OAAT,QAAwB,QAAxB;;;AAEA,MAAMC,SAAS,GAAGC,OAAM,CAACF,OAAD,CAAT;AAAA;AAAA;AAAA,yBAAf;;AAIA,eAAe,SAASG,gBAAT,CAA0B;AAAEC,EAAAA;AAAF,CAA1B,EAAsD;AAAA;;AACnE,QAAM;AAAEC,IAAAA;AAAF,MAAcb,kBAAkB,EAAtC;AAEA,QAAMc,EAAE,GAAGb,cAAc,CAACW,IAAD,CAAzB;AACA,QAAMG,KAAK,GAAGlB,UAAU,CAACmB,aAAD,CAAxB;AAEA,MAAI,CAACF,EAAL,EAAS,OAAO,IAAP;AACT,QAAMG,OAAO,GAAGC,OAAO,CAACJ,EAAE,CAACK,OAAH,IAAcL,EAAE,CAACK,OAAH,CAAWC,MAAX,KAAsB,CAArC,CAAvB;AAEA,sBACE,QAAC,SAAD;AAAA,4BACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OAAZ;AAAA,gBACGJ,OAAO,gBAAG,QAAC,WAAD;AAAa,QAAA,KAAK,EAAEF,KAAK,CAACO,MAA1B;AAAkC,QAAA,IAAI,EAAE;AAAxC;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAoD,QAAC,WAAD;AAAa,QAAA,KAAK,EAAEP,KAAK,CAACQ,IAA1B;AAAgC,QAAA,IAAI,EAAE;AAAtC;AAAA;AAAA;AAAA;AAAA;AAD9D;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,UAAD;AAAY,MAAA,GAAG,EAAC,KAAhB;AAAA,8BACE,QAAC,UAAD,CAAY,IAAZ;AAAiB,QAAA,UAAU,EAAE,GAA7B;AAAA,+BACE,QAAC,kBAAD;AAAoB,UAAA,IAAI,EAAET,EAAE,CAACU;AAA7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAIGX,OAAO,iBACN,QAAC,YAAD;AAAc,QAAA,IAAI,EAAER,eAAe,CAACQ,OAAD,EAAUD,IAAV,EAAgBR,gBAAgB,CAACqB,WAAjC,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA1BuBd,gB;UACFX,kB,EAETC,c;;;KAHWU,gB","sourcesContent":["import { useContext } from 'react'\nimport { AlertCircle, CheckCircle } from 'react-feather'\nimport styled, { ThemeContext } from 'styled-components/macro'\n\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport { useTransaction } from '../../state/transactions/hooks'\nimport { ThemedText } from '../../theme'\nimport { ExternalLink } from '../../theme'\nimport { ExplorerDataType, getExplorerLink } from '../../utils/getExplorerLink'\nimport { TransactionSummary } from '../AccountDetails/TransactionSummary'\nimport { AutoColumn } from '../Column'\nimport { AutoRow } from '../Row'\n\nconst RowNoFlex = styled(AutoRow)`\n  flex-wrap: nowrap;\n`\n\nexport default function TransactionPopup({ hash }: { hash: string }) {\n  const { chainId } = useActiveWeb3React()\n\n  const tx = useTransaction(hash)\n  const theme = useContext(ThemeContext)\n\n  if (!tx) return null\n  const success = Boolean(tx.receipt && tx.receipt.status === 1)\n\n  return (\n    <RowNoFlex>\n      <div style={{ paddingRight: 16 }}>\n        {success ? <CheckCircle color={theme.green1} size={24} /> : <AlertCircle color={theme.red1} size={24} />}\n      </div>\n      <AutoColumn gap=\"8px\">\n        <ThemedText.Body fontWeight={500}>\n          <TransactionSummary info={tx.info} />\n        </ThemedText.Body>\n        {chainId && (\n          <ExternalLink href={getExplorerLink(chainId, hash, ExplorerDataType.TRANSACTION)}>\n            View on Explorer\n          </ExternalLink>\n        )}\n      </AutoColumn>\n    </RowNoFlex>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}