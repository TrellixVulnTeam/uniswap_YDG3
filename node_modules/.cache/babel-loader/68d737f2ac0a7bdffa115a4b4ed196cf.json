{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { nearestUsableTick, TICK_SPACINGS, TickMath } from '@uniswap/v3-sdk';\nimport { useMemo } from 'react';\nimport { Bound } from 'state/mint/v3/actions';\nexport default function useIsTickAtLimit(feeAmount, tickLower, tickUpper) {\n  _s();\n\n  return useMemo(() => ({\n    [Bound.LOWER]: feeAmount && tickLower ? tickLower === nearestUsableTick(TickMath.MIN_TICK, TICK_SPACINGS[feeAmount]) : undefined,\n    [Bound.UPPER]: feeAmount && tickUpper ? tickUpper === nearestUsableTick(TickMath.MAX_TICK, TICK_SPACINGS[feeAmount]) : undefined\n  }), [feeAmount, tickLower, tickUpper]);\n}\n\n_s(useIsTickAtLimit, \"nwk+m61qLgjDVUp4IGV/072DDN4=\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/hooks/useIsTickAtLimit.ts"],"names":["nearestUsableTick","TICK_SPACINGS","TickMath","useMemo","Bound","useIsTickAtLimit","feeAmount","tickLower","tickUpper","LOWER","MIN_TICK","undefined","UPPER","MAX_TICK"],"mappings":";;AAAA,SAAoBA,iBAApB,EAAuCC,aAAvC,EAAsDC,QAAtD,QAAsE,iBAAtE;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,KAAT,QAAsB,uBAAtB;AAEA,eAAe,SAASC,gBAAT,CACbC,SADa,EAEbC,SAFa,EAGbC,SAHa,EAIb;AAAA;;AACA,SAAOL,OAAO,CACZ,OAAO;AACL,KAACC,KAAK,CAACK,KAAP,GACEH,SAAS,IAAIC,SAAb,GACIA,SAAS,KAAKP,iBAAiB,CAACE,QAAQ,CAACQ,QAAV,EAAoBT,aAAa,CAACK,SAAD,CAAjC,CADnC,GAEIK,SAJD;AAKL,KAACP,KAAK,CAACQ,KAAP,GACEN,SAAS,IAAIE,SAAb,GACIA,SAAS,KAAKR,iBAAiB,CAACE,QAAQ,CAACW,QAAV,EAAoBZ,aAAa,CAACK,SAAD,CAAjC,CADnC,GAEIK;AARD,GAAP,CADY,EAWZ,CAACL,SAAD,EAAYC,SAAZ,EAAuBC,SAAvB,CAXY,CAAd;AAaD;;GAlBuBH,gB","sourcesContent":["import { FeeAmount, nearestUsableTick, TICK_SPACINGS, TickMath } from '@uniswap/v3-sdk'\nimport { useMemo } from 'react'\nimport { Bound } from 'state/mint/v3/actions'\n\nexport default function useIsTickAtLimit(\n  feeAmount: FeeAmount | undefined,\n  tickLower: number | undefined,\n  tickUpper: number | undefined\n) {\n  return useMemo(\n    () => ({\n      [Bound.LOWER]:\n        feeAmount && tickLower\n          ? tickLower === nearestUsableTick(TickMath.MIN_TICK, TICK_SPACINGS[feeAmount as FeeAmount])\n          : undefined,\n      [Bound.UPPER]:\n        feeAmount && tickUpper\n          ? tickUpper === nearestUsableTick(TickMath.MAX_TICK, TICK_SPACINGS[feeAmount as FeeAmount])\n          : undefined,\n    }),\n    [feeAmount, tickLower, tickUpper]\n  )\n}\n"]},"metadata":{},"sourceType":"module"}