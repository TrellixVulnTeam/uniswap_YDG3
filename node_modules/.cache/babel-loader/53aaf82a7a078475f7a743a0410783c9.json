{"ast":null,"code":"import{useActiveWeb3React}from'hooks/web3';import{useMemo}from'react';import{useCombinedActiveList}from'state/lists/hooks';/**\n * Returns a WrappedTokenInfo from the active token lists when possible,\n * or the passed token otherwise. */export function useTokenInfoFromActiveList(currency){var _useActiveWeb3React=useActiveWeb3React(),chainId=_useActiveWeb3React.chainId;var activeList=useCombinedActiveList();return useMemo(function(){if(!chainId)return;if(currency.isNative)return currency;try{return activeList[chainId][currency.wrapped.address].token;}catch(e){return currency;}},[activeList,chainId,currency]);}","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/hooks/useTokenInfoFromActiveList.ts"],"names":["useActiveWeb3React","useMemo","useCombinedActiveList","useTokenInfoFromActiveList","currency","chainId","activeList","isNative","wrapped","address","token","e"],"mappings":"AACA,OAASA,kBAAT,KAAmC,YAAnC,CACA,OAASC,OAAT,KAAwB,OAAxB,CACA,OAASC,qBAAT,KAAsC,mBAAtC,CAEA;AACA;AACA,oCACA,MAAO,SAASC,CAAAA,0BAAT,CAAoCC,QAApC,CAAwD,CAC7D,wBAAoBJ,kBAAkB,EAAtC,CAAQK,OAAR,qBAAQA,OAAR,CACA,GAAMC,CAAAA,UAAU,CAAGJ,qBAAqB,EAAxC,CAEA,MAAOD,CAAAA,OAAO,CAAC,UAAM,CACnB,GAAI,CAACI,OAAL,CAAc,OACd,GAAID,QAAQ,CAACG,QAAb,CAAuB,MAAOH,CAAAA,QAAP,CAEvB,GAAI,CACF,MAAOE,CAAAA,UAAU,CAACD,OAAD,CAAV,CAAoBD,QAAQ,CAACI,OAAT,CAAiBC,OAArC,EAA8CC,KAArD,CACD,CAAC,MAAOC,CAAP,CAAU,CACV,MAAOP,CAAAA,QAAP,CACD,CACF,CATa,CASX,CAACE,UAAD,CAAaD,OAAb,CAAsBD,QAAtB,CATW,CAAd,CAUD","sourcesContent":["import { Currency } from '@uniswap/sdk-core'\nimport { useActiveWeb3React } from 'hooks/web3'\nimport { useMemo } from 'react'\nimport { useCombinedActiveList } from 'state/lists/hooks'\n\n/**\n * Returns a WrappedTokenInfo from the active token lists when possible,\n * or the passed token otherwise. */\nexport function useTokenInfoFromActiveList(currency: Currency) {\n  const { chainId } = useActiveWeb3React()\n  const activeList = useCombinedActiveList()\n\n  return useMemo(() => {\n    if (!chainId) return\n    if (currency.isNative) return currency\n\n    try {\n      return activeList[chainId][currency.wrapped.address].token\n    } catch (e) {\n      return currency\n    }\n  }, [activeList, chainId, currency])\n}\n"]},"metadata":{},"sourceType":"module"}