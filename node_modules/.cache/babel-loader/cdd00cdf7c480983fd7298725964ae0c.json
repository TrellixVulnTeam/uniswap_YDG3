{"ast":null,"code":"import _regeneratorRuntime from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{BigNumber}from'@ethersproject/bignumber';import{hexStripZeros}from'@ethersproject/bytes';import{CHAIN_INFO}from'constants/chains';// provider.request returns Promise<any>, but wallet_switchEthereumChain must return null or throw\n// see https://github.com/rekmarks/EIPs/blob/3326-create/EIPS/eip-3326.md for more info on wallet_switchEthereumChain\nexport function switchToNetwork(_x){return _switchToNetwork.apply(this,arguments);}function _switchToNetwork(){_switchToNetwork=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref){var _library$provider;var library,chainId,formattedChainId,info;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:library=_ref.library,chainId=_ref.chainId;if(library===null||library===void 0?void 0:(_library$provider=library.provider)===null||_library$provider===void 0?void 0:_library$provider.request){_context.next=3;break;}return _context.abrupt(\"return\");case 3:formattedChainId=hexStripZeros(BigNumber.from(chainId).toHexString());_context.prev=4;_context.next=7;return library.provider.request({method:'wallet_switchEthereumChain',params:[{chainId:formattedChainId}]});case 7:_context.next=26;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](4);if(!(_context.t0.code===4902)){_context.next=25;break;}info=CHAIN_INFO[chainId];_context.next=15;return library.provider.request({method:'wallet_addEthereumChain',params:[{chainId:formattedChainId,chainName:info.label,rpcUrls:[info.addNetworkInfo.rpcUrl],nativeCurrency:info.addNetworkInfo.nativeCurrency,blockExplorerUrls:[info.explorer]}]});case 15:_context.prev=15;_context.next=18;return library.provider.request({method:'wallet_switchEthereumChain',params:[{chainId:formattedChainId}]});case 18:_context.next=23;break;case 20:_context.prev=20;_context.t1=_context[\"catch\"](15);console.debug('Added network but could not switch chains',_context.t1);case 23:_context.next=26;break;case 25:throw _context.t0;case 26:case\"end\":return _context.stop();}}},_callee,null,[[4,9],[15,20]]);}));return _switchToNetwork.apply(this,arguments);}","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/utils/switchToNetwork.ts"],"names":["BigNumber","hexStripZeros","CHAIN_INFO","switchToNetwork","library","chainId","provider","request","formattedChainId","from","toHexString","method","params","code","info","chainName","label","rpcUrls","addNetworkInfo","rpcUrl","nativeCurrency","blockExplorerUrls","explorer","console","debug"],"mappings":"2TAAA,OAASA,SAAT,KAA0B,0BAA1B,CACA,OAASC,aAAT,KAA8B,sBAA9B,CAEA,OAASC,UAAT,KAA6C,kBAA7C,CAOA;AACA;AACA,eAAsBC,CAAAA,eAAtB,oD,qGAAO,uMAAiCC,OAAjC,MAAiCA,OAAjC,CAA0CC,OAA1C,MAA0CA,OAA1C,IACAD,OADA,SACAA,OADA,oCACAA,OAAO,CAAEE,QADT,4CACA,kBAAmBC,OADnB,iEAICC,gBAJD,CAIoBP,aAAa,CAACD,SAAS,CAACS,IAAV,CAAeJ,OAAf,EAAwBK,WAAxB,EAAD,CAJjC,uCAMGN,CAAAA,OAAO,CAACE,QAAR,CAAiBC,OAAjB,CAAyB,CAC7BI,MAAM,CAAE,4BADqB,CAE7BC,MAAM,CAAE,CAAC,CAAEP,OAAO,CAAEG,gBAAX,CAAD,CAFqB,CAAzB,CANH,4FAYC,YAAMK,IAAN,GAAe,IAZhB,2BAaKC,IAbL,CAaYZ,UAAU,CAACG,OAAD,CAbtB,wBAeKD,CAAAA,OAAO,CAACE,QAAR,CAAiBC,OAAjB,CAAyB,CAC7BI,MAAM,CAAE,yBADqB,CAE7BC,MAAM,CAAE,CACN,CACEP,OAAO,CAAEG,gBADX,CAEEO,SAAS,CAAED,IAAI,CAACE,KAFlB,CAGEC,OAAO,CAAE,CAACH,IAAI,CAACI,cAAL,CAAoBC,MAArB,CAHX,CAIEC,cAAc,CAAEN,IAAI,CAACI,cAAL,CAAoBE,cAJtC,CAKEC,iBAAiB,CAAE,CAACP,IAAI,CAACQ,QAAN,CALrB,CADM,CAFqB,CAAzB,CAfL,iDA+BOlB,CAAAA,OAAO,CAACE,QAAR,CAAiBC,OAAjB,CAAyB,CAC7BI,MAAM,CAAE,4BADqB,CAE7BC,MAAM,CAAE,CAAC,CAAEP,OAAO,CAAEG,gBAAX,CAAD,CAFqB,CAAzB,CA/BP,2FAoCCe,OAAO,CAACC,KAAR,CAAc,2CAAd,cApCD,qI","sourcesContent":["import { BigNumber } from '@ethersproject/bignumber'\nimport { hexStripZeros } from '@ethersproject/bytes'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { CHAIN_INFO, SupportedChainId } from 'constants/chains'\n\ninterface SwitchNetworkArguments {\n  library: Web3Provider\n  chainId: SupportedChainId\n}\n\n// provider.request returns Promise<any>, but wallet_switchEthereumChain must return null or throw\n// see https://github.com/rekmarks/EIPs/blob/3326-create/EIPS/eip-3326.md for more info on wallet_switchEthereumChain\nexport async function switchToNetwork({ library, chainId }: SwitchNetworkArguments): Promise<null | void> {\n  if (!library?.provider?.request) {\n    return\n  }\n  const formattedChainId = hexStripZeros(BigNumber.from(chainId).toHexString())\n  try {\n    await library.provider.request({\n      method: 'wallet_switchEthereumChain',\n      params: [{ chainId: formattedChainId }],\n    })\n  } catch (error) {\n    // 4902 is the error code for attempting to switch to an unrecognized chainId\n    if (error.code === 4902) {\n      const info = CHAIN_INFO[chainId]\n\n      await library.provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: formattedChainId,\n            chainName: info.label,\n            rpcUrls: [info.addNetworkInfo.rpcUrl],\n            nativeCurrency: info.addNetworkInfo.nativeCurrency,\n            blockExplorerUrls: [info.explorer],\n          },\n        ],\n      })\n      // metamask (only known implementer) automatically switches after a network is added\n      // the second call is done here because that behavior is not a part of the spec and cannot be relied upon in the future\n      // metamask's behavior when switching to the current network is just to return null (a no-op)\n      try {\n        await library.provider.request({\n          method: 'wallet_switchEthereumChain',\n          params: [{ chainId: formattedChainId }],\n        })\n      } catch (error) {\n        console.debug('Added network but could not switch chains', error)\n      }\n    } else {\n      throw error\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}