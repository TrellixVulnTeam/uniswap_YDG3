{"ast":null,"code":"/* Autogenerated file. Do not edit manually. */\n\n/* tslint:disable */\n\n/* eslint-disable */\nimport { Contract, utils } from \"ethers\";\nconst _abi = [{\n  inputs: [{\n    internalType: \"address\",\n    name: \"pool\",\n    type: \"address\"\n  }, {\n    internalType: \"int16\",\n    name: \"tickBitmapIndex\",\n    type: \"int16\"\n  }],\n  name: \"getPopulatedTicksInWord\",\n  outputs: [{\n    components: [{\n      internalType: \"int24\",\n      name: \"tick\",\n      type: \"int24\"\n    }, {\n      internalType: \"int128\",\n      name: \"liquidityNet\",\n      type: \"int128\"\n    }, {\n      internalType: \"uint128\",\n      name: \"liquidityGross\",\n      type: \"uint128\"\n    }],\n    internalType: \"struct ITickLens.PopulatedTick[]\",\n    name: \"populatedTicks\",\n    type: \"tuple[]\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}];\nexport class ITickLens__factory {\n  static createInterface() {\n    return new utils.Interface(_abi);\n  }\n\n  static connect(address, signerOrProvider) {\n    return new Contract(address, _abi, signerOrProvider);\n  }\n\n}\nITickLens__factory.abi = _abi;","map":{"version":3,"sources":["../../../../../../src/types/v3/factories/ITickLens__factory.ts"],"names":[],"mappings":"AAAA;;AACA;;AACA;AAGA,SAAS,QAAT,EAA2B,KAA3B,QAAwC,QAAxC;AAGA,MAAM,IAAI,GAAG,CACX;AACE,EAAA,MAAM,EAAE,CACN;AACE,IAAA,YAAY,EAAE,SADhB;AAEE,IAAA,IAAI,EAAE,MAFR;AAGE,IAAA,IAAI,EAAE;AAHR,GADM,EAMN;AACE,IAAA,YAAY,EAAE,OADhB;AAEE,IAAA,IAAI,EAAE,iBAFR;AAGE,IAAA,IAAI,EAAE;AAHR,GANM,CADV;AAaE,EAAA,IAAI,EAAE,yBAbR;AAcE,EAAA,OAAO,EAAE,CACP;AACE,IAAA,UAAU,EAAE,CACV;AACE,MAAA,YAAY,EAAE,OADhB;AAEE,MAAA,IAAI,EAAE,MAFR;AAGE,MAAA,IAAI,EAAE;AAHR,KADU,EAMV;AACE,MAAA,YAAY,EAAE,QADhB;AAEE,MAAA,IAAI,EAAE,cAFR;AAGE,MAAA,IAAI,EAAE;AAHR,KANU,EAWV;AACE,MAAA,YAAY,EAAE,SADhB;AAEE,MAAA,IAAI,EAAE,gBAFR;AAGE,MAAA,IAAI,EAAE;AAHR,KAXU,CADd;AAkBE,IAAA,YAAY,EAAE,kCAlBhB;AAmBE,IAAA,IAAI,EAAE,gBAnBR;AAoBE,IAAA,IAAI,EAAE;AApBR,GADO,CAdX;AAsCE,EAAA,eAAe,EAAE,MAtCnB;AAuCE,EAAA,IAAI,EAAE;AAvCR,CADW,CAAb;AA4CA,OAAM,MAAO,kBAAP,CAAyB;AAEP,SAAf,eAAe,GAAA;AACpB,WAAO,IAAI,KAAK,CAAC,SAAV,CAAoB,IAApB,CAAP;AACD;;AACa,SAAP,OAAO,CACZ,OADY,EAEZ,gBAFY,EAEuB;AAEnC,WAAO,IAAI,QAAJ,CAAa,OAAb,EAAsB,IAAtB,EAA4B,gBAA5B,CAAP;AACD;;AAV4B;AACb,kBAAA,CAAA,GAAA,GAAM,IAAN","sourceRoot":"","sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Contract, utils } from \"ethers\";\nconst _abi = [\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"pool\",\n                type: \"address\",\n            },\n            {\n                internalType: \"int16\",\n                name: \"tickBitmapIndex\",\n                type: \"int16\",\n            },\n        ],\n        name: \"getPopulatedTicksInWord\",\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: \"int24\",\n                        name: \"tick\",\n                        type: \"int24\",\n                    },\n                    {\n                        internalType: \"int128\",\n                        name: \"liquidityNet\",\n                        type: \"int128\",\n                    },\n                    {\n                        internalType: \"uint128\",\n                        name: \"liquidityGross\",\n                        type: \"uint128\",\n                    },\n                ],\n                internalType: \"struct ITickLens.PopulatedTick[]\",\n                name: \"populatedTicks\",\n                type: \"tuple[]\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n];\nexport class ITickLens__factory {\n    static createInterface() {\n        return new utils.Interface(_abi);\n    }\n    static connect(address, signerOrProvider) {\n        return new Contract(address, _abi, signerOrProvider);\n    }\n}\nITickLens__factory.abi = _abi;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSVRpY2tMZW5zX19mYWN0b3J5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL3R5cGVzL3YzL2ZhY3Rvcmllcy9JVGlja0xlbnNfX2ZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsK0NBQStDO0FBQy9DLG9CQUFvQjtBQUNwQixvQkFBb0I7QUFHcEIsT0FBTyxFQUFFLFFBQVEsRUFBVSxLQUFLLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFHakQsTUFBTSxJQUFJLEdBQUc7SUFDWDtRQUNFLE1BQU0sRUFBRTtZQUNOO2dCQUNFLFlBQVksRUFBRSxTQUFTO2dCQUN2QixJQUFJLEVBQUUsTUFBTTtnQkFDWixJQUFJLEVBQUUsU0FBUzthQUNoQjtZQUNEO2dCQUNFLFlBQVksRUFBRSxPQUFPO2dCQUNyQixJQUFJLEVBQUUsaUJBQWlCO2dCQUN2QixJQUFJLEVBQUUsT0FBTzthQUNkO1NBQ0Y7UUFDRCxJQUFJLEVBQUUseUJBQXlCO1FBQy9CLE9BQU8sRUFBRTtZQUNQO2dCQUNFLFVBQVUsRUFBRTtvQkFDVjt3QkFDRSxZQUFZLEVBQUUsT0FBTzt3QkFDckIsSUFBSSxFQUFFLE1BQU07d0JBQ1osSUFBSSxFQUFFLE9BQU87cUJBQ2Q7b0JBQ0Q7d0JBQ0UsWUFBWSxFQUFFLFFBQVE7d0JBQ3RCLElBQUksRUFBRSxjQUFjO3dCQUNwQixJQUFJLEVBQUUsUUFBUTtxQkFDZjtvQkFDRDt3QkFDRSxZQUFZLEVBQUUsU0FBUzt3QkFDdkIsSUFBSSxFQUFFLGdCQUFnQjt3QkFDdEIsSUFBSSxFQUFFLFNBQVM7cUJBQ2hCO2lCQUNGO2dCQUNELFlBQVksRUFBRSxrQ0FBa0M7Z0JBQ2hELElBQUksRUFBRSxnQkFBZ0I7Z0JBQ3RCLElBQUksRUFBRSxTQUFTO2FBQ2hCO1NBQ0Y7UUFDRCxlQUFlLEVBQUUsTUFBTTtRQUN2QixJQUFJLEVBQUUsVUFBVTtLQUNqQjtDQUNGLENBQUM7QUFFRixNQUFNLE9BQU8sa0JBQWtCO0lBRTdCLE1BQU0sQ0FBQyxlQUFlO1FBQ3BCLE9BQU8sSUFBSSxLQUFLLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBdUIsQ0FBQztJQUN6RCxDQUFDO0lBQ0QsTUFBTSxDQUFDLE9BQU8sQ0FDWixPQUFlLEVBQ2YsZ0JBQW1DO1FBRW5DLE9BQU8sSUFBSSxRQUFRLENBQUMsT0FBTyxFQUFFLElBQUksRUFBRSxnQkFBZ0IsQ0FBYyxDQUFDO0lBQ3BFLENBQUM7O0FBVGUsc0JBQUcsR0FBRyxJQUFJLENBQUMifQ=="]},"metadata":{},"sourceType":"module"}