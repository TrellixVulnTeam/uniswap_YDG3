{"ast":null,"code":"import { Token } from '@uniswap/sdk-core';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport { log } from '../util/log';\nimport { metric, MetricLoggerUnit } from '../util/metric';\nexport class CachingTokenListProvider {\n  /**\n   * Creates an instance of CachingTokenListProvider.\n   * Token metadata (e.g. symbol and decimals) generally don't change so can be cached indefinitely.\n   *\n   * @param chainId The chain id to use.\n   * @param tokenList The token list to get the tokens from.\n   * @param tokenCache Cache instance to hold cached tokens.\n   */\n  constructor(chainId, tokenList, tokenCache) {\n    this.tokenCache = tokenCache;\n\n    this.CACHE_KEY = tokenInfo => `token-list-token-${this.chainId}/${this.tokenList.name}/${this.tokenList.timestamp}/${this.tokenList.version}/${tokenInfo.address.toLowerCase()}/${tokenInfo.decimals}/${tokenInfo.symbol}/${tokenInfo.name}`;\n\n    this.chainId = chainId;\n    this.tokenList = tokenList;\n    this.chainToTokenInfos = _.reduce(this.tokenList.tokens, (result, tokenInfo) => {\n      const chainId = tokenInfo.chainId.toString();\n\n      if (!result[chainId]) {\n        result[chainId] = [];\n      }\n\n      result[chainId].push(tokenInfo);\n      return result;\n    }, {});\n    this.chainSymbolToTokenInfo = _.mapValues(this.chainToTokenInfos, tokenInfos => _.keyBy(tokenInfos, 'symbol'));\n    this.chainAddressToTokenInfo = _.mapValues(this.chainToTokenInfos, tokenInfos => _.keyBy(tokenInfos, tokenInfo => tokenInfo.address.toLowerCase()));\n  }\n\n  static async fromTokenListURI(chainId, tokenListURI, tokenCache) {\n    const now = Date.now();\n    const tokenList = await this.buildTokenList(tokenListURI);\n    metric.putMetric('TokenListLoad', Date.now() - now, MetricLoggerUnit.Milliseconds);\n    return new CachingTokenListProvider(chainId, tokenList, tokenCache);\n  }\n\n  static async buildTokenList(tokenListURI) {\n    log.info(`Getting tokenList from ${tokenListURI}.`);\n    const response = await axios.get(tokenListURI);\n    log.info(`Got tokenList from ${tokenListURI}.`);\n    const {\n      data: tokenList,\n      status\n    } = response;\n\n    if (status != 200) {\n      log.error({\n        response\n      }, `Unabled to get token list from ${tokenListURI}.`);\n      throw new Error(`Unable to get token list from ${tokenListURI}`);\n    }\n\n    return tokenList;\n  }\n\n  static async fromTokenList(chainId, tokenList, tokenCache) {\n    const now = Date.now();\n    const tokenProvider = new CachingTokenListProvider(chainId, tokenList, tokenCache);\n    metric.putMetric('TokenListLoad', Date.now() - now, MetricLoggerUnit.Milliseconds);\n    return tokenProvider;\n  }\n\n  async getTokens(_addresses) {\n    const addressToToken = {};\n    const symbolToToken = {};\n\n    for (const address of _addresses) {\n      const token = await this.getTokenByAddress(address);\n\n      if (!token) {\n        continue;\n      }\n\n      addressToToken[address.toLowerCase()] = token;\n\n      if (!token.symbol) {\n        continue;\n      }\n\n      symbolToToken[token.symbol.toLowerCase()] = token;\n    }\n\n    return {\n      getTokenByAddress: address => addressToToken[address.toLowerCase()],\n      getTokenBySymbol: symbol => symbolToToken[symbol.toLowerCase()],\n      getAllTokens: () => {\n        return Object.values(addressToToken);\n      }\n    };\n  }\n\n  async getTokenBySymbol(_symbol) {\n    let symbol = _symbol; // We consider ETH as a regular ERC20 Token throughout this package. We don't use the NativeCurrency object from the sdk.\n    // When we build the calldata for swapping we insert wrapping/unwrapping as needed.\n\n    if (_symbol == 'ETH') {\n      symbol = 'WETH';\n    }\n\n    if (!this.chainSymbolToTokenInfo[this.chainId.toString()]) {\n      return undefined;\n    }\n\n    const tokenInfo = this.chainSymbolToTokenInfo[this.chainId.toString()][symbol];\n\n    if (!tokenInfo) {\n      return undefined;\n    }\n\n    const token = await this.buildToken(tokenInfo);\n    return token;\n  }\n\n  async getTokenByAddress(address) {\n    if (!this.chainAddressToTokenInfo[this.chainId.toString()]) {\n      return undefined;\n    }\n\n    const tokenInfo = this.chainAddressToTokenInfo[this.chainId.toString()][address.toLowerCase()];\n\n    if (!tokenInfo) {\n      return undefined;\n    }\n\n    const token = await this.buildToken(tokenInfo);\n    return token;\n  }\n\n  async buildToken(tokenInfo) {\n    const cacheKey = this.CACHE_KEY(tokenInfo);\n    const cachedToken = await this.tokenCache.get(cacheKey);\n\n    if (cachedToken) {\n      return cachedToken;\n    }\n\n    const token = new Token(this.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name);\n    await this.tokenCache.set(cacheKey, token);\n    return token;\n  }\n\n}","map":{"version":3,"sources":["../../../../src/providers/caching-token-list-provider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { Token } from '@uniswap/sdk-core';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport { log } from '../util/log';\nimport { metric, MetricLoggerUnit } from '../util/metric';\nexport class CachingTokenListProvider {\n    /**\n     * Creates an instance of CachingTokenListProvider.\n     * Token metadata (e.g. symbol and decimals) generally don't change so can be cached indefinitely.\n     *\n     * @param chainId The chain id to use.\n     * @param tokenList The token list to get the tokens from.\n     * @param tokenCache Cache instance to hold cached tokens.\n     */\n    constructor(chainId, tokenList, tokenCache) {\n        this.tokenCache = tokenCache;\n        this.CACHE_KEY = (tokenInfo) => `token-list-token-${this.chainId}/${this.tokenList.name}/${this.tokenList.timestamp}/${this.tokenList.version}/${tokenInfo.address.toLowerCase()}/${tokenInfo.decimals}/${tokenInfo.symbol}/${tokenInfo.name}`;\n        this.chainId = chainId;\n        this.tokenList = tokenList;\n        this.chainToTokenInfos = _.reduce(this.tokenList.tokens, (result, tokenInfo) => {\n            const chainId = tokenInfo.chainId.toString();\n            if (!result[chainId]) {\n                result[chainId] = [];\n            }\n            result[chainId].push(tokenInfo);\n            return result;\n        }, {});\n        this.chainSymbolToTokenInfo = _.mapValues(this.chainToTokenInfos, (tokenInfos) => _.keyBy(tokenInfos, 'symbol'));\n        this.chainAddressToTokenInfo = _.mapValues(this.chainToTokenInfos, (tokenInfos) => _.keyBy(tokenInfos, (tokenInfo) => tokenInfo.address.toLowerCase()));\n    }\n    static async fromTokenListURI(chainId, tokenListURI, tokenCache) {\n        const now = Date.now();\n        const tokenList = await this.buildTokenList(tokenListURI);\n        metric.putMetric('TokenListLoad', Date.now() - now, MetricLoggerUnit.Milliseconds);\n        return new CachingTokenListProvider(chainId, tokenList, tokenCache);\n    }\n    static async buildTokenList(tokenListURI) {\n        log.info(`Getting tokenList from ${tokenListURI}.`);\n        const response = await axios.get(tokenListURI);\n        log.info(`Got tokenList from ${tokenListURI}.`);\n        const { data: tokenList, status } = response;\n        if (status != 200) {\n            log.error({ response }, `Unabled to get token list from ${tokenListURI}.`);\n            throw new Error(`Unable to get token list from ${tokenListURI}`);\n        }\n        return tokenList;\n    }\n    static async fromTokenList(chainId, tokenList, tokenCache) {\n        const now = Date.now();\n        const tokenProvider = new CachingTokenListProvider(chainId, tokenList, tokenCache);\n        metric.putMetric('TokenListLoad', Date.now() - now, MetricLoggerUnit.Milliseconds);\n        return tokenProvider;\n    }\n    async getTokens(_addresses) {\n        const addressToToken = {};\n        const symbolToToken = {};\n        for (const address of _addresses) {\n            const token = await this.getTokenByAddress(address);\n            if (!token) {\n                continue;\n            }\n            addressToToken[address.toLowerCase()] = token;\n            if (!token.symbol) {\n                continue;\n            }\n            symbolToToken[token.symbol.toLowerCase()] = token;\n        }\n        return {\n            getTokenByAddress: (address) => addressToToken[address.toLowerCase()],\n            getTokenBySymbol: (symbol) => symbolToToken[symbol.toLowerCase()],\n            getAllTokens: () => {\n                return Object.values(addressToToken);\n            },\n        };\n    }\n    async getTokenBySymbol(_symbol) {\n        let symbol = _symbol;\n        // We consider ETH as a regular ERC20 Token throughout this package. We don't use the NativeCurrency object from the sdk.\n        // When we build the calldata for swapping we insert wrapping/unwrapping as needed.\n        if (_symbol == 'ETH') {\n            symbol = 'WETH';\n        }\n        if (!this.chainSymbolToTokenInfo[this.chainId.toString()]) {\n            return undefined;\n        }\n        const tokenInfo = this.chainSymbolToTokenInfo[this.chainId.toString()][symbol];\n        if (!tokenInfo) {\n            return undefined;\n        }\n        const token = await this.buildToken(tokenInfo);\n        return token;\n    }\n    async getTokenByAddress(address) {\n        if (!this.chainAddressToTokenInfo[this.chainId.toString()]) {\n            return undefined;\n        }\n        const tokenInfo = this.chainAddressToTokenInfo[this.chainId.toString()][address.toLowerCase()];\n        if (!tokenInfo) {\n            return undefined;\n        }\n        const token = await this.buildToken(tokenInfo);\n        return token;\n    }\n    async buildToken(tokenInfo) {\n        const cacheKey = this.CACHE_KEY(tokenInfo);\n        const cachedToken = await this.tokenCache.get(cacheKey);\n        if (cachedToken) {\n            return cachedToken;\n        }\n        const token = new Token(this.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name);\n        await this.tokenCache.set(cacheKey, token);\n        return token;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGluZy10b2tlbi1saXN0LXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy9jYWNoaW5nLXRva2VuLWxpc3QtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRTFDLE9BQU8sS0FBSyxNQUFNLE9BQU8sQ0FBQztBQUMxQixPQUFPLENBQUMsTUFBTSxRQUFRLENBQUM7QUFFdkIsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUNsQyxPQUFPLEVBQUUsTUFBTSxFQUFFLGdCQUFnQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFxQjFELE1BQU0sT0FBTyx3QkFBd0I7SUFnQm5DOzs7Ozs7O09BT0c7SUFDSCxZQUNFLE9BQXlCLEVBQ3pCLFNBQW9CLEVBQ1osVUFBeUI7UUFBekIsZUFBVSxHQUFWLFVBQVUsQ0FBZTtRQXhCM0IsY0FBUyxHQUFHLENBQUMsU0FBb0IsRUFBRSxFQUFFLENBQzNDLG9CQUFvQixJQUFJLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxJQUNyRCxJQUFJLENBQUMsU0FBUyxDQUFDLFNBQ2pCLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLElBQUksU0FBUyxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsSUFDM0QsU0FBUyxDQUFDLFFBQ1osSUFBSSxTQUFTLENBQUMsTUFBTSxJQUFJLFNBQVMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQXFCekMsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFDdkIsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7UUFFM0IsSUFBSSxDQUFDLGlCQUFpQixHQUFHLENBQUMsQ0FBQyxNQUFNLENBQy9CLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxFQUNyQixDQUFDLE1BQTRCLEVB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"]},"metadata":{},"sourceType":"module"}