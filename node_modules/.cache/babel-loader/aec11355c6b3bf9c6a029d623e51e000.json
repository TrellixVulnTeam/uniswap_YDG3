{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SafeAppConnector = void 0;\n\nconst abstract_connector_1 = require(\"@web3-react/abstract-connector\");\n\nconst safe_apps_sdk_1 = __importDefault(require(\"@gnosis.pm/safe-apps-sdk\"));\n\nconst safe_apps_provider_1 = require(\"@gnosis.pm/safe-apps-provider\");\n\nclass SafeAppConnector extends abstract_connector_1.AbstractConnector {\n  constructor() {\n    super(...arguments);\n    this.sdk = new safe_apps_sdk_1.default();\n  }\n\n  async activate() {\n    const runningAsSafeApp = await this.isSafeApp();\n\n    if (!runningAsSafeApp) {\n      throw new Error('The app is loaded outside safe context');\n    }\n\n    return {\n      provider: await this.getProvider(),\n      chainId: await this.getChainId(),\n      account: await this.getAccount()\n    };\n  }\n\n  async getSafeInfo() {\n    if (!this.safe) {\n      this.safe = await this.sdk.safe.getInfo();\n    }\n\n    return this.safe;\n  }\n\n  async getProvider() {\n    if (!this.provider) {\n      const safe = await this.getSafeInfo();\n      this.provider = new safe_apps_provider_1.SafeAppProvider(safe, this.sdk);\n    }\n\n    return this.provider;\n  }\n\n  async getChainId() {\n    const provider = await this.getProvider();\n    return provider.chainId;\n  }\n\n  async getAccount() {\n    const safe = await this.getSafeInfo();\n    return safe.safeAddress;\n  }\n\n  deactivate() {\n    return;\n  }\n\n  async isSafeApp() {\n    const safe = await Promise.race([this.getSafeInfo(), new Promise(resolve => setTimeout(resolve, 300))]);\n    return !!safe;\n  }\n\n}\n\nexports.SafeAppConnector = SafeAppConnector;","map":{"version":3,"sources":["../src/connector.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,MAAA,oBAAA,GAAA,OAAA,CAAA,gCAAA,CAAA;;AAEA,MAAA,eAAA,GAAA,eAAA,CAAA,OAAA,CAAA,0BAAA,CAAA,CAAA;;AACA,MAAA,oBAAA,GAAA,OAAA,CAAA,+BAAA,CAAA;;AAEA,MAAM,gBAAN,SAA+B,oBAAA,CAAA,iBAA/B,CAAgD;AAAhD,EAAA,WAAA,GAAA;;AACmB,SAAA,GAAA,GAAM,IAAI,eAAA,CAAA,OAAJ,EAAN;AAkDlB;;AA9Ce,QAAR,QAAQ,GAAA;AACZ,UAAM,gBAAgB,GAAG,MAAM,KAAK,SAAL,EAA/B;;AACA,QAAI,CAAC,gBAAL,EAAuB;AACrB,YAAM,IAAI,KAAJ,CAAU,wCAAV,CAAN;AACD;;AAED,WAAO;AAAE,MAAA,QAAQ,EAAE,MAAM,KAAK,WAAL,EAAlB;AAAsC,MAAA,OAAO,EAAE,MAAM,KAAK,UAAL,EAArD;AAAwE,MAAA,OAAO,EAAE,MAAM,KAAK,UAAL;AAAvF,KAAP;AACD;;AAEuB,QAAX,WAAW,GAAA;AACtB,QAAI,CAAC,KAAK,IAAV,EAAgB;AACd,WAAK,IAAL,GAAY,MAAM,KAAK,GAAL,CAAS,IAAT,CAAc,OAAd,EAAlB;AACD;;AACD,WAAO,KAAK,IAAZ;AACD;;AAEuB,QAAX,WAAW,GAAA;AACtB,QAAI,CAAC,KAAK,QAAV,EAAoB;AAClB,YAAM,IAAI,GAAG,MAAM,KAAK,WAAL,EAAnB;AACA,WAAK,QAAL,GAAgB,IAAI,oBAAA,CAAA,eAAJ,CAAoB,IAApB,EAA0B,KAAK,GAA/B,CAAhB;AACD;;AACD,WAAO,KAAK,QAAZ;AACD;;AAEsB,QAAV,UAAU,GAAA;AACrB,UAAM,QAAQ,GAAG,MAAM,KAAK,WAAL,EAAvB;AACA,WAAO,QAAQ,CAAC,OAAhB;AACD;;AAEsB,QAAV,UAAU,GAAA;AACrB,UAAM,IAAI,GAAG,MAAM,KAAK,WAAL,EAAnB;AACA,WAAO,IAAI,CAAC,WAAZ;AACD;;AAEM,EAAA,UAAU,GAAA;AACf;AACD;;AAEqB,QAAT,SAAS,GAAA;AACpB,UAAM,IAAI,GAAG,MAAM,OAAO,CAAC,IAAR,CAAa,CAC9B,KAAK,WAAL,EAD8B,EAE9B,IAAI,OAAJ,CAAwB,OAAD,IAAa,UAAU,CAAC,OAAD,EAAU,GAAV,CAA9C,CAF8B,CAAb,CAAnB;AAKA,WAAO,CAAC,CAAC,IAAT;AACD;;AAlD6C;;AAqDvC,OAAA,CAAA,gBAAA,GAAA,gBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SafeAppConnector = void 0;\nconst abstract_connector_1 = require(\"@web3-react/abstract-connector\");\nconst safe_apps_sdk_1 = __importDefault(require(\"@gnosis.pm/safe-apps-sdk\"));\nconst safe_apps_provider_1 = require(\"@gnosis.pm/safe-apps-provider\");\nclass SafeAppConnector extends abstract_connector_1.AbstractConnector {\n    constructor() {\n        super(...arguments);\n        this.sdk = new safe_apps_sdk_1.default();\n    }\n    async activate() {\n        const runningAsSafeApp = await this.isSafeApp();\n        if (!runningAsSafeApp) {\n            throw new Error('The app is loaded outside safe context');\n        }\n        return { provider: await this.getProvider(), chainId: await this.getChainId(), account: await this.getAccount() };\n    }\n    async getSafeInfo() {\n        if (!this.safe) {\n            this.safe = await this.sdk.safe.getInfo();\n        }\n        return this.safe;\n    }\n    async getProvider() {\n        if (!this.provider) {\n            const safe = await this.getSafeInfo();\n            this.provider = new safe_apps_provider_1.SafeAppProvider(safe, this.sdk);\n        }\n        return this.provider;\n    }\n    async getChainId() {\n        const provider = await this.getProvider();\n        return provider.chainId;\n    }\n    async getAccount() {\n        const safe = await this.getSafeInfo();\n        return safe.safeAddress;\n    }\n    deactivate() {\n        return;\n    }\n    async isSafeApp() {\n        const safe = await Promise.race([\n            this.getSafeInfo(),\n            new Promise((resolve) => setTimeout(resolve, 300)),\n        ]);\n        return !!safe;\n    }\n}\nexports.SafeAppConnector = SafeAppConnector;\n//# sourceMappingURL=connector.js.map"]},"metadata":{},"sourceType":"script"}