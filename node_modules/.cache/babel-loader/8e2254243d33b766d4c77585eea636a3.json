{"ast":null,"code":"import _styled from \"styled-components\";\n\nvar _jsxFileName = \"/Users/safahi/Downloads/interface-4.30.1/src/components/SwitchLocaleLink/index.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { Trans } from \"@lingui/react\";\nimport { useLocationLinkProps } from 'hooks/useLocationLinkProps';\nimport { useMemo } from 'react';\nimport { DEFAULT_LOCALE, LOCALE_LABEL } from '../../constants/locales';\nimport { navigatorLocale, useActiveLocale } from '../../hooks/useActiveLocale';\nimport { StyledInternalLink, ThemedText } from '../../theme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Container = _styled(ThemedText.Small).withConfig({\n  displayName: \"SwitchLocaleLink__Container\",\n  componentId: \"sc-1a9mfh8-0\"\n})([\"opacity:0.6;:hover{opacity:1;}margin-top:1rem !important;\"]);\n\nconst useTargetLocale = activeLocale => {\n  _s();\n\n  const browserLocale = useMemo(() => navigatorLocale(), []);\n\n  if (browserLocale && (browserLocale !== DEFAULT_LOCALE || activeLocale !== DEFAULT_LOCALE)) {\n    if (activeLocale === browserLocale) {\n      return DEFAULT_LOCALE;\n    } else {\n      return browserLocale;\n    }\n  }\n\n  return null;\n};\n\n_s(useTargetLocale, \"BttrEhv2ok44PCRGkpfUD01Dk3I=\");\n\nexport function SwitchLocaleLink() {\n  _s2();\n\n  const activeLocale = useActiveLocale();\n  const targetLocale = useTargetLocale(activeLocale);\n  const {\n    to,\n    onClick\n  } = useLocationLinkProps(targetLocale);\n  if (!targetLocale || !to) return null;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"Uniswap available in: <0>{0}</0>\",\n      values: {\n        0: LOCALE_LABEL[targetLocale]\n      },\n      components: {\n        0: /*#__PURE__*/_jsxDEV(StyledInternalLink, {\n          onClick: onClick,\n          to: to\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this)\n      }\n    }, void 0, false, void 0, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(SwitchLocaleLink, \"MGdszQFZL0vU5URrk7mttix5lsc=\", false, function () {\n  return [useActiveLocale, useTargetLocale, useLocationLinkProps];\n});\n\n_c = SwitchLocaleLink;\n\nvar _c;\n\n$RefreshReg$(_c, \"SwitchLocaleLink\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/components/SwitchLocaleLink/index.tsx"],"names":["useLocationLinkProps","useMemo","DEFAULT_LOCALE","LOCALE_LABEL","navigatorLocale","useActiveLocale","StyledInternalLink","ThemedText","Container","styled","Small","useTargetLocale","activeLocale","browserLocale","SwitchLocaleLink","targetLocale","to","onClick"],"mappings":";;;;;;;AACA,SAASA,oBAAT,QAAqC,4BAArC;AACA,SAASC,OAAT,QAAwB,OAAxB;AAGA,SAASC,cAAT,EAAyBC,YAAzB,QAA8D,yBAA9D;AACA,SAASC,eAAT,EAA0BC,eAA1B,QAAiD,6BAAjD;AACA,SAASC,kBAAT,EAA6BC,UAA7B,QAA+C,aAA/C;;;AAEA,MAAMC,SAAS,GAAGC,OAAM,CAACF,UAAU,CAACG,KAAZ,CAAT;AAAA;AAAA;AAAA,iEAAf;;AAQA,MAAMC,eAAe,GAAIC,YAAD,IAAmC;AAAA;;AACzD,QAAMC,aAAa,GAAGZ,OAAO,CAAC,MAAMG,eAAe,EAAtB,EAA0B,EAA1B,CAA7B;;AAEA,MAAIS,aAAa,KAAKA,aAAa,KAAKX,cAAlB,IAAoCU,YAAY,KAAKV,cAA1D,CAAjB,EAA4F;AAC1F,QAAIU,YAAY,KAAKC,aAArB,EAAoC;AAClC,aAAOX,cAAP;AACD,KAFD,MAEO;AACL,aAAOW,aAAP;AACD;AACF;;AACD,SAAO,IAAP;AACD,CAXD;;GAAMF,e;;AAaN,OAAO,SAASG,gBAAT,GAA4B;AAAA;;AACjC,QAAMF,YAAY,GAAGP,eAAe,EAApC;AACA,QAAMU,YAAY,GAAGJ,eAAe,CAACC,YAAD,CAApC;AAEA,QAAM;AAAEI,IAAAA,EAAF;AAAMC,IAAAA;AAAN,MAAkBjB,oBAAoB,CAACe,YAAD,CAA5C;AAEA,MAAI,CAACA,YAAD,IAAiB,CAACC,EAAtB,EAA0B,OAAO,IAAP;AAE1B,sBACE,QAAC,SAAD;AAAA,2BACE;AAAA;AAAA;AAAA,WAGKb,YAAY,CAACY,YAAD;AAHjB;AAAA;AAAA,wBAEE,QAAC,kBAAD;AAAoB,UAAA,OAAO,EAAEE,OAA7B;AAAsC,UAAA,EAAE,EAAED;AAA1C;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;IAlBeF,gB;UACOT,e,EACAM,e,EAEGX,oB;;;KAJVc,gB","sourcesContent":["import { Trans } from '@lingui/macro'\nimport { useLocationLinkProps } from 'hooks/useLocationLinkProps'\nimport { useMemo } from 'react'\nimport styled from 'styled-components/macro'\n\nimport { DEFAULT_LOCALE, LOCALE_LABEL, SupportedLocale } from '../../constants/locales'\nimport { navigatorLocale, useActiveLocale } from '../../hooks/useActiveLocale'\nimport { StyledInternalLink, ThemedText } from '../../theme'\n\nconst Container = styled(ThemedText.Small)`\n  opacity: 0.6;\n  :hover {\n    opacity: 1;\n  }\n  margin-top: 1rem !important;\n`\n\nconst useTargetLocale = (activeLocale: SupportedLocale) => {\n  const browserLocale = useMemo(() => navigatorLocale(), [])\n\n  if (browserLocale && (browserLocale !== DEFAULT_LOCALE || activeLocale !== DEFAULT_LOCALE)) {\n    if (activeLocale === browserLocale) {\n      return DEFAULT_LOCALE\n    } else {\n      return browserLocale\n    }\n  }\n  return null\n}\n\nexport function SwitchLocaleLink() {\n  const activeLocale = useActiveLocale()\n  const targetLocale = useTargetLocale(activeLocale)\n\n  const { to, onClick } = useLocationLinkProps(targetLocale)\n\n  if (!targetLocale || !to) return null\n\n  return (\n    <Container>\n      <Trans>\n        Uniswap available in:{' '}\n        <StyledInternalLink onClick={onClick} to={to}>\n          {LOCALE_LABEL[targetLocale]}\n        </StyledInternalLink>\n      </Trans>\n    </Container>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}