{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { Position } from '@uniswap/v3-sdk';\nimport { usePool } from 'hooks/usePools';\nimport { useCurrency } from './Tokens';\nexport function useDerivedPositionInfo(positionDetails) {\n  _s();\n\n  const currency0 = useCurrency(positionDetails === null || positionDetails === void 0 ? void 0 : positionDetails.token0);\n  const currency1 = useCurrency(positionDetails === null || positionDetails === void 0 ? void 0 : positionDetails.token1); // construct pool data\n\n  const [, pool] = usePool(currency0 !== null && currency0 !== void 0 ? currency0 : undefined, currency1 !== null && currency1 !== void 0 ? currency1 : undefined, positionDetails === null || positionDetails === void 0 ? void 0 : positionDetails.fee);\n  let position = undefined;\n\n  if (pool && positionDetails) {\n    position = new Position({\n      pool,\n      liquidity: positionDetails.liquidity.toString(),\n      tickLower: positionDetails.tickLower,\n      tickUpper: positionDetails.tickUpper\n    });\n  }\n\n  return {\n    position,\n    pool: pool !== null && pool !== void 0 ? pool : undefined\n  };\n}\n\n_s(useDerivedPositionInfo, \"fxRYoLXPoabRqEGEyaoOAwLB11c=\", false, function () {\n  return [useCurrency, useCurrency, usePool];\n});","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/hooks/useDerivedPositionInfo.ts"],"names":["Position","usePool","useCurrency","useDerivedPositionInfo","positionDetails","currency0","token0","currency1","token1","pool","undefined","fee","position","liquidity","toString","tickLower","tickUpper"],"mappings":";;AAAA,SAAeA,QAAf,QAA+B,iBAA/B;AACA,SAASC,OAAT,QAAwB,gBAAxB;AAGA,SAASC,WAAT,QAA4B,UAA5B;AAEA,OAAO,SAASC,sBAAT,CAAgCC,eAAhC,EAGL;AAAA;;AACA,QAAMC,SAAS,GAAGH,WAAW,CAACE,eAAD,aAACA,eAAD,uBAACA,eAAe,CAAEE,MAAlB,CAA7B;AACA,QAAMC,SAAS,GAAGL,WAAW,CAACE,eAAD,aAACA,eAAD,uBAACA,eAAe,CAAEI,MAAlB,CAA7B,CAFA,CAIA;;AACA,QAAM,GAAGC,IAAH,IAAWR,OAAO,CAACI,SAAD,aAACA,SAAD,cAACA,SAAD,GAAcK,SAAd,EAAyBH,SAAzB,aAAyBA,SAAzB,cAAyBA,SAAzB,GAAsCG,SAAtC,EAAiDN,eAAjD,aAAiDA,eAAjD,uBAAiDA,eAAe,CAAEO,GAAlE,CAAxB;AAEA,MAAIC,QAAQ,GAAGF,SAAf;;AACA,MAAID,IAAI,IAAIL,eAAZ,EAA6B;AAC3BQ,IAAAA,QAAQ,GAAG,IAAIZ,QAAJ,CAAa;AACtBS,MAAAA,IADsB;AAEtBI,MAAAA,SAAS,EAAET,eAAe,CAACS,SAAhB,CAA0BC,QAA1B,EAFW;AAGtBC,MAAAA,SAAS,EAAEX,eAAe,CAACW,SAHL;AAItBC,MAAAA,SAAS,EAAEZ,eAAe,CAACY;AAJL,KAAb,CAAX;AAMD;;AAED,SAAO;AACLJ,IAAAA,QADK;AAELH,IAAAA,IAAI,EAAEA,IAAF,aAAEA,IAAF,cAAEA,IAAF,GAAUC;AAFT,GAAP;AAID;;GAxBeP,sB;UAIID,W,EACAA,W,EAGDD,O","sourcesContent":["import { Pool, Position } from '@uniswap/v3-sdk'\nimport { usePool } from 'hooks/usePools'\nimport { PositionDetails } from 'types/position'\n\nimport { useCurrency } from './Tokens'\n\nexport function useDerivedPositionInfo(positionDetails: PositionDetails | undefined): {\n  position: Position | undefined\n  pool: Pool | undefined\n} {\n  const currency0 = useCurrency(positionDetails?.token0)\n  const currency1 = useCurrency(positionDetails?.token1)\n\n  // construct pool data\n  const [, pool] = usePool(currency0 ?? undefined, currency1 ?? undefined, positionDetails?.fee)\n\n  let position = undefined\n  if (pool && positionDetails) {\n    position = new Position({\n      pool,\n      liquidity: positionDetails.liquidity.toString(),\n      tickLower: positionDetails.tickLower,\n      tickUpper: positionDetails.tickUpper,\n    })\n  }\n\n  return {\n    position,\n    pool: pool ?? undefined,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}