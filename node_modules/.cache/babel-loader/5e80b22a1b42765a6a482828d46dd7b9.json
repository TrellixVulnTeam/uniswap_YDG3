{"ast":null,"code":"/**\n * Obliterator ForEach Function\n * =============================\n *\n * Helper function used to easily iterate over mixed values.\n */\n\n/**\n * Constants.\n */\nvar ARRAY_BUFFER_SUPPORT = typeof ArrayBuffer !== 'undefined',\n    SYMBOL_SUPPORT = typeof Symbol !== 'undefined';\n/**\n * Function able to iterate over almost any iterable JS value.\n *\n * @param  {any}      iterable - Iterable value.\n * @param  {function} callback - Callback function.\n */\n\nfunction forEach(iterable, callback) {\n  var iterator, k, i, l, s;\n  if (!iterable) throw new Error('obliterator/forEach: invalid iterable.');\n  if (typeof callback !== 'function') throw new Error('obliterator/forEach: expecting a callback.'); // The target is an array or a string or function arguments\n\n  if (Array.isArray(iterable) || ARRAY_BUFFER_SUPPORT && ArrayBuffer.isView(iterable) || typeof iterable === 'string' || iterable.toString() === '[object Arguments]') {\n    for (i = 0, l = iterable.length; i < l; i++) {\n      callback(iterable[i], i);\n    }\n\n    return;\n  } // The target has a #.forEach method\n\n\n  if (typeof iterable.forEach === 'function') {\n    iterable.forEach(callback);\n    return;\n  } // The target is iterable\n\n\n  if (SYMBOL_SUPPORT && Symbol.iterator in iterable && typeof iterable.next !== 'function') {\n    iterable = iterable[Symbol.iterator]();\n  } // The target is an iterator\n\n\n  if (typeof iterable.next === 'function') {\n    iterator = iterable;\n    i = 0;\n\n    while (s = iterator.next(), s.done !== true) {\n      callback(s.value, i);\n      i++;\n    }\n\n    return;\n  } // The target is a plain object\n\n\n  for (k in iterable) {\n    if (iterable.hasOwnProperty(k)) {\n      callback(iterable[k], k);\n    }\n  }\n\n  return;\n}\n/**\n * Same function as the above `forEach` but will yield `null` when the target\n * does not have keys.\n *\n * @param  {any}      iterable - Iterable value.\n * @param  {function} callback - Callback function.\n */\n\n\nforEach.forEachWithNullKeys = function (iterable, callback) {\n  var iterator, k, i, l, s;\n  if (!iterable) throw new Error('obliterator/forEachWithNullKeys: invalid iterable.');\n  if (typeof callback !== 'function') throw new Error('obliterator/forEachWithNullKeys: expecting a callback.'); // The target is an array or a string or function arguments\n\n  if (Array.isArray(iterable) || ARRAY_BUFFER_SUPPORT && ArrayBuffer.isView(iterable) || typeof iterable === 'string' || iterable.toString() === '[object Arguments]') {\n    for (i = 0, l = iterable.length; i < l; i++) {\n      callback(iterable[i], null);\n    }\n\n    return;\n  } // The target is a Set\n\n\n  if (iterable instanceof Set) {\n    iterable.forEach(function (value) {\n      callback(value, null);\n    });\n    return;\n  } // The target has a #.forEach method\n\n\n  if (typeof iterable.forEach === 'function') {\n    iterable.forEach(callback);\n    return;\n  } // The target is iterable\n\n\n  if (SYMBOL_SUPPORT && Symbol.iterator in iterable && typeof iterable.next !== 'function') {\n    iterable = iterable[Symbol.iterator]();\n  } // The target is an iterator\n\n\n  if (typeof iterable.next === 'function') {\n    iterator = iterable;\n    i = 0;\n\n    while (s = iterator.next(), s.done !== true) {\n      callback(s.value, null);\n      i++;\n    }\n\n    return;\n  } // The target is a plain object\n\n\n  for (k in iterable) {\n    if (iterable.hasOwnProperty(k)) {\n      callback(iterable[k], k);\n    }\n  }\n\n  return;\n};\n/**\n * Exporting.\n */\n\n\nmodule.exports = forEach;","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/node_modules/obliterator/foreach.js"],"names":["ARRAY_BUFFER_SUPPORT","ArrayBuffer","SYMBOL_SUPPORT","Symbol","forEach","iterable","callback","iterator","k","i","l","s","Error","Array","isArray","isView","toString","length","next","done","value","hasOwnProperty","forEachWithNullKeys","Set","module","exports"],"mappings":"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","sourcesContent":["/**\n * Obliterator ForEach Function\n * =============================\n *\n * Helper function used to easily iterate over mixed values.\n */\n\n/**\n * Constants.\n */\nvar ARRAY_BUFFER_SUPPORT = typeof ArrayBuffer !== 'undefined',\n    SYMBOL_SUPPORT = typeof Symbol !== 'undefined';\n\n/**\n * Function able to iterate over almost any iterable JS value.\n *\n * @param  {any}      iterable - Iterable value.\n * @param  {function} callback - Callback function.\n */\nfunction forEach(iterable, callback) {\n  var iterator, k, i, l, s;\n\n  if (!iterable)\n    throw new Error('obliterator/forEach: invalid iterable.');\n\n  if (typeof callback !== 'function')\n    throw new Error('obliterator/forEach: expecting a callback.');\n\n  // The target is an array or a string or function arguments\n  if (\n    Array.isArray(iterable) ||\n    (ARRAY_BUFFER_SUPPORT && ArrayBuffer.isView(iterable)) ||\n    typeof iterable === 'string' ||\n    iterable.toString() === '[object Arguments]'\n  ) {\n    for (i = 0, l = iterable.length; i < l; i++)\n      callback(iterable[i], i);\n    return;\n  }\n\n  // The target has a #.forEach method\n  if (typeof iterable.forEach === 'function') {\n    iterable.forEach(callback);\n    return;\n  }\n\n  // The target is iterable\n  if (\n    SYMBOL_SUPPORT &&\n    Symbol.iterator in iterable &&\n    typeof iterable.next !== 'function'\n  ) {\n    iterable = iterable[Symbol.iterator]();\n  }\n\n  // The target is an iterator\n  if (typeof iterable.next === 'function') {\n    iterator = iterable;\n    i = 0;\n\n    while ((s = iterator.next(), s.done !== true)) {\n      callback(s.value, i);\n      i++;\n    }\n\n    return;\n  }\n\n  // The target is a plain object\n  for (k in iterable) {\n    if (iterable.hasOwnProperty(k)) {\n      callback(iterable[k], k);\n    }\n  }\n\n  return;\n}\n\n/**\n * Same function as the above `forEach` but will yield `null` when the target\n * does not have keys.\n *\n * @param  {any}      iterable - Iterable value.\n * @param  {function} callback - Callback function.\n */\nforEach.forEachWithNullKeys = function(iterable, callback) {\n  var iterator, k, i, l, s;\n\n  if (!iterable)\n    throw new Error('obliterator/forEachWithNullKeys: invalid iterable.');\n\n  if (typeof callback !== 'function')\n    throw new Error('obliterator/forEachWithNullKeys: expecting a callback.');\n\n  // The target is an array or a string or function arguments\n  if (\n    Array.isArray(iterable) ||\n    (ARRAY_BUFFER_SUPPORT && ArrayBuffer.isView(iterable)) ||\n    typeof iterable === 'string' ||\n    iterable.toString() === '[object Arguments]'\n  ) {\n    for (i = 0, l = iterable.length; i < l; i++)\n      callback(iterable[i], null);\n    return;\n  }\n\n  // The target is a Set\n  if (iterable instanceof Set) {\n    iterable.forEach(function(value) {\n      callback(value, null);\n    });\n    return;\n  }\n\n  // The target has a #.forEach method\n  if (typeof iterable.forEach === 'function') {\n    iterable.forEach(callback);\n    return;\n  }\n\n  // The target is iterable\n  if (\n    SYMBOL_SUPPORT &&\n    Symbol.iterator in iterable &&\n    typeof iterable.next !== 'function'\n  ) {\n    iterable = iterable[Symbol.iterator]();\n  }\n\n  // The target is an iterator\n  if (typeof iterable.next === 'function') {\n    iterator = iterable;\n    i = 0;\n\n    while ((s = iterator.next(), s.done !== true)) {\n      callback(s.value, null);\n      i++;\n    }\n\n    return;\n  }\n\n  // The target is a plain object\n  for (k in iterable) {\n    if (iterable.hasOwnProperty(k)) {\n      callback(iterable[k], k);\n    }\n  }\n\n  return;\n};\n\n/**\n * Exporting.\n */\nmodule.exports = forEach;\n"]},"metadata":{},"sourceType":"script"}