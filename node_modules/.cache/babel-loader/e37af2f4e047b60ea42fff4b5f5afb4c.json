{"ast":null,"code":"import _slicedToArray from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{namehash}from'@ethersproject/hash';import{useEffect,useMemo,useState}from'react';import{safeNamehash}from'utils/safeNamehash';import uriToHttp from'utils/uriToHttp';import{useSingleCallResult}from'../state/multicall/hooks';import{isAddress}from'../utils';import isZero from'../utils/isZero';import{useENSRegistrarContract,useENSResolverContract,useERC721Contract,useERC1155Contract}from'./useContract';import useDebounce from'./useDebounce';import useENSName from'./useENSName';import{useActiveWeb3React}from'./web3';/**\n * Returns the ENS avatar URI, if available.\n * Spec: https://gist.github.com/Arachnid/9db60bd75277969ee1689c8742b75182.\n */export default function useENSAvatar(address){var enforceOwnership=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var debouncedAddress=useDebounce(address,200);var node=useMemo(function(){if(!debouncedAddress||!isAddress(debouncedAddress))return undefined;return namehash(\"\".concat(debouncedAddress.toLowerCase().substr(2),\".addr.reverse\"));},[debouncedAddress]);var addressAvatar=useAvatarFromNode(node);var ENSName=useENSName(address).ENSName;var nameAvatar=useAvatarFromNode(ENSName===null?undefined:safeNamehash(ENSName));var avatar=addressAvatar.avatar||nameAvatar.avatar;var nftAvatar=useAvatarFromNFT(avatar,enforceOwnership);avatar=nftAvatar.avatar||avatar;var http=avatar&&uriToHttp(avatar)[0];var changed=debouncedAddress!==address;return useMemo(function(){return{avatar:changed?null:http!==null&&http!==void 0?http:null,loading:changed||addressAvatar.loading||nameAvatar.loading||nftAvatar.loading};},[addressAvatar.loading,changed,http,nameAvatar.loading,nftAvatar.loading]);}function useAvatarFromNode(node){var _resolverAddress$resu;var nodeArgument=useMemo(function(){return[node];},[node]);var textArgument=useMemo(function(){return[node,'avatar'];},[node]);var registrarContract=useENSRegistrarContract(false);var resolverAddress=useSingleCallResult(registrarContract,'resolver',nodeArgument);var resolverAddressResult=(_resolverAddress$resu=resolverAddress.result)===null||_resolverAddress$resu===void 0?void 0:_resolverAddress$resu[0];var resolverContract=useENSResolverContract(resolverAddressResult&&!isZero(resolverAddressResult)?resolverAddressResult:undefined,false);var avatar=useSingleCallResult(resolverContract,'text',textArgument);return useMemo(function(){var _avatar$result;return{avatar:(_avatar$result=avatar.result)===null||_avatar$result===void 0?void 0:_avatar$result[0],loading:resolverAddress.loading||avatar.loading};},[avatar.loading,avatar.result,resolverAddress.loading]);}function useAvatarFromNFT(){var _parts$1$split,_parts$,_parts$2$split,_parts$2;var nftUri=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';var enforceOwnership=arguments.length>1?arguments[1]:undefined;var parts=nftUri.toLowerCase().split(':');var protocol=parts[0];// ignore the chain from eip155\n// TODO: when we are able, pull only from the specified chain\nvar _ref=(_parts$1$split=(_parts$=parts[1])===null||_parts$===void 0?void 0:_parts$.split('/'))!==null&&_parts$1$split!==void 0?_parts$1$split:[],_ref2=_slicedToArray(_ref,2),erc=_ref2[1];var _ref3=(_parts$2$split=(_parts$2=parts[2])===null||_parts$2===void 0?void 0:_parts$2.split('/'))!==null&&_parts$2$split!==void 0?_parts$2$split:[],_ref4=_slicedToArray(_ref3,2),contractAddress=_ref4[0],id=_ref4[1];var isERC721=protocol==='eip155'&&erc==='erc721';var isERC1155=protocol==='eip155'&&erc==='erc1155';var erc721=useERC721Uri(isERC721?contractAddress:undefined,id,enforceOwnership);var erc1155=useERC1155Uri(isERC1155?contractAddress:undefined,id,enforceOwnership);var uri=erc721.uri||erc1155.uri;var http=uri&&uriToHttp(uri)[0];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState(undefined),_useState4=_slicedToArray(_useState3,2),avatar=_useState4[0],setAvatar=_useState4[1];useEffect(function(){setAvatar(undefined);if(http){setLoading(true);fetch(http).then(function(res){return res.json();}).then(function(_ref5){var image=_ref5.image;setAvatar(image);}).catch(function(e){return console.warn(e);}).finally(function(){setLoading(false);});}},[http]);return useMemo(function(){return{avatar:avatar,loading:erc721.loading||erc1155.loading||loading};},[avatar,erc1155.loading,erc721.loading,loading]);}function useERC721Uri(contractAddress,id,enforceOwnership){var idArgument=useMemo(function(){return[id];},[id]);var _useActiveWeb3React=useActiveWeb3React(),account=_useActiveWeb3React.account;var contract=useERC721Contract(contractAddress);var owner=useSingleCallResult(contract,'ownerOf',idArgument);var uri=useSingleCallResult(contract,'tokenURI',idArgument);return useMemo(function(){var _owner$result,_uri$result;return{uri:!enforceOwnership||account===((_owner$result=owner.result)===null||_owner$result===void 0?void 0:_owner$result[0])?(_uri$result=uri.result)===null||_uri$result===void 0?void 0:_uri$result[0]:undefined,loading:owner.loading||uri.loading};},[account,enforceOwnership,owner.loading,owner.result,uri.loading,uri.result]);}function useERC1155Uri(contractAddress,id,enforceOwnership){var _useActiveWeb3React2=useActiveWeb3React(),account=_useActiveWeb3React2.account;var idArgument=useMemo(function(){return[id];},[id]);var accountArgument=useMemo(function(){return[account||'',id];},[account,id]);var contract=useERC1155Contract(contractAddress);var balance=useSingleCallResult(contract,'balanceOf',accountArgument);var uri=useSingleCallResult(contract,'uri',idArgument);return useMemo(function(){var _balance$result,_uri$result2;return{uri:!enforceOwnership||((_balance$result=balance.result)===null||_balance$result===void 0?void 0:_balance$result[0])>0?(_uri$result2=uri.result)===null||_uri$result2===void 0?void 0:_uri$result2[0]:undefined,loading:balance.loading||uri.loading};},[balance.loading,balance.result,enforceOwnership,uri.loading,uri.result]);}","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/hooks/useENSAvatar.ts"],"names":["namehash","useEffect","useMemo","useState","safeNamehash","uriToHttp","useSingleCallResult","isAddress","isZero","useENSRegistrarContract","useENSResolverContract","useERC721Contract","useERC1155Contract","useDebounce","useENSName","useActiveWeb3React","useENSAvatar","address","enforceOwnership","debouncedAddress","node","undefined","toLowerCase","substr","addressAvatar","useAvatarFromNode","ENSName","nameAvatar","avatar","nftAvatar","useAvatarFromNFT","http","changed","loading","nodeArgument","textArgument","registrarContract","resolverAddress","resolverAddressResult","result","resolverContract","nftUri","parts","split","protocol","erc","contractAddress","id","isERC721","isERC1155","erc721","useERC721Uri","erc1155","useERC1155Uri","uri","setLoading","setAvatar","fetch","then","res","json","image","catch","e","console","warn","finally","idArgument","account","contract","owner","accountArgument","balance"],"mappings":"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","sourcesContent":["import { namehash } from '@ethersproject/hash'\nimport { useEffect, useMemo, useState } from 'react'\nimport { safeNamehash } from 'utils/safeNamehash'\nimport uriToHttp from 'utils/uriToHttp'\n\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { isAddress } from '../utils'\nimport isZero from '../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract, useERC721Contract, useERC1155Contract } from './useContract'\nimport useDebounce from './useDebounce'\nimport useENSName from './useENSName'\nimport { useActiveWeb3React } from './web3'\n\n/**\n * Returns the ENS avatar URI, if available.\n * Spec: https://gist.github.com/Arachnid/9db60bd75277969ee1689c8742b75182.\n */\nexport default function useENSAvatar(\n  address?: string,\n  enforceOwnership = true\n): { avatar: string | null; loading: boolean } {\n  const debouncedAddress = useDebounce(address, 200)\n  const node = useMemo(() => {\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return undefined\n    return namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)\n  }, [debouncedAddress])\n\n  const addressAvatar = useAvatarFromNode(node)\n  const ENSName = useENSName(address).ENSName\n  const nameAvatar = useAvatarFromNode(ENSName === null ? undefined : safeNamehash(ENSName))\n  let avatar = addressAvatar.avatar || nameAvatar.avatar\n\n  const nftAvatar = useAvatarFromNFT(avatar, enforceOwnership)\n  avatar = nftAvatar.avatar || avatar\n\n  const http = avatar && uriToHttp(avatar)[0]\n\n  const changed = debouncedAddress !== address\n  return useMemo(\n    () => ({\n      avatar: changed ? null : http ?? null,\n      loading: changed || addressAvatar.loading || nameAvatar.loading || nftAvatar.loading,\n    }),\n    [addressAvatar.loading, changed, http, nameAvatar.loading, nftAvatar.loading]\n  )\n}\n\nfunction useAvatarFromNode(node?: string): { avatar?: string; loading: boolean } {\n  const nodeArgument = useMemo(() => [node], [node])\n  const textArgument = useMemo(() => [node, 'avatar'], [node])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', nodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false\n  )\n  const avatar = useSingleCallResult(resolverContract, 'text', textArgument)\n\n  return useMemo(\n    () => ({\n      avatar: avatar.result?.[0],\n      loading: resolverAddress.loading || avatar.loading,\n    }),\n    [avatar.loading, avatar.result, resolverAddress.loading]\n  )\n}\n\nfunction useAvatarFromNFT(nftUri = '', enforceOwnership: boolean): { avatar?: string; loading: boolean } {\n  const parts = nftUri.toLowerCase().split(':')\n  const protocol = parts[0]\n  // ignore the chain from eip155\n  // TODO: when we are able, pull only from the specified chain\n  const [, erc] = parts[1]?.split('/') ?? []\n  const [contractAddress, id] = parts[2]?.split('/') ?? []\n  const isERC721 = protocol === 'eip155' && erc === 'erc721'\n  const isERC1155 = protocol === 'eip155' && erc === 'erc1155'\n  const erc721 = useERC721Uri(isERC721 ? contractAddress : undefined, id, enforceOwnership)\n  const erc1155 = useERC1155Uri(isERC1155 ? contractAddress : undefined, id, enforceOwnership)\n  const uri = erc721.uri || erc1155.uri\n  const http = uri && uriToHttp(uri)[0]\n\n  const [loading, setLoading] = useState(false)\n  const [avatar, setAvatar] = useState(undefined)\n  useEffect(() => {\n    setAvatar(undefined)\n    if (http) {\n      setLoading(true)\n      fetch(http)\n        .then((res) => res.json())\n        .then(({ image }) => {\n          setAvatar(image)\n        })\n        .catch((e) => console.warn(e))\n        .finally(() => {\n          setLoading(false)\n        })\n    }\n  }, [http])\n\n  return useMemo(\n    () => ({ avatar, loading: erc721.loading || erc1155.loading || loading }),\n    [avatar, erc1155.loading, erc721.loading, loading]\n  )\n}\n\nfunction useERC721Uri(\n  contractAddress: string | undefined,\n  id: string | undefined,\n  enforceOwnership: boolean\n): { uri?: string; loading: boolean } {\n  const idArgument = useMemo(() => [id], [id])\n  const { account } = useActiveWeb3React()\n  const contract = useERC721Contract(contractAddress)\n  const owner = useSingleCallResult(contract, 'ownerOf', idArgument)\n  const uri = useSingleCallResult(contract, 'tokenURI', idArgument)\n  return useMemo(\n    () => ({\n      uri: !enforceOwnership || account === owner.result?.[0] ? uri.result?.[0] : undefined,\n      loading: owner.loading || uri.loading,\n    }),\n    [account, enforceOwnership, owner.loading, owner.result, uri.loading, uri.result]\n  )\n}\n\nfunction useERC1155Uri(\n  contractAddress: string | undefined,\n  id: string | undefined,\n  enforceOwnership: boolean\n): { uri?: string; loading: boolean } {\n  const { account } = useActiveWeb3React()\n  const idArgument = useMemo(() => [id], [id])\n  const accountArgument = useMemo(() => [account || '', id], [account, id])\n  const contract = useERC1155Contract(contractAddress)\n  const balance = useSingleCallResult(contract, 'balanceOf', accountArgument)\n  const uri = useSingleCallResult(contract, 'uri', idArgument)\n  return useMemo(\n    () => ({\n      uri: !enforceOwnership || balance.result?.[0] > 0 ? uri.result?.[0] : undefined,\n      loading: balance.loading || uri.loading,\n    }),\n    [balance.loading, balance.result, enforceOwnership, uri.loading, uri.result]\n  )\n}\n"]},"metadata":{},"sourceType":"module"}