{"ast":null,"code":"\"use strict\"; // Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WalletLinkRelay = void 0;\n\nconst bind_decorator_1 = __importDefault(require(\"bind-decorator\"));\n\nconst rxjs_1 = require(\"rxjs\");\n\nconst operators_1 = require(\"rxjs/operators\");\n\nconst WalletLinkAnalytics_1 = require(\"../connection/WalletLinkAnalytics\");\n\nconst WalletLinkConnection_1 = require(\"../connection/WalletLinkConnection\");\n\nconst init_1 = require(\"../init\");\n\nconst util_1 = require(\"../util\");\n\nconst aes256gcm = __importStar(require(\"./aes256gcm\"));\n\nconst Session_1 = require(\"./Session\");\n\nconst WalletLinkRelayAbstract_1 = require(\"./WalletLinkRelayAbstract\");\n\nconst Web3Method_1 = require(\"./Web3Method\");\n\nconst Web3RequestCanceledMessage_1 = require(\"./Web3RequestCanceledMessage\");\n\nconst Web3RequestMessage_1 = require(\"./Web3RequestMessage\");\n\nconst Web3Response_1 = require(\"./Web3Response\");\n\nconst Web3ResponseMessage_1 = require(\"./Web3ResponseMessage\");\n\nclass WalletLinkRelay {\n  constructor(options) {\n    this.accountsCallback = null;\n    this.chainIdCallback = null;\n    this.jsonRpcUrlCallback = null;\n    this.appName = \"\";\n    this.appLogoUrl = null;\n    this.subscriptions = new rxjs_1.Subscription();\n    this.walletLinkUrl = options.walletLinkUrl;\n    this.storage = options.storage;\n    this._session = Session_1.Session.load(options.storage) || new Session_1.Session(options.storage).save();\n    this.relayEventManager = options.relayEventManager;\n    this.walletLinkAnalytics = options.walletLinkAnalytics ? options.walletLinkAnalytics : new WalletLinkAnalytics_1.WalletLinkAnalytics();\n    this.connection = new WalletLinkConnection_1.WalletLinkConnection(this._session.id, this._session.key, this.walletLinkUrl, this.walletLinkAnalytics);\n    this.subscriptions.add(this.connection.incomingEvent$.pipe(operators_1.filter(m => m.event === \"Web3Response\")).subscribe({\n      next: this.handleIncomingEvent\n    }));\n    this.subscriptions.add(this.connection.linked$.pipe(operators_1.skip(1), operators_1.tap(linked => {\n      var _a;\n\n      this.isLinked = linked;\n      const cachedAddresses = this.storage.getItem(WalletLinkRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY);\n\n      if (cachedAddresses) {\n        const addresses = cachedAddresses.split(\" \");\n\n        if (addresses[0] !== \"\" && !linked) {\n          const sessionIdHash = Session_1.Session.hash(this._session.id);\n          (_a = this.walletLinkAnalytics) === null || _a === void 0 ? void 0 : _a.sendEvent(init_1.EVENTS.UNLINKED_ERROR_STATE, {\n            sessionIdHash\n          });\n        }\n      }\n    })).subscribe()); // if session is marked destroyed, reset and reload\n\n    this.subscriptions.add(this.connection.sessionConfig$.pipe(operators_1.filter(c => !!c.metadata && c.metadata.__destroyed === \"1\")).subscribe(() => {\n      var _a;\n\n      const alreadyDestroyed = this.connection.isDestroyed;\n      (_a = this.walletLinkAnalytics) === null || _a === void 0 ? void 0 : _a.sendEvent(init_1.EVENTS.METADATA_DESTROYED, {\n        alreadyDestroyed,\n        sessionIdHash: Session_1.Session.hash(this._session.id)\n      });\n      return this.resetAndReload();\n    }));\n    this.subscriptions.add(this.connection.sessionConfig$.pipe(operators_1.filter(c => c.metadata && c.metadata.WalletUsername !== undefined)).pipe(operators_1.mergeMap(c => aes256gcm.decrypt(c.metadata.WalletUsername, this._session.secret))).subscribe({\n      next: walletUsername => {\n        this.storage.setItem(WalletLinkRelayAbstract_1.WALLET_USER_NAME_KEY, walletUsername);\n      },\n      error: () => {\n        var _a;\n\n        (_a = this.walletLinkAnalytics) === null || _a === void 0 ? void 0 : _a.sendEvent(init_1.EVENTS.GENERAL_ERROR, {\n          message: 'Had error decrypting',\n          value: 'username'\n        });\n      }\n    }));\n    this.subscriptions.add(this.connection.sessionConfig$.pipe(operators_1.filter(c => c.metadata && c.metadata.ChainId !== undefined)).pipe(operators_1.mergeMap(c => aes256gcm.decrypt(c.metadata.ChainId, this._session.secret))).pipe(operators_1.distinctUntilChanged()).subscribe({\n      next: chainId => {\n        if (this.chainIdCallback) {\n          this.chainIdCallback(chainId);\n        }\n      },\n      error: () => {\n        var _a;\n\n        (_a = this.walletLinkAnalytics) === null || _a === void 0 ? void 0 : _a.sendEvent(init_1.EVENTS.GENERAL_ERROR, {\n          message: 'Had error decrypting',\n          value: 'chainId'\n        });\n      }\n    }));\n    this.subscriptions.add(this.connection.sessionConfig$.pipe(operators_1.filter(c => c.metadata && c.metadata.JsonRpcUrl !== undefined)).pipe(operators_1.mergeMap(c => aes256gcm.decrypt(c.metadata.JsonRpcUrl, this._session.secret))).pipe(operators_1.distinctUntilChanged()).subscribe({\n      next: jsonRpcURl => {\n        if (this.jsonRpcUrlCallback) {\n          this.jsonRpcUrlCallback(jsonRpcURl);\n        }\n      },\n      error: () => {\n        var _a;\n\n        (_a = this.walletLinkAnalytics) === null || _a === void 0 ? void 0 : _a.sendEvent(init_1.EVENTS.GENERAL_ERROR, {\n          message: 'Had error decrypting',\n          value: 'jsonRpcUrl'\n        });\n      }\n    }));\n    this.subscriptions.add(this.connection.sessionConfig$.pipe(operators_1.filter(c => c.metadata && c.metadata.EthereumAddress !== undefined)).pipe(operators_1.mergeMap(c => aes256gcm.decrypt(c.metadata.EthereumAddress, this._session.secret))).subscribe({\n      next: selectedAddress => {\n        if (this.accountsCallback) {\n          this.accountsCallback([selectedAddress]);\n        }\n\n        if (WalletLinkRelay.accountRequestCallbackIds.size > 0) {\n          // We get the ethereum address from the metadata.  If for whatever\n          // reason we don't get a response via an explicit web3 message\n          // we can still fulfill the eip1102 request.\n          Array.from(WalletLinkRelay.accountRequestCallbackIds.values()).forEach(id => {\n            const message = Web3ResponseMessage_1.Web3ResponseMessage({\n              id,\n              response: Web3Response_1.RequestEthereumAccountsResponse([selectedAddress])\n            });\n            this.invokeCallback(Object.assign(Object.assign({}, message), {\n              id\n            }));\n          });\n          WalletLinkRelay.accountRequestCallbackIds.clear();\n        }\n      },\n      error: () => {\n        var _a;\n\n        (_a = this.walletLinkAnalytics) === null || _a === void 0 ? void 0 : _a.sendEvent(init_1.EVENTS.GENERAL_ERROR, {\n          message: 'Had error decrypting',\n          value: 'selectedAddress'\n        });\n      }\n    }));\n    this.ui = options.walletLinkUIConstructor({\n      walletLinkUrl: options.walletLinkUrl,\n      version: options.version,\n      darkMode: options.darkMode,\n      session: this._session,\n      connected$: this.connection.connected$\n    });\n    this.connection.connect();\n  }\n\n  attachUI() {\n    this.ui.attach();\n  }\n\n  resetAndReload() {\n    this.connection.setSessionMetadata(\"__destroyed\", \"1\").pipe(operators_1.timeout(1000), operators_1.catchError(_ => rxjs_1.of(null))).subscribe(_ => {\n      var _a, _b;\n\n      try {\n        this.subscriptions.unsubscribe();\n      } catch (err) {\n        (_a = this.walletLinkAnalytics) === null || _a === void 0 ? void 0 : _a.sendEvent(init_1.EVENTS.GENERAL_ERROR, {\n          message: \"Had error unsubscribing\"\n        });\n      }\n\n      (_b = this.walletLinkAnalytics) === null || _b === void 0 ? void 0 : _b.sendEvent(init_1.EVENTS.SESSION_STATE_CHANGE, {\n        method: \"relay::resetAndReload\",\n        sessionMetadataChange: \"__destroyed, 1\",\n        sessionIdHash: Session_1.Session.hash(this._session.id)\n      });\n      this.connection.destroy();\n      this.storage.clear();\n      this.ui.reloadUI();\n    }, err => {\n      var _a;\n\n      (_a = this.walletLinkAnalytics) === null || _a === void 0 ? void 0 : _a.sendEvent(init_1.EVENTS.FAILURE, {\n        method: \"relay::resetAndReload\",\n        message: `faled to reset and relod with ${err}`,\n        sessionIdHash: Session_1.Session.hash(this._session.id)\n      });\n    });\n  }\n\n  setAppInfo(appName, appLogoUrl) {\n    this.appName = appName;\n    this.appLogoUrl = appLogoUrl;\n  }\n\n  getStorageItem(key) {\n    return this.storage.getItem(key);\n  }\n\n  get session() {\n    return this._session;\n  }\n\n  setStorageItem(key, value) {\n    this.storage.setItem(key, value);\n  }\n\n  requestEthereumAccounts() {\n    return this.sendRequest({\n      method: Web3Method_1.Web3Method.requestEthereumAccounts,\n      params: {\n        appName: this.appName,\n        appLogoUrl: this.appLogoUrl || null\n      }\n    });\n  }\n\n  signEthereumMessage(message, address, addPrefix, typedDataJson) {\n    return this.sendRequest({\n      method: Web3Method_1.Web3Method.signEthereumMessage,\n      params: {\n        message: util_1.hexStringFromBuffer(message, true),\n        address,\n        addPrefix,\n        typedDataJson: typedDataJson || null\n      }\n    });\n  }\n\n  ethereumAddressFromSignedMessage(message, signature, addPrefix) {\n    return this.sendRequest({\n      method: Web3Method_1.Web3Method.ethereumAddressFromSignedMessage,\n      params: {\n        message: util_1.hexStringFromBuffer(message, true),\n        signature: util_1.hexStringFromBuffer(signature, true),\n        addPrefix\n      }\n    });\n  }\n\n  signEthereumTransaction(params) {\n    return this.sendRequest({\n      method: Web3Method_1.Web3Method.signEthereumTransaction,\n      params: {\n        fromAddress: params.fromAddress,\n        toAddress: params.toAddress,\n        weiValue: util_1.bigIntStringFromBN(params.weiValue),\n        data: util_1.hexStringFromBuffer(params.data, true),\n        nonce: params.nonce,\n        gasPriceInWei: params.gasPriceInWei ? util_1.bigIntStringFromBN(params.gasPriceInWei) : null,\n        maxFeePerGas: params.gasPriceInWei ? util_1.bigIntStringFromBN(params.gasPriceInWei) : null,\n        maxPriorityFeePerGas: params.gasPriceInWei ? util_1.bigIntStringFromBN(params.gasPriceInWei) : null,\n        gasLimit: params.gasLimit ? util_1.bigIntStringFromBN(params.gasLimit) : null,\n        chainId: params.chainId,\n        shouldSubmit: false\n      }\n    });\n  }\n\n  signAndSubmitEthereumTransaction(params) {\n    return this.sendRequest({\n      method: Web3Method_1.Web3Method.signEthereumTransaction,\n      params: {\n        fromAddress: params.fromAddress,\n        toAddress: params.toAddress,\n        weiValue: util_1.bigIntStringFromBN(params.weiValue),\n        data: util_1.hexStringFromBuffer(params.data, true),\n        nonce: params.nonce,\n        gasPriceInWei: params.gasPriceInWei ? util_1.bigIntStringFromBN(params.gasPriceInWei) : null,\n        maxFeePerGas: params.maxFeePerGas ? util_1.bigIntStringFromBN(params.maxFeePerGas) : null,\n        maxPriorityFeePerGas: params.maxPriorityFeePerGas ? util_1.bigIntStringFromBN(params.maxPriorityFeePerGas) : null,\n        gasLimit: params.gasLimit ? util_1.bigIntStringFromBN(params.gasLimit) : null,\n        chainId: params.chainId,\n        shouldSubmit: true\n      }\n    });\n  }\n\n  submitEthereumTransaction(signedTransaction, chainId) {\n    return this.sendRequest({\n      method: Web3Method_1.Web3Method.submitEthereumTransaction,\n      params: {\n        signedTransaction: util_1.hexStringFromBuffer(signedTransaction, true),\n        chainId\n      }\n    });\n  }\n\n  scanQRCode(regExp) {\n    return this.sendRequest({\n      method: Web3Method_1.Web3Method.scanQRCode,\n      params: {\n        regExp\n      }\n    });\n  }\n\n  arbitraryRequest(data) {\n    return this.sendRequest({\n      method: Web3Method_1.Web3Method.arbitrary,\n      params: {\n        data\n      }\n    });\n  }\n\n  addEthereumChain(chainId, blockExplorerUrls, chainName, iconUrls, nativeCurrency) {\n    return this.sendRequest({\n      method: Web3Method_1.Web3Method.addEthereumChain,\n      params: {\n        chainId,\n        blockExplorerUrls,\n        chainName,\n        iconUrls,\n        nativeCurrency\n      }\n    });\n  }\n\n  sendRequest(request) {\n    let hideSnackbarItem = null;\n    const id = util_1.randomBytesHex(8);\n\n    const cancel = () => {\n      this.publishWeb3RequestCanceledEvent(id);\n      this.handleWeb3ResponseMessage(Web3ResponseMessage_1.Web3ResponseMessage({\n        id,\n        response: Web3Response_1.ErrorResponse(request.method, \"User rejected request\")\n      }));\n      hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n    };\n\n    const promise = new Promise((resolve, reject) => {\n      var _a;\n\n      const isRequestAccounts = request.method === Web3Method_1.Web3Method.requestEthereumAccounts;\n      const isSwitchEthereumChain = request.method === Web3Method_1.Web3Method.switchEthereumChain;\n\n      if (isRequestAccounts) {\n        const userAgent = ((_a = window === null || window === void 0 ? void 0 : window.navigator) === null || _a === void 0 ? void 0 : _a.userAgent) || null;\n\n        if (userAgent && /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(userAgent)) {\n          window.location.href = `https://go.cb-w.com/xoXnYwQimhb?cb_url=${window.location.href}`;\n          return;\n        }\n\n        if (this.ui.inlineAccountsResponse()) {\n          const onAccounts = accounts => {\n            this.handleWeb3ResponseMessage(Web3ResponseMessage_1.Web3ResponseMessage({\n              id,\n              response: Web3Response_1.RequestEthereumAccountsResponse(accounts)\n            }));\n          };\n\n          this.ui.requestEthereumAccounts({\n            onCancel: cancel,\n            onAccounts\n          });\n        } else {\n          this.ui.requestEthereumAccounts({\n            onCancel: cancel\n          });\n        }\n\n        WalletLinkRelay.accountRequestCallbackIds.add(id);\n      } else if (request.method === Web3Method_1.Web3Method.switchEthereumChain || request.method === Web3Method_1.Web3Method.addEthereumChain) {\n        const cancel = () => {\n          this.handleWeb3ResponseMessage(Web3ResponseMessage_1.Web3ResponseMessage({\n            id,\n            response: Web3Response_1.SwitchEthereumChainResponse(false)\n          }));\n        };\n\n        const approve = () => {\n          this.handleWeb3ResponseMessage(Web3ResponseMessage_1.Web3ResponseMessage({\n            id,\n            response: Web3Response_1.SwitchEthereumChainResponse(true)\n          }));\n        };\n\n        this.ui.switchEthereumChain({\n          onCancel: cancel,\n          onApprove: approve,\n          chainId: request.params.chainId\n        });\n\n        if (!this.ui.inlineSwitchEthereumChain()) {\n          hideSnackbarItem = this.ui.showConnecting({\n            onCancel: cancel,\n            onResetConnection: this.resetAndReload\n          });\n        }\n      } else if (this.ui.isStandalone()) {\n        const onCancel = () => {\n          this.handleWeb3ResponseMessage(Web3ResponseMessage_1.Web3ResponseMessage({\n            id,\n            response: Web3Response_1.ErrorResponse(request.method, \"User rejected request\")\n          }));\n        };\n\n        const onSuccess = response => {\n          this.handleWeb3ResponseMessage(Web3ResponseMessage_1.Web3ResponseMessage({\n            id,\n            response: response\n          }));\n        };\n\n        switch (request.method) {\n          case Web3Method_1.Web3Method.signEthereumMessage:\n            this.ui.signEthereumMessage({\n              request: request,\n              onSuccess,\n              onCancel\n            });\n            break;\n\n          case Web3Method_1.Web3Method.signEthereumTransaction:\n            this.ui.signEthereumTransaction({\n              request: request,\n              onSuccess,\n              onCancel\n            });\n            break;\n\n          case Web3Method_1.Web3Method.submitEthereumTransaction:\n            this.ui.submitEthereumTransaction({\n              request: request,\n              onSuccess,\n              onCancel\n            });\n            break;\n\n          case Web3Method_1.Web3Method.ethereumAddressFromSignedMessage:\n            this.ui.ethereumAddressFromSignedMessage({\n              request: request,\n              onSuccess\n            });\n            break;\n\n          default:\n            onCancel();\n            break;\n        }\n      } else {\n        hideSnackbarItem = this.ui.showConnecting({\n          onCancel: cancel,\n          onResetConnection: this.resetAndReload\n        });\n      }\n\n      this.relayEventManager.callbacks.set(id, response => {\n        this.ui.hideRequestEthereumAccounts();\n        hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n\n        if (response.errorMessage) {\n          return reject(new Error(response.errorMessage));\n        }\n\n        resolve(response);\n      });\n\n      if (isRequestAccounts && this.ui.inlineAccountsResponse() || isSwitchEthereumChain && this.ui.inlineSwitchEthereumChain() || this.ui.isStandalone()) {\n        return;\n      }\n\n      this.publishWeb3RequestEvent(id, request);\n    });\n    return {\n      promise,\n      cancel\n    };\n  }\n\n  setConnectDisabled(disabled) {\n    this.ui.setConnectDisabled(disabled);\n  }\n\n  setAccountsCallback(accountsCallback) {\n    this.accountsCallback = accountsCallback;\n  }\n\n  setChainIdCallback(chainIdCallback) {\n    this.chainIdCallback = chainIdCallback;\n  }\n\n  setJsonRpcUrlCallback(jsonRpcUrlCallback) {\n    this.jsonRpcUrlCallback = jsonRpcUrlCallback;\n  }\n\n  publishWeb3RequestEvent(id, request) {\n    const message = Web3RequestMessage_1.Web3RequestMessage({\n      id,\n      request\n    });\n    this.subscriptions.add(this.publishEvent(\"Web3Request\", message, true).subscribe({\n      error: err => {\n        this.handleWeb3ResponseMessage(Web3ResponseMessage_1.Web3ResponseMessage({\n          id: message.id,\n          response: {\n            method: message.request.method,\n            errorMessage: err.message\n          }\n        }));\n      }\n    }));\n  }\n\n  publishWeb3RequestCanceledEvent(id) {\n    const message = Web3RequestCanceledMessage_1.Web3RequestCanceledMessage(id);\n    this.subscriptions.add(this.publishEvent(\"Web3RequestCanceled\", message, false).subscribe());\n  }\n\n  publishEvent(event, message, callWebhook) {\n    const secret = this.session.secret;\n    return new rxjs_1.Observable(subscriber => {\n      aes256gcm.encrypt(JSON.stringify(Object.assign(Object.assign({}, message), {\n        origin: location.origin\n      })), secret).then(encrypted => {\n        subscriber.next(encrypted);\n        subscriber.complete();\n      });\n    }).pipe(operators_1.mergeMap(encrypted => {\n      return this.connection.publishEvent(event, encrypted, callWebhook);\n    }));\n  }\n\n  handleIncomingEvent(event) {\n    try {\n      this.subscriptions.add(aes256gcm.decrypt(event.data, this.session.secret).pipe(operators_1.map(c => JSON.parse(c))).subscribe({\n        next: json => {\n          const message = Web3ResponseMessage_1.isWeb3ResponseMessage(json) ? json : null;\n\n          if (!message) {\n            return;\n          }\n\n          this.handleWeb3ResponseMessage(message);\n        },\n        error: () => {\n          var _a;\n\n          (_a = this.walletLinkAnalytics) === null || _a === void 0 ? void 0 : _a.sendEvent(init_1.EVENTS.GENERAL_ERROR, {\n            message: 'Had error decrypting',\n            value: 'incomingEvent'\n          });\n        }\n      }));\n    } catch (_a) {\n      return;\n    }\n  }\n\n  handleWeb3ResponseMessage(message) {\n    const {\n      response\n    } = message;\n\n    if (Web3Response_1.isRequestEthereumAccountsResponse(response)) {\n      Array.from(WalletLinkRelay.accountRequestCallbackIds.values()).forEach(id => this.invokeCallback(Object.assign(Object.assign({}, message), {\n        id\n      })));\n      WalletLinkRelay.accountRequestCallbackIds.clear();\n      return;\n    }\n\n    this.invokeCallback(message);\n  }\n\n  invokeCallback(message) {\n    const callback = this.relayEventManager.callbacks.get(message.id);\n\n    if (callback) {\n      callback(message.response);\n      this.relayEventManager.callbacks.delete(message.id);\n    }\n  }\n\n  switchEthereumChain(chainId) {\n    return this.sendRequest({\n      method: Web3Method_1.Web3Method.switchEthereumChain,\n      params: {\n        chainId\n      }\n    });\n  }\n\n}\n\nWalletLinkRelay.accountRequestCallbackIds = new Set();\n\n__decorate([bind_decorator_1.default], WalletLinkRelay.prototype, \"resetAndReload\", null);\n\n__decorate([bind_decorator_1.default], WalletLinkRelay.prototype, \"handleIncomingEvent\", null);\n\nexports.WalletLinkRelay = WalletLinkRelay;","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/node_modules/walletlink/dist/relay/WalletLinkRelay.js"],"names":["__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","d","Reflect","decorate","i","__importStar","mod","__esModule","result","prototype","hasOwnProperty","call","__importDefault","exports","WalletLinkRelay","bind_decorator_1","require","rxjs_1","operators_1","WalletLinkAnalytics_1","WalletLinkConnection_1","init_1","util_1","aes256gcm","Session_1","WalletLinkRelayAbstract_1","Web3Method_1","Web3RequestCanceledMessage_1","Web3RequestMessage_1","Web3Response_1","Web3ResponseMessage_1","constructor","options","accountsCallback","chainIdCallback","jsonRpcUrlCallback","appName","appLogoUrl","subscriptions","Subscription","walletLinkUrl","storage","_session","Session","load","save","relayEventManager","walletLinkAnalytics","WalletLinkAnalytics","connection","WalletLinkConnection","id","add","incomingEvent$","pipe","filter","event","subscribe","next","handleIncomingEvent","linked$","skip","tap","linked","_a","isLinked","cachedAddresses","getItem","LOCAL_STORAGE_ADDRESSES_KEY","addresses","split","sessionIdHash","hash","sendEvent","EVENTS","UNLINKED_ERROR_STATE","sessionConfig$","metadata","__destroyed","alreadyDestroyed","isDestroyed","METADATA_DESTROYED","resetAndReload","WalletUsername","mergeMap","decrypt","secret","walletUsername","setItem","WALLET_USER_NAME_KEY","error","GENERAL_ERROR","message","ChainId","distinctUntilChanged","chainId","JsonRpcUrl","jsonRpcURl","EthereumAddress","selectedAddress","accountRequestCallbackIds","size","Array","from","values","forEach","Web3ResponseMessage","response","RequestEthereumAccountsResponse","invokeCallback","assign","clear","ui","walletLinkUIConstructor","version","darkMode","session","connected$","connect","attachUI","attach","setSessionMetadata","timeout","catchError","_","of","_b","unsubscribe","err","SESSION_STATE_CHANGE","method","sessionMetadataChange","destroy","reloadUI","FAILURE","setAppInfo","getStorageItem","setStorageItem","requestEthereumAccounts","sendRequest","Web3Method","params","signEthereumMessage","address","addPrefix","typedDataJson","hexStringFromBuffer","ethereumAddressFromSignedMessage","signature","signEthereumTransaction","fromAddress","toAddress","weiValue","bigIntStringFromBN","data","nonce","gasPriceInWei","maxFeePerGas","maxPriorityFeePerGas","gasLimit","shouldSubmit","signAndSubmitEthereumTransaction","submitEthereumTransaction","signedTransaction","scanQRCode","regExp","arbitraryRequest","arbitrary","addEthereumChain","blockExplorerUrls","chainName","iconUrls","nativeCurrency","request","hideSnackbarItem","randomBytesHex","cancel","publishWeb3RequestCanceledEvent","handleWeb3ResponseMessage","ErrorResponse","promise","Promise","resolve","reject","isRequestAccounts","isSwitchEthereumChain","switchEthereumChain","userAgent","window","navigator","test","location","href","inlineAccountsResponse","onAccounts","accounts","onCancel","SwitchEthereumChainResponse","approve","onApprove","inlineSwitchEthereumChain","showConnecting","onResetConnection","isStandalone","onSuccess","callbacks","set","hideRequestEthereumAccounts","errorMessage","Error","publishWeb3RequestEvent","setConnectDisabled","disabled","setAccountsCallback","setChainIdCallback","setJsonRpcUrlCallback","Web3RequestMessage","publishEvent","Web3RequestCanceledMessage","callWebhook","Observable","subscriber","encrypt","JSON","stringify","origin","then","encrypted","complete","map","parse","json","isWeb3ResponseMessage","isRequestEthereumAccountsResponse","callback","delete","Set","default"],"mappings":"AAAA,a,CACA;AACA;AACA;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,KAAmCC,MAAM,CAACC,MAAP,GAAiB,UAASC,CAAT,EAAYC,CAAZ,EAAeC,CAAf,EAAkBC,EAAlB,EAAsB;AAC5F,MAAIA,EAAE,KAAKC,SAAX,EAAsBD,EAAE,GAAGD,CAAL;AACtBJ,EAAAA,MAAM,CAACO,cAAP,CAAsBL,CAAtB,EAAyBG,EAAzB,EAA6B;AAAEG,IAAAA,UAAU,EAAE,IAAd;AAAoBC,IAAAA,GAAG,EAAE,YAAW;AAAE,aAAON,CAAC,CAACC,CAAD,CAAR;AAAc;AAApD,GAA7B;AACH,CAHwD,GAGnD,UAASF,CAAT,EAAYC,CAAZ,EAAeC,CAAf,EAAkBC,EAAlB,EAAsB;AACxB,MAAIA,EAAE,KAAKC,SAAX,EAAsBD,EAAE,GAAGD,CAAL;AACtBF,EAAAA,CAAC,CAACG,EAAD,CAAD,GAAQF,CAAC,CAACC,CAAD,CAAT;AACH,CANqB,CAAtB;;AAOA,IAAIM,kBAAkB,GAAI,QAAQ,KAAKA,kBAAd,KAAsCV,MAAM,CAACC,MAAP,GAAiB,UAASC,CAAT,EAAYS,CAAZ,EAAe;AAC3FX,EAAAA,MAAM,CAACO,cAAP,CAAsBL,CAAtB,EAAyB,SAAzB,EAAoC;AAAEM,IAAAA,UAAU,EAAE,IAAd;AAAoBI,IAAAA,KAAK,EAAED;AAA3B,GAApC;AACH,CAF8D,GAE1D,UAAST,CAAT,EAAYS,CAAZ,EAAe;AAChBT,EAAAA,CAAC,CAAC,SAAD,CAAD,GAAeS,CAAf;AACH,CAJwB,CAAzB;;AAKA,IAAIE,UAAU,GAAI,QAAQ,KAAKA,UAAd,IAA6B,UAAUC,UAAV,EAAsBC,MAAtB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AACnF,MAAIC,CAAC,GAAGC,SAAS,CAACC,MAAlB;AAAA,MAA0BC,CAAC,GAAGH,CAAC,GAAG,CAAJ,GAAQH,MAAR,GAAiBE,IAAI,KAAK,IAAT,GAAgBA,IAAI,GAAGjB,MAAM,CAACsB,wBAAP,CAAgCP,MAAhC,EAAwCC,GAAxC,CAAvB,GAAsEC,IAArH;AAAA,MAA2HM,CAA3H;AACA,MAAI,OAAOC,OAAP,KAAmB,QAAnB,IAA+B,OAAOA,OAAO,CAACC,QAAf,KAA4B,UAA/D,EAA2EJ,CAAC,GAAGG,OAAO,CAACC,QAAR,CAAiBX,UAAjB,EAA6BC,MAA7B,EAAqCC,GAArC,EAA0CC,IAA1C,CAAJ,CAA3E,KACK,KAAK,IAAIS,CAAC,GAAGZ,UAAU,CAACM,MAAX,GAAoB,CAAjC,EAAoCM,CAAC,IAAI,CAAzC,EAA4CA,CAAC,EAA7C,EAAiD,IAAIH,CAAC,GAAGT,UAAU,CAACY,CAAD,CAAlB,EAAuBL,CAAC,GAAG,CAACH,CAAC,GAAG,CAAJ,GAAQK,CAAC,CAACF,CAAD,CAAT,GAAeH,CAAC,GAAG,CAAJ,GAAQK,CAAC,CAACR,MAAD,EAASC,GAAT,EAAcK,CAAd,CAAT,GAA4BE,CAAC,CAACR,MAAD,EAASC,GAAT,CAA7C,KAA+DK,CAAnE;AAC7E,SAAOH,CAAC,GAAG,CAAJ,IAASG,CAAT,IAAcrB,MAAM,CAACO,cAAP,CAAsBQ,MAAtB,EAA8BC,GAA9B,EAAmCK,CAAnC,CAAd,EAAqDA,CAA5D;AACH,CALD;;AAMA,IAAIM,YAAY,GAAI,QAAQ,KAAKA,YAAd,IAA+B,UAAUC,GAAV,EAAe;AAC7D,MAAIA,GAAG,IAAIA,GAAG,CAACC,UAAf,EAA2B,OAAOD,GAAP;AAC3B,MAAIE,MAAM,GAAG,EAAb;AACA,MAAIF,GAAG,IAAI,IAAX,EAAiB,KAAK,IAAIxB,CAAT,IAAcwB,GAAd,EAAmB,IAAIxB,CAAC,KAAK,SAAN,IAAmBJ,MAAM,CAAC+B,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCL,GAArC,EAA0CxB,CAA1C,CAAvB,EAAqEL,eAAe,CAAC+B,MAAD,EAASF,GAAT,EAAcxB,CAAd,CAAf;;AACzGM,EAAAA,kBAAkB,CAACoB,MAAD,EAASF,GAAT,CAAlB;;AACA,SAAOE,MAAP;AACH,CAND;;AAOA,IAAII,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUN,GAAV,EAAe;AACnE,SAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;AAAE,eAAWA;AAAb,GAAvC;AACH,CAFD;;AAGA5B,MAAM,CAACO,cAAP,CAAsB4B,OAAtB,EAA+B,YAA/B,EAA6C;AAAEvB,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAuB,OAAO,CAACC,eAAR,GAA0B,KAAK,CAA/B;;AACA,MAAMC,gBAAgB,GAAGH,eAAe,CAACI,OAAO,CAAC,gBAAD,CAAR,CAAxC;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,MAAD,CAAtB;;AACA,MAAME,WAAW,GAAGF,OAAO,CAAC,gBAAD,CAA3B;;AACA,MAAMG,qBAAqB,GAAGH,OAAO,CAAC,mCAAD,CAArC;;AACA,MAAMI,sBAAsB,GAAGJ,OAAO,CAAC,oCAAD,CAAtC;;AACA,MAAMK,MAAM,GAAGL,OAAO,CAAC,SAAD,CAAtB;;AACA,MAAMM,MAAM,GAAGN,OAAO,CAAC,SAAD,CAAtB;;AACA,MAAMO,SAAS,GAAGlB,YAAY,CAACW,OAAO,CAAC,aAAD,CAAR,CAA9B;;AACA,MAAMQ,SAAS,GAAGR,OAAO,CAAC,WAAD,CAAzB;;AACA,MAAMS,yBAAyB,GAAGT,OAAO,CAAC,2BAAD,CAAzC;;AACA,MAAMU,YAAY,GAAGV,OAAO,CAAC,cAAD,CAA5B;;AACA,MAAMW,4BAA4B,GAAGX,OAAO,CAAC,8BAAD,CAA5C;;AACA,MAAMY,oBAAoB,GAAGZ,OAAO,CAAC,sBAAD,CAApC;;AACA,MAAMa,cAAc,GAAGb,OAAO,CAAC,gBAAD,CAA9B;;AACA,MAAMc,qBAAqB,GAAGd,OAAO,CAAC,uBAAD,CAArC;;AACA,MAAMF,eAAN,CAAsB;AAClBiB,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB,SAAKC,gBAAL,GAAwB,IAAxB;AACA,SAAKC,eAAL,GAAuB,IAAvB;AACA,SAAKC,kBAAL,GAA0B,IAA1B;AACA,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKC,UAAL,GAAkB,IAAlB;AACA,SAAKC,aAAL,GAAqB,IAAIrB,MAAM,CAACsB,YAAX,EAArB;AACA,SAAKC,aAAL,GAAqBR,OAAO,CAACQ,aAA7B;AACA,SAAKC,OAAL,GAAeT,OAAO,CAACS,OAAvB;AACA,SAAKC,QAAL,GACIlB,SAAS,CAACmB,OAAV,CAAkBC,IAAlB,CAAuBZ,OAAO,CAACS,OAA/B,KAA2C,IAAIjB,SAAS,CAACmB,OAAd,CAAsBX,OAAO,CAACS,OAA9B,EAAuCI,IAAvC,EAD/C;AAEA,SAAKC,iBAAL,GAAyBd,OAAO,CAACc,iBAAjC;AACA,SAAKC,mBAAL,GAA2Bf,OAAO,CAACe,mBAAR,GACrBf,OAAO,CAACe,mBADa,GAErB,IAAI5B,qBAAqB,CAAC6B,mBAA1B,EAFN;AAGA,SAAKC,UAAL,GAAkB,IAAI7B,sBAAsB,CAAC8B,oBAA3B,CAAgD,KAAKR,QAAL,CAAcS,EAA9D,EAAkE,KAAKT,QAAL,CAAchD,GAAhF,EAAqF,KAAK8C,aAA1F,EAAyG,KAAKO,mBAA9G,CAAlB;AACA,SAAKT,aAAL,CAAmBc,GAAnB,CAAuB,KAAKH,UAAL,CAAgBI,cAAhB,CAClBC,IADkB,CACbpC,WAAW,CAACqC,MAAZ,CAAmB1E,CAAC,IAAIA,CAAC,CAAC2E,KAAF,KAAY,cAApC,CADa,EAElBC,SAFkB,CAER;AAAEC,MAAAA,IAAI,EAAE,KAAKC;AAAb,KAFQ,CAAvB;AAGA,SAAKrB,aAAL,CAAmBc,GAAnB,CAAuB,KAAKH,UAAL,CAAgBW,OAAhB,CAClBN,IADkB,CACbpC,WAAW,CAAC2C,IAAZ,CAAiB,CAAjB,CADa,EACQ3C,WAAW,CAAC4C,GAAZ,CAAiBC,MAAD,IAAY;AACvD,UAAIC,EAAJ;;AACA,WAAKC,QAAL,GAAgBF,MAAhB;AACA,YAAMG,eAAe,GAAG,KAAKzB,OAAL,CAAa0B,OAAb,CAAqB1C,yBAAyB,CAAC2C,2BAA/C,CAAxB;;AACA,UAAIF,eAAJ,EAAqB;AACjB,cAAMG,SAAS,GAAGH,eAAe,CAACI,KAAhB,CAAsB,GAAtB,CAAlB;;AACA,YAAID,SAAS,CAAC,CAAD,CAAT,KAAiB,EAAjB,IAAuB,CAACN,MAA5B,EAAoC;AAChC,gBAAMQ,aAAa,GAAG/C,SAAS,CAACmB,OAAV,CAAkB6B,IAAlB,CAAuB,KAAK9B,QAAL,CAAcS,EAArC,CAAtB;AACA,WAACa,EAAE,GAAG,KAAKjB,mBAAX,MAAoC,IAApC,IAA4CiB,EAAE,KAAK,KAAK,CAAxD,GAA4D,KAAK,CAAjE,GAAqEA,EAAE,CAACS,SAAH,CAAapD,MAAM,CAACqD,MAAP,CAAcC,oBAA3B,EAAiD;AAAEJ,YAAAA;AAAF,WAAjD,CAArE;AACH;AACJ;AACJ,KAX8B,CADR,EAalBd,SAbkB,EAAvB,EAnBiB,CAiCjB;;AACA,SAAKnB,aAAL,CAAmBc,GAAnB,CAAuB,KAAKH,UAAL,CAAgB2B,cAAhB,CAClBtB,IADkB,CACbpC,WAAW,CAACqC,MAAZ,CAAmB3D,CAAC,IAAI,CAAC,CAACA,CAAC,CAACiF,QAAJ,IAAgBjF,CAAC,CAACiF,QAAF,CAAWC,WAAX,KAA2B,GAAnE,CADa,EAElBrB,SAFkB,CAER,MAAM;AACjB,UAAIO,EAAJ;;AACA,YAAMe,gBAAgB,GAAG,KAAK9B,UAAL,CAAgB+B,WAAzC;AACA,OAAChB,EAAE,GAAG,KAAKjB,mBAAX,MAAoC,IAApC,IAA4CiB,EAAE,KAAK,KAAK,CAAxD,GAA4D,KAAK,CAAjE,GAAqEA,EAAE,CAACS,SAAH,CAAapD,MAAM,CAACqD,MAAP,CAAcO,kBAA3B,EAA+C;AAChHF,QAAAA,gBADgH;AAEhHR,QAAAA,aAAa,EAAE/C,SAAS,CAACmB,OAAV,CAAkB6B,IAAlB,CAAuB,KAAK9B,QAAL,CAAcS,EAArC;AAFiG,OAA/C,CAArE;AAIA,aAAO,KAAK+B,cAAL,EAAP;AACH,KAVsB,CAAvB;AAWA,SAAK5C,aAAL,CAAmBc,GAAnB,CAAuB,KAAKH,UAAL,CAAgB2B,cAAhB,CAClBtB,IADkB,CACbpC,WAAW,CAACqC,MAAZ,CAAmB3D,CAAC,IAAIA,CAAC,CAACiF,QAAF,IAAcjF,CAAC,CAACiF,QAAF,CAAWM,cAAX,KAA8BnG,SAApE,CADa,EAElBsE,IAFkB,CAEbpC,WAAW,CAACkE,QAAZ,CAAqBxF,CAAC,IAAI2B,SAAS,CAAC8D,OAAV,CAAkBzF,CAAC,CAACiF,QAAF,CAAWM,cAA7B,EAA6C,KAAKzC,QAAL,CAAc4C,MAA3D,CAA1B,CAFa,EAGlB7B,SAHkB,CAGR;AACXC,MAAAA,IAAI,EAAE6B,cAAc,IAAI;AACpB,aAAK9C,OAAL,CAAa+C,OAAb,CAAqB/D,yBAAyB,CAACgE,oBAA/C,EAAqEF,cAArE;AACH,OAHU;AAIXG,MAAAA,KAAK,EAAE,MAAM;AACT,YAAI1B,EAAJ;;AACA,SAACA,EAAE,GAAG,KAAKjB,mBAAX,MAAoC,IAApC,IAA4CiB,EAAE,KAAK,KAAK,CAAxD,GAA4D,KAAK,CAAjE,GAAqEA,EAAE,CAACS,SAAH,CAAapD,MAAM,CAACqD,MAAP,CAAciB,aAA3B,EAA0C;AAAEC,UAAAA,OAAO,EAAE,sBAAX;AAAmCtG,UAAAA,KAAK,EAAE;AAA1C,SAA1C,CAArE;AACH;AAPU,KAHQ,CAAvB;AAYA,SAAKgD,aAAL,CAAmBc,GAAnB,CAAuB,KAAKH,UAAL,CAAgB2B,cAAhB,CAClBtB,IADkB,CACbpC,WAAW,CAACqC,MAAZ,CAAmB3D,CAAC,IAAIA,CAAC,CAACiF,QAAF,IAAcjF,CAAC,CAACiF,QAAF,CAAWgB,OAAX,KAAuB7G,SAA7D,CADa,EAElBsE,IAFkB,CAEbpC,WAAW,CAACkE,QAAZ,CAAqBxF,CAAC,IAAI2B,SAAS,CAAC8D,OAAV,CAAkBzF,CAAC,CAACiF,QAAF,CAAWgB,OAA7B,EAAsC,KAAKnD,QAAL,CAAc4C,MAApD,CAA1B,CAFa,EAGlBhC,IAHkB,CAGbpC,WAAW,CAAC4E,oBAAZ,EAHa,EAIlBrC,SAJkB,CAIR;AACXC,MAAAA,IAAI,EAAEqC,OAAO,IAAI;AACb,YAAI,KAAK7D,eAAT,EAA0B;AACtB,eAAKA,eAAL,CAAqB6D,OAArB;AACH;AACJ,OALU;AAMXL,MAAAA,KAAK,EAAE,MAAM;AACT,YAAI1B,EAAJ;;AACA,SAACA,EAAE,GAAG,KAAKjB,mBAAX,MAAoC,IAApC,IAA4CiB,EAAE,KAAK,KAAK,CAAxD,GAA4D,KAAK,CAAjE,GAAqEA,EAAE,CAACS,SAAH,CAAapD,MAAM,CAACqD,MAAP,CAAciB,aAA3B,EAA0C;AAAEC,UAAAA,OAAO,EAAE,sBAAX;AAAmCtG,UAAAA,KAAK,EAAE;AAA1C,SAA1C,CAArE;AACH;AATU,KAJQ,CAAvB;AAeA,SAAKgD,aAAL,CAAmBc,GAAnB,CAAuB,KAAKH,UAAL,CAAgB2B,cAAhB,CAClBtB,IADkB,CACbpC,WAAW,CAACqC,MAAZ,CAAmB3D,CAAC,IAAIA,CAAC,CAACiF,QAAF,IAAcjF,CAAC,CAACiF,QAAF,CAAWmB,UAAX,KAA0BhH,SAAhE,CADa,EAElBsE,IAFkB,CAEbpC,WAAW,CAACkE,QAAZ,CAAqBxF,CAAC,IAAI2B,SAAS,CAAC8D,OAAV,CAAkBzF,CAAC,CAACiF,QAAF,CAAWmB,UAA7B,EAAyC,KAAKtD,QAAL,CAAc4C,MAAvD,CAA1B,CAFa,EAGlBhC,IAHkB,CAGbpC,WAAW,CAAC4E,oBAAZ,EAHa,EAIlBrC,SAJkB,CAIR;AACXC,MAAAA,IAAI,EAAEuC,UAAU,IAAI;AAChB,YAAI,KAAK9D,kBAAT,EAA6B;AACzB,eAAKA,kBAAL,CAAwB8D,UAAxB;AACH;AACJ,OALU;AAMXP,MAAAA,KAAK,EAAE,MAAM;AACT,YAAI1B,EAAJ;;AACA,SAACA,EAAE,GAAG,KAAKjB,mBAAX,MAAoC,IAApC,IAA4CiB,EAAE,KAAK,KAAK,CAAxD,GAA4D,KAAK,CAAjE,GAAqEA,EAAE,CAACS,SAAH,CAAapD,MAAM,CAACqD,MAAP,CAAciB,aAA3B,EAA0C;AAAEC,UAAAA,OAAO,EAAE,sBAAX;AAAmCtG,UAAAA,KAAK,EAAE;AAA1C,SAA1C,CAArE;AACH;AATU,KAJQ,CAAvB;AAeA,SAAKgD,aAAL,CAAmBc,GAAnB,CAAuB,KAAKH,UAAL,CAAgB2B,cAAhB,CAClBtB,IADkB,CACbpC,WAAW,CAACqC,MAAZ,CAAmB3D,CAAC,IAAIA,CAAC,CAACiF,QAAF,IAAcjF,CAAC,CAACiF,QAAF,CAAWqB,eAAX,KAA+BlH,SAArE,CADa,EAElBsE,IAFkB,CAEbpC,WAAW,CAACkE,QAAZ,CAAqBxF,CAAC,IAAI2B,SAAS,CAAC8D,OAAV,CAAkBzF,CAAC,CAACiF,QAAF,CAAWqB,eAA7B,EAA8C,KAAKxD,QAAL,CAAc4C,MAA5D,CAA1B,CAFa,EAGlB7B,SAHkB,CAGR;AACXC,MAAAA,IAAI,EAAEyC,eAAe,IAAI;AACrB,YAAI,KAAKlE,gBAAT,EAA2B;AACvB,eAAKA,gBAAL,CAAsB,CAACkE,eAAD,CAAtB;AACH;;AACD,YAAIrF,eAAe,CAACsF,yBAAhB,CAA0CC,IAA1C,GAAiD,CAArD,EAAwD;AACpD;AACA;AACA;AACAC,UAAAA,KAAK,CAACC,IAAN,CAAWzF,eAAe,CAACsF,yBAAhB,CAA0CI,MAA1C,EAAX,EAA+DC,OAA/D,CAAuEtD,EAAE,IAAI;AACzE,kBAAMyC,OAAO,GAAG9D,qBAAqB,CAAC4E,mBAAtB,CAA0C;AACtDvD,cAAAA,EADsD;AAEtDwD,cAAAA,QAAQ,EAAE9E,cAAc,CAAC+E,+BAAf,CAA+C,CACrDT,eADqD,CAA/C;AAF4C,aAA1C,CAAhB;AAMA,iBAAKU,cAAL,CAAoBnI,MAAM,CAACoI,MAAP,CAAcpI,MAAM,CAACoI,MAAP,CAAc,EAAd,EAAkBlB,OAAlB,CAAd,EAA0C;AAAEzC,cAAAA;AAAF,aAA1C,CAApB;AACH,WARD;AASArC,UAAAA,eAAe,CAACsF,yBAAhB,CAA0CW,KAA1C;AACH;AACJ,OApBU;AAqBXrB,MAAAA,KAAK,EAAE,MAAM;AACT,YAAI1B,EAAJ;;AACA,SAACA,EAAE,GAAG,KAAKjB,mBAAX,MAAoC,IAApC,IAA4CiB,EAAE,KAAK,KAAK,CAAxD,GAA4D,KAAK,CAAjE,GAAqEA,EAAE,CAACS,SAAH,CAAapD,MAAM,CAACqD,MAAP,CAAciB,aAA3B,EAA0C;AAAEC,UAAAA,OAAO,EAAE,sBAAX;AAAmCtG,UAAAA,KAAK,EAAE;AAA1C,SAA1C,CAArE;AACH;AAxBU,KAHQ,CAAvB;AA6BA,SAAK0H,EAAL,GAAUhF,OAAO,CAACiF,uBAAR,CAAgC;AACtCzE,MAAAA,aAAa,EAAER,OAAO,CAACQ,aADe;AAEtC0E,MAAAA,OAAO,EAAElF,OAAO,CAACkF,OAFqB;AAGtCC,MAAAA,QAAQ,EAAEnF,OAAO,CAACmF,QAHoB;AAItCC,MAAAA,OAAO,EAAE,KAAK1E,QAJwB;AAKtC2E,MAAAA,UAAU,EAAE,KAAKpE,UAAL,CAAgBoE;AALU,KAAhC,CAAV;AAOA,SAAKpE,UAAL,CAAgBqE,OAAhB;AACH;;AACDC,EAAAA,QAAQ,GAAG;AACP,SAAKP,EAAL,CAAQQ,MAAR;AACH;;AACDtC,EAAAA,cAAc,GAAG;AACb,SAAKjC,UAAL,CACKwE,kBADL,CACwB,aADxB,EACuC,GADvC,EAEKnE,IAFL,CAEUpC,WAAW,CAACwG,OAAZ,CAAoB,IAApB,CAFV,EAEqCxG,WAAW,CAACyG,UAAZ,CAAuBC,CAAC,IAAI3G,MAAM,CAAC4G,EAAP,CAAU,IAAV,CAA5B,CAFrC,EAGKpE,SAHL,CAGemE,CAAC,IAAI;AAChB,UAAI5D,EAAJ,EAAQ8D,EAAR;;AACA,UAAI;AACA,aAAKxF,aAAL,CAAmByF,WAAnB;AACH,OAFD,CAGA,OAAOC,GAAP,EAAY;AACR,SAAChE,EAAE,GAAG,KAAKjB,mBAAX,MAAoC,IAApC,IAA4CiB,EAAE,KAAK,KAAK,CAAxD,GAA4D,KAAK,CAAjE,GAAqEA,EAAE,CAACS,SAAH,CAAapD,MAAM,CAACqD,MAAP,CAAciB,aAA3B,EAA0C;AAC3GC,UAAAA,OAAO,EAAE;AADkG,SAA1C,CAArE;AAGH;;AACD,OAACkC,EAAE,GAAG,KAAK/E,mBAAX,MAAoC,IAApC,IAA4C+E,EAAE,KAAK,KAAK,CAAxD,GAA4D,KAAK,CAAjE,GAAqEA,EAAE,CAACrD,SAAH,CAAapD,MAAM,CAACqD,MAAP,CAAcuD,oBAA3B,EAAiD;AAClHC,QAAAA,MAAM,EAAE,uBAD0G;AAElHC,QAAAA,qBAAqB,EAAE,gBAF2F;AAGlH5D,QAAAA,aAAa,EAAE/C,SAAS,CAACmB,OAAV,CAAkB6B,IAAlB,CAAuB,KAAK9B,QAAL,CAAcS,EAArC;AAHmG,OAAjD,CAArE;AAKA,WAAKF,UAAL,CAAgBmF,OAAhB;AACA,WAAK3F,OAAL,CAAasE,KAAb;AACA,WAAKC,EAAL,CAAQqB,QAAR;AACH,KArBD,EAqBGL,GAAG,IAAI;AACN,UAAIhE,EAAJ;;AACA,OAACA,EAAE,GAAG,KAAKjB,mBAAX,MAAoC,IAApC,IAA4CiB,EAAE,KAAK,KAAK,CAAxD,GAA4D,KAAK,CAAjE,GAAqEA,EAAE,CAACS,SAAH,CAAapD,MAAM,CAACqD,MAAP,CAAc4D,OAA3B,EAAoC;AACrGJ,QAAAA,MAAM,EAAE,uBAD6F;AAErGtC,QAAAA,OAAO,EAAG,iCAAgCoC,GAAI,EAFuD;AAGrGzD,QAAAA,aAAa,EAAE/C,SAAS,CAACmB,OAAV,CAAkB6B,IAAlB,CAAuB,KAAK9B,QAAL,CAAcS,EAArC;AAHsF,OAApC,CAArE;AAKH,KA5BD;AA6BH;;AACDoF,EAAAA,UAAU,CAACnG,OAAD,EAAUC,UAAV,EAAsB;AAC5B,SAAKD,OAAL,GAAeA,OAAf;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACH;;AACDmG,EAAAA,cAAc,CAAC9I,GAAD,EAAM;AAChB,WAAO,KAAK+C,OAAL,CAAa0B,OAAb,CAAqBzE,GAArB,CAAP;AACH;;AACU,MAAP0H,OAAO,GAAG;AACV,WAAO,KAAK1E,QAAZ;AACH;;AACD+F,EAAAA,cAAc,CAAC/I,GAAD,EAAMJ,KAAN,EAAa;AACvB,SAAKmD,OAAL,CAAa+C,OAAb,CAAqB9F,GAArB,EAA0BJ,KAA1B;AACH;;AACDoJ,EAAAA,uBAAuB,GAAG;AACtB,WAAO,KAAKC,WAAL,CAAiB;AACpBT,MAAAA,MAAM,EAAExG,YAAY,CAACkH,UAAb,CAAwBF,uBADZ;AAEpBG,MAAAA,MAAM,EAAE;AACJzG,QAAAA,OAAO,EAAE,KAAKA,OADV;AAEJC,QAAAA,UAAU,EAAE,KAAKA,UAAL,IAAmB;AAF3B;AAFY,KAAjB,CAAP;AAOH;;AACDyG,EAAAA,mBAAmB,CAAClD,OAAD,EAAUmD,OAAV,EAAmBC,SAAnB,EAA8BC,aAA9B,EAA6C;AAC5D,WAAO,KAAKN,WAAL,CAAiB;AACpBT,MAAAA,MAAM,EAAExG,YAAY,CAACkH,UAAb,CAAwBE,mBADZ;AAEpBD,MAAAA,MAAM,EAAE;AACJjD,QAAAA,OAAO,EAAEtE,MAAM,CAAC4H,mBAAP,CAA2BtD,OAA3B,EAAoC,IAApC,CADL;AAEJmD,QAAAA,OAFI;AAGJC,QAAAA,SAHI;AAIJC,QAAAA,aAAa,EAAEA,aAAa,IAAI;AAJ5B;AAFY,KAAjB,CAAP;AASH;;AACDE,EAAAA,gCAAgC,CAACvD,OAAD,EAAUwD,SAAV,EAAqBJ,SAArB,EAAgC;AAC5D,WAAO,KAAKL,WAAL,CAAiB;AACpBT,MAAAA,MAAM,EAAExG,YAAY,CAACkH,UAAb,CAAwBO,gCADZ;AAEpBN,MAAAA,MAAM,EAAE;AACJjD,QAAAA,OAAO,EAAEtE,MAAM,CAAC4H,mBAAP,CAA2BtD,OAA3B,EAAoC,IAApC,CADL;AAEJwD,QAAAA,SAAS,EAAE9H,MAAM,CAAC4H,mBAAP,CAA2BE,SAA3B,EAAsC,IAAtC,CAFP;AAGJJ,QAAAA;AAHI;AAFY,KAAjB,CAAP;AAQH;;AACDK,EAAAA,uBAAuB,CAACR,MAAD,EAAS;AAC5B,WAAO,KAAKF,WAAL,CAAiB;AACpBT,MAAAA,MAAM,EAAExG,YAAY,CAACkH,UAAb,CAAwBS,uBADZ;AAEpBR,MAAAA,MAAM,EAAE;AACJS,QAAAA,WAAW,EAAET,MAAM,CAACS,WADhB;AAEJC,QAAAA,SAAS,EAAEV,MAAM,CAACU,SAFd;AAGJC,QAAAA,QAAQ,EAAElI,MAAM,CAACmI,kBAAP,CAA0BZ,MAAM,CAACW,QAAjC,CAHN;AAIJE,QAAAA,IAAI,EAAEpI,MAAM,CAAC4H,mBAAP,CAA2BL,MAAM,CAACa,IAAlC,EAAwC,IAAxC,CAJF;AAKJC,QAAAA,KAAK,EAAEd,MAAM,CAACc,KALV;AAMJC,QAAAA,aAAa,EAAEf,MAAM,CAACe,aAAP,GACTtI,MAAM,CAACmI,kBAAP,CAA0BZ,MAAM,CAACe,aAAjC,CADS,GAET,IARF;AASJC,QAAAA,YAAY,EAAEhB,MAAM,CAACe,aAAP,GACRtI,MAAM,CAACmI,kBAAP,CAA0BZ,MAAM,CAACe,aAAjC,CADQ,GAER,IAXF;AAYJE,QAAAA,oBAAoB,EAAEjB,MAAM,CAACe,aAAP,GAChBtI,MAAM,CAACmI,kBAAP,CAA0BZ,MAAM,CAACe,aAAjC,CADgB,GAEhB,IAdF;AAeJG,QAAAA,QAAQ,EAAElB,MAAM,CAACkB,QAAP,GAAkBzI,MAAM,CAACmI,kBAAP,CAA0BZ,MAAM,CAACkB,QAAjC,CAAlB,GAA+D,IAfrE;AAgBJhE,QAAAA,OAAO,EAAE8C,MAAM,CAAC9C,OAhBZ;AAiBJiE,QAAAA,YAAY,EAAE;AAjBV;AAFY,KAAjB,CAAP;AAsBH;;AACDC,EAAAA,gCAAgC,CAACpB,MAAD,EAAS;AACrC,WAAO,KAAKF,WAAL,CAAiB;AACpBT,MAAAA,MAAM,EAAExG,YAAY,CAACkH,UAAb,CAAwBS,uBADZ;AAEpBR,MAAAA,MAAM,EAAE;AACJS,QAAAA,WAAW,EAAET,MAAM,CAACS,WADhB;AAEJC,QAAAA,SAAS,EAAEV,MAAM,CAACU,SAFd;AAGJC,QAAAA,QAAQ,EAAElI,MAAM,CAACmI,kBAAP,CAA0BZ,MAAM,CAACW,QAAjC,CAHN;AAIJE,QAAAA,IAAI,EAAEpI,MAAM,CAAC4H,mBAAP,CAA2BL,MAAM,CAACa,IAAlC,EAAwC,IAAxC,CAJF;AAKJC,QAAAA,KAAK,EAAEd,MAAM,CAACc,KALV;AAMJC,QAAAA,aAAa,EAAEf,MAAM,CAACe,aAAP,GACTtI,MAAM,CAACmI,kBAAP,CAA0BZ,MAAM,CAACe,aAAjC,CADS,GAET,IARF;AASJC,QAAAA,YAAY,EAAEhB,MAAM,CAACgB,YAAP,GACRvI,MAAM,CAACmI,kBAAP,CAA0BZ,MAAM,CAACgB,YAAjC,CADQ,GAER,IAXF;AAYJC,QAAAA,oBAAoB,EAAEjB,MAAM,CAACiB,oBAAP,GAChBxI,MAAM,CAACmI,kBAAP,CAA0BZ,MAAM,CAACiB,oBAAjC,CADgB,GAEhB,IAdF;AAeJC,QAAAA,QAAQ,EAAElB,MAAM,CAACkB,QAAP,GAAkBzI,MAAM,CAACmI,kBAAP,CAA0BZ,MAAM,CAACkB,QAAjC,CAAlB,GAA+D,IAfrE;AAgBJhE,QAAAA,OAAO,EAAE8C,MAAM,CAAC9C,OAhBZ;AAiBJiE,QAAAA,YAAY,EAAE;AAjBV;AAFY,KAAjB,CAAP;AAsBH;;AACDE,EAAAA,yBAAyB,CAACC,iBAAD,EAAoBpE,OAApB,EAA6B;AAClD,WAAO,KAAK4C,WAAL,CAAiB;AACpBT,MAAAA,MAAM,EAAExG,YAAY,CAACkH,UAAb,CAAwBsB,yBADZ;AAEpBrB,MAAAA,MAAM,EAAE;AACJsB,QAAAA,iBAAiB,EAAE7I,MAAM,CAAC4H,mBAAP,CAA2BiB,iBAA3B,EAA8C,IAA9C,CADf;AAEJpE,QAAAA;AAFI;AAFY,KAAjB,CAAP;AAOH;;AACDqE,EAAAA,UAAU,CAACC,MAAD,EAAS;AACf,WAAO,KAAK1B,WAAL,CAAiB;AACpBT,MAAAA,MAAM,EAAExG,YAAY,CAACkH,UAAb,CAAwBwB,UADZ;AAEpBvB,MAAAA,MAAM,EAAE;AAAEwB,QAAAA;AAAF;AAFY,KAAjB,CAAP;AAIH;;AACDC,EAAAA,gBAAgB,CAACZ,IAAD,EAAO;AACnB,WAAO,KAAKf,WAAL,CAAiB;AACpBT,MAAAA,MAAM,EAAExG,YAAY,CAACkH,UAAb,CAAwB2B,SADZ;AAEpB1B,MAAAA,MAAM,EAAE;AAAEa,QAAAA;AAAF;AAFY,KAAjB,CAAP;AAIH;;AACDc,EAAAA,gBAAgB,CAACzE,OAAD,EAAU0E,iBAAV,EAA6BC,SAA7B,EAAwCC,QAAxC,EAAkDC,cAAlD,EAAkE;AAC9E,WAAO,KAAKjC,WAAL,CAAiB;AACpBT,MAAAA,MAAM,EAAExG,YAAY,CAACkH,UAAb,CAAwB4B,gBADZ;AAEpB3B,MAAAA,MAAM,EAAE;AACJ9C,QAAAA,OADI;AAEJ0E,QAAAA,iBAFI;AAGJC,QAAAA,SAHI;AAIJC,QAAAA,QAJI;AAKJC,QAAAA;AALI;AAFY,KAAjB,CAAP;AAUH;;AACDjC,EAAAA,WAAW,CAACkC,OAAD,EAAU;AACjB,QAAIC,gBAAgB,GAAG,IAAvB;AACA,UAAM3H,EAAE,GAAG7B,MAAM,CAACyJ,cAAP,CAAsB,CAAtB,CAAX;;AACA,UAAMC,MAAM,GAAG,MAAM;AACjB,WAAKC,+BAAL,CAAqC9H,EAArC;AACA,WAAK+H,yBAAL,CAA+BpJ,qBAAqB,CAAC4E,mBAAtB,CAA0C;AACrEvD,QAAAA,EADqE;AAErEwD,QAAAA,QAAQ,EAAE9E,cAAc,CAACsJ,aAAf,CAA6BN,OAAO,CAAC3C,MAArC,EAA6C,uBAA7C;AAF2D,OAA1C,CAA/B;AAIA4C,MAAAA,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,KAAK,KAAK,CAAvD,GAA2D,KAAK,CAAhE,GAAoEA,gBAAgB,EAApF;AACH,KAPD;;AAQA,UAAMM,OAAO,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC7C,UAAIvH,EAAJ;;AACA,YAAMwH,iBAAiB,GAAGX,OAAO,CAAC3C,MAAR,KAAmBxG,YAAY,CAACkH,UAAb,CAAwBF,uBAArE;AACA,YAAM+C,qBAAqB,GAAGZ,OAAO,CAAC3C,MAAR,KAAmBxG,YAAY,CAACkH,UAAb,CAAwB8C,mBAAzE;;AACA,UAAIF,iBAAJ,EAAuB;AACnB,cAAMG,SAAS,GAAG,CAAC,CAAC3H,EAAE,GAAG4H,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACC,SAA7D,MAA4E,IAA5E,IAAoF7H,EAAE,KAAK,KAAK,CAAhG,GAAoG,KAAK,CAAzG,GAA6GA,EAAE,CAAC2H,SAAjH,KAA+H,IAAjJ;;AACA,YAAIA,SAAS,IACT,iEAAiEG,IAAjE,CAAsEH,SAAtE,CADJ,EACsF;AAClFC,UAAAA,MAAM,CAACG,QAAP,CAAgBC,IAAhB,GAAwB,0CAAyCJ,MAAM,CAACG,QAAP,CAAgBC,IAAK,EAAtF;AACA;AACH;;AACD,YAAI,KAAKhF,EAAL,CAAQiF,sBAAR,EAAJ,EAAsC;AAClC,gBAAMC,UAAU,GAAIC,QAAD,IAAc;AAC7B,iBAAKjB,yBAAL,CAA+BpJ,qBAAqB,CAAC4E,mBAAtB,CAA0C;AACrEvD,cAAAA,EADqE;AAErEwD,cAAAA,QAAQ,EAAE9E,cAAc,CAAC+E,+BAAf,CAA+CuF,QAA/C;AAF2D,aAA1C,CAA/B;AAIH,WALD;;AAMA,eAAKnF,EAAL,CAAQ0B,uBAAR,CAAgC;AAC5B0D,YAAAA,QAAQ,EAAEpB,MADkB;AAE5BkB,YAAAA;AAF4B,WAAhC;AAIH,SAXD,MAYK;AACD,eAAKlF,EAAL,CAAQ0B,uBAAR,CAAgC;AAC5B0D,YAAAA,QAAQ,EAAEpB;AADkB,WAAhC;AAGH;;AACDlK,QAAAA,eAAe,CAACsF,yBAAhB,CAA0ChD,GAA1C,CAA8CD,EAA9C;AACH,OAzBD,MA0BK,IAAI0H,OAAO,CAAC3C,MAAR,KAAmBxG,YAAY,CAACkH,UAAb,CAAwB8C,mBAA3C,IACLb,OAAO,CAAC3C,MAAR,KAAmBxG,YAAY,CAACkH,UAAb,CAAwB4B,gBAD1C,EAC4D;AAC7D,cAAMQ,MAAM,GAAG,MAAM;AACjB,eAAKE,yBAAL,CAA+BpJ,qBAAqB,CAAC4E,mBAAtB,CAA0C;AACrEvD,YAAAA,EADqE;AAErEwD,YAAAA,QAAQ,EAAE9E,cAAc,CAACwK,2BAAf,CAA2C,KAA3C;AAF2D,WAA1C,CAA/B;AAIH,SALD;;AAMA,cAAMC,OAAO,GAAG,MAAM;AAClB,eAAKpB,yBAAL,CAA+BpJ,qBAAqB,CAAC4E,mBAAtB,CAA0C;AACrEvD,YAAAA,EADqE;AAErEwD,YAAAA,QAAQ,EAAE9E,cAAc,CAACwK,2BAAf,CAA2C,IAA3C;AAF2D,WAA1C,CAA/B;AAIH,SALD;;AAMA,aAAKrF,EAAL,CAAQ0E,mBAAR,CAA4B;AACxBU,UAAAA,QAAQ,EAAEpB,MADc;AAExBuB,UAAAA,SAAS,EAAED,OAFa;AAGxBvG,UAAAA,OAAO,EAAE8E,OAAO,CAAChC,MAAR,CAAe9C;AAHA,SAA5B;;AAKA,YAAI,CAAC,KAAKiB,EAAL,CAAQwF,yBAAR,EAAL,EAA0C;AACtC1B,UAAAA,gBAAgB,GAAG,KAAK9D,EAAL,CAAQyF,cAAR,CAAuB;AACtCL,YAAAA,QAAQ,EAAEpB,MAD4B;AAEtC0B,YAAAA,iBAAiB,EAAE,KAAKxH;AAFc,WAAvB,CAAnB;AAIH;AACJ,OAzBI,MA0BA,IAAI,KAAK8B,EAAL,CAAQ2F,YAAR,EAAJ,EAA4B;AAC7B,cAAMP,QAAQ,GAAG,MAAM;AACnB,eAAKlB,yBAAL,CAA+BpJ,qBAAqB,CAAC4E,mBAAtB,CAA0C;AACrEvD,YAAAA,EADqE;AAErEwD,YAAAA,QAAQ,EAAE9E,cAAc,CAACsJ,aAAf,CAA6BN,OAAO,CAAC3C,MAArC,EAA6C,uBAA7C;AAF2D,WAA1C,CAA/B;AAIH,SALD;;AAMA,cAAM0E,SAAS,GAAIjG,QAAD,IAAc;AAC5B,eAAKuE,yBAAL,CAA+BpJ,qBAAqB,CAAC4E,mBAAtB,CAA0C;AACrEvD,YAAAA,EADqE;AAErEwD,YAAAA,QAAQ,EAAEA;AAF2D,WAA1C,CAA/B;AAIH,SALD;;AAMA,gBAAQkE,OAAO,CAAC3C,MAAhB;AACI,eAAKxG,YAAY,CAACkH,UAAb,CAAwBE,mBAA7B;AACI,iBAAK9B,EAAL,CAAQ8B,mBAAR,CAA4B;AACxB+B,cAAAA,OAAO,EAAEA,OADe;AAExB+B,cAAAA,SAFwB;AAGxBR,cAAAA;AAHwB,aAA5B;AAKA;;AACJ,eAAK1K,YAAY,CAACkH,UAAb,CAAwBS,uBAA7B;AACI,iBAAKrC,EAAL,CAAQqC,uBAAR,CAAgC;AAC5BwB,cAAAA,OAAO,EAAEA,OADmB;AAE5B+B,cAAAA,SAF4B;AAG5BR,cAAAA;AAH4B,aAAhC;AAKA;;AACJ,eAAK1K,YAAY,CAACkH,UAAb,CAAwBsB,yBAA7B;AACI,iBAAKlD,EAAL,CAAQkD,yBAAR,CAAkC;AAC9BW,cAAAA,OAAO,EAAEA,OADqB;AAE9B+B,cAAAA,SAF8B;AAG9BR,cAAAA;AAH8B,aAAlC;AAKA;;AACJ,eAAK1K,YAAY,CAACkH,UAAb,CAAwBO,gCAA7B;AACI,iBAAKnC,EAAL,CAAQmC,gCAAR,CAAyC;AACrC0B,cAAAA,OAAO,EAAEA,OAD4B;AAErC+B,cAAAA;AAFqC,aAAzC;AAIA;;AACJ;AACIR,YAAAA,QAAQ;AACR;AA9BR;AAgCH,OA7CI,MA8CA;AACDtB,QAAAA,gBAAgB,GAAG,KAAK9D,EAAL,CAAQyF,cAAR,CAAuB;AACtCL,UAAAA,QAAQ,EAAEpB,MAD4B;AAEtC0B,UAAAA,iBAAiB,EAAE,KAAKxH;AAFc,SAAvB,CAAnB;AAIH;;AACD,WAAKpC,iBAAL,CAAuB+J,SAAvB,CAAiCC,GAAjC,CAAqC3J,EAArC,EAAyCwD,QAAQ,IAAI;AACjD,aAAKK,EAAL,CAAQ+F,2BAAR;AACAjC,QAAAA,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,KAAK,KAAK,CAAvD,GAA2D,KAAK,CAAhE,GAAoEA,gBAAgB,EAApF;;AACA,YAAInE,QAAQ,CAACqG,YAAb,EAA2B;AACvB,iBAAOzB,MAAM,CAAC,IAAI0B,KAAJ,CAAUtG,QAAQ,CAACqG,YAAnB,CAAD,CAAb;AACH;;AACD1B,QAAAA,OAAO,CAAC3E,QAAD,CAAP;AACH,OAPD;;AAQA,UAAK6E,iBAAiB,IAAI,KAAKxE,EAAL,CAAQiF,sBAAR,EAAtB,IACCR,qBAAqB,IAAI,KAAKzE,EAAL,CAAQwF,yBAAR,EAD1B,IAEA,KAAKxF,EAAL,CAAQ2F,YAAR,EAFJ,EAE4B;AACxB;AACH;;AACD,WAAKO,uBAAL,CAA6B/J,EAA7B,EAAiC0H,OAAjC;AACH,KA1He,CAAhB;AA2HA,WAAO;AAAEO,MAAAA,OAAF;AAAWJ,MAAAA;AAAX,KAAP;AACH;;AACDmC,EAAAA,kBAAkB,CAACC,QAAD,EAAW;AACzB,SAAKpG,EAAL,CAAQmG,kBAAR,CAA2BC,QAA3B;AACH;;AACDC,EAAAA,mBAAmB,CAACpL,gBAAD,EAAmB;AAClC,SAAKA,gBAAL,GAAwBA,gBAAxB;AACH;;AACDqL,EAAAA,kBAAkB,CAACpL,eAAD,EAAkB;AAChC,SAAKA,eAAL,GAAuBA,eAAvB;AACH;;AACDqL,EAAAA,qBAAqB,CAACpL,kBAAD,EAAqB;AACtC,SAAKA,kBAAL,GAA0BA,kBAA1B;AACH;;AACD+K,EAAAA,uBAAuB,CAAC/J,EAAD,EAAK0H,OAAL,EAAc;AACjC,UAAMjF,OAAO,GAAGhE,oBAAoB,CAAC4L,kBAArB,CAAwC;AAAErK,MAAAA,EAAF;AAAM0H,MAAAA;AAAN,KAAxC,CAAhB;AACA,SAAKvI,aAAL,CAAmBc,GAAnB,CAAuB,KAAKqK,YAAL,CAAkB,aAAlB,EAAiC7H,OAAjC,EAA0C,IAA1C,EAAgDnC,SAAhD,CAA0D;AAC7EiC,MAAAA,KAAK,EAAEsC,GAAG,IAAI;AACV,aAAKkD,yBAAL,CAA+BpJ,qBAAqB,CAAC4E,mBAAtB,CAA0C;AACrEvD,UAAAA,EAAE,EAAEyC,OAAO,CAACzC,EADyD;AAErEwD,UAAAA,QAAQ,EAAE;AACNuB,YAAAA,MAAM,EAAEtC,OAAO,CAACiF,OAAR,CAAgB3C,MADlB;AAEN8E,YAAAA,YAAY,EAAEhF,GAAG,CAACpC;AAFZ;AAF2D,SAA1C,CAA/B;AAOH;AAT4E,KAA1D,CAAvB;AAWH;;AACDqF,EAAAA,+BAA+B,CAAC9H,EAAD,EAAK;AAChC,UAAMyC,OAAO,GAAGjE,4BAA4B,CAAC+L,0BAA7B,CAAwDvK,EAAxD,CAAhB;AACA,SAAKb,aAAL,CAAmBc,GAAnB,CAAuB,KAAKqK,YAAL,CAAkB,qBAAlB,EAAyC7H,OAAzC,EAAkD,KAAlD,EAAyDnC,SAAzD,EAAvB;AACH;;AACDgK,EAAAA,YAAY,CAACjK,KAAD,EAAQoC,OAAR,EAAiB+H,WAAjB,EAA8B;AACtC,UAAMrI,MAAM,GAAG,KAAK8B,OAAL,CAAa9B,MAA5B;AACA,WAAO,IAAIrE,MAAM,CAAC2M,UAAX,CAAsBC,UAAU,IAAI;AACvCtM,MAAAA,SAAS,CACJuM,OADL,CACaC,IAAI,CAACC,SAAL,CAAetP,MAAM,CAACoI,MAAP,CAAcpI,MAAM,CAACoI,MAAP,CAAc,EAAd,EAAkBlB,OAAlB,CAAd,EAA0C;AAAEqI,QAAAA,MAAM,EAAElC,QAAQ,CAACkC;AAAnB,OAA1C,CAAf,CADb,EACqG3I,MADrG,EAEK4I,IAFL,CAEWC,SAAD,IAAe;AACrBN,QAAAA,UAAU,CAACnK,IAAX,CAAgByK,SAAhB;AACAN,QAAAA,UAAU,CAACO,QAAX;AACH,OALD;AAMH,KAPM,EAOJ9K,IAPI,CAOCpC,WAAW,CAACkE,QAAZ,CAAsB+I,SAAD,IAAe;AACxC,aAAO,KAAKlL,UAAL,CAAgBwK,YAAhB,CAA6BjK,KAA7B,EAAoC2K,SAApC,EAA+CR,WAA/C,CAAP;AACH,KAFO,CAPD,CAAP;AAUH;;AACDhK,EAAAA,mBAAmB,CAACH,KAAD,EAAQ;AACvB,QAAI;AACA,WAAKlB,aAAL,CAAmBc,GAAnB,CAAuB7B,SAAS,CAC3B8D,OADkB,CACV7B,KAAK,CAACkG,IADI,EACE,KAAKtC,OAAL,CAAa9B,MADf,EAElBhC,IAFkB,CAEbpC,WAAW,CAACmN,GAAZ,CAAgBzO,CAAC,IAAImO,IAAI,CAACO,KAAL,CAAW1O,CAAX,CAArB,CAFa,EAGlB6D,SAHkB,CAGR;AACXC,QAAAA,IAAI,EAAE6K,IAAI,IAAI;AACV,gBAAM3I,OAAO,GAAG9D,qBAAqB,CAAC0M,qBAAtB,CAA4CD,IAA5C,IAAoDA,IAApD,GAA2D,IAA3E;;AACA,cAAI,CAAC3I,OAAL,EAAc;AACV;AACH;;AACD,eAAKsF,yBAAL,CAA+BtF,OAA/B;AACH,SAPU;AAQXF,QAAAA,KAAK,EAAE,MAAM;AACT,cAAI1B,EAAJ;;AACA,WAACA,EAAE,GAAG,KAAKjB,mBAAX,MAAoC,IAApC,IAA4CiB,EAAE,KAAK,KAAK,CAAxD,GAA4D,KAAK,CAAjE,GAAqEA,EAAE,CAACS,SAAH,CAAapD,MAAM,CAACqD,MAAP,CAAciB,aAA3B,EAA0C;AAAEC,YAAAA,OAAO,EAAE,sBAAX;AAAmCtG,YAAAA,KAAK,EAAE;AAA1C,WAA1C,CAArE;AACH;AAXU,OAHQ,CAAvB;AAgBH,KAjBD,CAkBA,OAAO0E,EAAP,EAAW;AACP;AACH;AACJ;;AACDkH,EAAAA,yBAAyB,CAACtF,OAAD,EAAU;AAC/B,UAAM;AAAEe,MAAAA;AAAF,QAAef,OAArB;;AACA,QAAI/D,cAAc,CAAC4M,iCAAf,CAAiD9H,QAAjD,CAAJ,EAAgE;AAC5DL,MAAAA,KAAK,CAACC,IAAN,CAAWzF,eAAe,CAACsF,yBAAhB,CAA0CI,MAA1C,EAAX,EAA+DC,OAA/D,CAAuEtD,EAAE,IAAI,KAAK0D,cAAL,CAAoBnI,MAAM,CAACoI,MAAP,CAAcpI,MAAM,CAACoI,MAAP,CAAc,EAAd,EAAkBlB,OAAlB,CAAd,EAA0C;AAAEzC,QAAAA;AAAF,OAA1C,CAApB,CAA7E;AACArC,MAAAA,eAAe,CAACsF,yBAAhB,CAA0CW,KAA1C;AACA;AACH;;AACD,SAAKF,cAAL,CAAoBjB,OAApB;AACH;;AACDiB,EAAAA,cAAc,CAACjB,OAAD,EAAU;AACpB,UAAM8I,QAAQ,GAAG,KAAK5L,iBAAL,CAAuB+J,SAAvB,CAAiC1N,GAAjC,CAAqCyG,OAAO,CAACzC,EAA7C,CAAjB;;AACA,QAAIuL,QAAJ,EAAc;AACVA,MAAAA,QAAQ,CAAC9I,OAAO,CAACe,QAAT,CAAR;AACA,WAAK7D,iBAAL,CAAuB+J,SAAvB,CAAiC8B,MAAjC,CAAwC/I,OAAO,CAACzC,EAAhD;AACH;AACJ;;AACDuI,EAAAA,mBAAmB,CAAC3F,OAAD,EAAU;AACzB,WAAO,KAAK4C,WAAL,CAAiB;AACpBT,MAAAA,MAAM,EAAExG,YAAY,CAACkH,UAAb,CAAwB8C,mBADZ;AAEpB7C,MAAAA,MAAM,EAAE;AACJ9C,QAAAA;AADI;AAFY,KAAjB,CAAP;AAMH;;AA7fiB;;AA+ftBjF,eAAe,CAACsF,yBAAhB,GAA4C,IAAIwI,GAAJ,EAA5C;;AACArP,UAAU,CAAC,CACPwB,gBAAgB,CAAC8N,OADV,CAAD,EAEP/N,eAAe,CAACL,SAFT,EAEoB,gBAFpB,EAEsC,IAFtC,CAAV;;AAGAlB,UAAU,CAAC,CACPwB,gBAAgB,CAAC8N,OADV,CAAD,EAEP/N,eAAe,CAACL,SAFT,EAEoB,qBAFpB,EAE2C,IAF3C,CAAV;;AAGAI,OAAO,CAACC,eAAR,GAA0BA,eAA1B","sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2020 WalletLink.org <https://www.walletlink.org/>\n// Copyright (c) 2018-2020 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletLinkRelay = void 0;\nconst bind_decorator_1 = __importDefault(require(\"bind-decorator\"));\nconst rxjs_1 = require(\"rxjs\");\nconst operators_1 = require(\"rxjs/operators\");\nconst WalletLinkAnalytics_1 = require(\"../connection/WalletLinkAnalytics\");\nconst WalletLinkConnection_1 = require(\"../connection/WalletLinkConnection\");\nconst init_1 = require(\"../init\");\nconst util_1 = require(\"../util\");\nconst aes256gcm = __importStar(require(\"./aes256gcm\"));\nconst Session_1 = require(\"./Session\");\nconst WalletLinkRelayAbstract_1 = require(\"./WalletLinkRelayAbstract\");\nconst Web3Method_1 = require(\"./Web3Method\");\nconst Web3RequestCanceledMessage_1 = require(\"./Web3RequestCanceledMessage\");\nconst Web3RequestMessage_1 = require(\"./Web3RequestMessage\");\nconst Web3Response_1 = require(\"./Web3Response\");\nconst Web3ResponseMessage_1 = require(\"./Web3ResponseMessage\");\nclass WalletLinkRelay {\n    constructor(options) {\n        this.accountsCallback = null;\n        this.chainIdCallback = null;\n        this.jsonRpcUrlCallback = null;\n        this.appName = \"\";\n        this.appLogoUrl = null;\n        this.subscriptions = new rxjs_1.Subscription();\n        this.walletLinkUrl = options.walletLinkUrl;\n        this.storage = options.storage;\n        this._session =\n            Session_1.Session.load(options.storage) || new Session_1.Session(options.storage).save();\n        this.relayEventManager = options.relayEventManager;\n        this.walletLinkAnalytics = options.walletLinkAnalytics\n            ? options.walletLinkAnalytics\n            : new WalletLinkAnalytics_1.WalletLinkAnalytics();\n        this.connection = new WalletLinkConnection_1.WalletLinkConnection(this._session.id, this._session.key, this.walletLinkUrl, this.walletLinkAnalytics);\n        this.subscriptions.add(this.connection.incomingEvent$\n            .pipe(operators_1.filter(m => m.event === \"Web3Response\"))\n            .subscribe({ next: this.handleIncomingEvent }));\n        this.subscriptions.add(this.connection.linked$\n            .pipe(operators_1.skip(1), operators_1.tap((linked) => {\n            var _a;\n            this.isLinked = linked;\n            const cachedAddresses = this.storage.getItem(WalletLinkRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY);\n            if (cachedAddresses) {\n                const addresses = cachedAddresses.split(\" \");\n                if (addresses[0] !== \"\" && !linked) {\n                    const sessionIdHash = Session_1.Session.hash(this._session.id);\n                    (_a = this.walletLinkAnalytics) === null || _a === void 0 ? void 0 : _a.sendEvent(init_1.EVENTS.UNLINKED_ERROR_STATE, { sessionIdHash });\n                }\n            }\n        }))\n            .subscribe());\n        // if session is marked destroyed, reset and reload\n        this.subscriptions.add(this.connection.sessionConfig$\n            .pipe(operators_1.filter(c => !!c.metadata && c.metadata.__destroyed === \"1\"))\n            .subscribe(() => {\n            var _a;\n            const alreadyDestroyed = this.connection.isDestroyed;\n            (_a = this.walletLinkAnalytics) === null || _a === void 0 ? void 0 : _a.sendEvent(init_1.EVENTS.METADATA_DESTROYED, {\n                alreadyDestroyed,\n                sessionIdHash: Session_1.Session.hash(this._session.id)\n            });\n            return this.resetAndReload();\n        }));\n        this.subscriptions.add(this.connection.sessionConfig$\n            .pipe(operators_1.filter(c => c.metadata && c.metadata.WalletUsername !== undefined))\n            .pipe(operators_1.mergeMap(c => aes256gcm.decrypt(c.metadata.WalletUsername, this._session.secret)))\n            .subscribe({\n            next: walletUsername => {\n                this.storage.setItem(WalletLinkRelayAbstract_1.WALLET_USER_NAME_KEY, walletUsername);\n            },\n            error: () => {\n                var _a;\n                (_a = this.walletLinkAnalytics) === null || _a === void 0 ? void 0 : _a.sendEvent(init_1.EVENTS.GENERAL_ERROR, { message: 'Had error decrypting', value: 'username' });\n            }\n        }));\n        this.subscriptions.add(this.connection.sessionConfig$\n            .pipe(operators_1.filter(c => c.metadata && c.metadata.ChainId !== undefined))\n            .pipe(operators_1.mergeMap(c => aes256gcm.decrypt(c.metadata.ChainId, this._session.secret)))\n            .pipe(operators_1.distinctUntilChanged())\n            .subscribe({\n            next: chainId => {\n                if (this.chainIdCallback) {\n                    this.chainIdCallback(chainId);\n                }\n            },\n            error: () => {\n                var _a;\n                (_a = this.walletLinkAnalytics) === null || _a === void 0 ? void 0 : _a.sendEvent(init_1.EVENTS.GENERAL_ERROR, { message: 'Had error decrypting', value: 'chainId' });\n            }\n        }));\n        this.subscriptions.add(this.connection.sessionConfig$\n            .pipe(operators_1.filter(c => c.metadata && c.metadata.JsonRpcUrl !== undefined))\n            .pipe(operators_1.mergeMap(c => aes256gcm.decrypt(c.metadata.JsonRpcUrl, this._session.secret)))\n            .pipe(operators_1.distinctUntilChanged())\n            .subscribe({\n            next: jsonRpcURl => {\n                if (this.jsonRpcUrlCallback) {\n                    this.jsonRpcUrlCallback(jsonRpcURl);\n                }\n            },\n            error: () => {\n                var _a;\n                (_a = this.walletLinkAnalytics) === null || _a === void 0 ? void 0 : _a.sendEvent(init_1.EVENTS.GENERAL_ERROR, { message: 'Had error decrypting', value: 'jsonRpcUrl' });\n            }\n        }));\n        this.subscriptions.add(this.connection.sessionConfig$\n            .pipe(operators_1.filter(c => c.metadata && c.metadata.EthereumAddress !== undefined))\n            .pipe(operators_1.mergeMap(c => aes256gcm.decrypt(c.metadata.EthereumAddress, this._session.secret)))\n            .subscribe({\n            next: selectedAddress => {\n                if (this.accountsCallback) {\n                    this.accountsCallback([selectedAddress]);\n                }\n                if (WalletLinkRelay.accountRequestCallbackIds.size > 0) {\n                    // We get the ethereum address from the metadata.  If for whatever\n                    // reason we don't get a response via an explicit web3 message\n                    // we can still fulfill the eip1102 request.\n                    Array.from(WalletLinkRelay.accountRequestCallbackIds.values()).forEach(id => {\n                        const message = Web3ResponseMessage_1.Web3ResponseMessage({\n                            id,\n                            response: Web3Response_1.RequestEthereumAccountsResponse([\n                                selectedAddress\n                            ])\n                        });\n                        this.invokeCallback(Object.assign(Object.assign({}, message), { id }));\n                    });\n                    WalletLinkRelay.accountRequestCallbackIds.clear();\n                }\n            },\n            error: () => {\n                var _a;\n                (_a = this.walletLinkAnalytics) === null || _a === void 0 ? void 0 : _a.sendEvent(init_1.EVENTS.GENERAL_ERROR, { message: 'Had error decrypting', value: 'selectedAddress' });\n            }\n        }));\n        this.ui = options.walletLinkUIConstructor({\n            walletLinkUrl: options.walletLinkUrl,\n            version: options.version,\n            darkMode: options.darkMode,\n            session: this._session,\n            connected$: this.connection.connected$\n        });\n        this.connection.connect();\n    }\n    attachUI() {\n        this.ui.attach();\n    }\n    resetAndReload() {\n        this.connection\n            .setSessionMetadata(\"__destroyed\", \"1\")\n            .pipe(operators_1.timeout(1000), operators_1.catchError(_ => rxjs_1.of(null)))\n            .subscribe(_ => {\n            var _a, _b;\n            try {\n                this.subscriptions.unsubscribe();\n            }\n            catch (err) {\n                (_a = this.walletLinkAnalytics) === null || _a === void 0 ? void 0 : _a.sendEvent(init_1.EVENTS.GENERAL_ERROR, {\n                    message: \"Had error unsubscribing\"\n                });\n            }\n            (_b = this.walletLinkAnalytics) === null || _b === void 0 ? void 0 : _b.sendEvent(init_1.EVENTS.SESSION_STATE_CHANGE, {\n                method: \"relay::resetAndReload\",\n                sessionMetadataChange: \"__destroyed, 1\",\n                sessionIdHash: Session_1.Session.hash(this._session.id)\n            });\n            this.connection.destroy();\n            this.storage.clear();\n            this.ui.reloadUI();\n        }, err => {\n            var _a;\n            (_a = this.walletLinkAnalytics) === null || _a === void 0 ? void 0 : _a.sendEvent(init_1.EVENTS.FAILURE, {\n                method: \"relay::resetAndReload\",\n                message: `faled to reset and relod with ${err}`,\n                sessionIdHash: Session_1.Session.hash(this._session.id)\n            });\n        });\n    }\n    setAppInfo(appName, appLogoUrl) {\n        this.appName = appName;\n        this.appLogoUrl = appLogoUrl;\n    }\n    getStorageItem(key) {\n        return this.storage.getItem(key);\n    }\n    get session() {\n        return this._session;\n    }\n    setStorageItem(key, value) {\n        this.storage.setItem(key, value);\n    }\n    requestEthereumAccounts() {\n        return this.sendRequest({\n            method: Web3Method_1.Web3Method.requestEthereumAccounts,\n            params: {\n                appName: this.appName,\n                appLogoUrl: this.appLogoUrl || null\n            }\n        });\n    }\n    signEthereumMessage(message, address, addPrefix, typedDataJson) {\n        return this.sendRequest({\n            method: Web3Method_1.Web3Method.signEthereumMessage,\n            params: {\n                message: util_1.hexStringFromBuffer(message, true),\n                address,\n                addPrefix,\n                typedDataJson: typedDataJson || null\n            }\n        });\n    }\n    ethereumAddressFromSignedMessage(message, signature, addPrefix) {\n        return this.sendRequest({\n            method: Web3Method_1.Web3Method.ethereumAddressFromSignedMessage,\n            params: {\n                message: util_1.hexStringFromBuffer(message, true),\n                signature: util_1.hexStringFromBuffer(signature, true),\n                addPrefix\n            }\n        });\n    }\n    signEthereumTransaction(params) {\n        return this.sendRequest({\n            method: Web3Method_1.Web3Method.signEthereumTransaction,\n            params: {\n                fromAddress: params.fromAddress,\n                toAddress: params.toAddress,\n                weiValue: util_1.bigIntStringFromBN(params.weiValue),\n                data: util_1.hexStringFromBuffer(params.data, true),\n                nonce: params.nonce,\n                gasPriceInWei: params.gasPriceInWei\n                    ? util_1.bigIntStringFromBN(params.gasPriceInWei)\n                    : null,\n                maxFeePerGas: params.gasPriceInWei\n                    ? util_1.bigIntStringFromBN(params.gasPriceInWei)\n                    : null,\n                maxPriorityFeePerGas: params.gasPriceInWei\n                    ? util_1.bigIntStringFromBN(params.gasPriceInWei)\n                    : null,\n                gasLimit: params.gasLimit ? util_1.bigIntStringFromBN(params.gasLimit) : null,\n                chainId: params.chainId,\n                shouldSubmit: false\n            }\n        });\n    }\n    signAndSubmitEthereumTransaction(params) {\n        return this.sendRequest({\n            method: Web3Method_1.Web3Method.signEthereumTransaction,\n            params: {\n                fromAddress: params.fromAddress,\n                toAddress: params.toAddress,\n                weiValue: util_1.bigIntStringFromBN(params.weiValue),\n                data: util_1.hexStringFromBuffer(params.data, true),\n                nonce: params.nonce,\n                gasPriceInWei: params.gasPriceInWei\n                    ? util_1.bigIntStringFromBN(params.gasPriceInWei)\n                    : null,\n                maxFeePerGas: params.maxFeePerGas\n                    ? util_1.bigIntStringFromBN(params.maxFeePerGas)\n                    : null,\n                maxPriorityFeePerGas: params.maxPriorityFeePerGas\n                    ? util_1.bigIntStringFromBN(params.maxPriorityFeePerGas)\n                    : null,\n                gasLimit: params.gasLimit ? util_1.bigIntStringFromBN(params.gasLimit) : null,\n                chainId: params.chainId,\n                shouldSubmit: true\n            }\n        });\n    }\n    submitEthereumTransaction(signedTransaction, chainId) {\n        return this.sendRequest({\n            method: Web3Method_1.Web3Method.submitEthereumTransaction,\n            params: {\n                signedTransaction: util_1.hexStringFromBuffer(signedTransaction, true),\n                chainId\n            }\n        });\n    }\n    scanQRCode(regExp) {\n        return this.sendRequest({\n            method: Web3Method_1.Web3Method.scanQRCode,\n            params: { regExp }\n        });\n    }\n    arbitraryRequest(data) {\n        return this.sendRequest({\n            method: Web3Method_1.Web3Method.arbitrary,\n            params: { data }\n        });\n    }\n    addEthereumChain(chainId, blockExplorerUrls, chainName, iconUrls, nativeCurrency) {\n        return this.sendRequest({\n            method: Web3Method_1.Web3Method.addEthereumChain,\n            params: {\n                chainId,\n                blockExplorerUrls,\n                chainName,\n                iconUrls,\n                nativeCurrency\n            }\n        });\n    }\n    sendRequest(request) {\n        let hideSnackbarItem = null;\n        const id = util_1.randomBytesHex(8);\n        const cancel = () => {\n            this.publishWeb3RequestCanceledEvent(id);\n            this.handleWeb3ResponseMessage(Web3ResponseMessage_1.Web3ResponseMessage({\n                id,\n                response: Web3Response_1.ErrorResponse(request.method, \"User rejected request\")\n            }));\n            hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n        };\n        const promise = new Promise((resolve, reject) => {\n            var _a;\n            const isRequestAccounts = request.method === Web3Method_1.Web3Method.requestEthereumAccounts;\n            const isSwitchEthereumChain = request.method === Web3Method_1.Web3Method.switchEthereumChain;\n            if (isRequestAccounts) {\n                const userAgent = ((_a = window === null || window === void 0 ? void 0 : window.navigator) === null || _a === void 0 ? void 0 : _a.userAgent) || null;\n                if (userAgent &&\n                    /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(userAgent)) {\n                    window.location.href = `https://go.cb-w.com/xoXnYwQimhb?cb_url=${window.location.href}`;\n                    return;\n                }\n                if (this.ui.inlineAccountsResponse()) {\n                    const onAccounts = (accounts) => {\n                        this.handleWeb3ResponseMessage(Web3ResponseMessage_1.Web3ResponseMessage({\n                            id,\n                            response: Web3Response_1.RequestEthereumAccountsResponse(accounts)\n                        }));\n                    };\n                    this.ui.requestEthereumAccounts({\n                        onCancel: cancel,\n                        onAccounts\n                    });\n                }\n                else {\n                    this.ui.requestEthereumAccounts({\n                        onCancel: cancel\n                    });\n                }\n                WalletLinkRelay.accountRequestCallbackIds.add(id);\n            }\n            else if (request.method === Web3Method_1.Web3Method.switchEthereumChain ||\n                request.method === Web3Method_1.Web3Method.addEthereumChain) {\n                const cancel = () => {\n                    this.handleWeb3ResponseMessage(Web3ResponseMessage_1.Web3ResponseMessage({\n                        id,\n                        response: Web3Response_1.SwitchEthereumChainResponse(false)\n                    }));\n                };\n                const approve = () => {\n                    this.handleWeb3ResponseMessage(Web3ResponseMessage_1.Web3ResponseMessage({\n                        id,\n                        response: Web3Response_1.SwitchEthereumChainResponse(true)\n                    }));\n                };\n                this.ui.switchEthereumChain({\n                    onCancel: cancel,\n                    onApprove: approve,\n                    chainId: request.params.chainId\n                });\n                if (!this.ui.inlineSwitchEthereumChain()) {\n                    hideSnackbarItem = this.ui.showConnecting({\n                        onCancel: cancel,\n                        onResetConnection: this.resetAndReload\n                    });\n                }\n            }\n            else if (this.ui.isStandalone()) {\n                const onCancel = () => {\n                    this.handleWeb3ResponseMessage(Web3ResponseMessage_1.Web3ResponseMessage({\n                        id,\n                        response: Web3Response_1.ErrorResponse(request.method, \"User rejected request\")\n                    }));\n                };\n                const onSuccess = (response) => {\n                    this.handleWeb3ResponseMessage(Web3ResponseMessage_1.Web3ResponseMessage({\n                        id,\n                        response: response\n                    }));\n                };\n                switch (request.method) {\n                    case Web3Method_1.Web3Method.signEthereumMessage:\n                        this.ui.signEthereumMessage({\n                            request: request,\n                            onSuccess,\n                            onCancel\n                        });\n                        break;\n                    case Web3Method_1.Web3Method.signEthereumTransaction:\n                        this.ui.signEthereumTransaction({\n                            request: request,\n                            onSuccess,\n                            onCancel\n                        });\n                        break;\n                    case Web3Method_1.Web3Method.submitEthereumTransaction:\n                        this.ui.submitEthereumTransaction({\n                            request: request,\n                            onSuccess,\n                            onCancel\n                        });\n                        break;\n                    case Web3Method_1.Web3Method.ethereumAddressFromSignedMessage:\n                        this.ui.ethereumAddressFromSignedMessage({\n                            request: request,\n                            onSuccess\n                        });\n                        break;\n                    default:\n                        onCancel();\n                        break;\n                }\n            }\n            else {\n                hideSnackbarItem = this.ui.showConnecting({\n                    onCancel: cancel,\n                    onResetConnection: this.resetAndReload\n                });\n            }\n            this.relayEventManager.callbacks.set(id, response => {\n                this.ui.hideRequestEthereumAccounts();\n                hideSnackbarItem === null || hideSnackbarItem === void 0 ? void 0 : hideSnackbarItem();\n                if (response.errorMessage) {\n                    return reject(new Error(response.errorMessage));\n                }\n                resolve(response);\n            });\n            if ((isRequestAccounts && this.ui.inlineAccountsResponse()) ||\n                (isSwitchEthereumChain && this.ui.inlineSwitchEthereumChain()) ||\n                this.ui.isStandalone()) {\n                return;\n            }\n            this.publishWeb3RequestEvent(id, request);\n        });\n        return { promise, cancel };\n    }\n    setConnectDisabled(disabled) {\n        this.ui.setConnectDisabled(disabled);\n    }\n    setAccountsCallback(accountsCallback) {\n        this.accountsCallback = accountsCallback;\n    }\n    setChainIdCallback(chainIdCallback) {\n        this.chainIdCallback = chainIdCallback;\n    }\n    setJsonRpcUrlCallback(jsonRpcUrlCallback) {\n        this.jsonRpcUrlCallback = jsonRpcUrlCallback;\n    }\n    publishWeb3RequestEvent(id, request) {\n        const message = Web3RequestMessage_1.Web3RequestMessage({ id, request });\n        this.subscriptions.add(this.publishEvent(\"Web3Request\", message, true).subscribe({\n            error: err => {\n                this.handleWeb3ResponseMessage(Web3ResponseMessage_1.Web3ResponseMessage({\n                    id: message.id,\n                    response: {\n                        method: message.request.method,\n                        errorMessage: err.message\n                    }\n                }));\n            }\n        }));\n    }\n    publishWeb3RequestCanceledEvent(id) {\n        const message = Web3RequestCanceledMessage_1.Web3RequestCanceledMessage(id);\n        this.subscriptions.add(this.publishEvent(\"Web3RequestCanceled\", message, false).subscribe());\n    }\n    publishEvent(event, message, callWebhook) {\n        const secret = this.session.secret;\n        return new rxjs_1.Observable(subscriber => {\n            aes256gcm\n                .encrypt(JSON.stringify(Object.assign(Object.assign({}, message), { origin: location.origin })), secret)\n                .then((encrypted) => {\n                subscriber.next(encrypted);\n                subscriber.complete();\n            });\n        }).pipe(operators_1.mergeMap((encrypted) => {\n            return this.connection.publishEvent(event, encrypted, callWebhook);\n        }));\n    }\n    handleIncomingEvent(event) {\n        try {\n            this.subscriptions.add(aes256gcm\n                .decrypt(event.data, this.session.secret)\n                .pipe(operators_1.map(c => JSON.parse(c)))\n                .subscribe({\n                next: json => {\n                    const message = Web3ResponseMessage_1.isWeb3ResponseMessage(json) ? json : null;\n                    if (!message) {\n                        return;\n                    }\n                    this.handleWeb3ResponseMessage(message);\n                },\n                error: () => {\n                    var _a;\n                    (_a = this.walletLinkAnalytics) === null || _a === void 0 ? void 0 : _a.sendEvent(init_1.EVENTS.GENERAL_ERROR, { message: 'Had error decrypting', value: 'incomingEvent' });\n                }\n            }));\n        }\n        catch (_a) {\n            return;\n        }\n    }\n    handleWeb3ResponseMessage(message) {\n        const { response } = message;\n        if (Web3Response_1.isRequestEthereumAccountsResponse(response)) {\n            Array.from(WalletLinkRelay.accountRequestCallbackIds.values()).forEach(id => this.invokeCallback(Object.assign(Object.assign({}, message), { id })));\n            WalletLinkRelay.accountRequestCallbackIds.clear();\n            return;\n        }\n        this.invokeCallback(message);\n    }\n    invokeCallback(message) {\n        const callback = this.relayEventManager.callbacks.get(message.id);\n        if (callback) {\n            callback(message.response);\n            this.relayEventManager.callbacks.delete(message.id);\n        }\n    }\n    switchEthereumChain(chainId) {\n        return this.sendRequest({\n            method: Web3Method_1.Web3Method.switchEthereumChain,\n            params: {\n                chainId\n            }\n        });\n    }\n}\nWalletLinkRelay.accountRequestCallbackIds = new Set();\n__decorate([\n    bind_decorator_1.default\n], WalletLinkRelay.prototype, \"resetAndReload\", null);\n__decorate([\n    bind_decorator_1.default\n], WalletLinkRelay.prototype, \"handleIncomingEvent\", null);\nexports.WalletLinkRelay = WalletLinkRelay;\n"]},"metadata":{},"sourceType":"script"}