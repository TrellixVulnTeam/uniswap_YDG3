{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$(),\n    _s8 = $RefreshSig$(),\n    _s9 = $RefreshSig$(),\n    _s10 = $RefreshSig$(),\n    _s11 = $RefreshSig$(),\n    _s12 = $RefreshSig$(),\n    _s13 = $RefreshSig$(),\n    _s14 = $RefreshSig$(),\n    _s15 = $RefreshSig$(),\n    _s16 = $RefreshSig$(),\n    _s17 = $RefreshSig$(),\n    _s18 = $RefreshSig$(),\n    _s19 = $RefreshSig$(),\n    _s20 = $RefreshSig$(),\n    _s21 = $RefreshSig$(),\n    _s22 = $RefreshSig$();\n\nimport { abi as GOVERNANCE_ABI } from '@uniswap/governance/build/GovernorAlpha.json';\nimport { abi as UNI_ABI } from '@uniswap/governance/build/Uni.json';\nimport { abi as STAKING_REWARDS_ABI } from '@uniswap/liquidity-staker/build/StakingRewards.json';\nimport { abi as MERKLE_DISTRIBUTOR_ABI } from '@uniswap/merkle-distributor/build/MerkleDistributor.json';\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json';\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json';\nimport { abi as QuoterABI } from '@uniswap/v3-periphery/artifacts/contracts/lens/Quoter.sol/Quoter.json';\nimport { abi as MulticallABI } from '@uniswap/v3-periphery/artifacts/contracts/lens/UniswapInterfaceMulticall.sol/UniswapInterfaceMulticall.json';\nimport { abi as NFTPositionManagerABI } from '@uniswap/v3-periphery/artifacts/contracts/NonfungiblePositionManager.sol/NonfungiblePositionManager.json';\nimport { abi as V2MigratorABI } from '@uniswap/v3-periphery/artifacts/contracts/V3Migrator.sol/V3Migrator.json';\nimport ARGENT_WALLET_DETECTOR_ABI from 'abis/argent-wallet-detector.json';\nimport EIP_2612 from 'abis/eip_2612.json';\nimport ENS_PUBLIC_RESOLVER_ABI from 'abis/ens-public-resolver.json';\nimport ENS_ABI from 'abis/ens-registrar.json';\nimport ERC20_ABI from 'abis/erc20.json';\nimport ERC20_BYTES32_ABI from 'abis/erc20_bytes32.json';\nimport ERC721_ABI from 'abis/erc721.json';\nimport ERC1155_ABI from 'abis/erc1155.json';\nimport GOVERNOR_BRAVO_ABI from 'abis/governor-bravo.json';\nimport WETH_ABI from 'abis/weth.json';\nimport { ARGENT_WALLET_DETECTOR_ADDRESS, ENS_REGISTRAR_ADDRESSES, GOVERNANCE_ALPHA_V0_ADDRESSES, GOVERNANCE_ALPHA_V1_ADDRESSES, GOVERNANCE_BRAVO_ADDRESSES, MERKLE_DISTRIBUTOR_ADDRESS, MULTICALL_ADDRESS, NONFUNGIBLE_POSITION_MANAGER_ADDRESSES, QUOTER_ADDRESSES, V2_ROUTER_ADDRESS, V3_MIGRATOR_ADDRESSES } from 'constants/addresses';\nimport { useMemo } from 'react';\nimport { getContract } from 'utils';\nimport { UNI, WRAPPED_NATIVE_CURRENCY } from '../constants/tokens';\nimport { useActiveWeb3React } from './web3'; // returns null on errors\n\nexport function useContract(addressOrAddressMap, ABI, withSignerIfPossible = true) {\n  _s();\n\n  const {\n    library,\n    account,\n    chainId\n  } = useActiveWeb3React();\n  return useMemo(() => {\n    if (!addressOrAddressMap || !ABI || !library || !chainId) return null;\n    let address;\n    if (typeof addressOrAddressMap === 'string') address = addressOrAddressMap;else address = addressOrAddressMap[chainId];\n    if (!address) return null;\n\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined);\n    } catch (error) {\n      console.error('Failed to get contract', error);\n      return null;\n    }\n  }, [addressOrAddressMap, ABI, library, chainId, withSignerIfPossible, account]);\n}\n\n_s(useContract, \"tcWR12D5QTwiRnedeRPd9eWmR6c=\", false, function () {\n  return [useActiveWeb3React];\n});\n\nexport function useV2MigratorContract() {\n  _s2();\n\n  return useContract(V3_MIGRATOR_ADDRESSES, V2MigratorABI, true);\n}\n\n_s2(useV2MigratorContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useTokenContract(tokenAddress, withSignerIfPossible) {\n  _s3();\n\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible);\n}\n\n_s3(useTokenContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useWETHContract(withSignerIfPossible) {\n  _s4();\n\n  var _WRAPPED_NATIVE_CURRE;\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  return useContract(chainId ? (_WRAPPED_NATIVE_CURRE = WRAPPED_NATIVE_CURRENCY[chainId]) === null || _WRAPPED_NATIVE_CURRE === void 0 ? void 0 : _WRAPPED_NATIVE_CURRE.address : undefined, WETH_ABI, withSignerIfPossible);\n}\n\n_s4(useWETHContract, \"8w1T4mKaUUOVTFCmBK4zIRboBys=\", false, function () {\n  return [useActiveWeb3React, useContract];\n});\n\nexport function useERC721Contract(nftAddress) {\n  _s5();\n\n  return useContract(nftAddress, ERC721_ABI, false);\n}\n\n_s5(useERC721Contract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useERC1155Contract(nftAddress) {\n  _s6();\n\n  return useContract(nftAddress, ERC1155_ABI, false);\n}\n\n_s6(useERC1155Contract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useArgentWalletDetectorContract() {\n  _s7();\n\n  return useContract(ARGENT_WALLET_DETECTOR_ADDRESS, ARGENT_WALLET_DETECTOR_ABI, false);\n}\n\n_s7(useArgentWalletDetectorContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useENSRegistrarContract(withSignerIfPossible) {\n  _s8();\n\n  return useContract(ENS_REGISTRAR_ADDRESSES, ENS_ABI, withSignerIfPossible);\n}\n\n_s8(useENSRegistrarContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useENSResolverContract(address, withSignerIfPossible) {\n  _s9();\n\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible);\n}\n\n_s9(useENSResolverContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useBytes32TokenContract(tokenAddress, withSignerIfPossible) {\n  _s10();\n\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible);\n}\n\n_s10(useBytes32TokenContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useEIP2612Contract(tokenAddress) {\n  _s11();\n\n  return useContract(tokenAddress, EIP_2612, false);\n}\n\n_s11(useEIP2612Contract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function usePairContract(pairAddress, withSignerIfPossible) {\n  _s12();\n\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible);\n}\n\n_s12(usePairContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useV2RouterContract() {\n  _s13();\n\n  return useContract(V2_ROUTER_ADDRESS, IUniswapV2Router02ABI, true);\n}\n\n_s13(useV2RouterContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useInterfaceMulticall() {\n  _s14();\n\n  return useContract(MULTICALL_ADDRESS, MulticallABI, false);\n}\n\n_s14(useInterfaceMulticall, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useMerkleDistributorContract() {\n  _s15();\n\n  return useContract(MERKLE_DISTRIBUTOR_ADDRESS, MERKLE_DISTRIBUTOR_ABI, true);\n}\n\n_s15(useMerkleDistributorContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useGovernanceV0Contract() {\n  _s16();\n\n  return useContract(GOVERNANCE_ALPHA_V0_ADDRESSES, GOVERNANCE_ABI, false);\n}\n\n_s16(useGovernanceV0Contract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useGovernanceV1Contract() {\n  _s17();\n\n  return useContract(GOVERNANCE_ALPHA_V1_ADDRESSES, GOVERNANCE_ABI, false);\n}\n\n_s17(useGovernanceV1Contract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useGovernanceBravoContract() {\n  _s18();\n\n  return useContract(GOVERNANCE_BRAVO_ADDRESSES, GOVERNOR_BRAVO_ABI, true);\n}\n\n_s18(useGovernanceBravoContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport const useLatestGovernanceContract = useGovernanceBravoContract;\nexport function useUniContract() {\n  _s19();\n\n  var _UNI$chainId;\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  return useContract(chainId ? (_UNI$chainId = UNI[chainId]) === null || _UNI$chainId === void 0 ? void 0 : _UNI$chainId.address : undefined, UNI_ABI, true);\n}\n\n_s19(useUniContract, \"8w1T4mKaUUOVTFCmBK4zIRboBys=\", false, function () {\n  return [useActiveWeb3React, useContract];\n});\n\nexport function useStakingContract(stakingAddress, withSignerIfPossible) {\n  _s20();\n\n  return useContract(stakingAddress, STAKING_REWARDS_ABI, withSignerIfPossible);\n}\n\n_s20(useStakingContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useV3NFTPositionManagerContract(withSignerIfPossible) {\n  _s21();\n\n  return useContract(NONFUNGIBLE_POSITION_MANAGER_ADDRESSES, NFTPositionManagerABI, withSignerIfPossible);\n}\n\n_s21(useV3NFTPositionManagerContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport function useV3Quoter() {\n  _s22();\n\n  return useContract(QUOTER_ADDRESSES, QuoterABI);\n}\n\n_s22(useV3Quoter, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/hooks/useContract.ts"],"names":["abi","GOVERNANCE_ABI","UNI_ABI","STAKING_REWARDS_ABI","MERKLE_DISTRIBUTOR_ABI","IUniswapV2PairABI","IUniswapV2Router02ABI","QuoterABI","MulticallABI","NFTPositionManagerABI","V2MigratorABI","ARGENT_WALLET_DETECTOR_ABI","EIP_2612","ENS_PUBLIC_RESOLVER_ABI","ENS_ABI","ERC20_ABI","ERC20_BYTES32_ABI","ERC721_ABI","ERC1155_ABI","GOVERNOR_BRAVO_ABI","WETH_ABI","ARGENT_WALLET_DETECTOR_ADDRESS","ENS_REGISTRAR_ADDRESSES","GOVERNANCE_ALPHA_V0_ADDRESSES","GOVERNANCE_ALPHA_V1_ADDRESSES","GOVERNANCE_BRAVO_ADDRESSES","MERKLE_DISTRIBUTOR_ADDRESS","MULTICALL_ADDRESS","NONFUNGIBLE_POSITION_MANAGER_ADDRESSES","QUOTER_ADDRESSES","V2_ROUTER_ADDRESS","V3_MIGRATOR_ADDRESSES","useMemo","getContract","UNI","WRAPPED_NATIVE_CURRENCY","useActiveWeb3React","useContract","addressOrAddressMap","ABI","withSignerIfPossible","library","account","chainId","address","undefined","error","console","useV2MigratorContract","useTokenContract","tokenAddress","useWETHContract","useERC721Contract","nftAddress","useERC1155Contract","useArgentWalletDetectorContract","useENSRegistrarContract","useENSResolverContract","useBytes32TokenContract","useEIP2612Contract","usePairContract","pairAddress","useV2RouterContract","useInterfaceMulticall","useMerkleDistributorContract","useGovernanceV0Contract","useGovernanceV1Contract","useGovernanceBravoContract","useLatestGovernanceContract","useUniContract","useStakingContract","stakingAddress","useV3NFTPositionManagerContract","useV3Quoter"],"mappings":"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","sourcesContent":["import { Contract } from '@ethersproject/contracts'\nimport { abi as GOVERNANCE_ABI } from '@uniswap/governance/build/GovernorAlpha.json'\nimport { abi as UNI_ABI } from '@uniswap/governance/build/Uni.json'\nimport { abi as STAKING_REWARDS_ABI } from '@uniswap/liquidity-staker/build/StakingRewards.json'\nimport { abi as MERKLE_DISTRIBUTOR_ABI } from '@uniswap/merkle-distributor/build/MerkleDistributor.json'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { abi as QuoterABI } from '@uniswap/v3-periphery/artifacts/contracts/lens/Quoter.sol/Quoter.json'\nimport { abi as MulticallABI } from '@uniswap/v3-periphery/artifacts/contracts/lens/UniswapInterfaceMulticall.sol/UniswapInterfaceMulticall.json'\nimport { abi as NFTPositionManagerABI } from '@uniswap/v3-periphery/artifacts/contracts/NonfungiblePositionManager.sol/NonfungiblePositionManager.json'\nimport { abi as V2MigratorABI } from '@uniswap/v3-periphery/artifacts/contracts/V3Migrator.sol/V3Migrator.json'\nimport ARGENT_WALLET_DETECTOR_ABI from 'abis/argent-wallet-detector.json'\nimport EIP_2612 from 'abis/eip_2612.json'\nimport ENS_PUBLIC_RESOLVER_ABI from 'abis/ens-public-resolver.json'\nimport ENS_ABI from 'abis/ens-registrar.json'\nimport ERC20_ABI from 'abis/erc20.json'\nimport ERC20_BYTES32_ABI from 'abis/erc20_bytes32.json'\nimport ERC721_ABI from 'abis/erc721.json'\nimport ERC1155_ABI from 'abis/erc1155.json'\nimport GOVERNOR_BRAVO_ABI from 'abis/governor-bravo.json'\nimport WETH_ABI from 'abis/weth.json'\nimport {\n  ARGENT_WALLET_DETECTOR_ADDRESS,\n  ENS_REGISTRAR_ADDRESSES,\n  GOVERNANCE_ALPHA_V0_ADDRESSES,\n  GOVERNANCE_ALPHA_V1_ADDRESSES,\n  GOVERNANCE_BRAVO_ADDRESSES,\n  MERKLE_DISTRIBUTOR_ADDRESS,\n  MULTICALL_ADDRESS,\n  NONFUNGIBLE_POSITION_MANAGER_ADDRESSES,\n  QUOTER_ADDRESSES,\n  V2_ROUTER_ADDRESS,\n  V3_MIGRATOR_ADDRESSES,\n} from 'constants/addresses'\nimport { useMemo } from 'react'\nimport { NonfungiblePositionManager, Quoter, UniswapInterfaceMulticall } from 'types/v3'\nimport { V3Migrator } from 'types/v3/V3Migrator'\nimport { getContract } from 'utils'\n\nimport { ArgentWalletDetector, EnsPublicResolver, EnsRegistrar, Erc20, Erc721, Erc1155, Weth } from '../abis/types'\nimport { UNI, WRAPPED_NATIVE_CURRENCY } from '../constants/tokens'\nimport { useActiveWeb3React } from './web3'\n\n// returns null on errors\nexport function useContract<T extends Contract = Contract>(\n  addressOrAddressMap: string | { [chainId: number]: string } | undefined,\n  ABI: any,\n  withSignerIfPossible = true\n): T | null {\n  const { library, account, chainId } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!addressOrAddressMap || !ABI || !library || !chainId) return null\n    let address: string | undefined\n    if (typeof addressOrAddressMap === 'string') address = addressOrAddressMap\n    else address = addressOrAddressMap[chainId]\n    if (!address) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [addressOrAddressMap, ABI, library, chainId, withSignerIfPossible, account]) as T\n}\n\nexport function useV2MigratorContract() {\n  return useContract<V3Migrator>(V3_MIGRATOR_ADDRESSES, V2MigratorABI, true)\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean) {\n  return useContract<Erc20>(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean) {\n  const { chainId } = useActiveWeb3React()\n  return useContract<Weth>(\n    chainId ? WRAPPED_NATIVE_CURRENCY[chainId]?.address : undefined,\n    WETH_ABI,\n    withSignerIfPossible\n  )\n}\n\nexport function useERC721Contract(nftAddress?: string) {\n  return useContract<Erc721>(nftAddress, ERC721_ABI, false)\n}\n\nexport function useERC1155Contract(nftAddress?: string) {\n  return useContract<Erc1155>(nftAddress, ERC1155_ABI, false)\n}\n\nexport function useArgentWalletDetectorContract() {\n  return useContract<ArgentWalletDetector>(ARGENT_WALLET_DETECTOR_ADDRESS, ARGENT_WALLET_DETECTOR_ABI, false)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean) {\n  return useContract<EnsRegistrar>(ENS_REGISTRAR_ADDRESSES, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean) {\n  return useContract<EnsPublicResolver>(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function useEIP2612Contract(tokenAddress?: string): Contract | null {\n  return useContract(tokenAddress, EIP_2612, false)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useV2RouterContract(): Contract | null {\n  return useContract(V2_ROUTER_ADDRESS, IUniswapV2Router02ABI, true)\n}\n\nexport function useInterfaceMulticall() {\n  return useContract<UniswapInterfaceMulticall>(MULTICALL_ADDRESS, MulticallABI, false) as UniswapInterfaceMulticall\n}\n\nexport function useMerkleDistributorContract() {\n  return useContract(MERKLE_DISTRIBUTOR_ADDRESS, MERKLE_DISTRIBUTOR_ABI, true)\n}\n\nexport function useGovernanceV0Contract(): Contract | null {\n  return useContract(GOVERNANCE_ALPHA_V0_ADDRESSES, GOVERNANCE_ABI, false)\n}\n\nexport function useGovernanceV1Contract(): Contract | null {\n  return useContract(GOVERNANCE_ALPHA_V1_ADDRESSES, GOVERNANCE_ABI, false)\n}\n\nexport function useGovernanceBravoContract(): Contract | null {\n  return useContract(GOVERNANCE_BRAVO_ADDRESSES, GOVERNOR_BRAVO_ABI, true)\n}\n\nexport const useLatestGovernanceContract = useGovernanceBravoContract\n\nexport function useUniContract() {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? UNI[chainId]?.address : undefined, UNI_ABI, true)\n}\n\nexport function useStakingContract(stakingAddress?: string, withSignerIfPossible?: boolean) {\n  return useContract(stakingAddress, STAKING_REWARDS_ABI, withSignerIfPossible)\n}\n\nexport function useV3NFTPositionManagerContract(withSignerIfPossible?: boolean): NonfungiblePositionManager | null {\n  return useContract<NonfungiblePositionManager>(\n    NONFUNGIBLE_POSITION_MANAGER_ADDRESSES,\n    NFTPositionManagerABI,\n    withSignerIfPossible\n  )\n}\n\nexport function useV3Quoter() {\n  return useContract<Quoter>(QUOTER_ADDRESSES, QuoterABI)\n}\n"]},"metadata":{},"sourceType":"module"}