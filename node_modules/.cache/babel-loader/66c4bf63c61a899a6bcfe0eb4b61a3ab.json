{"ast":null,"code":"import { DefaultTheme as _DefaultTheme } from \"styled-components\";\nimport _styled from \"styled-components\";\nimport { readableColor } from 'polished';\nexport let BadgeVariant;\n\n(function (BadgeVariant) {\n  BadgeVariant[\"DEFAULT\"] = \"DEFAULT\";\n  BadgeVariant[\"NEGATIVE\"] = \"NEGATIVE\";\n  BadgeVariant[\"POSITIVE\"] = \"POSITIVE\";\n  BadgeVariant[\"PRIMARY\"] = \"PRIMARY\";\n  BadgeVariant[\"WARNING\"] = \"WARNING\";\n  BadgeVariant[\"WARNING_OUTLINE\"] = \"WARNING_OUTLINE\";\n})(BadgeVariant || (BadgeVariant = {}));\n\nfunction pickBackgroundColor(variant, theme) {\n  switch (variant) {\n    case BadgeVariant.NEGATIVE:\n      return theme.error;\n\n    case BadgeVariant.POSITIVE:\n      return theme.success;\n\n    case BadgeVariant.PRIMARY:\n      return theme.primary1;\n\n    case BadgeVariant.WARNING:\n      return theme.warning;\n\n    case BadgeVariant.WARNING_OUTLINE:\n      return 'transparent';\n\n    default:\n      return theme.bg2;\n  }\n}\n\nfunction pickBorder(variant, theme) {\n  switch (variant) {\n    case BadgeVariant.WARNING_OUTLINE:\n      return `1px solid ${theme.warning}`;\n\n    default:\n      return 'unset';\n  }\n}\n\nfunction pickFontColor(variant, theme) {\n  switch (variant) {\n    case BadgeVariant.NEGATIVE:\n      return readableColor(theme.error);\n\n    case BadgeVariant.POSITIVE:\n      return readableColor(theme.success);\n\n    case BadgeVariant.WARNING:\n      return readableColor(theme.warning);\n\n    case BadgeVariant.WARNING_OUTLINE:\n      return theme.warning;\n\n    default:\n      return readableColor(theme.bg2);\n  }\n}\n\nconst Badge = _styled.div.withConfig({\n  displayName: \"Badge\",\n  componentId: \"sc-1mhw5si-0\"\n})([\"align-items:center;background-color:\", \";border:\", \";border-radius:0.5rem;color:\", \";display:inline-flex;padding:4px 6px;justify-content:center;font-weight:500;\"], ({\n  theme,\n  variant\n}) => pickBackgroundColor(variant, theme), ({\n  theme,\n  variant\n}) => pickBorder(variant, theme), ({\n  theme,\n  variant\n}) => pickFontColor(variant, theme));\n\nexport default Badge;","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/components/Badge/index.tsx"],"names":["readableColor","BadgeVariant","pickBackgroundColor","variant","theme","NEGATIVE","error","POSITIVE","success","PRIMARY","primary1","WARNING","warning","WARNING_OUTLINE","bg2","pickBorder","pickFontColor","Badge","styled","div"],"mappings":";;AAAA,SAASA,aAAT,QAA8B,UAA9B;AAKA,WAAYC,YAAZ;;WAAYA,Y;AAAAA,EAAAA,Y;AAAAA,EAAAA,Y;AAAAA,EAAAA,Y;AAAAA,EAAAA,Y;AAAAA,EAAAA,Y;AAAAA,EAAAA,Y;GAAAA,Y,KAAAA,Y;;AAcZ,SAASC,mBAAT,CAA6BC,OAA7B,EAAgEC,KAAhE,EAA4F;AAC1F,UAAQD,OAAR;AACE,SAAKF,YAAY,CAACI,QAAlB;AACE,aAAOD,KAAK,CAACE,KAAb;;AACF,SAAKL,YAAY,CAACM,QAAlB;AACE,aAAOH,KAAK,CAACI,OAAb;;AACF,SAAKP,YAAY,CAACQ,OAAlB;AACE,aAAOL,KAAK,CAACM,QAAb;;AACF,SAAKT,YAAY,CAACU,OAAlB;AACE,aAAOP,KAAK,CAACQ,OAAb;;AACF,SAAKX,YAAY,CAACY,eAAlB;AACE,aAAO,aAAP;;AACF;AACE,aAAOT,KAAK,CAACU,GAAb;AAZJ;AAcD;;AAED,SAASC,UAAT,CAAoBZ,OAApB,EAAuDC,KAAvD,EAAoF;AAClF,UAAQD,OAAR;AACE,SAAKF,YAAY,CAACY,eAAlB;AACE,aAAQ,aAAYT,KAAK,CAACQ,OAAQ,EAAlC;;AACF;AACE,aAAO,OAAP;AAJJ;AAMD;;AAED,SAASI,aAAT,CAAuBb,OAAvB,EAA0DC,KAA1D,EAAuF;AACrF,UAAQD,OAAR;AACE,SAAKF,YAAY,CAACI,QAAlB;AACE,aAAOL,aAAa,CAACI,KAAK,CAACE,KAAP,CAApB;;AACF,SAAKL,YAAY,CAACM,QAAlB;AACE,aAAOP,aAAa,CAACI,KAAK,CAACI,OAAP,CAApB;;AACF,SAAKP,YAAY,CAACU,OAAlB;AACE,aAAOX,aAAa,CAACI,KAAK,CAACQ,OAAP,CAApB;;AACF,SAAKX,YAAY,CAACY,eAAlB;AACE,aAAOT,KAAK,CAACQ,OAAb;;AACF;AACE,aAAOZ,aAAa,CAACI,KAAK,CAACU,GAAP,CAApB;AAVJ;AAYD;;AAED,MAAMG,KAAK,GAAGC,OAAM,CAACC,GAAV;AAAA;AAAA;AAAA,yKAEW,CAAC;AAAEf,EAAAA,KAAF;AAASD,EAAAA;AAAT,CAAD,KAAwBD,mBAAmB,CAACC,OAAD,EAAUC,KAAV,CAFtD,EAGC,CAAC;AAAEA,EAAAA,KAAF;AAASD,EAAAA;AAAT,CAAD,KAAwBY,UAAU,CAACZ,OAAD,EAAUC,KAAV,CAHnC,EAKA,CAAC;AAAEA,EAAAA,KAAF;AAASD,EAAAA;AAAT,CAAD,KAAwBa,aAAa,CAACb,OAAD,EAAUC,KAAV,CALrC,CAAX;;AAYA,eAAea,KAAf","sourcesContent":["import { readableColor } from 'polished'\nimport { PropsWithChildren } from 'react'\nimport styled, { DefaultTheme } from 'styled-components/macro'\nimport { Color } from 'theme/styled'\n\nexport enum BadgeVariant {\n  DEFAULT = 'DEFAULT',\n  NEGATIVE = 'NEGATIVE',\n  POSITIVE = 'POSITIVE',\n  PRIMARY = 'PRIMARY',\n  WARNING = 'WARNING',\n\n  WARNING_OUTLINE = 'WARNING_OUTLINE',\n}\n\ninterface BadgeProps {\n  variant?: BadgeVariant\n}\n\nfunction pickBackgroundColor(variant: BadgeVariant | undefined, theme: DefaultTheme): Color {\n  switch (variant) {\n    case BadgeVariant.NEGATIVE:\n      return theme.error\n    case BadgeVariant.POSITIVE:\n      return theme.success\n    case BadgeVariant.PRIMARY:\n      return theme.primary1\n    case BadgeVariant.WARNING:\n      return theme.warning\n    case BadgeVariant.WARNING_OUTLINE:\n      return 'transparent'\n    default:\n      return theme.bg2\n  }\n}\n\nfunction pickBorder(variant: BadgeVariant | undefined, theme: DefaultTheme): string {\n  switch (variant) {\n    case BadgeVariant.WARNING_OUTLINE:\n      return `1px solid ${theme.warning}`\n    default:\n      return 'unset'\n  }\n}\n\nfunction pickFontColor(variant: BadgeVariant | undefined, theme: DefaultTheme): string {\n  switch (variant) {\n    case BadgeVariant.NEGATIVE:\n      return readableColor(theme.error)\n    case BadgeVariant.POSITIVE:\n      return readableColor(theme.success)\n    case BadgeVariant.WARNING:\n      return readableColor(theme.warning)\n    case BadgeVariant.WARNING_OUTLINE:\n      return theme.warning\n    default:\n      return readableColor(theme.bg2)\n  }\n}\n\nconst Badge = styled.div<PropsWithChildren<BadgeProps>>`\n  align-items: center;\n  background-color: ${({ theme, variant }) => pickBackgroundColor(variant, theme)};\n  border: ${({ theme, variant }) => pickBorder(variant, theme)};\n  border-radius: 0.5rem;\n  color: ${({ theme, variant }) => pickFontColor(variant, theme)};\n  display: inline-flex;\n  padding: 4px 6px;\n  justify-content: center;\n  font-weight: 500;\n`\n\nexport default Badge\n"]},"metadata":{},"sourceType":"module"}