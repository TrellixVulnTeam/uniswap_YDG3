{"ast":null,"code":"import ethereumLogoUrl from 'assets/images/ethereum-logo.png';\nimport arbitrumLogoUrl from \"assets/svg/arbitrum_logo.svg\";\nimport optimismLogoUrl from \"assets/svg/optimistic_ethereum.svg\";\nimport polygonMaticLogo from \"assets/svg/polygon-matic-logo.svg\";\nimport { ARBITRUM_LIST, OPTIMISM_LIST } from './lists';\n/**\n * List of all the networks supported by the Uniswap Interface\n */\n\nexport let SupportedChainId;\n\n(function (SupportedChainId) {\n  SupportedChainId[SupportedChainId[\"MAINNET\"] = 1] = \"MAINNET\";\n  SupportedChainId[SupportedChainId[\"ROPSTEN\"] = 3] = \"ROPSTEN\";\n  SupportedChainId[SupportedChainId[\"RINKEBY\"] = 4] = \"RINKEBY\";\n  SupportedChainId[SupportedChainId[\"GOERLI\"] = 5] = \"GOERLI\";\n  SupportedChainId[SupportedChainId[\"KOVAN\"] = 42] = \"KOVAN\";\n  SupportedChainId[SupportedChainId[\"ARBITRUM_ONE\"] = 42161] = \"ARBITRUM_ONE\";\n  SupportedChainId[SupportedChainId[\"ARBITRUM_RINKEBY\"] = 421611] = \"ARBITRUM_RINKEBY\";\n  SupportedChainId[SupportedChainId[\"OPTIMISM\"] = 10] = \"OPTIMISM\";\n  SupportedChainId[SupportedChainId[\"OPTIMISTIC_KOVAN\"] = 69] = \"OPTIMISTIC_KOVAN\";\n  SupportedChainId[SupportedChainId[\"POLYGON\"] = 137] = \"POLYGON\";\n  SupportedChainId[SupportedChainId[\"POLYGON_MUMBAI\"] = 80001] = \"POLYGON_MUMBAI\";\n})(SupportedChainId || (SupportedChainId = {}));\n\nconst INFURA_KEY = process.env.REACT_APP_INFURA_KEY;\n\nif (typeof INFURA_KEY === 'undefined') {\n  throw new Error(`REACT_APP_INFURA_KEY must be a defined environment variable`);\n}\n/**\n * Array of all the supported chain IDs\n */\n\n\nexport const ALL_SUPPORTED_CHAIN_IDS = Object.values(SupportedChainId).filter(id => typeof id === 'number');\n/**\n * All the chain IDs that are running the Ethereum protocol.\n */\n\nexport const L1_CHAIN_IDS = [SupportedChainId.MAINNET, SupportedChainId.ROPSTEN, SupportedChainId.RINKEBY, SupportedChainId.GOERLI, SupportedChainId.KOVAN, SupportedChainId.POLYGON, SupportedChainId.POLYGON_MUMBAI];\n\n/**\n * Controls some L2 specific behavior, e.g. slippage tolerance, special UI behavior.\n * The expectation is that all of these networks have immediate transaction confirmation.\n */\nexport const L2_CHAIN_IDS = [SupportedChainId.ARBITRUM_ONE, SupportedChainId.ARBITRUM_RINKEBY, SupportedChainId.OPTIMISM, SupportedChainId.OPTIMISTIC_KOVAN];\n\n/**\n * These are the network URLs used by the interface when there is not another available source of chain data\n */\nexport const INFURA_NETWORK_URLS = {\n  [SupportedChainId.MAINNET]: `https://mainnet.infura.io/v3/${INFURA_KEY}`,\n  [SupportedChainId.RINKEBY]: `https://rinkeby.infura.io/v3/${INFURA_KEY}`,\n  [SupportedChainId.ROPSTEN]: `https://ropsten.infura.io/v3/${INFURA_KEY}`,\n  [SupportedChainId.GOERLI]: `https://goerli.infura.io/v3/${INFURA_KEY}`,\n  [SupportedChainId.KOVAN]: `https://kovan.infura.io/v3/${INFURA_KEY}`,\n  [SupportedChainId.OPTIMISM]: `https://optimism-mainnet.infura.io/v3/${INFURA_KEY}`,\n  [SupportedChainId.OPTIMISTIC_KOVAN]: `https://optimism-kovan.infura.io/v3/${INFURA_KEY}`,\n  [SupportedChainId.ARBITRUM_ONE]: `https://arbitrum-mainnet.infura.io/v3/${INFURA_KEY}`,\n  [SupportedChainId.ARBITRUM_RINKEBY]: `https://arbitrum-rinkeby.infura.io/v3/${INFURA_KEY}`,\n  [SupportedChainId.POLYGON]: `https://polygon-mainnet.infura.io/v3/${INFURA_KEY}`,\n  [SupportedChainId.POLYGON_MUMBAI]: `https://polygon-mumbai.infura.io/v3/${INFURA_KEY}`\n};\n/**\n * This is used to call the add network RPC\n */\n\nexport let NetworkType;\n\n(function (NetworkType) {\n  NetworkType[NetworkType[\"L1\"] = 0] = \"L1\";\n  NetworkType[NetworkType[\"L2\"] = 1] = \"L2\";\n})(NetworkType || (NetworkType = {}));\n\nexport const CHAIN_INFO = {\n  [SupportedChainId.MAINNET]: {\n    networkType: NetworkType.L1,\n    docs: 'https://docs.uniswap.org/',\n    explorer: 'https://etherscan.io/',\n    infoLink: 'https://info.uniswap.org/#/',\n    label: 'Ethereum',\n    logoUrl: ethereumLogoUrl,\n    addNetworkInfo: {\n      nativeCurrency: {\n        name: 'Ether',\n        symbol: 'ETH',\n        decimals: 18\n      },\n      rpcUrl: INFURA_NETWORK_URLS[SupportedChainId.MAINNET]\n    }\n  },\n  [SupportedChainId.RINKEBY]: {\n    networkType: NetworkType.L1,\n    docs: 'https://docs.uniswap.org/',\n    explorer: 'https://rinkeby.etherscan.io/',\n    infoLink: 'https://info.uniswap.org/#/',\n    label: 'Rinkeby',\n    logoUrl: ethereumLogoUrl,\n    addNetworkInfo: {\n      nativeCurrency: {\n        name: 'Rinkeby Ether',\n        symbol: 'rETH',\n        decimals: 18\n      },\n      rpcUrl: INFURA_NETWORK_URLS[SupportedChainId.RINKEBY]\n    }\n  },\n  [SupportedChainId.ROPSTEN]: {\n    networkType: NetworkType.L1,\n    docs: 'https://docs.uniswap.org/',\n    explorer: 'https://ropsten.etherscan.io/',\n    infoLink: 'https://info.uniswap.org/#/',\n    label: 'Ropsten',\n    logoUrl: ethereumLogoUrl,\n    addNetworkInfo: {\n      nativeCurrency: {\n        name: 'Ropsten Ether',\n        symbol: 'ropETH',\n        decimals: 18\n      },\n      rpcUrl: INFURA_NETWORK_URLS[SupportedChainId.ROPSTEN]\n    }\n  },\n  [SupportedChainId.KOVAN]: {\n    networkType: NetworkType.L1,\n    docs: 'https://docs.uniswap.org/',\n    explorer: 'https://kovan.etherscan.io/',\n    infoLink: 'https://info.uniswap.org/#/',\n    label: 'Kovan',\n    logoUrl: ethereumLogoUrl,\n    addNetworkInfo: {\n      nativeCurrency: {\n        name: 'Kovan Ether',\n        symbol: 'kovETH',\n        decimals: 18\n      },\n      rpcUrl: INFURA_NETWORK_URLS[SupportedChainId.KOVAN]\n    }\n  },\n  [SupportedChainId.GOERLI]: {\n    networkType: NetworkType.L1,\n    docs: 'https://docs.uniswap.org/',\n    explorer: 'https://goerli.etherscan.io/',\n    infoLink: 'https://info.uniswap.org/#/',\n    label: 'Görli',\n    logoUrl: ethereumLogoUrl,\n    addNetworkInfo: {\n      nativeCurrency: {\n        name: 'Görli Ether',\n        symbol: 'görETH',\n        decimals: 18\n      },\n      rpcUrl: INFURA_NETWORK_URLS[SupportedChainId.GOERLI]\n    }\n  },\n  [SupportedChainId.OPTIMISM]: {\n    networkType: NetworkType.L2,\n    blockWaitMsBeforeWarning: 1500000,\n    bridge: 'https://gateway.optimism.io/?chainId=1',\n    defaultListUrl: OPTIMISM_LIST,\n    docs: 'https://optimism.io/',\n    explorer: 'https://optimistic.etherscan.io/',\n    infoLink: 'https://info.uniswap.org/#/optimism/',\n    label: 'Optimism',\n    logoUrl: optimismLogoUrl,\n    statusPage: 'https://optimism.io/status',\n    helpCenterUrl: 'https://help.uniswap.org/en/collections/3137778-uniswap-on-optimistic-ethereum-oξ',\n    addNetworkInfo: {\n      nativeCurrency: {\n        name: 'Ether',\n        symbol: 'ETH',\n        decimals: 18\n      },\n      rpcUrl: 'https://mainnet.optimism.io'\n    }\n  },\n  [SupportedChainId.OPTIMISTIC_KOVAN]: {\n    networkType: NetworkType.L2,\n    blockWaitMsBeforeWarning: 1500000,\n    bridge: 'https://gateway.optimism.io/',\n    defaultListUrl: OPTIMISM_LIST,\n    docs: 'https://optimism.io/',\n    explorer: 'https://optimistic.etherscan.io/',\n    infoLink: 'https://info.uniswap.org/#/optimism/',\n    label: 'Optimistic Kovan',\n    logoUrl: optimismLogoUrl,\n    statusPage: 'https://optimism.io/status',\n    helpCenterUrl: 'https://help.uniswap.org/en/collections/3137778-uniswap-on-optimistic-ethereum-oξ',\n    addNetworkInfo: {\n      nativeCurrency: {\n        name: 'Optimistic Kovan Ether',\n        symbol: 'kovOpETH',\n        decimals: 18\n      },\n      rpcUrl: 'https://kovan.optimism.io'\n    }\n  },\n  [SupportedChainId.ARBITRUM_ONE]: {\n    networkType: NetworkType.L2,\n    blockWaitMsBeforeWarning: 600000,\n    bridge: 'https://bridge.arbitrum.io/',\n    docs: 'https://offchainlabs.com/',\n    explorer: 'https://arbiscan.io/',\n    infoLink: 'https://info.uniswap.org/#/arbitrum',\n    label: 'Arbitrum',\n    logoUrl: arbitrumLogoUrl,\n    defaultListUrl: ARBITRUM_LIST,\n    helpCenterUrl: 'https://help.uniswap.org/en/collections/3137787-uniswap-on-arbitrum',\n    addNetworkInfo: {\n      nativeCurrency: {\n        name: 'Ether',\n        symbol: 'ETH',\n        decimals: 18\n      },\n      rpcUrl: 'https://arb1.arbitrum.io/rpc'\n    }\n  },\n  [SupportedChainId.ARBITRUM_RINKEBY]: {\n    networkType: NetworkType.L2,\n    blockWaitMsBeforeWarning: 600000,\n    bridge: 'https://bridge.arbitrum.io/',\n    docs: 'https://offchainlabs.com/',\n    explorer: 'https://rinkeby-explorer.arbitrum.io/',\n    infoLink: 'https://info.uniswap.org/#/arbitrum/',\n    label: 'Arbitrum Rinkeby',\n    logoUrl: arbitrumLogoUrl,\n    defaultListUrl: ARBITRUM_LIST,\n    helpCenterUrl: 'https://help.uniswap.org/en/collections/3137787-uniswap-on-arbitrum',\n    addNetworkInfo: {\n      nativeCurrency: {\n        name: 'Rinkeby Arbitrum Ether',\n        symbol: 'rinkArbETH',\n        decimals: 18\n      },\n      rpcUrl: 'https://rinkeby.arbitrum.io/rpc'\n    }\n  },\n  [SupportedChainId.POLYGON]: {\n    networkType: NetworkType.L1,\n    blockWaitMsBeforeWarning: 600000,\n    bridge: 'https://wallet.polygon.technology/bridge',\n    docs: 'https://polygon.io/',\n    explorer: 'https://polygonscan.com/',\n    infoLink: 'https://info.uniswap.org/#/polygon/',\n    label: 'Polygon',\n    logoUrl: polygonMaticLogo,\n    addNetworkInfo: {\n      rpcUrl: 'https://polygon-rpc.com/',\n      nativeCurrency: {\n        name: 'Polygon Matic',\n        symbol: 'MATIC',\n        decimals: 18\n      }\n    }\n  },\n  [SupportedChainId.POLYGON_MUMBAI]: {\n    networkType: NetworkType.L1,\n    blockWaitMsBeforeWarning: 600000,\n    bridge: 'https://wallet.polygon.technology/bridge',\n    docs: 'https://polygon.io/',\n    explorer: 'https://mumbai.polygonscan.com/',\n    infoLink: 'https://info.uniswap.org/#/polygon/',\n    label: 'Polygon Mumbai',\n    logoUrl: polygonMaticLogo,\n    addNetworkInfo: {\n      nativeCurrency: {\n        name: 'Polygon Mumbai Matic',\n        symbol: 'mMATIC',\n        decimals: 18\n      },\n      rpcUrl: 'https://rpc-endpoints.superfluid.dev/mumbai'\n    }\n  }\n};","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/constants/chains.ts"],"names":["ethereumLogoUrl","ARBITRUM_LIST","OPTIMISM_LIST","SupportedChainId","INFURA_KEY","process","env","REACT_APP_INFURA_KEY","Error","ALL_SUPPORTED_CHAIN_IDS","Object","values","filter","id","L1_CHAIN_IDS","MAINNET","ROPSTEN","RINKEBY","GOERLI","KOVAN","POLYGON","POLYGON_MUMBAI","L2_CHAIN_IDS","ARBITRUM_ONE","ARBITRUM_RINKEBY","OPTIMISM","OPTIMISTIC_KOVAN","INFURA_NETWORK_URLS","NetworkType","CHAIN_INFO","networkType","L1","docs","explorer","infoLink","label","logoUrl","addNetworkInfo","nativeCurrency","name","symbol","decimals","rpcUrl","L2","blockWaitMsBeforeWarning","bridge","defaultListUrl","optimismLogoUrl","statusPage","helpCenterUrl","arbitrumLogoUrl","polygonMaticLogo"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,iCAA5B;;;;AAMA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,SAA7C;AAEA;AACA;AACA;;AACA,WAAYC,gBAAZ;;WAAYA,gB;AAAAA,EAAAA,gB,CAAAA,gB;AAAAA,EAAAA,gB,CAAAA,gB;AAAAA,EAAAA,gB,CAAAA,gB;AAAAA,EAAAA,gB,CAAAA,gB;AAAAA,EAAAA,gB,CAAAA,gB;AAAAA,EAAAA,gB,CAAAA,gB;AAAAA,EAAAA,gB,CAAAA,gB;AAAAA,EAAAA,gB,CAAAA,gB;AAAAA,EAAAA,gB,CAAAA,gB;AAAAA,EAAAA,gB,CAAAA,gB;AAAAA,EAAAA,gB,CAAAA,gB;GAAAA,gB,KAAAA,gB;;AAiBZ,MAAMC,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAA/B;;AACA,IAAI,OAAOH,UAAP,KAAsB,WAA1B,EAAuC;AACrC,QAAM,IAAII,KAAJ,CAAW,6DAAX,CAAN;AACD;AAED;AACA;AACA;;;AACA,OAAO,MAAMC,uBAA2C,GAAGC,MAAM,CAACC,MAAP,CAAcR,gBAAd,EAAgCS,MAAhC,CACxDC,EAAD,IAAQ,OAAOA,EAAP,KAAc,QADmC,CAApD;AAIP;AACA;AACA;;AACA,OAAO,MAAMC,YAAY,GAAG,CAC1BX,gBAAgB,CAACY,OADS,EAE1BZ,gBAAgB,CAACa,OAFS,EAG1Bb,gBAAgB,CAACc,OAHS,EAI1Bd,gBAAgB,CAACe,MAJS,EAK1Bf,gBAAgB,CAACgB,KALS,EAM1BhB,gBAAgB,CAACiB,OANS,EAO1BjB,gBAAgB,CAACkB,cAPS,CAArB;;AAYP;AACA;AACA;AACA;AACA,OAAO,MAAMC,YAAY,GAAG,CAC1BnB,gBAAgB,CAACoB,YADS,EAE1BpB,gBAAgB,CAACqB,gBAFS,EAG1BrB,gBAAgB,CAACsB,QAHS,EAI1BtB,gBAAgB,CAACuB,gBAJS,CAArB;;AASP;AACA;AACA;AACA,OAAO,MAAMC,mBAA0D,GAAG;AACxE,GAACxB,gBAAgB,CAACY,OAAlB,GAA6B,gCAA+BX,UAAW,EADC;AAExE,GAACD,gBAAgB,CAACc,OAAlB,GAA6B,gCAA+Bb,UAAW,EAFC;AAGxE,GAACD,gBAAgB,CAACa,OAAlB,GAA6B,gCAA+BZ,UAAW,EAHC;AAIxE,GAACD,gBAAgB,CAACe,MAAlB,GAA4B,+BAA8Bd,UAAW,EAJG;AAKxE,GAACD,gBAAgB,CAACgB,KAAlB,GAA2B,8BAA6Bf,UAAW,EALK;AAMxE,GAACD,gBAAgB,CAACsB,QAAlB,GAA8B,yCAAwCrB,UAAW,EANT;AAOxE,GAACD,gBAAgB,CAACuB,gBAAlB,GAAsC,uCAAsCtB,UAAW,EAPf;AAQxE,GAACD,gBAAgB,CAACoB,YAAlB,GAAkC,yCAAwCnB,UAAW,EARb;AASxE,GAACD,gBAAgB,CAACqB,gBAAlB,GAAsC,yCAAwCpB,UAAW,EATjB;AAUxE,GAACD,gBAAgB,CAACiB,OAAlB,GAA6B,wCAAuChB,UAAW,EAVP;AAWxE,GAACD,gBAAgB,CAACkB,cAAlB,GAAoC,uCAAsCjB,UAAW;AAXb,CAAnE;AAcP;AACA;AACA;;AAUA,WAAYwB,WAAZ;;WAAYA,W;AAAAA,EAAAA,W,CAAAA,W;AAAAA,EAAAA,W,CAAAA,W;GAAAA,W,KAAAA,W;;AAkCZ,OAAO,MAAMC,UAAwB,GAAG;AACtC,GAAC1B,gBAAgB,CAACY,OAAlB,GAA4B;AAC1Be,IAAAA,WAAW,EAAEF,WAAW,CAACG,EADC;AAE1BC,IAAAA,IAAI,EAAE,2BAFoB;AAG1BC,IAAAA,QAAQ,EAAE,uBAHgB;AAI1BC,IAAAA,QAAQ,EAAE,6BAJgB;AAK1BC,IAAAA,KAAK,EAAE,UALmB;AAM1BC,IAAAA,OAAO,EAAEpC,eANiB;AAO1BqC,IAAAA,cAAc,EAAE;AACdC,MAAAA,cAAc,EAAE;AAAEC,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,MAAM,EAAE,KAAzB;AAAgCC,QAAAA,QAAQ,EAAE;AAA1C,OADF;AAEdC,MAAAA,MAAM,EAAEf,mBAAmB,CAACxB,gBAAgB,CAACY,OAAlB;AAFb;AAPU,GADU;AAatC,GAACZ,gBAAgB,CAACc,OAAlB,GAA4B;AAC1Ba,IAAAA,WAAW,EAAEF,WAAW,CAACG,EADC;AAE1BC,IAAAA,IAAI,EAAE,2BAFoB;AAG1BC,IAAAA,QAAQ,EAAE,+BAHgB;AAI1BC,IAAAA,QAAQ,EAAE,6BAJgB;AAK1BC,IAAAA,KAAK,EAAE,SALmB;AAM1BC,IAAAA,OAAO,EAAEpC,eANiB;AAO1BqC,IAAAA,cAAc,EAAE;AACdC,MAAAA,cAAc,EAAE;AAAEC,QAAAA,IAAI,EAAE,eAAR;AAAyBC,QAAAA,MAAM,EAAE,MAAjC;AAAyCC,QAAAA,QAAQ,EAAE;AAAnD,OADF;AAEdC,MAAAA,MAAM,EAAEf,mBAAmB,CAACxB,gBAAgB,CAACc,OAAlB;AAFb;AAPU,GAbU;AAyBtC,GAACd,gBAAgB,CAACa,OAAlB,GAA4B;AAC1Bc,IAAAA,WAAW,EAAEF,WAAW,CAACG,EADC;AAE1BC,IAAAA,IAAI,EAAE,2BAFoB;AAG1BC,IAAAA,QAAQ,EAAE,+BAHgB;AAI1BC,IAAAA,QAAQ,EAAE,6BAJgB;AAK1BC,IAAAA,KAAK,EAAE,SALmB;AAM1BC,IAAAA,OAAO,EAAEpC,eANiB;AAO1BqC,IAAAA,cAAc,EAAE;AACdC,MAAAA,cAAc,EAAE;AAAEC,QAAAA,IAAI,EAAE,eAAR;AAAyBC,QAAAA,MAAM,EAAE,QAAjC;AAA2CC,QAAAA,QAAQ,EAAE;AAArD,OADF;AAEdC,MAAAA,MAAM,EAAEf,mBAAmB,CAACxB,gBAAgB,CAACa,OAAlB;AAFb;AAPU,GAzBU;AAqCtC,GAACb,gBAAgB,CAACgB,KAAlB,GAA0B;AACxBW,IAAAA,WAAW,EAAEF,WAAW,CAACG,EADD;AAExBC,IAAAA,IAAI,EAAE,2BAFkB;AAGxBC,IAAAA,QAAQ,EAAE,6BAHc;AAIxBC,IAAAA,QAAQ,EAAE,6BAJc;AAKxBC,IAAAA,KAAK,EAAE,OALiB;AAMxBC,IAAAA,OAAO,EAAEpC,eANe;AAOxBqC,IAAAA,cAAc,EAAE;AACdC,MAAAA,cAAc,EAAE;AAAEC,QAAAA,IAAI,EAAE,aAAR;AAAuBC,QAAAA,MAAM,EAAE,QAA/B;AAAyCC,QAAAA,QAAQ,EAAE;AAAnD,OADF;AAEdC,MAAAA,MAAM,EAAEf,mBAAmB,CAACxB,gBAAgB,CAACgB,KAAlB;AAFb;AAPQ,GArCY;AAiDtC,GAAChB,gBAAgB,CAACe,MAAlB,GAA2B;AACzBY,IAAAA,WAAW,EAAEF,WAAW,CAACG,EADA;AAEzBC,IAAAA,IAAI,EAAE,2BAFmB;AAGzBC,IAAAA,QAAQ,EAAE,8BAHe;AAIzBC,IAAAA,QAAQ,EAAE,6BAJe;AAKzBC,IAAAA,KAAK,EAAE,OALkB;AAMzBC,IAAAA,OAAO,EAAEpC,eANgB;AAOzBqC,IAAAA,cAAc,EAAE;AACdC,MAAAA,cAAc,EAAE;AAAEC,QAAAA,IAAI,EAAE,aAAR;AAAuBC,QAAAA,MAAM,EAAE,QAA/B;AAAyCC,QAAAA,QAAQ,EAAE;AAAnD,OADF;AAEdC,MAAAA,MAAM,EAAEf,mBAAmB,CAACxB,gBAAgB,CAACe,MAAlB;AAFb;AAPS,GAjDW;AA6DtC,GAACf,gBAAgB,CAACsB,QAAlB,GAA6B;AAC3BK,IAAAA,WAAW,EAAEF,WAAW,CAACe,EADE;AAE3BC,IAAAA,wBAAwB,SAFG;AAG3BC,IAAAA,MAAM,EAAE,wCAHmB;AAI3BC,IAAAA,cAAc,EAAE5C,aAJW;AAK3B8B,IAAAA,IAAI,EAAE,sBALqB;AAM3BC,IAAAA,QAAQ,EAAE,kCANiB;AAO3BC,IAAAA,QAAQ,EAAE,sCAPiB;AAQ3BC,IAAAA,KAAK,EAAE,UARoB;AAS3BC,IAAAA,OAAO,EAAEW,eATkB;AAU3BC,IAAAA,UAAU,EAAE,4BAVe;AAW3BC,IAAAA,aAAa,EAAE,mFAXY;AAY3BZ,IAAAA,cAAc,EAAE;AACdC,MAAAA,cAAc,EAAE;AAAEC,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,MAAM,EAAE,KAAzB;AAAgCC,QAAAA,QAAQ,EAAE;AAA1C,OADF;AAEdC,MAAAA,MAAM,EAAE;AAFM;AAZW,GA7DS;AA8EtC,GAACvC,gBAAgB,CAACuB,gBAAlB,GAAqC;AACnCI,IAAAA,WAAW,EAAEF,WAAW,CAACe,EADU;AAEnCC,IAAAA,wBAAwB,SAFW;AAGnCC,IAAAA,MAAM,EAAE,8BAH2B;AAInCC,IAAAA,cAAc,EAAE5C,aAJmB;AAKnC8B,IAAAA,IAAI,EAAE,sBAL6B;AAMnCC,IAAAA,QAAQ,EAAE,kCANyB;AAOnCC,IAAAA,QAAQ,EAAE,sCAPyB;AAQnCC,IAAAA,KAAK,EAAE,kBAR4B;AASnCC,IAAAA,OAAO,EAAEW,eAT0B;AAUnCC,IAAAA,UAAU,EAAE,4BAVuB;AAWnCC,IAAAA,aAAa,EAAE,mFAXoB;AAYnCZ,IAAAA,cAAc,EAAE;AACdC,MAAAA,cAAc,EAAE;AAAEC,QAAAA,IAAI,EAAE,wBAAR;AAAkCC,QAAAA,MAAM,EAAE,UAA1C;AAAsDC,QAAAA,QAAQ,EAAE;AAAhE,OADF;AAEdC,MAAAA,MAAM,EAAE;AAFM;AAZmB,GA9EC;AA+FtC,GAACvC,gBAAgB,CAACoB,YAAlB,GAAiC;AAC/BO,IAAAA,WAAW,EAAEF,WAAW,CAACe,EADM;AAE/BC,IAAAA,wBAAwB,QAFO;AAG/BC,IAAAA,MAAM,EAAE,6BAHuB;AAI/Bb,IAAAA,IAAI,EAAE,2BAJyB;AAK/BC,IAAAA,QAAQ,EAAE,sBALqB;AAM/BC,IAAAA,QAAQ,EAAE,qCANqB;AAO/BC,IAAAA,KAAK,EAAE,UAPwB;AAQ/BC,IAAAA,OAAO,EAAEc,eARsB;AAS/BJ,IAAAA,cAAc,EAAE7C,aATe;AAU/BgD,IAAAA,aAAa,EAAE,qEAVgB;AAW/BZ,IAAAA,cAAc,EAAE;AACdC,MAAAA,cAAc,EAAE;AAAEC,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,MAAM,EAAE,KAAzB;AAAgCC,QAAAA,QAAQ,EAAE;AAA1C,OADF;AAEdC,MAAAA,MAAM,EAAE;AAFM;AAXe,GA/FK;AA+GtC,GAACvC,gBAAgB,CAACqB,gBAAlB,GAAqC;AACnCM,IAAAA,WAAW,EAAEF,WAAW,CAACe,EADU;AAEnCC,IAAAA,wBAAwB,QAFW;AAGnCC,IAAAA,MAAM,EAAE,6BAH2B;AAInCb,IAAAA,IAAI,EAAE,2BAJ6B;AAKnCC,IAAAA,QAAQ,EAAE,uCALyB;AAMnCC,IAAAA,QAAQ,EAAE,sCANyB;AAOnCC,IAAAA,KAAK,EAAE,kBAP4B;AAQnCC,IAAAA,OAAO,EAAEc,eAR0B;AASnCJ,IAAAA,cAAc,EAAE7C,aATmB;AAUnCgD,IAAAA,aAAa,EAAE,qEAVoB;AAWnCZ,IAAAA,cAAc,EAAE;AACdC,MAAAA,cAAc,EAAE;AAAEC,QAAAA,IAAI,EAAE,wBAAR;AAAkCC,QAAAA,MAAM,EAAE,YAA1C;AAAwDC,QAAAA,QAAQ,EAAE;AAAlE,OADF;AAEdC,MAAAA,MAAM,EAAE;AAFM;AAXmB,GA/GC;AA+HtC,GAACvC,gBAAgB,CAACiB,OAAlB,GAA4B;AAC1BU,IAAAA,WAAW,EAAEF,WAAW,CAACG,EADC;AAE1Ba,IAAAA,wBAAwB,QAFE;AAG1BC,IAAAA,MAAM,EAAE,0CAHkB;AAI1Bb,IAAAA,IAAI,EAAE,qBAJoB;AAK1BC,IAAAA,QAAQ,EAAE,0BALgB;AAM1BC,IAAAA,QAAQ,EAAE,qCANgB;AAO1BC,IAAAA,KAAK,EAAE,SAPmB;AAQ1BC,IAAAA,OAAO,EAAEe,gBARiB;AAS1Bd,IAAAA,cAAc,EAAE;AACdK,MAAAA,MAAM,EAAE,0BADM;AAEdJ,MAAAA,cAAc,EAAE;AAAEC,QAAAA,IAAI,EAAE,eAAR;AAAyBC,QAAAA,MAAM,EAAE,OAAjC;AAA0CC,QAAAA,QAAQ,EAAE;AAApD;AAFF;AATU,GA/HU;AA6ItC,GAACtC,gBAAgB,CAACkB,cAAlB,GAAmC;AACjCS,IAAAA,WAAW,EAAEF,WAAW,CAACG,EADQ;AAEjCa,IAAAA,wBAAwB,QAFS;AAGjCC,IAAAA,MAAM,EAAE,0CAHyB;AAIjCb,IAAAA,IAAI,EAAE,qBAJ2B;AAKjCC,IAAAA,QAAQ,EAAE,iCALuB;AAMjCC,IAAAA,QAAQ,EAAE,qCANuB;AAOjCC,IAAAA,KAAK,EAAE,gBAP0B;AAQjCC,IAAAA,OAAO,EAAEe,gBARwB;AASjCd,IAAAA,cAAc,EAAE;AACdC,MAAAA,cAAc,EAAE;AAAEC,QAAAA,IAAI,EAAE,sBAAR;AAAgCC,QAAAA,MAAM,EAAE,QAAxC;AAAkDC,QAAAA,QAAQ,EAAE;AAA5D,OADF;AAEdC,MAAAA,MAAM,EAAE;AAFM;AATiB;AA7IG,CAAjC","sourcesContent":["import ethereumLogoUrl from 'assets/images/ethereum-logo.png'\nimport arbitrumLogoUrl from 'assets/svg/arbitrum_logo.svg'\nimport optimismLogoUrl from 'assets/svg/optimistic_ethereum.svg'\nimport polygonMaticLogo from 'assets/svg/polygon-matic-logo.svg'\nimport ms from 'ms.macro'\n\nimport { ARBITRUM_LIST, OPTIMISM_LIST } from './lists'\n\n/**\n * List of all the networks supported by the Uniswap Interface\n */\nexport enum SupportedChainId {\n  MAINNET = 1,\n  ROPSTEN = 3,\n  RINKEBY = 4,\n  GOERLI = 5,\n  KOVAN = 42,\n\n  ARBITRUM_ONE = 42161,\n  ARBITRUM_RINKEBY = 421611,\n\n  OPTIMISM = 10,\n  OPTIMISTIC_KOVAN = 69,\n\n  POLYGON = 137,\n  POLYGON_MUMBAI = 80001,\n}\n\nconst INFURA_KEY = process.env.REACT_APP_INFURA_KEY\nif (typeof INFURA_KEY === 'undefined') {\n  throw new Error(`REACT_APP_INFURA_KEY must be a defined environment variable`)\n}\n\n/**\n * Array of all the supported chain IDs\n */\nexport const ALL_SUPPORTED_CHAIN_IDS: SupportedChainId[] = Object.values(SupportedChainId).filter(\n  (id) => typeof id === 'number'\n) as SupportedChainId[]\n\n/**\n * All the chain IDs that are running the Ethereum protocol.\n */\nexport const L1_CHAIN_IDS = [\n  SupportedChainId.MAINNET,\n  SupportedChainId.ROPSTEN,\n  SupportedChainId.RINKEBY,\n  SupportedChainId.GOERLI,\n  SupportedChainId.KOVAN,\n  SupportedChainId.POLYGON,\n  SupportedChainId.POLYGON_MUMBAI,\n] as const\n\nexport type SupportedL1ChainId = typeof L1_CHAIN_IDS[number]\n\n/**\n * Controls some L2 specific behavior, e.g. slippage tolerance, special UI behavior.\n * The expectation is that all of these networks have immediate transaction confirmation.\n */\nexport const L2_CHAIN_IDS = [\n  SupportedChainId.ARBITRUM_ONE,\n  SupportedChainId.ARBITRUM_RINKEBY,\n  SupportedChainId.OPTIMISM,\n  SupportedChainId.OPTIMISTIC_KOVAN,\n] as const\n\nexport type SupportedL2ChainId = typeof L2_CHAIN_IDS[number]\n\n/**\n * These are the network URLs used by the interface when there is not another available source of chain data\n */\nexport const INFURA_NETWORK_URLS: { [key in SupportedChainId]: string } = {\n  [SupportedChainId.MAINNET]: `https://mainnet.infura.io/v3/${INFURA_KEY}`,\n  [SupportedChainId.RINKEBY]: `https://rinkeby.infura.io/v3/${INFURA_KEY}`,\n  [SupportedChainId.ROPSTEN]: `https://ropsten.infura.io/v3/${INFURA_KEY}`,\n  [SupportedChainId.GOERLI]: `https://goerli.infura.io/v3/${INFURA_KEY}`,\n  [SupportedChainId.KOVAN]: `https://kovan.infura.io/v3/${INFURA_KEY}`,\n  [SupportedChainId.OPTIMISM]: `https://optimism-mainnet.infura.io/v3/${INFURA_KEY}`,\n  [SupportedChainId.OPTIMISTIC_KOVAN]: `https://optimism-kovan.infura.io/v3/${INFURA_KEY}`,\n  [SupportedChainId.ARBITRUM_ONE]: `https://arbitrum-mainnet.infura.io/v3/${INFURA_KEY}`,\n  [SupportedChainId.ARBITRUM_RINKEBY]: `https://arbitrum-rinkeby.infura.io/v3/${INFURA_KEY}`,\n  [SupportedChainId.POLYGON]: `https://polygon-mainnet.infura.io/v3/${INFURA_KEY}`,\n  [SupportedChainId.POLYGON_MUMBAI]: `https://polygon-mumbai.infura.io/v3/${INFURA_KEY}`,\n}\n\n/**\n * This is used to call the add network RPC\n */\ninterface AddNetworkInfo {\n  readonly rpcUrl: string\n  readonly nativeCurrency: {\n    name: string // e.g. 'Goerli ETH',\n    symbol: string // e.g. 'gorETH',\n    decimals: number // e.g. 18,\n  }\n}\n\nexport enum NetworkType {\n  L1,\n  L2,\n}\n\ninterface BaseChainInfo {\n  readonly networkType: NetworkType\n  readonly blockWaitMsBeforeWarning?: number\n  readonly docs: string\n  readonly bridge?: string\n  readonly explorer: string\n  readonly infoLink: string\n  readonly logoUrl: string\n  readonly label: string\n  readonly helpCenterUrl?: string\n  readonly addNetworkInfo: AddNetworkInfo\n}\n\nexport interface L1ChainInfo extends BaseChainInfo {\n  readonly networkType: NetworkType.L1\n}\n\nexport interface L2ChainInfo extends BaseChainInfo {\n  readonly networkType: NetworkType.L2\n  readonly bridge: string\n  readonly statusPage?: string\n  readonly defaultListUrl: string\n}\n\nexport type ChainInfoMap = { readonly [chainId: number]: L1ChainInfo | L2ChainInfo } & {\n  readonly [chainId in SupportedL2ChainId]: L2ChainInfo\n} &\n  { readonly [chainId in SupportedL1ChainId]: L1ChainInfo }\n\nexport const CHAIN_INFO: ChainInfoMap = {\n  [SupportedChainId.MAINNET]: {\n    networkType: NetworkType.L1,\n    docs: 'https://docs.uniswap.org/',\n    explorer: 'https://etherscan.io/',\n    infoLink: 'https://info.uniswap.org/#/',\n    label: 'Ethereum',\n    logoUrl: ethereumLogoUrl,\n    addNetworkInfo: {\n      nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n      rpcUrl: INFURA_NETWORK_URLS[SupportedChainId.MAINNET],\n    },\n  },\n  [SupportedChainId.RINKEBY]: {\n    networkType: NetworkType.L1,\n    docs: 'https://docs.uniswap.org/',\n    explorer: 'https://rinkeby.etherscan.io/',\n    infoLink: 'https://info.uniswap.org/#/',\n    label: 'Rinkeby',\n    logoUrl: ethereumLogoUrl,\n    addNetworkInfo: {\n      nativeCurrency: { name: 'Rinkeby Ether', symbol: 'rETH', decimals: 18 },\n      rpcUrl: INFURA_NETWORK_URLS[SupportedChainId.RINKEBY],\n    },\n  },\n  [SupportedChainId.ROPSTEN]: {\n    networkType: NetworkType.L1,\n    docs: 'https://docs.uniswap.org/',\n    explorer: 'https://ropsten.etherscan.io/',\n    infoLink: 'https://info.uniswap.org/#/',\n    label: 'Ropsten',\n    logoUrl: ethereumLogoUrl,\n    addNetworkInfo: {\n      nativeCurrency: { name: 'Ropsten Ether', symbol: 'ropETH', decimals: 18 },\n      rpcUrl: INFURA_NETWORK_URLS[SupportedChainId.ROPSTEN],\n    },\n  },\n  [SupportedChainId.KOVAN]: {\n    networkType: NetworkType.L1,\n    docs: 'https://docs.uniswap.org/',\n    explorer: 'https://kovan.etherscan.io/',\n    infoLink: 'https://info.uniswap.org/#/',\n    label: 'Kovan',\n    logoUrl: ethereumLogoUrl,\n    addNetworkInfo: {\n      nativeCurrency: { name: 'Kovan Ether', symbol: 'kovETH', decimals: 18 },\n      rpcUrl: INFURA_NETWORK_URLS[SupportedChainId.KOVAN],\n    },\n  },\n  [SupportedChainId.GOERLI]: {\n    networkType: NetworkType.L1,\n    docs: 'https://docs.uniswap.org/',\n    explorer: 'https://goerli.etherscan.io/',\n    infoLink: 'https://info.uniswap.org/#/',\n    label: 'Görli',\n    logoUrl: ethereumLogoUrl,\n    addNetworkInfo: {\n      nativeCurrency: { name: 'Görli Ether', symbol: 'görETH', decimals: 18 },\n      rpcUrl: INFURA_NETWORK_URLS[SupportedChainId.GOERLI],\n    },\n  },\n  [SupportedChainId.OPTIMISM]: {\n    networkType: NetworkType.L2,\n    blockWaitMsBeforeWarning: ms`25m`,\n    bridge: 'https://gateway.optimism.io/?chainId=1',\n    defaultListUrl: OPTIMISM_LIST,\n    docs: 'https://optimism.io/',\n    explorer: 'https://optimistic.etherscan.io/',\n    infoLink: 'https://info.uniswap.org/#/optimism/',\n    label: 'Optimism',\n    logoUrl: optimismLogoUrl,\n    statusPage: 'https://optimism.io/status',\n    helpCenterUrl: 'https://help.uniswap.org/en/collections/3137778-uniswap-on-optimistic-ethereum-oξ',\n    addNetworkInfo: {\n      nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n      rpcUrl: 'https://mainnet.optimism.io',\n    },\n  },\n  [SupportedChainId.OPTIMISTIC_KOVAN]: {\n    networkType: NetworkType.L2,\n    blockWaitMsBeforeWarning: ms`25m`,\n    bridge: 'https://gateway.optimism.io/',\n    defaultListUrl: OPTIMISM_LIST,\n    docs: 'https://optimism.io/',\n    explorer: 'https://optimistic.etherscan.io/',\n    infoLink: 'https://info.uniswap.org/#/optimism/',\n    label: 'Optimistic Kovan',\n    logoUrl: optimismLogoUrl,\n    statusPage: 'https://optimism.io/status',\n    helpCenterUrl: 'https://help.uniswap.org/en/collections/3137778-uniswap-on-optimistic-ethereum-oξ',\n    addNetworkInfo: {\n      nativeCurrency: { name: 'Optimistic Kovan Ether', symbol: 'kovOpETH', decimals: 18 },\n      rpcUrl: 'https://kovan.optimism.io',\n    },\n  },\n  [SupportedChainId.ARBITRUM_ONE]: {\n    networkType: NetworkType.L2,\n    blockWaitMsBeforeWarning: ms`10m`,\n    bridge: 'https://bridge.arbitrum.io/',\n    docs: 'https://offchainlabs.com/',\n    explorer: 'https://arbiscan.io/',\n    infoLink: 'https://info.uniswap.org/#/arbitrum',\n    label: 'Arbitrum',\n    logoUrl: arbitrumLogoUrl,\n    defaultListUrl: ARBITRUM_LIST,\n    helpCenterUrl: 'https://help.uniswap.org/en/collections/3137787-uniswap-on-arbitrum',\n    addNetworkInfo: {\n      nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n      rpcUrl: 'https://arb1.arbitrum.io/rpc',\n    },\n  },\n  [SupportedChainId.ARBITRUM_RINKEBY]: {\n    networkType: NetworkType.L2,\n    blockWaitMsBeforeWarning: ms`10m`,\n    bridge: 'https://bridge.arbitrum.io/',\n    docs: 'https://offchainlabs.com/',\n    explorer: 'https://rinkeby-explorer.arbitrum.io/',\n    infoLink: 'https://info.uniswap.org/#/arbitrum/',\n    label: 'Arbitrum Rinkeby',\n    logoUrl: arbitrumLogoUrl,\n    defaultListUrl: ARBITRUM_LIST,\n    helpCenterUrl: 'https://help.uniswap.org/en/collections/3137787-uniswap-on-arbitrum',\n    addNetworkInfo: {\n      nativeCurrency: { name: 'Rinkeby Arbitrum Ether', symbol: 'rinkArbETH', decimals: 18 },\n      rpcUrl: 'https://rinkeby.arbitrum.io/rpc',\n    },\n  },\n  [SupportedChainId.POLYGON]: {\n    networkType: NetworkType.L1,\n    blockWaitMsBeforeWarning: ms`10m`,\n    bridge: 'https://wallet.polygon.technology/bridge',\n    docs: 'https://polygon.io/',\n    explorer: 'https://polygonscan.com/',\n    infoLink: 'https://info.uniswap.org/#/polygon/',\n    label: 'Polygon',\n    logoUrl: polygonMaticLogo,\n    addNetworkInfo: {\n      rpcUrl: 'https://polygon-rpc.com/',\n      nativeCurrency: { name: 'Polygon Matic', symbol: 'MATIC', decimals: 18 },\n    },\n  },\n  [SupportedChainId.POLYGON_MUMBAI]: {\n    networkType: NetworkType.L1,\n    blockWaitMsBeforeWarning: ms`10m`,\n    bridge: 'https://wallet.polygon.technology/bridge',\n    docs: 'https://polygon.io/',\n    explorer: 'https://mumbai.polygonscan.com/',\n    infoLink: 'https://info.uniswap.org/#/polygon/',\n    label: 'Polygon Mumbai',\n    logoUrl: polygonMaticLogo,\n    addNetworkInfo: {\n      nativeCurrency: { name: 'Polygon Mumbai Matic', symbol: 'mMATIC', decimals: 18 },\n      rpcUrl: 'https://rpc-endpoints.superfluid.dev/mumbai',\n    },\n  },\n}\n"]},"metadata":{},"sourceType":"module"}