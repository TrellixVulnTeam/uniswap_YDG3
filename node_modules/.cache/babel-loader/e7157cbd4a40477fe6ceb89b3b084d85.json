{"ast":null,"code":"import{useMemo}from'react';import{safeNamehash}from'utils/safeNamehash';import{useSingleCallResult}from'../state/multicall/hooks';import isZero from'../utils/isZero';import{useENSRegistrarContract,useENSResolverContract}from'./useContract';/**\n * Does a lookup for an ENS name to find its contenthash.\n */export default function useENSContentHash(ensName){var _resolverAddressResul;var ensNodeArgument=useMemo(function(){return[ensName===null?undefined:safeNamehash(ensName)];},[ensName]);var registrarContract=useENSRegistrarContract(false);var resolverAddressResult=useSingleCallResult(registrarContract,'resolver',ensNodeArgument);var resolverAddress=(_resolverAddressResul=resolverAddressResult.result)===null||_resolverAddressResul===void 0?void 0:_resolverAddressResul[0];var resolverContract=useENSResolverContract(resolverAddress&&isZero(resolverAddress)?undefined:resolverAddress,false);var contenthash=useSingleCallResult(resolverContract,'contenthash',ensNodeArgument);return useMemo(function(){var _contenthash$result$,_contenthash$result;return{contenthash:(_contenthash$result$=(_contenthash$result=contenthash.result)===null||_contenthash$result===void 0?void 0:_contenthash$result[0])!==null&&_contenthash$result$!==void 0?_contenthash$result$:null,loading:resolverAddressResult.loading||contenthash.loading};},[contenthash.loading,contenthash.result,resolverAddressResult.loading]);}","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/hooks/useENSContentHash.ts"],"names":["useMemo","safeNamehash","useSingleCallResult","isZero","useENSRegistrarContract","useENSResolverContract","useENSContentHash","ensName","ensNodeArgument","undefined","registrarContract","resolverAddressResult","resolverAddress","result","resolverContract","contenthash","loading"],"mappings":"AAAA,OAASA,OAAT,KAAwB,OAAxB,CACA,OAASC,YAAT,KAA6B,oBAA7B,CAEA,OAASC,mBAAT,KAAoC,0BAApC,CACA,MAAOC,CAAAA,MAAP,KAAmB,iBAAnB,CACA,OAASC,uBAAT,CAAkCC,sBAAlC,KAAgE,eAAhE,CAEA;AACA;AACA,GACA,cAAe,SAASC,CAAAA,iBAAT,CAA2BC,OAA3B,CAAsG,2BACnH,GAAMC,CAAAA,eAAe,CAAGR,OAAO,CAAC,iBAAM,CAACO,OAAO,GAAK,IAAZ,CAAmBE,SAAnB,CAA+BR,YAAY,CAACM,OAAD,CAA5C,CAAN,EAAD,CAA+D,CAACA,OAAD,CAA/D,CAA/B,CACA,GAAMG,CAAAA,iBAAiB,CAAGN,uBAAuB,CAAC,KAAD,CAAjD,CACA,GAAMO,CAAAA,qBAAqB,CAAGT,mBAAmB,CAACQ,iBAAD,CAAoB,UAApB,CAAgCF,eAAhC,CAAjD,CACA,GAAMI,CAAAA,eAAe,wBAAGD,qBAAqB,CAACE,MAAzB,gDAAG,sBAA+B,CAA/B,CAAxB,CACA,GAAMC,CAAAA,gBAAgB,CAAGT,sBAAsB,CAC7CO,eAAe,EAAIT,MAAM,CAACS,eAAD,CAAzB,CAA6CH,SAA7C,CAAyDG,eADZ,CAE7C,KAF6C,CAA/C,CAIA,GAAMG,CAAAA,WAAW,CAAGb,mBAAmB,CAACY,gBAAD,CAAmB,aAAnB,CAAkCN,eAAlC,CAAvC,CAEA,MAAOR,CAAAA,OAAO,CACZ,8DAAO,CACLe,WAAW,4CAAEA,WAAW,CAACF,MAAd,8CAAE,oBAAqB,CAArB,CAAF,6DAA6B,IADnC,CAELG,OAAO,CAAEL,qBAAqB,CAACK,OAAtB,EAAiCD,WAAW,CAACC,OAFjD,CAAP,EADY,CAKZ,CAACD,WAAW,CAACC,OAAb,CAAsBD,WAAW,CAACF,MAAlC,CAA0CF,qBAAqB,CAACK,OAAhE,CALY,CAAd,CAOD","sourcesContent":["import { useMemo } from 'react'\nimport { safeNamehash } from 'utils/safeNamehash'\n\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport isZero from '../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from './useContract'\n\n/**\n * Does a lookup for an ENS name to find its contenthash.\n */\nexport default function useENSContentHash(ensName?: string | null): { loading: boolean; contenthash: string | null } {\n  const ensNodeArgument = useMemo(() => [ensName === null ? undefined : safeNamehash(ensName)], [ensName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddress = resolverAddressResult.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\n    false\n  )\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\n\n  return useMemo(\n    () => ({\n      contenthash: contenthash.result?.[0] ?? null,\n      loading: resolverAddressResult.loading || contenthash.loading,\n    }),\n    [contenthash.loading, contenthash.result, resolverAddressResult.loading]\n  )\n}\n"]},"metadata":{},"sourceType":"module"}