{"ast":null,"code":"import _styled from \"styled-components\";\n\nvar _jsxFileName = \"/Users/safahi/Downloads/interface-4.30.1/src/components/earn/ClaimRewardModal.tsx\",\n    _s = $RefreshSig$();\n\nimport { Trans } from \"@lingui/react\";\nimport { useState } from 'react';\nimport { useStakingContract } from '../../hooks/useContract';\nimport { useActiveWeb3React } from '../../hooks/web3';\nimport { TransactionType } from '../../state/transactions/actions';\nimport { useTransactionAdder } from '../../state/transactions/hooks';\nimport { CloseIcon, ThemedText } from '../../theme';\nimport { ButtonError } from '../Button';\nimport { AutoColumn } from '../Column';\nimport Modal from '../Modal';\nimport { LoadingView, SubmittedView } from '../ModalViews';\nimport { RowBetween } from '../Row';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContentWrapper = _styled(AutoColumn).withConfig({\n  displayName: \"ClaimRewardModal__ContentWrapper\",\n  componentId: \"sc-jsl5h0-0\"\n})([\"width:100%;padding:1rem;\"]);\n\nexport default function ClaimRewardModal({\n  isOpen,\n  onDismiss,\n  stakingInfo\n}) {\n  _s();\n\n  var _stakingInfo$earnedAm, _error2, _stakingInfo$earnedAm2;\n\n  const {\n    account\n  } = useActiveWeb3React(); // monitor call to help UI loading state\n\n  const addTransaction = useTransactionAdder();\n  const [hash, setHash] = useState();\n  const [attempting, setAttempting] = useState(false);\n\n  function wrappedOnDismiss() {\n    setHash(undefined);\n    setAttempting(false);\n    onDismiss();\n  }\n\n  const stakingContract = useStakingContract(stakingInfo.stakingRewardAddress);\n\n  async function onClaimReward() {\n    if (stakingContract && (stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.stakedAmount) && account) {\n      setAttempting(true);\n      await stakingContract.getReward({\n        gasLimit: 350000\n      }).then(response => {\n        addTransaction(response, {\n          type: TransactionType.CLAIM,\n          recipient: account\n        });\n        setHash(response.hash);\n      }).catch(error => {\n        setAttempting(false);\n        console.log(error);\n      });\n    }\n  }\n\n  let error;\n\n  if (!account) {\n    error = /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"Connect Wallet\"\n    }, void 0, false, void 0, this);\n  }\n\n  if (!(stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.stakedAmount)) {\n    var _error;\n\n    error = (_error = error) !== null && _error !== void 0 ? _error : /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"Enter an amount\"\n    }, void 0, false, void 0, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onDismiss: wrappedOnDismiss,\n    maxHeight: 90,\n    children: [!attempting && !hash && /*#__PURE__*/_jsxDEV(ContentWrapper, {\n      gap: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n        children: [/*#__PURE__*/_jsxDEV(ThemedText.MediumHeader, {\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Claim\"\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CloseIcon, {\n          onClick: wrappedOnDismiss\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), (stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.earnedAmount) && /*#__PURE__*/_jsxDEV(AutoColumn, {\n        justify: \"center\",\n        gap: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(ThemedText.Body, {\n          fontWeight: 600,\n          fontSize: 36,\n          children: stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$earnedAm = stakingInfo.earnedAmount) === null || _stakingInfo$earnedAm === void 0 ? void 0 : _stakingInfo$earnedAm.toSignificant(6)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ThemedText.Body, {\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Unclaimed UNI\"\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ThemedText.SubHeader, {\n        style: {\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Trans, {\n          id: \"When you claim without withdrawing your liquidity remains in the mining pool.\"\n        }, void 0, false, void 0, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ButtonError, {\n        disabled: !!error,\n        error: !!error && !!(stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.stakedAmount),\n        onClick: onClaimReward,\n        children: (_error2 = error) !== null && _error2 !== void 0 ? _error2 : /*#__PURE__*/_jsxDEV(Trans, {\n          id: \"Claim\"\n        }, void 0, false, void 0, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), attempting && !hash && /*#__PURE__*/_jsxDEV(LoadingView, {\n      onDismiss: wrappedOnDismiss,\n      children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n        gap: \"12px\",\n        justify: 'center',\n        children: /*#__PURE__*/_jsxDEV(ThemedText.Body, {\n          fontSize: 20,\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Claiming {0} UNI\",\n            values: {\n              0: stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$earnedAm2 = stakingInfo.earnedAmount) === null || _stakingInfo$earnedAm2 === void 0 ? void 0 : _stakingInfo$earnedAm2.toSignificant(6)\n            }\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), hash && /*#__PURE__*/_jsxDEV(SubmittedView, {\n      onDismiss: wrappedOnDismiss,\n      hash: hash,\n      children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n        gap: \"12px\",\n        justify: 'center',\n        children: [/*#__PURE__*/_jsxDEV(ThemedText.LargeHeader, {\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Transaction Submitted\"\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ThemedText.Body, {\n          fontSize: 20,\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Claimed UNI!\"\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimRewardModal, \"t8q4xNDKa5pYYfxbyZDlUSFjd78=\", false, function () {\n  return [useActiveWeb3React, useTransactionAdder, useStakingContract];\n});\n\n_c = ClaimRewardModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimRewardModal\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/components/earn/ClaimRewardModal.tsx"],"names":["useState","useStakingContract","useActiveWeb3React","TransactionType","useTransactionAdder","CloseIcon","ThemedText","ButtonError","AutoColumn","Modal","LoadingView","SubmittedView","RowBetween","ContentWrapper","styled","ClaimRewardModal","isOpen","onDismiss","stakingInfo","account","addTransaction","hash","setHash","attempting","setAttempting","wrappedOnDismiss","undefined","stakingContract","stakingRewardAddress","onClaimReward","stakedAmount","getReward","gasLimit","then","response","type","CLAIM","recipient","catch","error","console","log","earnedAmount","toSignificant","textAlign"],"mappings":"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","sourcesContent":["import { TransactionResponse } from '@ethersproject/providers'\nimport { Trans } from '@lingui/macro'\nimport { ReactNode, useState } from 'react'\nimport styled from 'styled-components/macro'\n\nimport { useStakingContract } from '../../hooks/useContract'\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport { StakingInfo } from '../../state/stake/hooks'\nimport { TransactionType } from '../../state/transactions/actions'\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { CloseIcon, ThemedText } from '../../theme'\nimport { ButtonError } from '../Button'\nimport { AutoColumn } from '../Column'\nimport Modal from '../Modal'\nimport { LoadingView, SubmittedView } from '../ModalViews'\nimport { RowBetween } from '../Row'\n\nconst ContentWrapper = styled(AutoColumn)`\n  width: 100%;\n  padding: 1rem;\n`\n\ninterface StakingModalProps {\n  isOpen: boolean\n  onDismiss: () => void\n  stakingInfo: StakingInfo\n}\n\nexport default function ClaimRewardModal({ isOpen, onDismiss, stakingInfo }: StakingModalProps) {\n  const { account } = useActiveWeb3React()\n\n  // monitor call to help UI loading state\n  const addTransaction = useTransactionAdder()\n  const [hash, setHash] = useState<string | undefined>()\n  const [attempting, setAttempting] = useState(false)\n\n  function wrappedOnDismiss() {\n    setHash(undefined)\n    setAttempting(false)\n    onDismiss()\n  }\n\n  const stakingContract = useStakingContract(stakingInfo.stakingRewardAddress)\n\n  async function onClaimReward() {\n    if (stakingContract && stakingInfo?.stakedAmount && account) {\n      setAttempting(true)\n      await stakingContract\n        .getReward({ gasLimit: 350000 })\n        .then((response: TransactionResponse) => {\n          addTransaction(response, {\n            type: TransactionType.CLAIM,\n            recipient: account,\n          })\n          setHash(response.hash)\n        })\n        .catch((error: any) => {\n          setAttempting(false)\n          console.log(error)\n        })\n    }\n  }\n\n  let error: ReactNode | undefined\n  if (!account) {\n    error = <Trans>Connect Wallet</Trans>\n  }\n  if (!stakingInfo?.stakedAmount) {\n    error = error ?? <Trans>Enter an amount</Trans>\n  }\n\n  return (\n    <Modal isOpen={isOpen} onDismiss={wrappedOnDismiss} maxHeight={90}>\n      {!attempting && !hash && (\n        <ContentWrapper gap=\"lg\">\n          <RowBetween>\n            <ThemedText.MediumHeader>\n              <Trans>Claim</Trans>\n            </ThemedText.MediumHeader>\n            <CloseIcon onClick={wrappedOnDismiss} />\n          </RowBetween>\n          {stakingInfo?.earnedAmount && (\n            <AutoColumn justify=\"center\" gap=\"md\">\n              <ThemedText.Body fontWeight={600} fontSize={36}>\n                {stakingInfo?.earnedAmount?.toSignificant(6)}\n              </ThemedText.Body>\n              <ThemedText.Body>\n                <Trans>Unclaimed UNI</Trans>\n              </ThemedText.Body>\n            </AutoColumn>\n          )}\n          <ThemedText.SubHeader style={{ textAlign: 'center' }}>\n            <Trans>When you claim without withdrawing your liquidity remains in the mining pool.</Trans>\n          </ThemedText.SubHeader>\n          <ButtonError disabled={!!error} error={!!error && !!stakingInfo?.stakedAmount} onClick={onClaimReward}>\n            {error ?? <Trans>Claim</Trans>}\n          </ButtonError>\n        </ContentWrapper>\n      )}\n      {attempting && !hash && (\n        <LoadingView onDismiss={wrappedOnDismiss}>\n          <AutoColumn gap=\"12px\" justify={'center'}>\n            <ThemedText.Body fontSize={20}>\n              <Trans>Claiming {stakingInfo?.earnedAmount?.toSignificant(6)} UNI</Trans>\n            </ThemedText.Body>\n          </AutoColumn>\n        </LoadingView>\n      )}\n      {hash && (\n        <SubmittedView onDismiss={wrappedOnDismiss} hash={hash}>\n          <AutoColumn gap=\"12px\" justify={'center'}>\n            <ThemedText.LargeHeader>\n              <Trans>Transaction Submitted</Trans>\n            </ThemedText.LargeHeader>\n            <ThemedText.Body fontSize={20}>\n              <Trans>Claimed UNI!</Trans>\n            </ThemedText.Body>\n          </AutoColumn>\n        </SubmittedView>\n      )}\n    </Modal>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}