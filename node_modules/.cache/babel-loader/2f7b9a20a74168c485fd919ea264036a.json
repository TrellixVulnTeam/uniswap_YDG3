{"ast":null,"code":"import _regeneratorRuntime from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _styled from\"styled-components\";var _templateObject,_templateObject2,_templateObject3;import{Trans}from\"@lingui/react\";import{UnsupportedChainIdError,useWeb3React}from'@web3-react/core';import{WalletConnectConnector}from'@web3-react/walletconnect-connector';import{AutoColumn}from'components/Column';import{PrivacyPolicy}from'components/PrivacyPolicy';import Row,{AutoRow,RowBetween}from'components/Row';import{useWalletConnectMonitoringEventCallback}from'hooks/useMonitoringEventCallback';import{useEffect,useState}from'react';import{ArrowLeft,ArrowRight,Info}from'react-feather';import ReactGA from'react-ga';import MetamaskIcon from'../../assets/images/metamask.png';import{ReactComponent as Close}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/x.svg\";import{fortmatic,injected,portis}from'../../connectors';import{OVERLAY_READY}from'../../connectors/Fortmatic';import{SUPPORTED_WALLETS}from'../../constants/wallet';import usePrevious from'../../hooks/usePrevious';import{useModalOpen,useWalletModalToggle}from'../../state/application/hooks';import{ApplicationModal}from'../../state/application/reducer';import{ExternalLink,ThemedText}from'../../theme';import{isMobile}from'../../utils/userAgent';import AccountDetails from'../AccountDetails';import Card,{LightCard}from'../Card';import Modal from'../Modal';import Option from'./Option';import PendingView from'./PendingView';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CloseIcon=_styled.div.withConfig({componentId:\"sc-1hmbv05-0\"})([\"position:absolute;right:1rem;top:14px;&:hover{cursor:pointer;opacity:0.6;}\"]);var CloseColor=_styled(Close).withConfig({componentId:\"sc-1hmbv05-1\"})([\"path{stroke:\",\";}\"],function(_ref){var theme=_ref.theme;return theme.text4;});var Wrapper=_styled.div.withConfig({componentId:\"sc-1hmbv05-2\"})([\"\",\" margin:0;padding:0;width:100%;\"],function(_ref2){var theme=_ref2.theme;return theme.flexColumnNoWrap;});var HeaderRow=_styled.div.withConfig({componentId:\"sc-1hmbv05-3\"})([\"\",\";padding:1rem 1rem;font-weight:500;color:\",\";\",\";\"],function(_ref3){var theme=_ref3.theme;return theme.flexRowNoWrap;},function(props){return props.color==='blue'?function(_ref4){var theme=_ref4.theme;return theme.primary1;}:'inherit';},function(_ref5){var theme=_ref5.theme;return theme.mediaWidth.upToMedium(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    padding: 1rem;\\n  \"])));});var ContentWrapper=_styled.div.withConfig({componentId:\"sc-1hmbv05-4\"})([\"background-color:\",\";padding:0 1rem 1rem 1rem;border-bottom-left-radius:20px;border-bottom-right-radius:20px;\",\";\"],function(_ref6){var theme=_ref6.theme;return theme.bg0;},function(_ref7){var theme=_ref7.theme;return theme.mediaWidth.upToMedium(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"padding: 0 1rem 1rem 1rem\"])));});var UpperSection=_styled.div.withConfig({componentId:\"sc-1hmbv05-5\"})([\"position:relative;h5{margin:0;margin-bottom:0.5rem;font-size:1rem;font-weight:400;}h5:last-child{margin-bottom:0px;}h4{margin-top:0;font-weight:500;}\"]);var OptionGrid=_styled.div.withConfig({componentId:\"sc-1hmbv05-6\"})([\"display:grid;grid-gap:10px;\",\";\"],function(_ref8){var theme=_ref8.theme;return theme.mediaWidth.upToMedium(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n    grid-template-columns: 1fr;\\n    grid-gap: 10px;\\n  \"])));});var HoverText=_styled.div.withConfig({componentId:\"sc-1hmbv05-7\"})([\"text-decoration:none;color:\",\";display:flex;align-items:center;:hover{cursor:pointer;}\"],function(_ref9){var theme=_ref9.theme;return theme.text1;});var LinkCard=_styled(Card).withConfig({componentId:\"sc-1hmbv05-8\"})([\"background-color:\",\";color:\",\";:hover{cursor:pointer;filter:brightness(0.9);}\"],function(_ref10){var theme=_ref10.theme;return theme.bg1;},function(_ref11){var theme=_ref11.theme;return theme.text3;});var WALLET_VIEWS={OPTIONS:'options',OPTIONS_SECONDARY:'options_secondary',ACCOUNT:'account',PENDING:'pending',LEGAL:'legal'};export default function WalletModal(_ref12){var pendingTransactions=_ref12.pendingTransactions,confirmedTransactions=_ref12.confirmedTransactions,ENSName=_ref12.ENSName;// important that these are destructed from the account-specific web3-react context\nvar _useWeb3React=useWeb3React(),active=_useWeb3React.active,account=_useWeb3React.account,connector=_useWeb3React.connector,activate=_useWeb3React.activate,error=_useWeb3React.error;var _useState=useState(WALLET_VIEWS.ACCOUNT),_useState2=_slicedToArray(_useState,2),walletView=_useState2[0],setWalletView=_useState2[1];var previousWalletView=usePrevious(walletView);var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),pendingWallet=_useState4[0],setPendingWallet=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),pendingError=_useState6[0],setPendingError=_useState6[1];var walletModalOpen=useModalOpen(ApplicationModal.WALLET);var toggleWalletModal=useWalletModalToggle();var previousAccount=usePrevious(account);var logMonitoringEvent=useWalletConnectMonitoringEventCallback();// close on connection, when logged out before\nuseEffect(function(){if(account&&!previousAccount&&walletModalOpen){toggleWalletModal();}},[account,previousAccount,toggleWalletModal,walletModalOpen]);// always reset to account view\nuseEffect(function(){if(walletModalOpen){setPendingError(false);setWalletView(WALLET_VIEWS.ACCOUNT);}},[walletModalOpen]);// close modal when a connection is successful\nvar activePrevious=usePrevious(active);var connectorPrevious=usePrevious(connector);useEffect(function(){if(walletModalOpen&&(active&&!activePrevious||connector&&connector!==connectorPrevious&&!error)){setWalletView(WALLET_VIEWS.ACCOUNT);}},[setWalletView,active,error,connector,walletModalOpen,activePrevious,connectorPrevious]);var tryActivation=/*#__PURE__*/function(){var _ref13=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(connector){var name;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:name='';Object.keys(SUPPORTED_WALLETS).map(function(key){if(connector===SUPPORTED_WALLETS[key].connector){return name=SUPPORTED_WALLETS[key].name;}return true;});// log selected wallet\nReactGA.event({category:'Wallet',action:'Change Wallet',label:name});setPendingWallet(connector);// set wallet for pending view\nsetWalletView(WALLET_VIEWS.PENDING);// if the connector is walletconnect and the user has already tried to connect, manually reset the connector\nif(connector instanceof WalletConnectConnector){connector.walletConnectProvider=undefined;}connector&&activate(connector,undefined,true).then(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var walletAddress;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return connector.getAccount();case 2:walletAddress=_context.sent;logMonitoringEvent({walletAddress:walletAddress});case 4:case\"end\":return _context.stop();}}},_callee);}))).catch(function(error){if(error instanceof UnsupportedChainIdError){activate(connector);// a little janky...can't use setError because the connector isn't set\n}else{setPendingError(true);}});case 7:case\"end\":return _context2.stop();}}},_callee2);}));return function tryActivation(_x){return _ref13.apply(this,arguments);};}();// close wallet modal if fortmatic modal is active\nuseEffect(function(){fortmatic.on(OVERLAY_READY,function(){toggleWalletModal();});},[toggleWalletModal]);// get wallets user can switch too, depending on device/browser\nfunction getOptions(){var isMetamask=window.ethereum&&window.ethereum.isMetaMask;return Object.keys(SUPPORTED_WALLETS).map(function(key){var option=SUPPORTED_WALLETS[key];// check for mobile options\nif(isMobile){//disable portis on mobile for now\nif(option.connector===portis){return null;}if(!window.web3&&!window.ethereum&&option.mobile){return/*#__PURE__*/_jsx(Option,{onClick:function onClick(){option.connector!==connector&&!option.href&&tryActivation(option.connector);},id:\"connect-\".concat(key),active:option.connector&&option.connector===connector,color:option.color,link:option.href,header:option.name,subheader:null,icon:option.iconURL},key);}return null;}// overwrite injected when needed\nif(option.connector===injected){// don't show injected if there's no injected provider\nif(!(window.web3||window.ethereum)){if(option.name==='MetaMask'){return/*#__PURE__*/_jsx(Option,{id:\"connect-\".concat(key),color:'#E8831D',header:/*#__PURE__*/_jsx(Trans,{id:\"Install Metamask\"}),subheader:null,link:'https://metamask.io/',icon:MetamaskIcon},key);}else{return null;//dont want to return install twice\n}}// don't return metamask if injected provider isn't metamask\nelse if(option.name==='MetaMask'&&!isMetamask){return null;}// likewise for generic\nelse if(option.name==='Injected'&&isMetamask){return null;}}// return rest of options\nreturn!isMobile&&!option.mobileOnly&&/*#__PURE__*/_jsx(Option,{id:\"connect-\".concat(key),onClick:function onClick(){option.connector===connector?setWalletView(WALLET_VIEWS.ACCOUNT):!option.href&&tryActivation(option.connector);},active:option.connector===connector,color:option.color,link:option.href,header:option.name,subheader:null//use option.descriptio to bring back multi-line\n,icon:option.iconURL},key);});}function getModalContent(){if(error){return/*#__PURE__*/_jsxs(UpperSection,{children:[/*#__PURE__*/_jsx(CloseIcon,{onClick:toggleWalletModal,children:/*#__PURE__*/_jsx(CloseColor,{})}),/*#__PURE__*/_jsx(HeaderRow,{children:error instanceof UnsupportedChainIdError?/*#__PURE__*/_jsx(Trans,{id:\"Wrong Network\"}):/*#__PURE__*/_jsx(Trans,{id:\"Error connecting\"})}),/*#__PURE__*/_jsx(ContentWrapper,{children:error instanceof UnsupportedChainIdError?/*#__PURE__*/_jsx(\"h5\",{children:/*#__PURE__*/_jsx(Trans,{id:\"Please connect to the appropriate Ethereum network.\"})}):/*#__PURE__*/_jsx(Trans,{id:\"Error connecting. Try refreshing the page.\"})})]});}if(walletView===WALLET_VIEWS.LEGAL){return/*#__PURE__*/_jsxs(UpperSection,{children:[/*#__PURE__*/_jsxs(HeaderRow,{children:[/*#__PURE__*/_jsx(HoverText,{onClick:function onClick(){var _ref15;setWalletView((_ref15=previousWalletView===WALLET_VIEWS.LEGAL?WALLET_VIEWS.ACCOUNT:previousWalletView)!==null&&_ref15!==void 0?_ref15:WALLET_VIEWS.ACCOUNT);},children:/*#__PURE__*/_jsx(ArrowLeft,{})}),/*#__PURE__*/_jsx(Row,{justify:\"center\",children:/*#__PURE__*/_jsx(ThemedText.MediumHeader,{children:/*#__PURE__*/_jsx(Trans,{id:\"Legal & Privacy\"})})})]}),/*#__PURE__*/_jsx(PrivacyPolicy,{})]});}if(account&&walletView===WALLET_VIEWS.ACCOUNT){return/*#__PURE__*/_jsx(AccountDetails,{toggleWalletModal:toggleWalletModal,pendingTransactions:pendingTransactions,confirmedTransactions:confirmedTransactions,ENSName:ENSName,openOptions:function openOptions(){return setWalletView(WALLET_VIEWS.OPTIONS);}});}return/*#__PURE__*/_jsxs(UpperSection,{children:[/*#__PURE__*/_jsx(CloseIcon,{onClick:toggleWalletModal,children:/*#__PURE__*/_jsx(CloseColor,{})}),walletView!==WALLET_VIEWS.ACCOUNT?/*#__PURE__*/_jsx(HeaderRow,{color:\"blue\",children:/*#__PURE__*/_jsx(HoverText,{onClick:function onClick(){setPendingError(false);setWalletView(WALLET_VIEWS.ACCOUNT);},children:/*#__PURE__*/_jsx(ArrowLeft,{})})}):/*#__PURE__*/_jsx(HeaderRow,{children:/*#__PURE__*/_jsx(HoverText,{children:/*#__PURE__*/_jsx(Trans,{id:\"Connect a wallet\"})})}),/*#__PURE__*/_jsx(ContentWrapper,{children:/*#__PURE__*/_jsxs(AutoColumn,{gap:\"16px\",children:[/*#__PURE__*/_jsx(LightCard,{children:/*#__PURE__*/_jsx(AutoRow,{style:{flexWrap:'nowrap'},children:/*#__PURE__*/_jsx(ThemedText.Black,{fontSize:14,children:/*#__PURE__*/_jsx(Trans,{id:\"By connecting a wallet, you agree to Uniswap Labs\\u2019 <0>Terms of Service</0> and acknowledge that you have read and understand the Uniswap <1>Protocol Disclaimer</1>.\",components:{0:/*#__PURE__*/_jsx(ExternalLink,{href:\"https://uniswap.org/terms-of-service/\"}),1:/*#__PURE__*/_jsx(ExternalLink,{href:\"https://uniswap.org/disclaimer/\"})}})})})}),walletView===WALLET_VIEWS.PENDING?/*#__PURE__*/_jsx(PendingView,{connector:pendingWallet,error:pendingError,setPendingError:setPendingError,tryActivation:tryActivation}):/*#__PURE__*/_jsx(OptionGrid,{children:getOptions()}),/*#__PURE__*/_jsx(LinkCard,{padding:\".5rem\",$borderRadius:\".75rem\",onClick:function onClick(){return setWalletView(WALLET_VIEWS.LEGAL);},children:/*#__PURE__*/_jsxs(RowBetween,{children:[/*#__PURE__*/_jsxs(AutoRow,{gap:\"4px\",children:[/*#__PURE__*/_jsx(Info,{size:20}),/*#__PURE__*/_jsx(ThemedText.Label,{fontSize:14,children:/*#__PURE__*/_jsx(Trans,{id:\"How this app uses APIs\"})})]}),/*#__PURE__*/_jsx(ArrowRight,{size:16})]})})]})})]});}return/*#__PURE__*/_jsx(Modal,{isOpen:walletModalOpen,onDismiss:toggleWalletModal,minHeight:false,maxHeight:90,children:/*#__PURE__*/_jsx(Wrapper,{children:getModalContent()})});}","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/components/WalletModal/index.tsx"],"names":["UnsupportedChainIdError","useWeb3React","WalletConnectConnector","AutoColumn","PrivacyPolicy","Row","AutoRow","RowBetween","useWalletConnectMonitoringEventCallback","useEffect","useState","ArrowLeft","ArrowRight","Info","ReactGA","MetamaskIcon","fortmatic","injected","portis","OVERLAY_READY","SUPPORTED_WALLETS","usePrevious","useModalOpen","useWalletModalToggle","ApplicationModal","ExternalLink","ThemedText","isMobile","AccountDetails","Card","LightCard","Modal","Option","PendingView","CloseIcon","styled","div","CloseColor","Close","theme","text4","Wrapper","flexColumnNoWrap","HeaderRow","flexRowNoWrap","props","color","primary1","mediaWidth","upToMedium","ContentWrapper","bg0","UpperSection","OptionGrid","HoverText","text1","LinkCard","bg1","text3","WALLET_VIEWS","OPTIONS","OPTIONS_SECONDARY","ACCOUNT","PENDING","LEGAL","WalletModal","pendingTransactions","confirmedTransactions","ENSName","active","account","connector","activate","error","walletView","setWalletView","previousWalletView","pendingWallet","setPendingWallet","pendingError","setPendingError","walletModalOpen","WALLET","toggleWalletModal","previousAccount","logMonitoringEvent","activePrevious","connectorPrevious","tryActivation","name","Object","keys","map","key","event","category","action","label","walletConnectProvider","undefined","then","getAccount","walletAddress","catch","on","getOptions","isMetamask","window","ethereum","isMetaMask","option","web3","mobile","href","iconURL","mobileOnly","getModalContent","flexWrap"],"mappings":"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","sourcesContent":["import { Trans } from '@lingui/macro'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { AutoColumn } from 'components/Column'\nimport { PrivacyPolicy } from 'components/PrivacyPolicy'\nimport Row, { AutoRow, RowBetween } from 'components/Row'\nimport { useWalletConnectMonitoringEventCallback } from 'hooks/useMonitoringEventCallback'\nimport { useEffect, useState } from 'react'\nimport { ArrowLeft, ArrowRight, Info } from 'react-feather'\nimport ReactGA from 'react-ga'\nimport styled from 'styled-components/macro'\n\nimport MetamaskIcon from '../../assets/images/metamask.png'\nimport { ReactComponent as Close } from '../../assets/images/x.svg'\nimport { fortmatic, injected, portis } from '../../connectors'\nimport { OVERLAY_READY } from '../../connectors/Fortmatic'\nimport { SUPPORTED_WALLETS } from '../../constants/wallet'\nimport usePrevious from '../../hooks/usePrevious'\nimport { useModalOpen, useWalletModalToggle } from '../../state/application/hooks'\nimport { ApplicationModal } from '../../state/application/reducer'\nimport { ExternalLink, ThemedText } from '../../theme'\nimport { isMobile } from '../../utils/userAgent'\nimport AccountDetails from '../AccountDetails'\nimport Card, { LightCard } from '../Card'\nimport Modal from '../Modal'\nimport Option from './Option'\nimport PendingView from './PendingView'\n\nconst CloseIcon = styled.div`\n  position: absolute;\n  right: 1rem;\n  top: 14px;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nconst CloseColor = styled(Close)`\n  path {\n    stroke: ${({ theme }) => theme.text4};\n  }\n`\n\nconst Wrapper = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  margin: 0;\n  padding: 0;\n  width: 100%;\n`\n\nconst HeaderRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  padding: 1rem 1rem;\n  font-weight: 500;\n  color: ${(props) => (props.color === 'blue' ? ({ theme }) => theme.primary1 : 'inherit')};\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    padding: 1rem;\n  `};\n`\n\nconst ContentWrapper = styled.div`\n  background-color: ${({ theme }) => theme.bg0};\n  padding: 0 1rem 1rem 1rem;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`padding: 0 1rem 1rem 1rem`};\n`\n\nconst UpperSection = styled.div`\n  position: relative;\n\n  h5 {\n    margin: 0;\n    margin-bottom: 0.5rem;\n    font-size: 1rem;\n    font-weight: 400;\n  }\n\n  h5:last-child {\n    margin-bottom: 0px;\n  }\n\n  h4 {\n    margin-top: 0;\n    font-weight: 500;\n  }\n`\n\nconst OptionGrid = styled.div`\n  display: grid;\n  grid-gap: 10px;\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    grid-template-columns: 1fr;\n    grid-gap: 10px;\n  `};\n`\n\nconst HoverText = styled.div`\n  text-decoration: none;\n  color: ${({ theme }) => theme.text1};\n  display: flex;\n  align-items: center;\n\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst LinkCard = styled(Card)`\n  background-color: ${({ theme }) => theme.bg1};\n  color: ${({ theme }) => theme.text3};\n\n  :hover {\n    cursor: pointer;\n    filter: brightness(0.9);\n  }\n`\n\nconst WALLET_VIEWS = {\n  OPTIONS: 'options',\n  OPTIONS_SECONDARY: 'options_secondary',\n  ACCOUNT: 'account',\n  PENDING: 'pending',\n  LEGAL: 'legal',\n}\n\nexport default function WalletModal({\n  pendingTransactions,\n  confirmedTransactions,\n  ENSName,\n}: {\n  pendingTransactions: string[] // hashes of pending\n  confirmedTransactions: string[] // hashes of confirmed\n  ENSName?: string\n}) {\n  // important that these are destructed from the account-specific web3-react context\n  const { active, account, connector, activate, error } = useWeb3React()\n\n  const [walletView, setWalletView] = useState(WALLET_VIEWS.ACCOUNT)\n  const previousWalletView = usePrevious(walletView)\n\n  const [pendingWallet, setPendingWallet] = useState<AbstractConnector | undefined>()\n\n  const [pendingError, setPendingError] = useState<boolean>()\n\n  const walletModalOpen = useModalOpen(ApplicationModal.WALLET)\n  const toggleWalletModal = useWalletModalToggle()\n\n  const previousAccount = usePrevious(account)\n\n  const logMonitoringEvent = useWalletConnectMonitoringEventCallback()\n\n  // close on connection, when logged out before\n  useEffect(() => {\n    if (account && !previousAccount && walletModalOpen) {\n      toggleWalletModal()\n    }\n  }, [account, previousAccount, toggleWalletModal, walletModalOpen])\n\n  // always reset to account view\n  useEffect(() => {\n    if (walletModalOpen) {\n      setPendingError(false)\n      setWalletView(WALLET_VIEWS.ACCOUNT)\n    }\n  }, [walletModalOpen])\n\n  // close modal when a connection is successful\n  const activePrevious = usePrevious(active)\n  const connectorPrevious = usePrevious(connector)\n  useEffect(() => {\n    if (walletModalOpen && ((active && !activePrevious) || (connector && connector !== connectorPrevious && !error))) {\n      setWalletView(WALLET_VIEWS.ACCOUNT)\n    }\n  }, [setWalletView, active, error, connector, walletModalOpen, activePrevious, connectorPrevious])\n\n  const tryActivation = async (connector: AbstractConnector | undefined) => {\n    let name = ''\n    Object.keys(SUPPORTED_WALLETS).map((key) => {\n      if (connector === SUPPORTED_WALLETS[key].connector) {\n        return (name = SUPPORTED_WALLETS[key].name)\n      }\n      return true\n    })\n    // log selected wallet\n    ReactGA.event({\n      category: 'Wallet',\n      action: 'Change Wallet',\n      label: name,\n    })\n    setPendingWallet(connector) // set wallet for pending view\n    setWalletView(WALLET_VIEWS.PENDING)\n\n    // if the connector is walletconnect and the user has already tried to connect, manually reset the connector\n    if (connector instanceof WalletConnectConnector) {\n      connector.walletConnectProvider = undefined\n    }\n\n    connector &&\n      activate(connector, undefined, true)\n        .then(async () => {\n          const walletAddress = await connector.getAccount()\n          logMonitoringEvent({ walletAddress })\n        })\n        .catch((error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            activate(connector) // a little janky...can't use setError because the connector isn't set\n          } else {\n            setPendingError(true)\n          }\n        })\n  }\n\n  // close wallet modal if fortmatic modal is active\n  useEffect(() => {\n    fortmatic.on(OVERLAY_READY, () => {\n      toggleWalletModal()\n    })\n  }, [toggleWalletModal])\n\n  // get wallets user can switch too, depending on device/browser\n  function getOptions() {\n    const isMetamask = window.ethereum && window.ethereum.isMetaMask\n    return Object.keys(SUPPORTED_WALLETS).map((key) => {\n      const option = SUPPORTED_WALLETS[key]\n      // check for mobile options\n      if (isMobile) {\n        //disable portis on mobile for now\n        if (option.connector === portis) {\n          return null\n        }\n\n        if (!window.web3 && !window.ethereum && option.mobile) {\n          return (\n            <Option\n              onClick={() => {\n                option.connector !== connector && !option.href && tryActivation(option.connector)\n              }}\n              id={`connect-${key}`}\n              key={key}\n              active={option.connector && option.connector === connector}\n              color={option.color}\n              link={option.href}\n              header={option.name}\n              subheader={null}\n              icon={option.iconURL}\n            />\n          )\n        }\n        return null\n      }\n\n      // overwrite injected when needed\n      if (option.connector === injected) {\n        // don't show injected if there's no injected provider\n        if (!(window.web3 || window.ethereum)) {\n          if (option.name === 'MetaMask') {\n            return (\n              <Option\n                id={`connect-${key}`}\n                key={key}\n                color={'#E8831D'}\n                header={<Trans>Install Metamask</Trans>}\n                subheader={null}\n                link={'https://metamask.io/'}\n                icon={MetamaskIcon}\n              />\n            )\n          } else {\n            return null //dont want to return install twice\n          }\n        }\n        // don't return metamask if injected provider isn't metamask\n        else if (option.name === 'MetaMask' && !isMetamask) {\n          return null\n        }\n        // likewise for generic\n        else if (option.name === 'Injected' && isMetamask) {\n          return null\n        }\n      }\n\n      // return rest of options\n      return (\n        !isMobile &&\n        !option.mobileOnly && (\n          <Option\n            id={`connect-${key}`}\n            onClick={() => {\n              option.connector === connector\n                ? setWalletView(WALLET_VIEWS.ACCOUNT)\n                : !option.href && tryActivation(option.connector)\n            }}\n            key={key}\n            active={option.connector === connector}\n            color={option.color}\n            link={option.href}\n            header={option.name}\n            subheader={null} //use option.descriptio to bring back multi-line\n            icon={option.iconURL}\n          />\n        )\n      )\n    })\n  }\n\n  function getModalContent() {\n    if (error) {\n      return (\n        <UpperSection>\n          <CloseIcon onClick={toggleWalletModal}>\n            <CloseColor />\n          </CloseIcon>\n          <HeaderRow>\n            {error instanceof UnsupportedChainIdError ? <Trans>Wrong Network</Trans> : <Trans>Error connecting</Trans>}\n          </HeaderRow>\n          <ContentWrapper>\n            {error instanceof UnsupportedChainIdError ? (\n              <h5>\n                <Trans>Please connect to the appropriate Ethereum network.</Trans>\n              </h5>\n            ) : (\n              <Trans>Error connecting. Try refreshing the page.</Trans>\n            )}\n          </ContentWrapper>\n        </UpperSection>\n      )\n    }\n    if (walletView === WALLET_VIEWS.LEGAL) {\n      return (\n        <UpperSection>\n          <HeaderRow>\n            <HoverText\n              onClick={() => {\n                setWalletView(\n                  (previousWalletView === WALLET_VIEWS.LEGAL ? WALLET_VIEWS.ACCOUNT : previousWalletView) ??\n                    WALLET_VIEWS.ACCOUNT\n                )\n              }}\n            >\n              <ArrowLeft />\n            </HoverText>\n            <Row justify=\"center\">\n              <ThemedText.MediumHeader>\n                <Trans>Legal & Privacy</Trans>\n              </ThemedText.MediumHeader>\n            </Row>\n          </HeaderRow>\n          <PrivacyPolicy />\n        </UpperSection>\n      )\n    }\n    if (account && walletView === WALLET_VIEWS.ACCOUNT) {\n      return (\n        <AccountDetails\n          toggleWalletModal={toggleWalletModal}\n          pendingTransactions={pendingTransactions}\n          confirmedTransactions={confirmedTransactions}\n          ENSName={ENSName}\n          openOptions={() => setWalletView(WALLET_VIEWS.OPTIONS)}\n        />\n      )\n    }\n    return (\n      <UpperSection>\n        <CloseIcon onClick={toggleWalletModal}>\n          <CloseColor />\n        </CloseIcon>\n        {walletView !== WALLET_VIEWS.ACCOUNT ? (\n          <HeaderRow color=\"blue\">\n            <HoverText\n              onClick={() => {\n                setPendingError(false)\n                setWalletView(WALLET_VIEWS.ACCOUNT)\n              }}\n            >\n              <ArrowLeft />\n            </HoverText>\n          </HeaderRow>\n        ) : (\n          <HeaderRow>\n            <HoverText>\n              <Trans>Connect a wallet</Trans>\n            </HoverText>\n          </HeaderRow>\n        )}\n\n        <ContentWrapper>\n          <AutoColumn gap=\"16px\">\n            <LightCard>\n              <AutoRow style={{ flexWrap: 'nowrap' }}>\n                <ThemedText.Black fontSize={14}>\n                  <Trans>\n                    By connecting a wallet, you agree to Uniswap Labs’{' '}\n                    <ExternalLink href=\"https://uniswap.org/terms-of-service/\">Terms of Service</ExternalLink> and\n                    acknowledge that you have read and understand the Uniswap{' '}\n                    <ExternalLink href=\"https://uniswap.org/disclaimer/\">Protocol Disclaimer</ExternalLink>.\n                  </Trans>\n                </ThemedText.Black>\n              </AutoRow>\n            </LightCard>\n            {walletView === WALLET_VIEWS.PENDING ? (\n              <PendingView\n                connector={pendingWallet}\n                error={pendingError}\n                setPendingError={setPendingError}\n                tryActivation={tryActivation}\n              />\n            ) : (\n              <OptionGrid>{getOptions()}</OptionGrid>\n            )}\n            <LinkCard padding=\".5rem\" $borderRadius=\".75rem\" onClick={() => setWalletView(WALLET_VIEWS.LEGAL)}>\n              <RowBetween>\n                <AutoRow gap=\"4px\">\n                  <Info size={20} />\n                  <ThemedText.Label fontSize={14}>\n                    <Trans>How this app uses APIs</Trans>\n                  </ThemedText.Label>\n                </AutoRow>\n                <ArrowRight size={16} />\n              </RowBetween>\n            </LinkCard>\n          </AutoColumn>\n        </ContentWrapper>\n      </UpperSection>\n    )\n  }\n\n  return (\n    <Modal isOpen={walletModalOpen} onDismiss={toggleWalletModal} minHeight={false} maxHeight={90}>\n      <Wrapper>{getModalContent()}</Wrapper>\n    </Modal>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}