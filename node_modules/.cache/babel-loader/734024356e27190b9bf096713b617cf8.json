{"ast":null,"code":"import { Fraction } from '@uniswap/sdk-core';\nimport { CurrencyAmount } from '../../../util/amounts';\nexport function calculateRatioAmountIn(optimalRatio, inputTokenPrice, inputBalance, outputBalance) {\n  // formula: amountToSwap = (inputBalance - (optimalRatio * outputBalance)) / ((optimalRatio * inputTokenPrice) + 1))\n  var amountToSwapRaw = new Fraction(inputBalance.quotient).subtract(optimalRatio.multiply(outputBalance.quotient)).divide(optimalRatio.multiply(inputTokenPrice).add(1));\n\n  if (amountToSwapRaw.lessThan(0)) {\n    // should never happen since we do checks before calling in\n    throw new Error('routeToRatio: insufficient input token amount');\n  }\n\n  return CurrencyAmount.fromRawAmount(inputBalance.currency, amountToSwapRaw.quotient);\n}","map":{"version":3,"sources":["../../../../../../src/routers/alpha-router/functions/calculate-ratio-amount-in.ts"],"names":[],"mappings":"AAAA,SAAS,QAAT,QAAyB,mBAAzB;AACA,SAAS,cAAT,QAA+B,uBAA/B;AAEA,OAAM,SAAU,sBAAV,CACJ,YADI,EAEJ,eAFI,EAGJ,YAHI,EAIJ,aAJI,EAIyB;AAE7B;AACA,MAAM,eAAe,GAAG,IAAI,QAAJ,CAAa,YAAY,CAAC,QAA1B,EACrB,QADqB,CACZ,YAAY,CAAC,QAAb,CAAsB,aAAa,CAAC,QAApC,CADY,EAErB,MAFqB,CAEd,YAAY,CAAC,QAAb,CAAsB,eAAtB,EAAuC,GAAvC,CAA2C,CAA3C,CAFc,CAAxB;;AAIA,MAAI,eAAe,CAAC,QAAhB,CAAyB,CAAzB,CAAJ,EAAiC;AAC/B;AACA,UAAM,IAAI,KAAJ,CAAU,+CAAV,CAAN;AACD;;AAED,SAAO,cAAc,CAAC,aAAf,CACL,YAAY,CAAC,QADR,EAEL,eAAe,CAAC,QAFX,CAAP;AAID","sourceRoot":"","sourcesContent":["import { Fraction } from '@uniswap/sdk-core';\nimport { CurrencyAmount } from '../../../util/amounts';\nexport function calculateRatioAmountIn(optimalRatio, inputTokenPrice, inputBalance, outputBalance) {\n    // formula: amountToSwap = (inputBalance - (optimalRatio * outputBalance)) / ((optimalRatio * inputTokenPrice) + 1))\n    const amountToSwapRaw = new Fraction(inputBalance.quotient)\n        .subtract(optimalRatio.multiply(outputBalance.quotient))\n        .divide(optimalRatio.multiply(inputTokenPrice).add(1));\n    if (amountToSwapRaw.lessThan(0)) {\n        // should never happen since we do checks before calling in\n        throw new Error('routeToRatio: insufficient input token amount');\n    }\n    return CurrencyAmount.fromRawAmount(inputBalance.currency, amountToSwapRaw.quotient);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsY3VsYXRlLXJhdGlvLWFtb3VudC1pbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9yb3V0ZXJzL2FscGhhLXJvdXRlci9mdW5jdGlvbnMvY2FsY3VsYXRlLXJhdGlvLWFtb3VudC1pbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDN0MsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBRXZELE1BQU0sVUFBVSxzQkFBc0IsQ0FDcEMsWUFBc0IsRUFDdEIsZUFBeUIsRUFDekIsWUFBNEIsRUFDNUIsYUFBNkI7SUFFN0Isb0hBQW9IO0lBQ3BILE1BQU0sZUFBZSxHQUFHLElBQUksUUFBUSxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUM7U0FDeEQsUUFBUSxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1NBQ3ZELE1BQU0sQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLGVBQWUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBRXpELElBQUksZUFBZSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsRUFBRTtRQUMvQiwyREFBMkQ7UUFDM0QsTUFBTSxJQUFJLEtBQUssQ0FBQywrQ0FBK0MsQ0FBQyxDQUFDO0tBQ2xFO0lBRUQsT0FBTyxjQUFjLENBQUMsYUFBYSxDQUNqQyxZQUFZLENBQUMsUUFBUSxFQUNyQixlQUFlLENBQUMsUUFBUSxDQUN6QixDQUFDO0FBQ0osQ0FBQyJ9"]},"metadata":{},"sourceType":"module"}