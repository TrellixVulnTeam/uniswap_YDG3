{"ast":null,"code":"import _toConsumableArray from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{i18n}from\"@lingui/core\";import{defaultAbiCoder,Interface}from'@ethersproject/abi';import{isAddress}from'@ethersproject/address';import{toUtf8String,Utf8ErrorFuncs,Utf8ErrorReason}from'@ethersproject/strings';import{formatUnits}from'@ethersproject/units';// eslint-disable-next-line no-restricted-imports\nimport{abi as GOV_ABI}from'@uniswap/governance/build/GovernorAlpha.json';import{CurrencyAmount}from'@uniswap/sdk-core';import{POLYGON_PROPOSAL_TITLE}from'constants/proposals/polygon_proposal_title';import{UNISWAP_GRANTS_PROPOSAL_DESCRIPTION}from'constants/proposals/uniswap_grants_proposal_description';import{useGovernanceBravoContract,useGovernanceV0Contract,useGovernanceV1Contract,useLatestGovernanceContract,useUniContract}from'hooks/useContract';import{useActiveWeb3React}from'hooks/web3';import{useCallback,useMemo}from'react';import{calculateGasMargin}from'utils/calculateGasMargin';import{SupportedChainId}from'../../constants/chains';import{BRAVO_START_BLOCK,ONE_BIP_START_BLOCK,POLYGON_START_BLOCK,UNISWAP_GRANTS_START_BLOCK}from'../../constants/proposals';import{UNI}from'../../constants/tokens';import{useLogs}from'../logs/hooks';import{useSingleCallResult,useSingleContractMultipleData}from'../multicall/hooks';import{TransactionType}from'../transactions/actions';import{useTransactionAdder}from'../transactions/hooks';import{VoteOption}from'./types';export var ProposalState;(function(ProposalState){ProposalState[ProposalState[\"UNDETERMINED\"]=-1]=\"UNDETERMINED\";ProposalState[ProposalState[\"PENDING\"]=0]=\"PENDING\";ProposalState[ProposalState[\"ACTIVE\"]=1]=\"ACTIVE\";ProposalState[ProposalState[\"CANCELED\"]=2]=\"CANCELED\";ProposalState[ProposalState[\"DEFEATED\"]=3]=\"DEFEATED\";ProposalState[ProposalState[\"SUCCEEDED\"]=4]=\"SUCCEEDED\";ProposalState[ProposalState[\"QUEUED\"]=5]=\"QUEUED\";ProposalState[ProposalState[\"EXPIRED\"]=6]=\"EXPIRED\";ProposalState[ProposalState[\"EXECUTED\"]=7]=\"EXECUTED\";})(ProposalState||(ProposalState={}));var GovernanceInterface=new Interface(GOV_ABI);// get count of all proposals made in the latest governor contract\nfunction useProposalCount(contract){var _result$;var _useSingleCallResult=useSingleCallResult(contract,'proposalCount'),result=_useSingleCallResult.result;return result===null||result===void 0?void 0:(_result$=result[0])===null||_result$===void 0?void 0:_result$.toNumber();}/**\n * Need proposal events to get description data emitted from\n * new proposal event.\n */function useFormattedProposalCreatedLogs(contract,indices){// create filters for ProposalCreated events\nvar filter=useMemo(function(){var _contract$filters;return contract===null||contract===void 0?void 0:(_contract$filters=contract.filters)===null||_contract$filters===void 0?void 0:_contract$filters.ProposalCreated();},[contract]);var useLogsResult=useLogs(filter);return useMemo(function(){var _useLogsResult$logs,_useLogsResult$logs$m,_useLogsResult$logs$m2;return useLogsResult===null||useLogsResult===void 0?void 0:(_useLogsResult$logs=useLogsResult.logs)===null||_useLogsResult$logs===void 0?void 0:(_useLogsResult$logs$m=_useLogsResult$logs.map(function(log){var parsed=GovernanceInterface.parseLog(log).args;return parsed;}))===null||_useLogsResult$logs$m===void 0?void 0:(_useLogsResult$logs$m2=_useLogsResult$logs$m.filter(function(parsed){return indices.flat().some(function(i){return i===parsed.id.toNumber();});}))===null||_useLogsResult$logs$m2===void 0?void 0:_useLogsResult$logs$m2.map(function(parsed){var _parsed$startBlock;var description;var startBlock=parseInt((_parsed$startBlock=parsed.startBlock)===null||_parsed$startBlock===void 0?void 0:_parsed$startBlock.toString());try{description=parsed.description;}catch(error){// replace invalid UTF-8 in the description with replacement characters\nvar onError=Utf8ErrorFuncs.replace;// Bravo proposal reverses the codepoints for U+2018 (‘) and U+2026 (…)\nif(startBlock===BRAVO_START_BLOCK){var U2018=[0xe2,0x80,0x98].toString();var U2026=[0xe2,0x80,0xa6].toString();onError=function onError(reason,offset,bytes,output){if(reason===Utf8ErrorReason.UNEXPECTED_CONTINUE){var charCode=[bytes[offset],bytes[offset+1],bytes[offset+2]].reverse().toString();if(charCode===U2018){output.push(0x2018);return 2;}else if(charCode===U2026){output.push(0x2026);return 2;}}return Utf8ErrorFuncs.replace(reason,offset,bytes,output);};}description=JSON.parse(toUtf8String(error.error.value,onError))||'';}// Bravo and one bip proposals omit newlines\nif(startBlock===BRAVO_START_BLOCK||startBlock===ONE_BIP_START_BLOCK){description=description.replace(/ {2}/g,'\\n').replace(/\\d\\. /g,'\\n$&');}return{description:description,details:parsed.targets.map(function(target,i){var signature=parsed.signatures[i];var _signature$substr$spl=signature.substr(0,signature.length-1).split('('),_signature$substr$spl2=_slicedToArray(_signature$substr$spl,2),name=_signature$substr$spl2[0],types=_signature$substr$spl2[1];var calldata=parsed.calldatas[i];var decoded=defaultAbiCoder.decode(types.split(','),calldata);return{target:target,functionSig:name,callData:decoded.join(', ')};})};});},[indices,useLogsResult]);}var V0_PROPOSAL_IDS=[[1],[2],[3],[4]];var V1_PROPOSAL_IDS=[[1],[2],[3]];function countToIndices(count){var skip=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;return typeof count==='number'?new Array(count-skip).fill(0).map(function(_,i){return[i+1+skip];}):[];}// get data for all past and active proposals\nexport function useAllProposalData(){var _useActiveWeb3React=useActiveWeb3React(),chainId=_useActiveWeb3React.chainId;var gov0=useGovernanceV0Contract();var gov1=useGovernanceV1Contract();var gov2=useGovernanceBravoContract();var proposalCount0=useProposalCount(gov0);var proposalCount1=useProposalCount(gov1);var proposalCount2=useProposalCount(gov2);var gov0ProposalIndexes=useMemo(function(){return chainId===SupportedChainId.MAINNET?V0_PROPOSAL_IDS:countToIndices(proposalCount0);},[chainId,proposalCount0]);var gov1ProposalIndexes=useMemo(function(){return chainId===SupportedChainId.MAINNET?V1_PROPOSAL_IDS:countToIndices(proposalCount1);},[chainId,proposalCount1]);var gov2ProposalIndexes=useMemo(function(){return countToIndices(proposalCount2,8);},[proposalCount2]);var proposalsV0=useSingleContractMultipleData(gov0,'proposals',gov0ProposalIndexes);var proposalsV1=useSingleContractMultipleData(gov1,'proposals',gov1ProposalIndexes);var proposalsV2=useSingleContractMultipleData(gov2,'proposals',gov2ProposalIndexes);// get all proposal states\nvar proposalStatesV0=useSingleContractMultipleData(gov0,'state',gov0ProposalIndexes);var proposalStatesV1=useSingleContractMultipleData(gov1,'state',gov1ProposalIndexes);var proposalStatesV2=useSingleContractMultipleData(gov2,'state',gov2ProposalIndexes);// get metadata from past events\nvar formattedLogsV0=useFormattedProposalCreatedLogs(gov0,gov0ProposalIndexes);var formattedLogsV1=useFormattedProposalCreatedLogs(gov1,gov1ProposalIndexes);var formattedLogsV2=useFormattedProposalCreatedLogs(gov2,gov2ProposalIndexes);// early return until events are fetched\nreturn useMemo(function(){var proposalsCallData=[].concat(_toConsumableArray(proposalsV0),_toConsumableArray(proposalsV1),_toConsumableArray(proposalsV2));var proposalStatesCallData=[].concat(_toConsumableArray(proposalStatesV0),_toConsumableArray(proposalStatesV1),_toConsumableArray(proposalStatesV2));var formattedLogs=[].concat(_toConsumableArray(formattedLogsV0!==null&&formattedLogsV0!==void 0?formattedLogsV0:[]),_toConsumableArray(formattedLogsV1!==null&&formattedLogsV1!==void 0?formattedLogsV1:[]),_toConsumableArray(formattedLogsV2!==null&&formattedLogsV2!==void 0?formattedLogsV2:[]));if(proposalsCallData.some(function(p){return p.loading;})||proposalStatesCallData.some(function(p){return p.loading;})||gov0&&!formattedLogsV0||gov1&&!formattedLogsV1||gov2&&!formattedLogsV2){return{data:[],loading:true};}return{data:proposalsCallData.map(function(proposal,i){var _proposal$result,_proposal$result$star,_formattedLogs$i,_description,_proposal$result2,_title,_description2,_proposal$result3,_proposalStatesCallDa,_proposalStatesCallDa2,_proposalStatesCallDa3,_proposal$result$forV,_proposal$result4,_proposal$result4$for,_proposal$result$agai,_proposal$result5,_proposal$result5$aga,_proposal$result$abst,_proposal$result6,_proposal$result6$abs,_proposal$result7,_proposal$result7$end,_formattedLogs$i2;var startBlock=parseInt(proposal===null||proposal===void 0?void 0:(_proposal$result=proposal.result)===null||_proposal$result===void 0?void 0:(_proposal$result$star=_proposal$result.startBlock)===null||_proposal$result$star===void 0?void 0:_proposal$result$star.toString());var description=(_formattedLogs$i=formattedLogs[i])===null||_formattedLogs$i===void 0?void 0:_formattedLogs$i.description;if(startBlock===UNISWAP_GRANTS_START_BLOCK){description=UNISWAP_GRANTS_PROPOSAL_DESCRIPTION;}var title=(_description=description)===null||_description===void 0?void 0:_description.split(/#+\\s|\\n/g)[1];if(startBlock===POLYGON_START_BLOCK){title=POLYGON_PROPOSAL_TITLE;}return{id:proposal===null||proposal===void 0?void 0:(_proposal$result2=proposal.result)===null||_proposal$result2===void 0?void 0:_proposal$result2.id.toString(),title:(_title=title)!==null&&_title!==void 0?_title:/*i18n*/i18n._(\"Untitled\"),description:(_description2=description)!==null&&_description2!==void 0?_description2:/*i18n*/i18n._(\"No description.\"),proposer:proposal===null||proposal===void 0?void 0:(_proposal$result3=proposal.result)===null||_proposal$result3===void 0?void 0:_proposal$result3.proposer,status:(_proposalStatesCallDa=(_proposalStatesCallDa2=proposalStatesCallData[i])===null||_proposalStatesCallDa2===void 0?void 0:(_proposalStatesCallDa3=_proposalStatesCallDa2.result)===null||_proposalStatesCallDa3===void 0?void 0:_proposalStatesCallDa3[0])!==null&&_proposalStatesCallDa!==void 0?_proposalStatesCallDa:ProposalState.UNDETERMINED,forCount:parseFloat(formatUnits((_proposal$result$forV=proposal===null||proposal===void 0?void 0:(_proposal$result4=proposal.result)===null||_proposal$result4===void 0?void 0:(_proposal$result4$for=_proposal$result4.forVotes)===null||_proposal$result4$for===void 0?void 0:_proposal$result4$for.toString())!==null&&_proposal$result$forV!==void 0?_proposal$result$forV:0,18)),againstCount:parseFloat(formatUnits((_proposal$result$agai=proposal===null||proposal===void 0?void 0:(_proposal$result5=proposal.result)===null||_proposal$result5===void 0?void 0:(_proposal$result5$aga=_proposal$result5.againstVotes)===null||_proposal$result5$aga===void 0?void 0:_proposal$result5$aga.toString())!==null&&_proposal$result$agai!==void 0?_proposal$result$agai:0,18)),abstainCount:parseFloat(formatUnits((_proposal$result$abst=proposal===null||proposal===void 0?void 0:(_proposal$result6=proposal.result)===null||_proposal$result6===void 0?void 0:(_proposal$result6$abs=_proposal$result6.abstainVotes)===null||_proposal$result6$abs===void 0?void 0:_proposal$result6$abs.toString())!==null&&_proposal$result$abst!==void 0?_proposal$result$abst:0,18)),startBlock:startBlock,endBlock:parseInt(proposal===null||proposal===void 0?void 0:(_proposal$result7=proposal.result)===null||_proposal$result7===void 0?void 0:(_proposal$result7$end=_proposal$result7.endBlock)===null||_proposal$result7$end===void 0?void 0:_proposal$result7$end.toString()),details:(_formattedLogs$i2=formattedLogs[i])===null||_formattedLogs$i2===void 0?void 0:_formattedLogs$i2.details,governorIndex:i>=proposalsV0.length+proposalsV1.length?2:i>=proposalsV0.length?1:0};}),loading:false};},[formattedLogsV0,formattedLogsV1,formattedLogsV2,gov0,gov1,gov2,proposalStatesV0,proposalStatesV1,proposalStatesV2,proposalsV0,proposalsV1,proposalsV2]);}export function useProposalData(governorIndex,id){var _data$filter;var _useAllProposalData=useAllProposalData(),data=_useAllProposalData.data;return(_data$filter=data.filter(function(p){return p.governorIndex===governorIndex;}))===null||_data$filter===void 0?void 0:_data$filter.find(function(p){return p.id===id;});}// get the users delegatee if it exists\nexport function useUserDelegatee(){var _result$2;var _useActiveWeb3React2=useActiveWeb3React(),account=_useActiveWeb3React2.account;var uniContract=useUniContract();var _useSingleCallResult2=useSingleCallResult(uniContract,'delegates',[account!==null&&account!==void 0?account:undefined]),result=_useSingleCallResult2.result;return(_result$2=result===null||result===void 0?void 0:result[0])!==null&&_result$2!==void 0?_result$2:undefined;}// gets the users current votes\nexport function useUserVotes(){var _useActiveWeb3React3=useActiveWeb3React(),account=_useActiveWeb3React3.account,chainId=_useActiveWeb3React3.chainId;var uniContract=useUniContract();// check for available votes\nvar _useSingleCallResult3=useSingleCallResult(uniContract,'getCurrentVotes',[account!==null&&account!==void 0?account:undefined]),result=_useSingleCallResult3.result,loading=_useSingleCallResult3.loading;return useMemo(function(){var uni=chainId?UNI[chainId]:undefined;return{loading:loading,votes:uni&&result?CurrencyAmount.fromRawAmount(uni,result===null||result===void 0?void 0:result[0]):undefined};},[chainId,loading,result]);}// fetch available votes as of block (usually proposal start block)\nexport function useUserVotesAsOfBlock(block){var _useSingleCallResult4,_useSingleCallResult5;var _useActiveWeb3React4=useActiveWeb3React(),account=_useActiveWeb3React4.account,chainId=_useActiveWeb3React4.chainId;var uniContract=useUniContract();// check for available votes\nvar uni=chainId?UNI[chainId]:undefined;var votes=(_useSingleCallResult4=useSingleCallResult(uniContract,'getPriorVotes',[account!==null&&account!==void 0?account:undefined,block!==null&&block!==void 0?block:undefined]))===null||_useSingleCallResult4===void 0?void 0:(_useSingleCallResult5=_useSingleCallResult4.result)===null||_useSingleCallResult5===void 0?void 0:_useSingleCallResult5[0];return votes&&uni?CurrencyAmount.fromRawAmount(uni,votes):undefined;}export function useDelegateCallback(){var _useActiveWeb3React5=useActiveWeb3React(),account=_useActiveWeb3React5.account,chainId=_useActiveWeb3React5.chainId,library=_useActiveWeb3React5.library;var addTransaction=useTransactionAdder();var uniContract=useUniContract();return useCallback(function(delegatee){var _uniContract$estimate;if(!library||!chainId||!account||!delegatee||!isAddress(delegatee!==null&&delegatee!==void 0?delegatee:''))return undefined;var args=[delegatee];if(!uniContract)throw new Error('No UNI Contract!');return(_uniContract$estimate=uniContract.estimateGas).delegate.apply(_uniContract$estimate,args.concat([{}])).then(function(estimatedGasLimit){return uniContract.delegate.apply(uniContract,args.concat([{value:null,gasLimit:calculateGasMargin(estimatedGasLimit)}])).then(function(response){addTransaction(response,{type:TransactionType.DELEGATE,delegatee:delegatee});return response.hash;});});},[account,addTransaction,chainId,library,uniContract]);}export function useVoteCallback(){var _useActiveWeb3React6=useActiveWeb3React(),account=_useActiveWeb3React6.account,chainId=_useActiveWeb3React6.chainId;var latestGovernanceContract=useLatestGovernanceContract();var addTransaction=useTransactionAdder();var voteCallback=useCallback(function(proposalId,voteOption){var _latestGovernanceCont;if(!account||!latestGovernanceContract||!proposalId||!chainId)return;var args=[proposalId,voteOption===VoteOption.Against?0:voteOption===VoteOption.For?1:2];return(_latestGovernanceCont=latestGovernanceContract.estimateGas).castVote.apply(_latestGovernanceCont,args.concat([{}])).then(function(estimatedGasLimit){return latestGovernanceContract.castVote.apply(latestGovernanceContract,args.concat([{value:null,gasLimit:calculateGasMargin(estimatedGasLimit)}])).then(function(response){addTransaction(response,{type:TransactionType.VOTE,decision:voteOption,governorAddress:latestGovernanceContract.address,proposalId:parseInt(proposalId),reason:''});return response.hash;});});},[account,addTransaction,latestGovernanceContract,chainId]);return{voteCallback:voteCallback};}export function useCreateProposalCallback(){var _useActiveWeb3React7=useActiveWeb3React(),account=_useActiveWeb3React7.account,chainId=_useActiveWeb3React7.chainId;var latestGovernanceContract=useLatestGovernanceContract();var addTransaction=useTransactionAdder();return useCallback(function(createProposalData){var _latestGovernanceCont2;if(!account||!latestGovernanceContract||!createProposalData||!chainId)return undefined;var args=[createProposalData.targets,createProposalData.values,createProposalData.signatures,createProposalData.calldatas,createProposalData.description];return(_latestGovernanceCont2=latestGovernanceContract.estimateGas).propose.apply(_latestGovernanceCont2,args).then(function(estimatedGasLimit){return latestGovernanceContract.propose.apply(latestGovernanceContract,args.concat([{gasLimit:calculateGasMargin(estimatedGasLimit)}])).then(function(response){addTransaction(response,{type:TransactionType.SUBMIT_PROPOSAL});return response.hash;});});},[account,addTransaction,latestGovernanceContract,chainId]);}export function useLatestProposalId(address){var _res$result,_res$result$;var latestGovernanceContract=useLatestGovernanceContract();var res=useSingleCallResult(latestGovernanceContract,'latestProposalIds',[address]);return res===null||res===void 0?void 0:(_res$result=res.result)===null||_res$result===void 0?void 0:(_res$result$=_res$result[0])===null||_res$result$===void 0?void 0:_res$result$.toString();}export function useProposalThreshold(){var _res$result2;var _useActiveWeb3React8=useActiveWeb3React(),chainId=_useActiveWeb3React8.chainId;var latestGovernanceContract=useLatestGovernanceContract();var res=useSingleCallResult(latestGovernanceContract,'proposalThreshold');var uni=chainId?UNI[chainId]:undefined;if((res===null||res===void 0?void 0:(_res$result2=res.result)===null||_res$result2===void 0?void 0:_res$result2[0])&&uni){return CurrencyAmount.fromRawAmount(uni,res.result[0]);}return undefined;}","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/state/governance/hooks.ts"],"names":["defaultAbiCoder","Interface","isAddress","toUtf8String","Utf8ErrorFuncs","Utf8ErrorReason","formatUnits","abi","GOV_ABI","CurrencyAmount","POLYGON_PROPOSAL_TITLE","UNISWAP_GRANTS_PROPOSAL_DESCRIPTION","useGovernanceBravoContract","useGovernanceV0Contract","useGovernanceV1Contract","useLatestGovernanceContract","useUniContract","useActiveWeb3React","useCallback","useMemo","calculateGasMargin","SupportedChainId","BRAVO_START_BLOCK","ONE_BIP_START_BLOCK","POLYGON_START_BLOCK","UNISWAP_GRANTS_START_BLOCK","UNI","useLogs","useSingleCallResult","useSingleContractMultipleData","TransactionType","useTransactionAdder","VoteOption","ProposalState","GovernanceInterface","useProposalCount","contract","result","toNumber","useFormattedProposalCreatedLogs","indices","filter","filters","ProposalCreated","useLogsResult","logs","map","log","parsed","parseLog","args","flat","some","i","id","description","startBlock","parseInt","toString","error","onError","replace","U2018","U2026","reason","offset","bytes","output","UNEXPECTED_CONTINUE","charCode","reverse","push","JSON","parse","value","details","targets","target","signature","signatures","substr","length","split","name","types","calldata","calldatas","decoded","decode","functionSig","callData","join","V0_PROPOSAL_IDS","V1_PROPOSAL_IDS","countToIndices","count","skip","Array","fill","_","useAllProposalData","chainId","gov0","gov1","gov2","proposalCount0","proposalCount1","proposalCount2","gov0ProposalIndexes","MAINNET","gov1ProposalIndexes","gov2ProposalIndexes","proposalsV0","proposalsV1","proposalsV2","proposalStatesV0","proposalStatesV1","proposalStatesV2","formattedLogsV0","formattedLogsV1","formattedLogsV2","proposalsCallData","proposalStatesCallData","formattedLogs","p","loading","data","proposal","title","proposer","status","UNDETERMINED","forCount","parseFloat","forVotes","againstCount","againstVotes","abstainCount","abstainVotes","endBlock","governorIndex","useProposalData","find","useUserDelegatee","account","uniContract","undefined","useUserVotes","uni","votes","fromRawAmount","useUserVotesAsOfBlock","block","useDelegateCallback","library","addTransaction","delegatee","Error","estimateGas","delegate","then","estimatedGasLimit","gasLimit","response","type","DELEGATE","hash","useVoteCallback","latestGovernanceContract","voteCallback","proposalId","voteOption","Against","For","castVote","VOTE","decision","governorAddress","address","useCreateProposalCallback","createProposalData","values","propose","SUBMIT_PROPOSAL","useLatestProposalId","res","useProposalThreshold"],"mappings":"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","sourcesContent":["import { defaultAbiCoder, Interface } from '@ethersproject/abi'\nimport { isAddress } from '@ethersproject/address'\nimport { Contract } from '@ethersproject/contracts'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { toUtf8String, Utf8ErrorFuncs, Utf8ErrorReason } from '@ethersproject/strings'\nimport { formatUnits } from '@ethersproject/units'\n// eslint-disable-next-line no-restricted-imports\nimport { t } from '@lingui/macro'\nimport { abi as GOV_ABI } from '@uniswap/governance/build/GovernorAlpha.json'\nimport { CurrencyAmount, Token } from '@uniswap/sdk-core'\nimport { POLYGON_PROPOSAL_TITLE } from 'constants/proposals/polygon_proposal_title'\nimport { UNISWAP_GRANTS_PROPOSAL_DESCRIPTION } from 'constants/proposals/uniswap_grants_proposal_description'\nimport {\n  useGovernanceBravoContract,\n  useGovernanceV0Contract,\n  useGovernanceV1Contract,\n  useLatestGovernanceContract,\n  useUniContract,\n} from 'hooks/useContract'\nimport { useActiveWeb3React } from 'hooks/web3'\nimport { useCallback, useMemo } from 'react'\nimport { calculateGasMargin } from 'utils/calculateGasMargin'\n\nimport { SupportedChainId } from '../../constants/chains'\nimport {\n  BRAVO_START_BLOCK,\n  ONE_BIP_START_BLOCK,\n  POLYGON_START_BLOCK,\n  UNISWAP_GRANTS_START_BLOCK,\n} from '../../constants/proposals'\nimport { UNI } from '../../constants/tokens'\nimport { useLogs } from '../logs/hooks'\nimport { useSingleCallResult, useSingleContractMultipleData } from '../multicall/hooks'\nimport { TransactionType } from '../transactions/actions'\nimport { useTransactionAdder } from '../transactions/hooks'\nimport { VoteOption } from './types'\n\ninterface ProposalDetail {\n  target: string\n  functionSig: string\n  callData: string\n}\n\nexport interface ProposalData {\n  id: string\n  title: string\n  description: string\n  proposer: string\n  status: ProposalState\n  forCount: number\n  againstCount: number\n  startBlock: number\n  endBlock: number\n  details: ProposalDetail[]\n  governorIndex: number // index in the governance address array for which this proposal pertains\n}\n\nexport interface CreateProposalData {\n  targets: string[]\n  values: string[]\n  signatures: string[]\n  calldatas: string[]\n  description: string\n}\n\nexport enum ProposalState {\n  UNDETERMINED = -1,\n  PENDING,\n  ACTIVE,\n  CANCELED,\n  DEFEATED,\n  SUCCEEDED,\n  QUEUED,\n  EXPIRED,\n  EXECUTED,\n}\n\nconst GovernanceInterface = new Interface(GOV_ABI)\n\n// get count of all proposals made in the latest governor contract\nfunction useProposalCount(contract: Contract | null): number | undefined {\n  const { result } = useSingleCallResult(contract, 'proposalCount')\n\n  return result?.[0]?.toNumber()\n}\n\ninterface FormattedProposalLog {\n  description: string\n  details: { target: string; functionSig: string; callData: string }[]\n}\n/**\n * Need proposal events to get description data emitted from\n * new proposal event.\n */\nfunction useFormattedProposalCreatedLogs(\n  contract: Contract | null,\n  indices: number[][]\n): FormattedProposalLog[] | undefined {\n  // create filters for ProposalCreated events\n  const filter = useMemo(() => contract?.filters?.ProposalCreated(), [contract])\n\n  const useLogsResult = useLogs(filter)\n\n  return useMemo(() => {\n    return useLogsResult?.logs\n      ?.map((log) => {\n        const parsed = GovernanceInterface.parseLog(log).args\n        return parsed\n      })\n      ?.filter((parsed) => indices.flat().some((i) => i === parsed.id.toNumber()))\n      ?.map((parsed) => {\n        let description!: string\n\n        const startBlock = parseInt(parsed.startBlock?.toString())\n        try {\n          description = parsed.description\n        } catch (error) {\n          // replace invalid UTF-8 in the description with replacement characters\n          let onError = Utf8ErrorFuncs.replace\n\n          // Bravo proposal reverses the codepoints for U+2018 (‘) and U+2026 (…)\n          if (startBlock === BRAVO_START_BLOCK) {\n            const U2018 = [0xe2, 0x80, 0x98].toString()\n            const U2026 = [0xe2, 0x80, 0xa6].toString()\n            onError = (reason, offset, bytes, output) => {\n              if (reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n                const charCode = [bytes[offset], bytes[offset + 1], bytes[offset + 2]].reverse().toString()\n                if (charCode === U2018) {\n                  output.push(0x2018)\n                  return 2\n                } else if (charCode === U2026) {\n                  output.push(0x2026)\n                  return 2\n                }\n              }\n              return Utf8ErrorFuncs.replace(reason, offset, bytes, output)\n            }\n          }\n\n          description = JSON.parse(toUtf8String(error.error.value, onError)) || ''\n        }\n\n        // Bravo and one bip proposals omit newlines\n        if (startBlock === BRAVO_START_BLOCK || startBlock === ONE_BIP_START_BLOCK) {\n          description = description.replace(/ {2}/g, '\\n').replace(/\\d\\. /g, '\\n$&')\n        }\n\n        return {\n          description,\n          details: parsed.targets.map((target: string, i: number) => {\n            const signature = parsed.signatures[i]\n            const [name, types] = signature.substr(0, signature.length - 1).split('(')\n            const calldata = parsed.calldatas[i]\n            const decoded = defaultAbiCoder.decode(types.split(','), calldata)\n            return {\n              target,\n              functionSig: name,\n              callData: decoded.join(', '),\n            }\n          }),\n        }\n      })\n  }, [indices, useLogsResult])\n}\n\nconst V0_PROPOSAL_IDS = [[1], [2], [3], [4]]\nconst V1_PROPOSAL_IDS = [[1], [2], [3]]\n\nfunction countToIndices(count: number | undefined, skip = 0) {\n  return typeof count === 'number' ? new Array(count - skip).fill(0).map((_, i) => [i + 1 + skip]) : []\n}\n\n// get data for all past and active proposals\nexport function useAllProposalData(): { data: ProposalData[]; loading: boolean } {\n  const { chainId } = useActiveWeb3React()\n  const gov0 = useGovernanceV0Contract()\n  const gov1 = useGovernanceV1Contract()\n  const gov2 = useGovernanceBravoContract()\n\n  const proposalCount0 = useProposalCount(gov0)\n  const proposalCount1 = useProposalCount(gov1)\n  const proposalCount2 = useProposalCount(gov2)\n\n  const gov0ProposalIndexes = useMemo(() => {\n    return chainId === SupportedChainId.MAINNET ? V0_PROPOSAL_IDS : countToIndices(proposalCount0)\n  }, [chainId, proposalCount0])\n  const gov1ProposalIndexes = useMemo(() => {\n    return chainId === SupportedChainId.MAINNET ? V1_PROPOSAL_IDS : countToIndices(proposalCount1)\n  }, [chainId, proposalCount1])\n  const gov2ProposalIndexes = useMemo(() => {\n    return countToIndices(proposalCount2, 8)\n  }, [proposalCount2])\n\n  const proposalsV0 = useSingleContractMultipleData(gov0, 'proposals', gov0ProposalIndexes)\n  const proposalsV1 = useSingleContractMultipleData(gov1, 'proposals', gov1ProposalIndexes)\n  const proposalsV2 = useSingleContractMultipleData(gov2, 'proposals', gov2ProposalIndexes)\n\n  // get all proposal states\n  const proposalStatesV0 = useSingleContractMultipleData(gov0, 'state', gov0ProposalIndexes)\n  const proposalStatesV1 = useSingleContractMultipleData(gov1, 'state', gov1ProposalIndexes)\n  const proposalStatesV2 = useSingleContractMultipleData(gov2, 'state', gov2ProposalIndexes)\n\n  // get metadata from past events\n  const formattedLogsV0 = useFormattedProposalCreatedLogs(gov0, gov0ProposalIndexes)\n  const formattedLogsV1 = useFormattedProposalCreatedLogs(gov1, gov1ProposalIndexes)\n  const formattedLogsV2 = useFormattedProposalCreatedLogs(gov2, gov2ProposalIndexes)\n\n  // early return until events are fetched\n  return useMemo(() => {\n    const proposalsCallData = [...proposalsV0, ...proposalsV1, ...proposalsV2]\n    const proposalStatesCallData = [...proposalStatesV0, ...proposalStatesV1, ...proposalStatesV2]\n    const formattedLogs = [...(formattedLogsV0 ?? []), ...(formattedLogsV1 ?? []), ...(formattedLogsV2 ?? [])]\n\n    if (\n      proposalsCallData.some((p) => p.loading) ||\n      proposalStatesCallData.some((p) => p.loading) ||\n      (gov0 && !formattedLogsV0) ||\n      (gov1 && !formattedLogsV1) ||\n      (gov2 && !formattedLogsV2)\n    ) {\n      return { data: [], loading: true }\n    }\n\n    return {\n      data: proposalsCallData.map((proposal, i) => {\n        const startBlock = parseInt(proposal?.result?.startBlock?.toString())\n\n        let description = formattedLogs[i]?.description\n        if (startBlock === UNISWAP_GRANTS_START_BLOCK) {\n          description = UNISWAP_GRANTS_PROPOSAL_DESCRIPTION\n        }\n\n        let title = description?.split(/#+\\s|\\n/g)[1]\n        if (startBlock === POLYGON_START_BLOCK) {\n          title = POLYGON_PROPOSAL_TITLE\n        }\n\n        return {\n          id: proposal?.result?.id.toString(),\n          title: title ?? t`Untitled`,\n          description: description ?? t`No description.`,\n          proposer: proposal?.result?.proposer,\n          status: proposalStatesCallData[i]?.result?.[0] ?? ProposalState.UNDETERMINED,\n          forCount: parseFloat(formatUnits(proposal?.result?.forVotes?.toString() ?? 0, 18)),\n          againstCount: parseFloat(formatUnits(proposal?.result?.againstVotes?.toString() ?? 0, 18)),\n          abstainCount: parseFloat(formatUnits(proposal?.result?.abstainVotes?.toString() ?? 0, 18)),\n          startBlock,\n          endBlock: parseInt(proposal?.result?.endBlock?.toString()),\n          details: formattedLogs[i]?.details,\n          governorIndex: i >= proposalsV0.length + proposalsV1.length ? 2 : i >= proposalsV0.length ? 1 : 0,\n        }\n      }),\n      loading: false,\n    }\n  }, [\n    formattedLogsV0,\n    formattedLogsV1,\n    formattedLogsV2,\n    gov0,\n    gov1,\n    gov2,\n    proposalStatesV0,\n    proposalStatesV1,\n    proposalStatesV2,\n    proposalsV0,\n    proposalsV1,\n    proposalsV2,\n  ])\n}\n\nexport function useProposalData(governorIndex: number, id: string): ProposalData | undefined {\n  const { data } = useAllProposalData()\n  return data.filter((p) => p.governorIndex === governorIndex)?.find((p) => p.id === id)\n}\n\n// get the users delegatee if it exists\nexport function useUserDelegatee(): string {\n  const { account } = useActiveWeb3React()\n  const uniContract = useUniContract()\n  const { result } = useSingleCallResult(uniContract, 'delegates', [account ?? undefined])\n  return result?.[0] ?? undefined\n}\n\n// gets the users current votes\nexport function useUserVotes(): { loading: boolean; votes: CurrencyAmount<Token> | undefined } {\n  const { account, chainId } = useActiveWeb3React()\n  const uniContract = useUniContract()\n\n  // check for available votes\n  const { result, loading } = useSingleCallResult(uniContract, 'getCurrentVotes', [account ?? undefined])\n  return useMemo(() => {\n    const uni = chainId ? UNI[chainId] : undefined\n    return { loading, votes: uni && result ? CurrencyAmount.fromRawAmount(uni, result?.[0]) : undefined }\n  }, [chainId, loading, result])\n}\n\n// fetch available votes as of block (usually proposal start block)\nexport function useUserVotesAsOfBlock(block: number | undefined): CurrencyAmount<Token> | undefined {\n  const { account, chainId } = useActiveWeb3React()\n  const uniContract = useUniContract()\n\n  // check for available votes\n  const uni = chainId ? UNI[chainId] : undefined\n  const votes = useSingleCallResult(uniContract, 'getPriorVotes', [account ?? undefined, block ?? undefined])\n    ?.result?.[0]\n  return votes && uni ? CurrencyAmount.fromRawAmount(uni, votes) : undefined\n}\n\nexport function useDelegateCallback(): (delegatee: string | undefined) => undefined | Promise<string> {\n  const { account, chainId, library } = useActiveWeb3React()\n  const addTransaction = useTransactionAdder()\n\n  const uniContract = useUniContract()\n\n  return useCallback(\n    (delegatee: string | undefined) => {\n      if (!library || !chainId || !account || !delegatee || !isAddress(delegatee ?? '')) return undefined\n      const args = [delegatee]\n      if (!uniContract) throw new Error('No UNI Contract!')\n      return uniContract.estimateGas.delegate(...args, {}).then((estimatedGasLimit) => {\n        return uniContract\n          .delegate(...args, { value: null, gasLimit: calculateGasMargin(estimatedGasLimit) })\n          .then((response: TransactionResponse) => {\n            addTransaction(response, {\n              type: TransactionType.DELEGATE,\n              delegatee,\n            })\n            return response.hash\n          })\n      })\n    },\n    [account, addTransaction, chainId, library, uniContract]\n  )\n}\n\nexport function useVoteCallback(): {\n  voteCallback: (proposalId: string | undefined, voteOption: VoteOption) => undefined | Promise<string>\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const latestGovernanceContract = useLatestGovernanceContract()\n\n  const addTransaction = useTransactionAdder()\n\n  const voteCallback = useCallback(\n    (proposalId: string | undefined, voteOption: VoteOption) => {\n      if (!account || !latestGovernanceContract || !proposalId || !chainId) return\n      const args = [proposalId, voteOption === VoteOption.Against ? 0 : voteOption === VoteOption.For ? 1 : 2]\n      return latestGovernanceContract.estimateGas.castVote(...args, {}).then((estimatedGasLimit) => {\n        return latestGovernanceContract\n          .castVote(...args, { value: null, gasLimit: calculateGasMargin(estimatedGasLimit) })\n          .then((response: TransactionResponse) => {\n            addTransaction(response, {\n              type: TransactionType.VOTE,\n              decision: voteOption,\n              governorAddress: latestGovernanceContract.address,\n              proposalId: parseInt(proposalId),\n              reason: '',\n            })\n            return response.hash\n          })\n      })\n    },\n    [account, addTransaction, latestGovernanceContract, chainId]\n  )\n  return { voteCallback }\n}\n\nexport function useCreateProposalCallback(): (\n  createProposalData: CreateProposalData | undefined\n) => undefined | Promise<string> {\n  const { account, chainId } = useActiveWeb3React()\n\n  const latestGovernanceContract = useLatestGovernanceContract()\n  const addTransaction = useTransactionAdder()\n\n  return useCallback(\n    (createProposalData: CreateProposalData | undefined) => {\n      if (!account || !latestGovernanceContract || !createProposalData || !chainId) return undefined\n\n      const args = [\n        createProposalData.targets,\n        createProposalData.values,\n        createProposalData.signatures,\n        createProposalData.calldatas,\n        createProposalData.description,\n      ]\n\n      return latestGovernanceContract.estimateGas.propose(...args).then((estimatedGasLimit) => {\n        return latestGovernanceContract\n          .propose(...args, { gasLimit: calculateGasMargin(estimatedGasLimit) })\n          .then((response: TransactionResponse) => {\n            addTransaction(response, {\n              type: TransactionType.SUBMIT_PROPOSAL,\n            })\n            return response.hash\n          })\n      })\n    },\n    [account, addTransaction, latestGovernanceContract, chainId]\n  )\n}\n\nexport function useLatestProposalId(address: string | undefined): string | undefined {\n  const latestGovernanceContract = useLatestGovernanceContract()\n  const res = useSingleCallResult(latestGovernanceContract, 'latestProposalIds', [address])\n  return res?.result?.[0]?.toString()\n}\n\nexport function useProposalThreshold(): CurrencyAmount<Token> | undefined {\n  const { chainId } = useActiveWeb3React()\n\n  const latestGovernanceContract = useLatestGovernanceContract()\n  const res = useSingleCallResult(latestGovernanceContract, 'proposalThreshold')\n  const uni = chainId ? UNI[chainId] : undefined\n\n  if (res?.result?.[0] && uni) {\n    return CurrencyAmount.fromRawAmount(uni, res.result[0])\n  }\n\n  return undefined\n}\n"]},"metadata":{},"sourceType":"module"}