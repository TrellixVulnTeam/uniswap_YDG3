{"ast":null,"code":"import _slicedToArray from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _styled from\"styled-components\";import{Trans}from\"@lingui/react\";import Badge from'components/Badge';import CurrencyLogo from'components/CurrencyLogo';import DoubleCurrencyLogo from'components/DoubleLogo';import Row,{AutoRow}from'components/Row';import{useTokenInfoFromActiveList}from'hooks/useTokenInfoFromActiveList';import{Box}from'rebass';import{ThemedText,Z_INDEX}from'theme';import{ReactComponent as DotLine}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/svg/dot_line.svg\";import{MouseoverTooltip}from'../Tooltip';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Wrapper=_styled(Box).withConfig({componentId:\"sc-o1ook0-0\"})([\"align-items:center;width:100%;\"]);var RouteContainerRow=_styled(Row).withConfig({componentId:\"sc-o1ook0-1\"})([\"display:grid;grid-template-columns:24px 1fr 24px;\"]);var RouteRow=_styled(Row).withConfig({componentId:\"sc-o1ook0-2\"})([\"align-items:center;display:flex;justify-content:center;padding:0.1rem 0.5rem;position:relative;\"]);var PoolBadge=_styled(Badge).withConfig({componentId:\"sc-o1ook0-3\"})([\"display:flex;padding:4px 4px;\"]);var DottedLine=_styled.div.withConfig({componentId:\"sc-o1ook0-4\"})([\"display:flex;align-items:center;position:absolute;width:calc(100%);z-index:1;opacity:0.5;\"]);var DotColor=_styled(DotLine).withConfig({componentId:\"sc-o1ook0-5\"})([\"path{stroke:\",\";}\"],function(_ref){var theme=_ref.theme;return theme.bg4;});var OpaqueBadge=_styled(Badge).withConfig({componentId:\"sc-o1ook0-6\"})([\"background-color:\",\";border-radius:8px;display:grid;font-size:12px;grid-gap:4px;grid-auto-flow:column;justify-content:start;padding:4px 6px 4px 4px;z-index:\",\";\"],function(_ref2){var theme=_ref2.theme;return theme.bg2;},Z_INDEX.sticky);var ProtocolBadge=_styled(Badge).withConfig({componentId:\"sc-o1ook0-7\"})([\"background-color:\",\";border-radius:4px;color:\",\";font-size:10px;padding:2px 4px;z-index:\",\";\"],function(_ref3){var theme=_ref3.theme;return theme.bg3;},function(_ref4){var theme=_ref4.theme;return theme.text2;},Z_INDEX.sticky+1);var BadgeText=_styled(ThemedText.Small).withConfig({componentId:\"sc-o1ook0-8\"})([\"word-break:normal;\"]);export default function RoutingDiagram(_ref5){var currencyIn=_ref5.currencyIn,currencyOut=_ref5.currencyOut,routes=_ref5.routes;var tokenIn=useTokenInfoFromActiveList(currencyIn);var tokenOut=useTokenInfoFromActiveList(currencyOut);return/*#__PURE__*/_jsx(Wrapper,{children:routes.map(function(entry,index){return/*#__PURE__*/_jsxs(RouteContainerRow,{children:[/*#__PURE__*/_jsx(CurrencyLogo,{currency:tokenIn,size:'20px'}),/*#__PURE__*/_jsx(Route,{entry:entry}),/*#__PURE__*/_jsx(CurrencyLogo,{currency:tokenOut,size:'20px'})]},index);})});}function Route(_ref6){var _ref6$entry=_ref6.entry,percent=_ref6$entry.percent,path=_ref6$entry.path,protocol=_ref6$entry.protocol;return/*#__PURE__*/_jsxs(RouteRow,{children:[/*#__PURE__*/_jsx(DottedLine,{children:/*#__PURE__*/_jsx(DotColor,{})}),/*#__PURE__*/_jsxs(OpaqueBadge,{children:[/*#__PURE__*/_jsx(ProtocolBadge,{children:/*#__PURE__*/_jsx(BadgeText,{fontSize:12,children:protocol.toUpperCase()})}),/*#__PURE__*/_jsxs(BadgeText,{fontSize:14,style:{minWidth:'auto'},children:[percent.toSignificant(2),\"%\"]})]}),/*#__PURE__*/_jsx(AutoRow,{gap:\"1px\",width:\"100%\",style:{justifyContent:'space-evenly',zIndex:2},children:path.map(function(_ref7,index){var _ref8=_slicedToArray(_ref7,3),currency0=_ref8[0],currency1=_ref8[1],feeAmount=_ref8[2];return/*#__PURE__*/_jsx(Pool,{currency0:currency0,currency1:currency1,feeAmount:feeAmount},index);})})]});}function Pool(_ref9){var currency0=_ref9.currency0,currency1=_ref9.currency1,feeAmount=_ref9.feeAmount;var tokenInfo0=useTokenInfoFromActiveList(currency0);var tokenInfo1=useTokenInfoFromActiveList(currency1);// TODO - link pool icon to info.uniswap.org via query params\nreturn/*#__PURE__*/_jsx(MouseoverTooltip,{text:/*#__PURE__*/_jsx(Trans,{id:\"{0}% pool\",values:{0:(tokenInfo0===null||tokenInfo0===void 0?void 0:tokenInfo0.symbol)+'/'+(tokenInfo1===null||tokenInfo1===void 0?void 0:tokenInfo1.symbol)+' '+feeAmount/10000}}),children:/*#__PURE__*/_jsxs(PoolBadge,{children:[/*#__PURE__*/_jsx(Box,{margin:\"0 4px 0 12px\",children:/*#__PURE__*/_jsx(DoubleCurrencyLogo,{currency0:tokenInfo1,currency1:tokenInfo0,size:20})}),/*#__PURE__*/_jsxs(ThemedText.Small,{fontSize:14,children:[feeAmount/10000,\"%\"]})]})});}","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/components/RoutingDiagram/RoutingDiagram.tsx"],"names":["Badge","CurrencyLogo","DoubleCurrencyLogo","Row","AutoRow","useTokenInfoFromActiveList","Box","ThemedText","Z_INDEX","MouseoverTooltip","Wrapper","styled","RouteContainerRow","RouteRow","PoolBadge","DottedLine","div","DotColor","DotLine","theme","bg4","OpaqueBadge","bg2","sticky","ProtocolBadge","bg3","text2","BadgeText","Small","RoutingDiagram","currencyIn","currencyOut","routes","tokenIn","tokenOut","map","entry","index","Route","percent","path","protocol","toUpperCase","minWidth","toSignificant","justifyContent","zIndex","currency0","currency1","feeAmount","Pool","tokenInfo0","tokenInfo1","symbol"],"mappings":"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","sourcesContent":["import { Trans } from '@lingui/macro'\nimport { Protocol } from '@uniswap/router-sdk'\nimport { Currency, Percent } from '@uniswap/sdk-core'\nimport { FeeAmount } from '@uniswap/v3-sdk'\nimport Badge from 'components/Badge'\nimport CurrencyLogo from 'components/CurrencyLogo'\nimport DoubleCurrencyLogo from 'components/DoubleLogo'\nimport Row, { AutoRow } from 'components/Row'\nimport { useTokenInfoFromActiveList } from 'hooks/useTokenInfoFromActiveList'\nimport { Box } from 'rebass'\nimport styled from 'styled-components/macro'\nimport { ThemedText, Z_INDEX } from 'theme'\n\nimport { ReactComponent as DotLine } from '../../assets/svg/dot_line.svg'\nimport { MouseoverTooltip } from '../Tooltip'\n\nexport interface RoutingDiagramEntry {\n  percent: Percent\n  path: [Currency, Currency, FeeAmount][]\n  protocol: Protocol\n}\n\nconst Wrapper = styled(Box)`\n  align-items: center;\n  width: 100%;\n`\n\nconst RouteContainerRow = styled(Row)`\n  display: grid;\n  grid-template-columns: 24px 1fr 24px;\n`\n\nconst RouteRow = styled(Row)`\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  padding: 0.1rem 0.5rem;\n  position: relative;\n`\n\nconst PoolBadge = styled(Badge)`\n  display: flex;\n  padding: 4px 4px;\n`\n\nconst DottedLine = styled.div`\n  display: flex;\n  align-items: center;\n  position: absolute;\n  width: calc(100%);\n  z-index: 1;\n  opacity: 0.5;\n`\n\nconst DotColor = styled(DotLine)`\n  path {\n    stroke: ${({ theme }) => theme.bg4};\n  }\n`\n\nconst OpaqueBadge = styled(Badge)`\n  background-color: ${({ theme }) => theme.bg2};\n  border-radius: 8px;\n  display: grid;\n  font-size: 12px;\n  grid-gap: 4px;\n  grid-auto-flow: column;\n  justify-content: start;\n  padding: 4px 6px 4px 4px;\n  z-index: ${Z_INDEX.sticky};\n`\n\nconst ProtocolBadge = styled(Badge)`\n  background-color: ${({ theme }) => theme.bg3};\n  border-radius: 4px;\n  color: ${({ theme }) => theme.text2};\n  font-size: 10px;\n  padding: 2px 4px;\n  z-index: ${Z_INDEX.sticky + 1};\n`\n\nconst BadgeText = styled(ThemedText.Small)`\n  word-break: normal;\n`\n\nexport default function RoutingDiagram({\n  currencyIn,\n  currencyOut,\n  routes,\n}: {\n  currencyIn: Currency\n  currencyOut: Currency\n  routes: RoutingDiagramEntry[]\n}) {\n  const tokenIn = useTokenInfoFromActiveList(currencyIn)\n  const tokenOut = useTokenInfoFromActiveList(currencyOut)\n\n  return (\n    <Wrapper>\n      {routes.map((entry, index) => (\n        <RouteContainerRow key={index}>\n          <CurrencyLogo currency={tokenIn} size={'20px'} />\n          <Route entry={entry} />\n          <CurrencyLogo currency={tokenOut} size={'20px'} />\n        </RouteContainerRow>\n      ))}\n    </Wrapper>\n  )\n}\n\nfunction Route({ entry: { percent, path, protocol } }: { entry: RoutingDiagramEntry }) {\n  return (\n    <RouteRow>\n      <DottedLine>\n        <DotColor />\n      </DottedLine>\n      <OpaqueBadge>\n        <ProtocolBadge>\n          <BadgeText fontSize={12}>{protocol.toUpperCase()}</BadgeText>\n        </ProtocolBadge>\n        <BadgeText fontSize={14} style={{ minWidth: 'auto' }}>\n          {percent.toSignificant(2)}%\n        </BadgeText>\n      </OpaqueBadge>\n      <AutoRow gap=\"1px\" width=\"100%\" style={{ justifyContent: 'space-evenly', zIndex: 2 }}>\n        {path.map(([currency0, currency1, feeAmount], index) => (\n          <Pool key={index} currency0={currency0} currency1={currency1} feeAmount={feeAmount} />\n        ))}\n      </AutoRow>\n    </RouteRow>\n  )\n}\n\nfunction Pool({ currency0, currency1, feeAmount }: { currency0: Currency; currency1: Currency; feeAmount: FeeAmount }) {\n  const tokenInfo0 = useTokenInfoFromActiveList(currency0)\n  const tokenInfo1 = useTokenInfoFromActiveList(currency1)\n\n  // TODO - link pool icon to info.uniswap.org via query params\n  return (\n    <MouseoverTooltip\n      text={<Trans>{tokenInfo0?.symbol + '/' + tokenInfo1?.symbol + ' ' + feeAmount / 10000}% pool</Trans>}\n    >\n      <PoolBadge>\n        <Box margin=\"0 4px 0 12px\">\n          <DoubleCurrencyLogo currency0={tokenInfo1} currency1={tokenInfo0} size={20} />\n        </Box>\n        <ThemedText.Small fontSize={14}>{feeAmount / 10000}%</ThemedText.Small>\n      </PoolBadge>\n    </MouseoverTooltip>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}