{"ast":null,"code":"import { Web3Provider } from '@ethersproject/providers';\nimport { SupportedChainId } from '../constants/chains';\nconst NETWORK_POLLING_INTERVALS = {\n  [SupportedChainId.ARBITRUM_ONE]: 1000,\n  [SupportedChainId.ARBITRUM_RINKEBY]: 1000,\n  [SupportedChainId.OPTIMISM]: 1000,\n  [SupportedChainId.OPTIMISTIC_KOVAN]: 1000\n};\nexport default function getLibrary(provider) {\n  const library = new Web3Provider(provider, typeof provider.chainId === 'number' ? provider.chainId : typeof provider.chainId === 'string' ? parseInt(provider.chainId) : 'any');\n  library.pollingInterval = 15000;\n  library.detectNetwork().then(network => {\n    const networkPollingInterval = NETWORK_POLLING_INTERVALS[network.chainId];\n\n    if (networkPollingInterval) {\n      console.debug('Setting polling interval', networkPollingInterval);\n      library.pollingInterval = networkPollingInterval;\n    }\n  });\n  return library;\n}","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/utils/getLibrary.ts"],"names":["Web3Provider","SupportedChainId","NETWORK_POLLING_INTERVALS","ARBITRUM_ONE","ARBITRUM_RINKEBY","OPTIMISM","OPTIMISTIC_KOVAN","getLibrary","provider","library","chainId","parseInt","pollingInterval","detectNetwork","then","network","networkPollingInterval","console","debug"],"mappings":"AAAA,SAASA,YAAT,QAA6B,0BAA7B;AAGA,SAASC,gBAAT,QAAiC,qBAAjC;AAEA,MAAMC,yBAAwD,GAAG;AAC/D,GAACD,gBAAgB,CAACE,YAAlB,OAD+D;AAE/D,GAACF,gBAAgB,CAACG,gBAAlB,OAF+D;AAG/D,GAACH,gBAAgB,CAACI,QAAlB,OAH+D;AAI/D,GAACJ,gBAAgB,CAACK,gBAAlB;AAJ+D,CAAjE;AAOA,eAAe,SAASC,UAAT,CAAoBC,QAApB,EAAiD;AAC9D,QAAMC,OAAO,GAAG,IAAIT,YAAJ,CACdQ,QADc,EAEd,OAAOA,QAAQ,CAACE,OAAhB,KAA4B,QAA5B,GACIF,QAAQ,CAACE,OADb,GAEI,OAAOF,QAAQ,CAACE,OAAhB,KAA4B,QAA5B,GACAC,QAAQ,CAACH,QAAQ,CAACE,OAAV,CADR,GAEA,KANU,CAAhB;AAQAD,EAAAA,OAAO,CAACG,eAAR,GAA0B,KAA1B;AACAH,EAAAA,OAAO,CAACI,aAAR,GAAwBC,IAAxB,CAA8BC,OAAD,IAAa;AACxC,UAAMC,sBAAsB,GAAGd,yBAAyB,CAACa,OAAO,CAACL,OAAT,CAAxD;;AACA,QAAIM,sBAAJ,EAA4B;AAC1BC,MAAAA,OAAO,CAACC,KAAR,CAAc,0BAAd,EAA0CF,sBAA1C;AACAP,MAAAA,OAAO,CAACG,eAAR,GAA0BI,sBAA1B;AACD;AACF,GAND;AAOA,SAAOP,OAAP;AACD","sourcesContent":["import { Web3Provider } from '@ethersproject/providers'\nimport ms from 'ms.macro'\n\nimport { SupportedChainId } from '../constants/chains'\n\nconst NETWORK_POLLING_INTERVALS: { [chainId: number]: number } = {\n  [SupportedChainId.ARBITRUM_ONE]: ms`1s`,\n  [SupportedChainId.ARBITRUM_RINKEBY]: ms`1s`,\n  [SupportedChainId.OPTIMISM]: ms`1s`,\n  [SupportedChainId.OPTIMISTIC_KOVAN]: ms`1s`,\n}\n\nexport default function getLibrary(provider: any): Web3Provider {\n  const library = new Web3Provider(\n    provider,\n    typeof provider.chainId === 'number'\n      ? provider.chainId\n      : typeof provider.chainId === 'string'\n      ? parseInt(provider.chainId)\n      : 'any'\n  )\n  library.pollingInterval = 15_000\n  library.detectNetwork().then((network) => {\n    const networkPollingInterval = NETWORK_POLLING_INTERVALS[network.chainId]\n    if (networkPollingInterval) {\n      console.debug('Setting polling interval', networkPollingInterval)\n      library.pollingInterval = networkPollingInterval\n    }\n  })\n  return library\n}\n"]},"metadata":{},"sourceType":"module"}