{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Downloads/interface-4.30.1/src/pages/AddLiquidity/redirects.tsx\",\n    _s = $RefreshSig$();\n\nimport { useActiveWeb3React } from 'hooks/web3';\nimport { Redirect } from 'react-router-dom';\nimport { WRAPPED_NATIVE_CURRENCY } from '../../constants/tokens';\nimport AddLiquidity from './index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function RedirectDuplicateTokenIds(props) {\n  _s();\n\n  var _WRAPPED_NATIVE_CURRE, _WRAPPED_NATIVE_CURRE2;\n\n  const {\n    match: {\n      params: {\n        currencyIdA,\n        currencyIdB\n      }\n    }\n  } = props;\n  const {\n    chainId\n  } = useActiveWeb3React(); // prevent weth + eth\n\n  const isETHOrWETHA = currencyIdA === 'ETH' || chainId !== undefined && currencyIdA === ((_WRAPPED_NATIVE_CURRE = WRAPPED_NATIVE_CURRENCY[chainId]) === null || _WRAPPED_NATIVE_CURRE === void 0 ? void 0 : _WRAPPED_NATIVE_CURRE.address);\n  const isETHOrWETHB = currencyIdB === 'ETH' || chainId !== undefined && currencyIdB === ((_WRAPPED_NATIVE_CURRE2 = WRAPPED_NATIVE_CURRENCY[chainId]) === null || _WRAPPED_NATIVE_CURRE2 === void 0 ? void 0 : _WRAPPED_NATIVE_CURRE2.address);\n\n  if (currencyIdA && currencyIdB && (currencyIdA.toLowerCase() === currencyIdB.toLowerCase() || isETHOrWETHA && isETHOrWETHB)) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: `/add/${currencyIdA}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(AddLiquidity, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n}\n\n_s(RedirectDuplicateTokenIds, \"Srgj51dvRDiLRw5YTqb92Ixo5OU=\", false, function () {\n  return [useActiveWeb3React];\n});\n\n_c = RedirectDuplicateTokenIds;\n\nvar _c;\n\n$RefreshReg$(_c, \"RedirectDuplicateTokenIds\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/pages/AddLiquidity/redirects.tsx"],"names":["useActiveWeb3React","Redirect","WRAPPED_NATIVE_CURRENCY","AddLiquidity","RedirectDuplicateTokenIds","props","match","params","currencyIdA","currencyIdB","chainId","isETHOrWETHA","undefined","address","isETHOrWETHB","toLowerCase"],"mappings":";;;AAAA,SAASA,kBAAT,QAAmC,YAAnC;AACA,SAASC,QAAT,QAA8C,kBAA9C;AAEA,SAASC,uBAAT,QAAwC,wBAAxC;AACA,OAAOC,YAAP,MAAyB,SAAzB;;AAEA,OAAO,SAASC,yBAAT,CACLC,KADK,EAEL;AAAA;;AAAA;;AACA,QAAM;AACJC,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,WAAF;AAAeC,QAAAA;AAAf;AADH;AADH,MAIFJ,KAJJ;AAMA,QAAM;AAAEK,IAAAA;AAAF,MAAcV,kBAAkB,EAAtC,CAPA,CASA;;AACA,QAAMW,YAAY,GAChBH,WAAW,KAAK,KAAhB,IAA0BE,OAAO,KAAKE,SAAZ,IAAyBJ,WAAW,+BAAKN,uBAAuB,CAACQ,OAAD,CAA5B,0DAAK,sBAAkCG,OAAvC,CADhE;AAEA,QAAMC,YAAY,GAChBL,WAAW,KAAK,KAAhB,IAA0BC,OAAO,KAAKE,SAAZ,IAAyBH,WAAW,gCAAKP,uBAAuB,CAACQ,OAAD,CAA5B,2DAAK,uBAAkCG,OAAvC,CADhE;;AAGA,MACEL,WAAW,IACXC,WADA,KAECD,WAAW,CAACO,WAAZ,OAA8BN,WAAW,CAACM,WAAZ,EAA9B,IAA4DJ,YAAY,IAAIG,YAF7E,CADF,EAIE;AACA,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAG,QAAON,WAAY;AAAlC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBAAO,QAAC,YAAD,OAAkBH;AAAlB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAzBeD,yB;UASMJ,kB;;;KATNI,yB","sourcesContent":["import { useActiveWeb3React } from 'hooks/web3'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\n\nimport { WRAPPED_NATIVE_CURRENCY } from '../../constants/tokens'\nimport AddLiquidity from './index'\n\nexport function RedirectDuplicateTokenIds(\n  props: RouteComponentProps<{ currencyIdA: string; currencyIdB: string; feeAmount?: string }>\n) {\n  const {\n    match: {\n      params: { currencyIdA, currencyIdB },\n    },\n  } = props\n\n  const { chainId } = useActiveWeb3React()\n\n  // prevent weth + eth\n  const isETHOrWETHA =\n    currencyIdA === 'ETH' || (chainId !== undefined && currencyIdA === WRAPPED_NATIVE_CURRENCY[chainId]?.address)\n  const isETHOrWETHB =\n    currencyIdB === 'ETH' || (chainId !== undefined && currencyIdB === WRAPPED_NATIVE_CURRENCY[chainId]?.address)\n\n  if (\n    currencyIdA &&\n    currencyIdB &&\n    (currencyIdA.toLowerCase() === currencyIdB.toLowerCase() || (isETHOrWETHA && isETHOrWETHB))\n  ) {\n    return <Redirect to={`/add/${currencyIdA}`} />\n  }\n  return <AddLiquidity {...props} />\n}\n"]},"metadata":{},"sourceType":"module"}