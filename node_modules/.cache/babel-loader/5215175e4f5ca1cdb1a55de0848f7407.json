{"ast":null,"code":"import _styled from \"styled-components\";\n\nvar _jsxFileName = \"/Users/safahi/Downloads/interface-4.30.1/src/components/TextInput/index.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { memo, useCallback, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = _styled.input.withConfig({\n  displayName: \"TextInput__Input\",\n  componentId: \"sc-4obmhd-0\"\n})([\"font-size:\", \";outline:none;border:none;flex:1 1 auto;width:0;background-color:\", \";transition:color 300ms \", \";color:\", \";overflow:hidden;text-overflow:ellipsis;font-weight:500;width:100%;padding:0px;-webkit-appearance:textfield;::-webkit-search-decoration{-webkit-appearance:none;}::-webkit-outer-spin-button,::-webkit-inner-spin-button{-webkit-appearance:none;}::placeholder{color:\", \";}\"], ({\n  fontSize\n}) => fontSize || '1.25rem', ({\n  theme\n}) => theme.bg1, ({\n  error\n}) => error ? 'step-end' : 'step-start', ({\n  error,\n  theme\n}) => error ? theme.red1 : theme.text1, ({\n  theme\n}) => theme.text4);\n\nconst TextAreaInput = _styled.textarea.withConfig({\n  displayName: \"TextInput__TextAreaInput\",\n  componentId: \"sc-4obmhd-1\"\n})([\"font-size:\", \";outline:none;border:none;flex:1 1 auto;width:0;resize:none;background-color:\", \";transition:color 300ms \", \";color:\", \";overflow:hidden;text-overflow:ellipsis;font-weight:500;width:100%;line-height:1.2;padding:0px;-webkit-appearance:textfield;::-webkit-search-decoration{-webkit-appearance:none;}::-webkit-outer-spin-button,::-webkit-inner-spin-button{-webkit-appearance:none;}::placeholder{color:\", \";}\"], ({\n  fontSize\n}) => fontSize || '1.25rem', ({\n  theme\n}) => theme.bg1, ({\n  error\n}) => error ? 'step-end' : 'step-start', ({\n  error,\n  theme\n}) => error ? theme.red1 : theme.text1, ({\n  theme\n}) => theme.text4);\n\nexport const TextInput = ({\n  className,\n  value,\n  onUserInput,\n  placeholder,\n  fontSize\n}) => {\n  _s();\n\n  const handleInput = useCallback(event => {\n    onUserInput(event.target.value);\n  }, [onUserInput]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: /*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      autoComplete: \"off\",\n      autoCorrect: \"off\",\n      autoCapitalize: \"off\",\n      spellCheck: \"false\",\n      placeholder: placeholder || '',\n      onChange: handleInput,\n      value: value,\n      fontSize: fontSize\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TextInput, \"WnM8q5zxFWyp8bkQJxS71d45xe0=\");\n\n_c = TextInput;\nexport const ResizingTextArea = /*#__PURE__*/memo(_c2 = _s2(({\n  className,\n  value,\n  onUserInput,\n  placeholder,\n  fontSize\n}) => {\n  _s2();\n\n  const inputRef = useRef(document.createElement('textarea'));\n  const handleInput = useCallback(event => {\n    inputRef.current.style.height = 'auto';\n    inputRef.current.style.height = inputRef.current.scrollHeight + 'px';\n    onUserInput(event.target.value);\n  }, [onUserInput]);\n  return /*#__PURE__*/_jsxDEV(TextAreaInput, {\n    style: {\n      height: 'auto',\n      minHeight: '500px'\n    },\n    className: className,\n    autoComplete: \"off\",\n    autoCorrect: \"off\",\n    autoCapitalize: \"off\",\n    spellCheck: \"false\",\n    placeholder: placeholder || '',\n    onChange: handleInput,\n    value: value,\n    fontSize: fontSize,\n    ref: inputRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 7\n  }, this);\n}, \"xRoCEVjCyWNXSI02bk8TOSqxFng=\"));\n_c3 = ResizingTextArea;\nResizingTextArea.displayName = 'ResizingTextArea';\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TextInput\");\n$RefreshReg$(_c2, \"ResizingTextArea$memo\");\n$RefreshReg$(_c3, \"ResizingTextArea\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/components/TextInput/index.tsx"],"names":["React","memo","useCallback","useRef","Input","styled","input","fontSize","theme","bg1","error","red1","text1","text4","TextAreaInput","textarea","TextInput","className","value","onUserInput","placeholder","handleInput","event","target","ResizingTextArea","inputRef","document","createElement","current","style","height","scrollHeight","minHeight","displayName"],"mappings":"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","sourcesContent":["import React, { memo, useCallback, useRef } from 'react'\nimport styled from 'styled-components/macro'\n\nconst Input = styled.input<{ error?: boolean; fontSize?: string }>`\n  font-size: ${({ fontSize }) => fontSize || '1.25rem'};\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.bg1};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.red1 : theme.text1)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.text4};\n  }\n`\n\nconst TextAreaInput = styled.textarea<{ error?: boolean; fontSize?: string }>`\n  font-size: ${({ fontSize }) => fontSize || '1.25rem'};\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  resize: none;\n  background-color: ${({ theme }) => theme.bg1};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.red1 : theme.text1)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  line-height: 1.2;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.text4};\n  }\n`\n\nexport const TextInput = ({\n  className,\n  value,\n  onUserInput,\n  placeholder,\n  fontSize,\n}: {\n  className?: string\n  value: string\n  onUserInput: (value: string) => void\n  placeholder: string\n  fontSize: string\n}) => {\n  const handleInput = useCallback(\n    (event) => {\n      onUserInput(event.target.value)\n    },\n    [onUserInput]\n  )\n\n  return (\n    <div className={className}>\n      <Input\n        type=\"text\"\n        autoComplete=\"off\"\n        autoCorrect=\"off\"\n        autoCapitalize=\"off\"\n        spellCheck=\"false\"\n        placeholder={placeholder || ''}\n        onChange={handleInput}\n        value={value}\n        fontSize={fontSize}\n      />\n    </div>\n  )\n}\n\nexport const ResizingTextArea = memo(\n  ({\n    className,\n    value,\n    onUserInput,\n    placeholder,\n    fontSize,\n  }: {\n    className?: string\n    value: string\n    onUserInput: (value: string) => void\n    placeholder: string\n    fontSize: string\n  }) => {\n    const inputRef = useRef<HTMLTextAreaElement>(document.createElement('textarea'))\n\n    const handleInput = useCallback(\n      (event) => {\n        inputRef.current.style.height = 'auto'\n        inputRef.current.style.height = inputRef.current.scrollHeight + 'px'\n        onUserInput(event.target.value)\n      },\n      [onUserInput]\n    )\n\n    return (\n      <TextAreaInput\n        style={{ height: 'auto', minHeight: '500px' }}\n        className={className}\n        autoComplete=\"off\"\n        autoCorrect=\"off\"\n        autoCapitalize=\"off\"\n        spellCheck=\"false\"\n        placeholder={placeholder || ''}\n        onChange={handleInput}\n        value={value}\n        fontSize={fontSize}\n        ref={inputRef}\n      />\n    )\n  }\n)\n\nResizingTextArea.displayName = 'ResizingTextArea'\n"]},"metadata":{},"sourceType":"module"}