{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Downloads/interface-4.30.1/src/i18n.tsx\",\n    _s = $RefreshSig$();\n\nimport { i18n } from '@lingui/core';\nimport { I18nProvider } from '@lingui/react';\nimport { DEFAULT_LOCALE, DEFAULT_MESSAGES } from 'constants/locales';\nimport { initialLocale, useActiveLocale } from 'hooks/useActiveLocale';\nimport { af, ar, ca, cs, da, de, el, en, es, fi, fr, he, hu, id, it, ja, ko, nl, no, pl, pt, ro, ru, sr, sv, sw, tr, uk, vi, zh } from 'make-plural/plurals';\nimport { useEffect } from 'react';\nimport { useUserLocaleManager } from 'state/user/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst plurals = {\n  'af-ZA': af,\n  'ar-SA': ar,\n  'ca-ES': ca,\n  'cs-CZ': cs,\n  'da-DK': da,\n  'de-DE': de,\n  'el-GR': el,\n  'en-US': en,\n  'es-ES': es,\n  'fi-FI': fi,\n  'fr-FR': fr,\n  'he-IL': he,\n  'hu-HU': hu,\n  'id-ID': id,\n  'it-IT': it,\n  'ja-JP': ja,\n  'ko-KR': ko,\n  'nl-NL': nl,\n  'no-NO': no,\n  'pl-PL': pl,\n  'pt-BR': pt,\n  'pt-PT': pt,\n  'ro-RO': ro,\n  'ru-RU': ru,\n  'sr-SP': sr,\n  'sv-SE': sv,\n  'sw-TZ': sw,\n  'tr-TR': tr,\n  'uk-UA': uk,\n  'vi-VN': vi,\n  'zh-CN': zh,\n  'zh-TW': zh\n};\n\nasync function dynamicActivate(locale) {\n  i18n.loadLocaleData(locale, {\n    plurals: () => plurals[locale]\n  });\n  const {\n    messages\n  } = locale === DEFAULT_LOCALE ? {\n    messages: DEFAULT_MESSAGES\n  } : await import(`locales/${locale}`);\n  i18n.load(locale, messages);\n  i18n.activate(locale);\n}\n\ndynamicActivate(initialLocale);\nexport function LanguageProvider({\n  children\n}) {\n  _s();\n\n  const locale = useActiveLocale();\n  const [, setUserLocale] = useUserLocaleManager();\n  useEffect(() => {\n    dynamicActivate(locale).then(() => {\n      document.documentElement.setAttribute('lang', locale);\n      setUserLocale(locale); // stores the selected locale to persist across sessions\n    }).catch(error => {\n      console.error('Failed to activate locale', locale, error);\n    });\n  }, [locale, setUserLocale]);\n  return /*#__PURE__*/_jsxDEV(I18nProvider, {\n    forceRenderOnLocaleChange: false,\n    i18n: i18n,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LanguageProvider, \"9J9PpDNz/tCt3U2wN+xiLUgsCYs=\", false, function () {\n  return [useActiveLocale, useUserLocaleManager];\n});\n\n_c = LanguageProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"LanguageProvider\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/i18n.tsx"],"names":["i18n","I18nProvider","DEFAULT_LOCALE","DEFAULT_MESSAGES","initialLocale","useActiveLocale","af","ar","ca","cs","da","de","el","en","es","fi","fr","he","hu","id","it","ja","ko","nl","no","pl","pt","ro","ru","sr","sv","sw","tr","uk","vi","zh","useEffect","useUserLocaleManager","plurals","dynamicActivate","locale","loadLocaleData","messages","load","activate","LanguageProvider","children","setUserLocale","then","document","documentElement","setAttribute","catch","error","console"],"mappings":"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","sourcesContent":["import { i18n } from '@lingui/core'\nimport { I18nProvider } from '@lingui/react'\nimport { DEFAULT_LOCALE, DEFAULT_MESSAGES, SupportedLocale } from 'constants/locales'\nimport { initialLocale, useActiveLocale } from 'hooks/useActiveLocale'\nimport {\n  af,\n  ar,\n  ca,\n  cs,\n  da,\n  de,\n  el,\n  en,\n  es,\n  fi,\n  fr,\n  he,\n  hu,\n  id,\n  it,\n  ja,\n  ko,\n  nl,\n  no,\n  pl,\n  PluralCategory,\n  pt,\n  ro,\n  ru,\n  sr,\n  sv,\n  sw,\n  tr,\n  uk,\n  vi,\n  zh,\n} from 'make-plural/plurals'\nimport { useEffect } from 'react'\nimport { ReactNode } from 'react'\nimport { useUserLocaleManager } from 'state/user/hooks'\n\ntype LocalePlural = {\n  [key in SupportedLocale]: (n: number | string, ord?: boolean) => PluralCategory\n}\n\nconst plurals: LocalePlural = {\n  'af-ZA': af,\n  'ar-SA': ar,\n  'ca-ES': ca,\n  'cs-CZ': cs,\n  'da-DK': da,\n  'de-DE': de,\n  'el-GR': el,\n  'en-US': en,\n  'es-ES': es,\n  'fi-FI': fi,\n  'fr-FR': fr,\n  'he-IL': he,\n  'hu-HU': hu,\n  'id-ID': id,\n  'it-IT': it,\n  'ja-JP': ja,\n  'ko-KR': ko,\n  'nl-NL': nl,\n  'no-NO': no,\n  'pl-PL': pl,\n  'pt-BR': pt,\n  'pt-PT': pt,\n  'ro-RO': ro,\n  'ru-RU': ru,\n  'sr-SP': sr,\n  'sv-SE': sv,\n  'sw-TZ': sw,\n  'tr-TR': tr,\n  'uk-UA': uk,\n  'vi-VN': vi,\n  'zh-CN': zh,\n  'zh-TW': zh,\n}\n\nasync function dynamicActivate(locale: SupportedLocale) {\n  i18n.loadLocaleData(locale, { plurals: () => plurals[locale] })\n  const { messages } = locale === DEFAULT_LOCALE ? { messages: DEFAULT_MESSAGES } : await import(`locales/${locale}`)\n  i18n.load(locale, messages)\n  i18n.activate(locale)\n}\n\ndynamicActivate(initialLocale)\n\nexport function LanguageProvider({ children }: { children: ReactNode }) {\n  const locale = useActiveLocale()\n  const [, setUserLocale] = useUserLocaleManager()\n\n  useEffect(() => {\n    dynamicActivate(locale)\n      .then(() => {\n        document.documentElement.setAttribute('lang', locale)\n        setUserLocale(locale) // stores the selected locale to persist across sessions\n      })\n      .catch((error) => {\n        console.error('Failed to activate locale', locale, error)\n      })\n  }, [locale, setUserLocale])\n\n  return (\n    <I18nProvider forceRenderOnLocaleChange={false} i18n={i18n}>\n      {children}\n    </I18nProvider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}