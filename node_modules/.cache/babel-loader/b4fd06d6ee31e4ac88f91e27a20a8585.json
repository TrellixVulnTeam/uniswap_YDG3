{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import{useTheme as _useTheme}from\"styled-components\";import _styled from\"styled-components\";var _templateObject;import{Trans}from\"@lingui/react\";import Card from'components/Card';import{AutoColumn}from'components/Column';import CurrencyLogo from'components/CurrencyLogo';import ListLogo from'components/ListLogo';import{RowFixed}from'components/Row';import{useActiveWeb3React}from'hooks/web3';import{transparentize}from'polished';import{AlertCircle}from'react-feather';import{ExternalLink,ThemedText}from'theme';import{ExplorerDataType,getExplorerLink}from'utils/getExplorerLink';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var WarningWrapper=_styled(Card).withConfig({componentId:\"sc-1x9yxxr-0\"})([\"background-color:\",\";width:fit-content;\"],function(_ref){var theme=_ref.theme,highWarning=_ref.highWarning;return highWarning?transparentize(0.8,theme.red1):transparentize(0.8,theme.yellow2);});var AddressText=_styled(ThemedText.Blue).withConfig({componentId:\"sc-1x9yxxr-1\"})([\"font-size:12px;word-break:break-all;\",\"\"],function(_ref2){var theme=_ref2.theme;return theme.mediaWidth.upToSmall(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    font-size: 10px;\\n  \"])));});var TokenImportCard=function TokenImportCard(_ref3){var list=_ref3.list,token=_ref3.token;var theme=_useTheme();var _useActiveWeb3React=useActiveWeb3React(),chainId=_useActiveWeb3React.chainId;return/*#__PURE__*/_jsx(Card,{backgroundColor:theme.bg2,padding:\"2rem\",children:/*#__PURE__*/_jsxs(AutoColumn,{gap:\"10px\",justify:\"center\",children:[/*#__PURE__*/_jsx(CurrencyLogo,{currency:token,size:'32px'}),/*#__PURE__*/_jsxs(AutoColumn,{gap:\"4px\",justify:\"center\",children:[/*#__PURE__*/_jsx(ThemedText.Body,{ml:\"8px\",mr:\"8px\",fontWeight:500,fontSize:20,children:token.symbol}),/*#__PURE__*/_jsx(ThemedText.DarkGray,{fontWeight:400,fontSize:14,children:token.name})]}),chainId&&/*#__PURE__*/_jsx(ExternalLink,{href:getExplorerLink(chainId,token.address,ExplorerDataType.ADDRESS),children:/*#__PURE__*/_jsx(AddressText,{fontSize:12,children:token.address})}),list!==undefined?/*#__PURE__*/_jsxs(RowFixed,{children:[list.logoURI&&/*#__PURE__*/_jsx(ListLogo,{logoURI:list.logoURI,size:\"16px\"}),/*#__PURE__*/_jsx(ThemedText.Small,{ml:\"6px\",fontSize:14,color:theme.text3,children:/*#__PURE__*/_jsx(Trans,{id:\"via {0} token list\",values:{0:list.name}})})]}):/*#__PURE__*/_jsx(WarningWrapper,{$borderRadius:\"4px\",padding:\"4px\",highWarning:true,children:/*#__PURE__*/_jsxs(RowFixed,{children:[/*#__PURE__*/_jsx(AlertCircle,{stroke:theme.red1,size:\"10px\"}),/*#__PURE__*/_jsx(ThemedText.Body,{color:theme.red1,ml:\"4px\",fontSize:\"10px\",fontWeight:500,children:/*#__PURE__*/_jsx(Trans,{id:\"Unknown Source\"})})]})})]})});};export default TokenImportCard;","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/components/SearchModal/TokenImportCard.tsx"],"names":["Card","AutoColumn","CurrencyLogo","ListLogo","RowFixed","useActiveWeb3React","transparentize","AlertCircle","ExternalLink","ThemedText","ExplorerDataType","getExplorerLink","WarningWrapper","styled","theme","highWarning","red1","yellow2","AddressText","Blue","mediaWidth","upToSmall","TokenImportCard","list","token","useTheme","chainId","bg2","symbol","name","address","ADDRESS","undefined","logoURI","text3"],"mappings":"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","sourcesContent":["import { Trans } from '@lingui/macro'\nimport { Token } from '@uniswap/sdk-core'\nimport { TokenList } from '@uniswap/token-lists'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Column'\nimport CurrencyLogo from 'components/CurrencyLogo'\nimport ListLogo from 'components/ListLogo'\nimport { RowFixed } from 'components/Row'\nimport { useActiveWeb3React } from 'hooks/web3'\nimport { transparentize } from 'polished'\nimport { AlertCircle } from 'react-feather'\nimport styled, { useTheme } from 'styled-components/macro'\nimport { ExternalLink, ThemedText } from 'theme'\nimport { ExplorerDataType, getExplorerLink } from 'utils/getExplorerLink'\n\nconst WarningWrapper = styled(Card)<{ highWarning: boolean }>`\n  background-color: ${({ theme, highWarning }) =>\n    highWarning ? transparentize(0.8, theme.red1) : transparentize(0.8, theme.yellow2)};\n  width: fit-content;\n`\n\nconst AddressText = styled(ThemedText.Blue)`\n  font-size: 12px;\n  word-break: break-all;\n\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    font-size: 10px;\n  `}\n`\ninterface TokenImportCardProps {\n  list?: TokenList\n  token: Token\n}\nconst TokenImportCard = ({ list, token }: TokenImportCardProps) => {\n  const theme = useTheme()\n  const { chainId } = useActiveWeb3React()\n  return (\n    <Card backgroundColor={theme.bg2} padding=\"2rem\">\n      <AutoColumn gap=\"10px\" justify=\"center\">\n        <CurrencyLogo currency={token} size={'32px'} />\n        <AutoColumn gap=\"4px\" justify=\"center\">\n          <ThemedText.Body ml=\"8px\" mr=\"8px\" fontWeight={500} fontSize={20}>\n            {token.symbol}\n          </ThemedText.Body>\n          <ThemedText.DarkGray fontWeight={400} fontSize={14}>\n            {token.name}\n          </ThemedText.DarkGray>\n        </AutoColumn>\n        {chainId && (\n          <ExternalLink href={getExplorerLink(chainId, token.address, ExplorerDataType.ADDRESS)}>\n            <AddressText fontSize={12}>{token.address}</AddressText>\n          </ExternalLink>\n        )}\n        {list !== undefined ? (\n          <RowFixed>\n            {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"16px\" />}\n            <ThemedText.Small ml=\"6px\" fontSize={14} color={theme.text3}>\n              <Trans>via {list.name} token list</Trans>\n            </ThemedText.Small>\n          </RowFixed>\n        ) : (\n          <WarningWrapper $borderRadius=\"4px\" padding=\"4px\" highWarning={true}>\n            <RowFixed>\n              <AlertCircle stroke={theme.red1} size=\"10px\" />\n              <ThemedText.Body color={theme.red1} ml=\"4px\" fontSize=\"10px\" fontWeight={500}>\n                <Trans>Unknown Source</Trans>\n              </ThemedText.Body>\n            </RowFixed>\n          </WarningWrapper>\n        )}\n      </AutoColumn>\n    </Card>\n  )\n}\n\nexport default TokenImportCard\n"]},"metadata":{},"sourceType":"module"}