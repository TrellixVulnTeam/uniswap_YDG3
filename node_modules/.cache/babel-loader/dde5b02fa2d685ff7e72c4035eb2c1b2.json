{"ast":null,"code":"import _regeneratorRuntime from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{createApi,fetchBaseQuery}from'@reduxjs/toolkit/query/react';import{Protocol}from'@uniswap/router-sdk';import qs from'qs';var protocols=[Protocol.V2,Protocol.V3];var DEFAULT_QUERY_PARAMS={protocols:protocols.map(function(p){return p.toLowerCase();}).join(',')// example other params\n// forceCrossProtocol: 'true',\n// minSplits: '5',\n};function getClientSideQuote(_x){return _getClientSideQuote.apply(this,arguments);}function _getClientSideQuote(){_getClientSideQuote=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref){var tokenInAddress,tokenInChainId,tokenInDecimals,tokenInSymbol,tokenOutAddress,tokenOutChainId,tokenOutDecimals,tokenOutSymbol,amount,type;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:tokenInAddress=_ref.tokenInAddress,tokenInChainId=_ref.tokenInChainId,tokenInDecimals=_ref.tokenInDecimals,tokenInSymbol=_ref.tokenInSymbol,tokenOutAddress=_ref.tokenOutAddress,tokenOutChainId=_ref.tokenOutChainId,tokenOutDecimals=_ref.tokenOutDecimals,tokenOutSymbol=_ref.tokenOutSymbol,amount=_ref.amount,type=_ref.type;_context2.next=3;return import('./clientSideSmartOrderRouter');case 3:return _context2.abrupt(\"return\",_context2.sent.getQuote({type:type,chainId:tokenInChainId,tokenIn:{address:tokenInAddress,chainId:tokenInChainId,decimals:tokenInDecimals,symbol:tokenInSymbol},tokenOut:{address:tokenOutAddress,chainId:tokenOutChainId,decimals:tokenOutDecimals,symbol:tokenOutSymbol},amount:amount},{protocols:protocols}));case 4:case\"end\":return _context2.stop();}}},_callee2);}));return _getClientSideQuote.apply(this,arguments);}export var routingApi=createApi({reducerPath:'routingApi',baseQuery:fetchBaseQuery({baseUrl:'https://api.uniswap.org/v1/'}),endpoints:function endpoints(build){return{getQuote:build.query({queryFn:function queryFn(args,_api,_extraOptions,fetch){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var tokenInAddress,tokenInChainId,tokenOutAddress,tokenOutChainId,amount,useClientSideRouter,type,result,query;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:tokenInAddress=args.tokenInAddress,tokenInChainId=args.tokenInChainId,tokenOutAddress=args.tokenOutAddress,tokenOutChainId=args.tokenOutChainId,amount=args.amount,useClientSideRouter=args.useClientSideRouter,type=args.type;_context.prev=1;if(!useClientSideRouter){_context.next=8;break;}_context.next=5;return getClientSideQuote(args);case 5:result=_context.sent;_context.next=12;break;case 8:query=qs.stringify(_objectSpread(_objectSpread({},DEFAULT_QUERY_PARAMS),{},{tokenInAddress:tokenInAddress,tokenInChainId:tokenInChainId,tokenOutAddress:tokenOutAddress,tokenOutChainId:tokenOutChainId,amount:amount,type:type}));_context.next=11;return fetch(\"quote?\".concat(query));case 11:result=_context.sent;case 12:return _context.abrupt(\"return\",{data:result.data});case 15:_context.prev=15;_context.t0=_context[\"catch\"](1);return _context.abrupt(\"return\",{error:_context.t0});case 18:case\"end\":return _context.stop();}}},_callee,null,[[1,15]]);}))();},keepUnusedDataFor:10000,extraOptions:{maxRetries:0}})};}});var useGetQuoteQuery=routingApi.useGetQuoteQuery;export{useGetQuoteQuery};","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/state/routing/slice.ts"],"names":["createApi","fetchBaseQuery","Protocol","qs","protocols","V2","V3","DEFAULT_QUERY_PARAMS","map","p","toLowerCase","join","getClientSideQuote","tokenInAddress","tokenInChainId","tokenInDecimals","tokenInSymbol","tokenOutAddress","tokenOutChainId","tokenOutDecimals","tokenOutSymbol","amount","type","getQuote","chainId","tokenIn","address","decimals","symbol","tokenOut","routingApi","reducerPath","baseQuery","baseUrl","endpoints","build","query","queryFn","args","_api","_extraOptions","fetch","useClientSideRouter","result","stringify","data","error","keepUnusedDataFor","extraOptions","maxRetries","useGetQuoteQuery"],"mappings":"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","sourcesContent":["import { createApi, fetchBaseQuery, FetchBaseQueryError } from '@reduxjs/toolkit/query/react'\nimport { Protocol } from '@uniswap/router-sdk'\nimport { ChainId } from '@uniswap/smart-order-router'\nimport ms from 'ms.macro'\nimport qs from 'qs'\n\nimport { GetQuoteResult } from './types'\n\nconst protocols: Protocol[] = [Protocol.V2, Protocol.V3]\n\nconst DEFAULT_QUERY_PARAMS = {\n  protocols: protocols.map((p) => p.toLowerCase()).join(','),\n  // example other params\n  // forceCrossProtocol: 'true',\n  // minSplits: '5',\n}\n\nasync function getClientSideQuote({\n  tokenInAddress,\n  tokenInChainId,\n  tokenInDecimals,\n  tokenInSymbol,\n  tokenOutAddress,\n  tokenOutChainId,\n  tokenOutDecimals,\n  tokenOutSymbol,\n  amount,\n  type,\n}: {\n  tokenInAddress: string\n  tokenInChainId: ChainId\n  tokenInDecimals: number\n  tokenInSymbol?: string\n  tokenOutAddress: string\n  tokenOutChainId: ChainId\n  tokenOutDecimals: number\n  tokenOutSymbol?: string\n  amount: string\n  type: 'exactIn' | 'exactOut'\n}) {\n  return (await import('./clientSideSmartOrderRouter')).getQuote(\n    {\n      type,\n      chainId: tokenInChainId,\n      tokenIn: {\n        address: tokenInAddress,\n        chainId: tokenInChainId,\n        decimals: tokenInDecimals,\n        symbol: tokenInSymbol,\n      },\n      tokenOut: {\n        address: tokenOutAddress,\n        chainId: tokenOutChainId,\n        decimals: tokenOutDecimals,\n        symbol: tokenOutSymbol,\n      },\n      amount,\n    },\n    { protocols }\n  )\n}\n\nexport const routingApi = createApi({\n  reducerPath: 'routingApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://api.uniswap.org/v1/',\n  }),\n  endpoints: (build) => ({\n    getQuote: build.query<\n      GetQuoteResult,\n      {\n        tokenInAddress: string\n        tokenInChainId: ChainId\n        tokenInDecimals: number\n        tokenInSymbol?: string\n        tokenOutAddress: string\n        tokenOutChainId: ChainId\n        tokenOutDecimals: number\n        tokenOutSymbol?: string\n        amount: string\n        useClientSideRouter: boolean // included in key to invalidate on change\n        type: 'exactIn' | 'exactOut'\n      }\n    >({\n      async queryFn(args, _api, _extraOptions, fetch) {\n        const { tokenInAddress, tokenInChainId, tokenOutAddress, tokenOutChainId, amount, useClientSideRouter, type } =\n          args\n\n        let result\n\n        try {\n          if (useClientSideRouter) {\n            result = await getClientSideQuote(args)\n          } else {\n            const query = qs.stringify({\n              ...DEFAULT_QUERY_PARAMS,\n              tokenInAddress,\n              tokenInChainId,\n              tokenOutAddress,\n              tokenOutChainId,\n              amount,\n              type,\n            })\n            result = await fetch(`quote?${query}`)\n          }\n\n          return { data: result.data as GetQuoteResult }\n        } catch (e) {\n          // TODO: fall back to client-side quoter when auto router fails.\n          // deprecate 'legacy' v2/v3 routers first.\n          return { error: e as FetchBaseQueryError }\n        }\n      },\n      keepUnusedDataFor: ms`10s`,\n      extraOptions: {\n        maxRetries: 0,\n      },\n    }),\n  }),\n})\n\nexport const { useGetQuoteQuery } = routingApi\n"]},"metadata":{},"sourceType":"module"}