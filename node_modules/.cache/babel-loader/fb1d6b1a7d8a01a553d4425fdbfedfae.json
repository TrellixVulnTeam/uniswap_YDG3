{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport useDebounce from 'hooks/useDebounce';\nimport useIsWindowVisible from 'hooks/useIsWindowVisible';\nimport { useActiveWeb3React } from 'hooks/web3';\nimport { useCallback, useEffect, useState } from 'react';\nimport { api, CHAIN_TAG } from 'state/data/enhanced';\nimport { useAppDispatch, useAppSelector } from 'state/hooks';\nimport { supportedChainId } from 'utils/supportedChainId';\nimport { updateBlockNumber, updateChainId } from './reducer';\n\nfunction useQueryCacheInvalidator() {\n  _s();\n\n  const dispatch = useAppDispatch(); // subscribe to `chainId` changes in the redux store rather than Web3\n  // this will ensure that when `invalidateTags` is called, the latest\n  // `chainId` is available in redux to build the subgraph url\n\n  const chainId = useAppSelector(state => state.application.chainId);\n  useEffect(() => {\n    dispatch(api.util.invalidateTags([CHAIN_TAG]));\n  }, [chainId, dispatch]);\n}\n\n_s(useQueryCacheInvalidator, \"wRBHlq9EQ6UxC8C+B2W5HC661zA=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\n\nexport default function Updater() {\n  _s2();\n\n  const {\n    chainId,\n    library\n  } = useActiveWeb3React();\n  const dispatch = useAppDispatch();\n  const windowVisible = useIsWindowVisible();\n  const [state, setState] = useState({\n    chainId,\n    blockNumber: null\n  });\n  useQueryCacheInvalidator();\n  const blockNumberCallback = useCallback(blockNumber => {\n    setState(state => {\n      if (chainId === state.chainId) {\n        if (typeof state.blockNumber !== 'number') return {\n          chainId,\n          blockNumber\n        };\n        return {\n          chainId,\n          blockNumber: Math.max(blockNumber, state.blockNumber)\n        };\n      }\n\n      return state;\n    });\n  }, [chainId, setState]); // attach/detach listeners\n\n  useEffect(() => {\n    if (!library || !chainId || !windowVisible) return undefined;\n    setState({\n      chainId,\n      blockNumber: null\n    });\n    library.getBlockNumber().then(blockNumberCallback).catch(error => console.error(`Failed to get block number for chainId: ${chainId}`, error));\n    library.on('block', blockNumberCallback);\n    return () => {\n      library.removeListener('block', blockNumberCallback);\n    };\n  }, [dispatch, chainId, library, blockNumberCallback, windowVisible]);\n  const debouncedState = useDebounce(state, 100);\n  useEffect(() => {\n    if (!debouncedState.chainId || !debouncedState.blockNumber || !windowVisible) return;\n    dispatch(updateBlockNumber({\n      chainId: debouncedState.chainId,\n      blockNumber: debouncedState.blockNumber\n    }));\n  }, [windowVisible, dispatch, debouncedState.blockNumber, debouncedState.chainId]);\n  useEffect(() => {\n    var _supportedChainId;\n\n    dispatch(updateChainId({\n      chainId: debouncedState.chainId ? (_supportedChainId = supportedChainId(debouncedState.chainId)) !== null && _supportedChainId !== void 0 ? _supportedChainId : null : null\n    }));\n  }, [dispatch, debouncedState.chainId]);\n  return null;\n}\n\n_s2(Updater, \"JUtYID3L8gyerk2ldDqf2h0Zqek=\", false, function () {\n  return [useActiveWeb3React, useAppDispatch, useIsWindowVisible, useQueryCacheInvalidator, useDebounce];\n});\n\n_c = Updater;\n\nvar _c;\n\n$RefreshReg$(_c, \"Updater\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/state/application/updater.ts"],"names":["useDebounce","useIsWindowVisible","useActiveWeb3React","useCallback","useEffect","useState","api","CHAIN_TAG","useAppDispatch","useAppSelector","supportedChainId","updateBlockNumber","updateChainId","useQueryCacheInvalidator","dispatch","chainId","state","application","util","invalidateTags","Updater","library","windowVisible","setState","blockNumber","blockNumberCallback","Math","max","undefined","getBlockNumber","then","catch","error","console","on","removeListener","debouncedState"],"mappings":"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","sourcesContent":["import useDebounce from 'hooks/useDebounce'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { useActiveWeb3React } from 'hooks/web3'\nimport { useCallback, useEffect, useState } from 'react'\nimport { api, CHAIN_TAG } from 'state/data/enhanced'\nimport { useAppDispatch, useAppSelector } from 'state/hooks'\nimport { supportedChainId } from 'utils/supportedChainId'\n\nimport { updateBlockNumber, updateChainId } from './reducer'\n\nfunction useQueryCacheInvalidator() {\n  const dispatch = useAppDispatch()\n\n  // subscribe to `chainId` changes in the redux store rather than Web3\n  // this will ensure that when `invalidateTags` is called, the latest\n  // `chainId` is available in redux to build the subgraph url\n  const chainId = useAppSelector((state) => state.application.chainId)\n\n  useEffect(() => {\n    dispatch(api.util.invalidateTags([CHAIN_TAG]))\n  }, [chainId, dispatch])\n}\n\nexport default function Updater(): null {\n  const { chainId, library } = useActiveWeb3React()\n  const dispatch = useAppDispatch()\n  const windowVisible = useIsWindowVisible()\n\n  const [state, setState] = useState<{ chainId: number | undefined; blockNumber: number | null }>({\n    chainId,\n    blockNumber: null,\n  })\n\n  useQueryCacheInvalidator()\n\n  const blockNumberCallback = useCallback(\n    (blockNumber: number) => {\n      setState((state) => {\n        if (chainId === state.chainId) {\n          if (typeof state.blockNumber !== 'number') return { chainId, blockNumber }\n          return { chainId, blockNumber: Math.max(blockNumber, state.blockNumber) }\n        }\n        return state\n      })\n    },\n    [chainId, setState]\n  )\n\n  // attach/detach listeners\n  useEffect(() => {\n    if (!library || !chainId || !windowVisible) return undefined\n\n    setState({ chainId, blockNumber: null })\n\n    library\n      .getBlockNumber()\n      .then(blockNumberCallback)\n      .catch((error) => console.error(`Failed to get block number for chainId: ${chainId}`, error))\n\n    library.on('block', blockNumberCallback)\n    return () => {\n      library.removeListener('block', blockNumberCallback)\n    }\n  }, [dispatch, chainId, library, blockNumberCallback, windowVisible])\n\n  const debouncedState = useDebounce(state, 100)\n\n  useEffect(() => {\n    if (!debouncedState.chainId || !debouncedState.blockNumber || !windowVisible) return\n    dispatch(updateBlockNumber({ chainId: debouncedState.chainId, blockNumber: debouncedState.blockNumber }))\n  }, [windowVisible, dispatch, debouncedState.blockNumber, debouncedState.chainId])\n\n  useEffect(() => {\n    dispatch(\n      updateChainId({ chainId: debouncedState.chainId ? supportedChainId(debouncedState.chainId) ?? null : null })\n    )\n  }, [dispatch, debouncedState.chainId])\n\n  return null\n}\n"]},"metadata":{},"sourceType":"module"}