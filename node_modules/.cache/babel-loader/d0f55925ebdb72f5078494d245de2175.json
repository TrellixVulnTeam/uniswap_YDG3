{"ast":null,"code":"import _objectSpread from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _styled from\"styled-components\";var _excluded=[\"text\",\"maxCharacters\",\"margin\",\"adjustSize\",\"fontSize\",\"textColor\",\"link\"];import Tooltip from'components/Tooltip';import{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";var TextWrapper=_styled.span.withConfig({componentId:\"sc-19p08fx-0\"})([\"margin-left:\",\";color:\",\";font-size:\",\";@media screen and (max-width:600px){font-size:\",\";}\"],function(_ref){var margin=_ref.margin;return margin&&'4px';},function(_ref2){var theme=_ref2.theme,link=_ref2.link,textColor=_ref2.textColor;return link?theme.blue1:textColor!==null&&textColor!==void 0?textColor:theme.text1;},function(_ref3){var fontSize=_ref3.fontSize;return fontSize!==null&&fontSize!==void 0?fontSize:'inherit';},function(_ref4){var adjustSize=_ref4.adjustSize;return adjustSize&&'12px';});var HoverInlineText=function HoverInlineText(_ref5){var text=_ref5.text,_ref5$maxCharacters=_ref5.maxCharacters,maxCharacters=_ref5$maxCharacters===void 0?20:_ref5$maxCharacters,_ref5$margin=_ref5.margin,margin=_ref5$margin===void 0?false:_ref5$margin,_ref5$adjustSize=_ref5.adjustSize,adjustSize=_ref5$adjustSize===void 0?false:_ref5$adjustSize,fontSize=_ref5.fontSize,textColor=_ref5.textColor,link=_ref5.link,rest=_objectWithoutProperties(_ref5,_excluded);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showHover=_useState2[0],setShowHover=_useState2[1];if(!text){return/*#__PURE__*/_jsx(\"span\",{});}if(text.length>maxCharacters){return/*#__PURE__*/_jsx(Tooltip,{text:text,show:showHover,children:/*#__PURE__*/_jsx(TextWrapper,_objectSpread(_objectSpread({onMouseEnter:function onMouseEnter(){return setShowHover(true);},onMouseLeave:function onMouseLeave(){return setShowHover(false);},margin:margin,adjustSize:adjustSize,textColor:textColor,link:link,fontSize:fontSize},rest),{},{children:' '+text.slice(0,maxCharacters-1)+'...'}))});}return/*#__PURE__*/_jsx(TextWrapper,_objectSpread(_objectSpread({margin:margin,adjustSize:adjustSize,link:link,fontSize:fontSize,textColor:textColor},rest),{},{children:text}));};export default HoverInlineText;","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/components/HoverInlineText/index.tsx"],"names":["Tooltip","useState","TextWrapper","styled","span","margin","theme","link","textColor","blue1","text1","fontSize","adjustSize","HoverInlineText","text","maxCharacters","rest","showHover","setShowHover","length","slice"],"mappings":"knBAAA,MAAOA,CAAAA,OAAP,KAAoB,oBAApB,CACA,OAASC,QAAT,KAAyB,OAAzB,C,2CAGA,GAAMC,CAAAA,WAAW,CAAGC,OAAM,CAACC,IAAV,0IAOA,kBAAGC,CAAAA,MAAH,MAAGA,MAAH,OAAgBA,CAAAA,MAAM,EAAI,KAA1B,EAPA,CAQN,mBAAGC,CAAAA,KAAH,OAAGA,KAAH,CAAUC,IAAV,OAAUA,IAAV,CAAgBC,SAAhB,OAAgBA,SAAhB,OAAiCD,CAAAA,IAAI,CAAGD,KAAK,CAACG,KAAT,CAAiBD,SAAjB,SAAiBA,SAAjB,UAAiBA,SAAjB,CAA8BF,KAAK,CAACI,KAAzE,EARM,CASF,mBAAGC,CAAAA,QAAH,OAAGA,QAAH,OAAkBA,CAAAA,QAAlB,SAAkBA,QAAlB,UAAkBA,QAAlB,CAA8B,SAA9B,EATE,CAYA,mBAAGC,CAAAA,UAAH,OAAGA,UAAH,OAAoBA,CAAAA,UAAU,EAAI,MAAlC,EAZA,CAAjB,CAgBA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,OAiBlB,IAhBJC,CAAAA,IAgBI,OAhBJA,IAgBI,2BAfJC,aAeI,CAfJA,aAeI,8BAfY,EAeZ,wCAdJV,MAcI,CAdJA,MAcI,uBAdK,KAcL,qCAbJO,UAaI,CAbJA,UAaI,2BAbS,KAaT,kBAZJD,QAYI,OAZJA,QAYI,CAXJH,SAWI,OAXJA,SAWI,CAVJD,IAUI,OAVJA,IAUI,CATDS,IASC,2CACJ,cAAkCf,QAAQ,CAAC,KAAD,CAA1C,wCAAOgB,SAAP,eAAkBC,YAAlB,eAEA,GAAI,CAACJ,IAAL,CAAW,CACT,mBAAO,eAAP,CACD,CAED,GAAIA,IAAI,CAACK,MAAL,CAAcJ,aAAlB,CAAiC,CAC/B,mBACE,KAAC,OAAD,EAAS,IAAI,CAAED,IAAf,CAAqB,IAAI,CAAEG,SAA3B,uBACE,KAAC,WAAD,8BACE,YAAY,CAAE,8BAAMC,CAAAA,YAAY,CAAC,IAAD,CAAlB,EADhB,CAEE,YAAY,CAAE,8BAAMA,CAAAA,YAAY,CAAC,KAAD,CAAlB,EAFhB,CAGE,MAAM,CAAEb,MAHV,CAIE,UAAU,CAAEO,UAJd,CAKE,SAAS,CAAEJ,SALb,CAME,IAAI,CAAED,IANR,CAOE,QAAQ,CAAEI,QAPZ,EAQMK,IARN,eAUG,IAAMF,IAAI,CAACM,KAAL,CAAW,CAAX,CAAcL,aAAa,CAAG,CAA9B,CAAN,CAAyC,KAV5C,GADF,EADF,CAgBD,CAED,mBACE,KAAC,WAAD,8BACE,MAAM,CAAEV,MADV,CAEE,UAAU,CAAEO,UAFd,CAGE,IAAI,CAAEL,IAHR,CAIE,QAAQ,CAAEI,QAJZ,CAKE,SAAS,CAAEH,SALb,EAMMQ,IANN,eAQGF,IARH,GADF,CAYD,CAvDD,CAyDA,cAAeD,CAAAA,eAAf","sourcesContent":["import Tooltip from 'components/Tooltip'\nimport { useState } from 'react'\nimport styled from 'styled-components/macro'\n\nconst TextWrapper = styled.span<{\n  margin: boolean\n  link?: boolean\n  fontSize?: string\n  adjustSize?: boolean\n  textColor?: string\n}>`\n  margin-left: ${({ margin }) => margin && '4px'};\n  color: ${({ theme, link, textColor }) => (link ? theme.blue1 : textColor ?? theme.text1)};\n  font-size: ${({ fontSize }) => fontSize ?? 'inherit'};\n\n  @media screen and (max-width: 600px) {\n    font-size: ${({ adjustSize }) => adjustSize && '12px'};\n  }\n`\n\nconst HoverInlineText = ({\n  text,\n  maxCharacters = 20,\n  margin = false,\n  adjustSize = false,\n  fontSize,\n  textColor,\n  link,\n  ...rest\n}: {\n  text?: string\n  maxCharacters?: number\n  margin?: boolean\n  adjustSize?: boolean\n  fontSize?: string\n  textColor?: string\n  link?: boolean\n}) => {\n  const [showHover, setShowHover] = useState(false)\n\n  if (!text) {\n    return <span />\n  }\n\n  if (text.length > maxCharacters) {\n    return (\n      <Tooltip text={text} show={showHover}>\n        <TextWrapper\n          onMouseEnter={() => setShowHover(true)}\n          onMouseLeave={() => setShowHover(false)}\n          margin={margin}\n          adjustSize={adjustSize}\n          textColor={textColor}\n          link={link}\n          fontSize={fontSize}\n          {...rest}\n        >\n          {' ' + text.slice(0, maxCharacters - 1) + '...'}\n        </TextWrapper>\n      </Tooltip>\n    )\n  }\n\n  return (\n    <TextWrapper\n      margin={margin}\n      adjustSize={adjustSize}\n      link={link}\n      fontSize={fontSize}\n      textColor={textColor}\n      {...rest}\n    >\n      {text}\n    </TextWrapper>\n  )\n}\n\nexport default HoverInlineText\n"]},"metadata":{},"sourceType":"module"}