{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Downloads/interface-4.30.1/src/components/RateToggle/index.tsx\";\nimport { Trans } from \"@lingui/react\";\nimport { ToggleElement, ToggleWrapper } from 'components/Toggle/MultiToggle'; // the order of displayed base currencies from left to right is always in sort order\n// currencyA is treated as the preferred base currency\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RateToggle({\n  currencyA,\n  currencyB,\n  handleRateToggle\n}) {\n  const tokenA = currencyA === null || currencyA === void 0 ? void 0 : currencyA.wrapped;\n  const tokenB = currencyB === null || currencyB === void 0 ? void 0 : currencyB.wrapped;\n  const isSorted = tokenA && tokenB && tokenA.sortsBefore(tokenB);\n  return tokenA && tokenB ? /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: 'fit-content',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    onClick: handleRateToggle,\n    children: /*#__PURE__*/_jsxDEV(ToggleWrapper, {\n      width: \"fit-content\",\n      children: [/*#__PURE__*/_jsxDEV(ToggleElement, {\n        isActive: isSorted,\n        fontSize: \"12px\",\n        children: /*#__PURE__*/_jsxDEV(Trans, {\n          id: \"{0}\",\n          values: {\n            0: isSorted ? currencyA.symbol : currencyB.symbol\n          }\n        }, void 0, false, void 0, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToggleElement, {\n        isActive: !isSorted,\n        fontSize: \"12px\",\n        children: /*#__PURE__*/_jsxDEV(Trans, {\n          id: \"{0}\",\n          values: {\n            0: isSorted ? currencyB.symbol : currencyA.symbol\n          }\n        }, void 0, false, void 0, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this) : null;\n}\n_c = RateToggle;\n\nvar _c;\n\n$RefreshReg$(_c, \"RateToggle\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/components/RateToggle/index.tsx"],"names":["ToggleElement","ToggleWrapper","RateToggle","currencyA","currencyB","handleRateToggle","tokenA","wrapped","tokenB","isSorted","sortsBefore","width","display","alignItems","symbol"],"mappings":";;AAEA,SAASA,aAAT,EAAwBC,aAAxB,QAA6C,+BAA7C,C,CAEA;AACA;;;AACA,eAAe,SAASC,UAAT,CAAoB;AACjCC,EAAAA,SADiC;AAEjCC,EAAAA,SAFiC;AAGjCC,EAAAA;AAHiC,CAApB,EAQZ;AACD,QAAMC,MAAM,GAAGH,SAAH,aAAGA,SAAH,uBAAGA,SAAS,CAAEI,OAA1B;AACA,QAAMC,MAAM,GAAGJ,SAAH,aAAGA,SAAH,uBAAGA,SAAS,CAAEG,OAA1B;AAEA,QAAME,QAAQ,GAAGH,MAAM,IAAIE,MAAV,IAAoBF,MAAM,CAACI,WAAP,CAAmBF,MAAnB,CAArC;AAEA,SAAOF,MAAM,IAAIE,MAAV,gBACL;AAAK,IAAA,KAAK,EAAE;AAAEG,MAAAA,KAAK,EAAE,aAAT;AAAwBC,MAAAA,OAAO,EAAE,MAAjC;AAAyCC,MAAAA,UAAU,EAAE;AAArD,KAAZ;AAA6E,IAAA,OAAO,EAAER,gBAAtF;AAAA,2BACE,QAAC,aAAD;AAAe,MAAA,KAAK,EAAC,aAArB;AAAA,8BACE,QAAC,aAAD;AAAe,QAAA,QAAQ,EAAEI,QAAzB;AAAmC,QAAA,QAAQ,EAAC,MAA5C;AAAA,+BACE;AAAA;AAAA;AAAA,eAAQA,QAAQ,GAAGN,SAAS,CAACW,MAAb,GAAsBV,SAAS,CAACU;AAAhD;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,aAAD;AAAe,QAAA,QAAQ,EAAE,CAACL,QAA1B;AAAoC,QAAA,QAAQ,EAAC,MAA7C;AAAA,+BACE;AAAA;AAAA;AAAA,eAAQA,QAAQ,GAAGL,SAAS,CAACU,MAAb,GAAsBX,SAAS,CAACW;AAAhD;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADK,GAWH,IAXJ;AAYD;KA1BuBZ,U","sourcesContent":["import { Trans } from '@lingui/macro'\nimport { Currency } from '@uniswap/sdk-core'\nimport { ToggleElement, ToggleWrapper } from 'components/Toggle/MultiToggle'\n\n// the order of displayed base currencies from left to right is always in sort order\n// currencyA is treated as the preferred base currency\nexport default function RateToggle({\n  currencyA,\n  currencyB,\n  handleRateToggle,\n}: {\n  currencyA: Currency\n  currencyB: Currency\n  handleRateToggle: () => void\n}) {\n  const tokenA = currencyA?.wrapped\n  const tokenB = currencyB?.wrapped\n\n  const isSorted = tokenA && tokenB && tokenA.sortsBefore(tokenB)\n\n  return tokenA && tokenB ? (\n    <div style={{ width: 'fit-content', display: 'flex', alignItems: 'center' }} onClick={handleRateToggle}>\n      <ToggleWrapper width=\"fit-content\">\n        <ToggleElement isActive={isSorted} fontSize=\"12px\">\n          <Trans>{isSorted ? currencyA.symbol : currencyB.symbol}</Trans>\n        </ToggleElement>\n        <ToggleElement isActive={!isSorted} fontSize=\"12px\">\n          <Trans>{isSorted ? currencyB.symbol : currencyA.symbol}</Trans>\n        </ToggleElement>\n      </ToggleWrapper>\n    </div>\n  ) : null\n}\n"]},"metadata":{},"sourceType":"module"}