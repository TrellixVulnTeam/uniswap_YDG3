{"ast":null,"code":"import { FeeAmount, Pool } from '@uniswap/v3-sdk';\nimport JSBI from 'jsbi';\nimport _ from 'lodash';\nimport { unparseFeeAmount } from '../../util/amounts';\nimport { ChainId, WRAPPED_NATIVE_CURRENCY } from '../../util/chains';\nimport { log } from '../../util/log';\nimport { DAI_ARBITRUM, DAI_ARBITRUM_RINKEBY, DAI_GÖRLI, DAI_KOVAN, DAI_MAINNET, DAI_OPTIMISM, DAI_OPTIMISTIC_KOVAN, DAI_POLYGON_MUMBAI, DAI_RINKEBY_1, DAI_RINKEBY_2, DAI_ROPSTEN, UNI_ARBITRUM_RINKEBY, USDC_ARBITRUM, USDC_GÖRLI, USDC_KOVAN, USDC_MAINNET, USDC_OPTIMISM, USDC_OPTIMISTIC_KOVAN, USDC_POLYGON, USDC_RINKEBY, USDC_ROPSTEN, USDT_ARBITRUM, USDT_ARBITRUM_RINKEBY, USDT_GÖRLI, USDT_KOVAN, USDT_MAINNET, USDT_OPTIMISM, USDT_OPTIMISTIC_KOVAN, USDT_RINKEBY, USDT_ROPSTEN, WBTC_ARBITRUM, WBTC_GÖRLI, WBTC_KOVAN, WBTC_MAINNET, WBTC_OPTIMISM, WBTC_OPTIMISTIC_KOVAN, WETH_POLYGON, WMATIC_POLYGON, WMATIC_POLYGON_MUMBAI } from '../token-provider';\nconst BASES_TO_CHECK_TRADES_AGAINST = {\n  [ChainId.MAINNET]: [WRAPPED_NATIVE_CURRENCY[ChainId.MAINNET], DAI_MAINNET, USDC_MAINNET, USDT_MAINNET, WBTC_MAINNET],\n  [ChainId.ROPSTEN]: [WRAPPED_NATIVE_CURRENCY[ChainId.ROPSTEN], DAI_ROPSTEN, USDT_ROPSTEN, USDC_ROPSTEN],\n  [ChainId.RINKEBY]: [WRAPPED_NATIVE_CURRENCY[ChainId.RINKEBY], DAI_RINKEBY_1, DAI_RINKEBY_2, USDC_RINKEBY, USDT_RINKEBY],\n  [ChainId.GÖRLI]: [WRAPPED_NATIVE_CURRENCY[ChainId.GÖRLI], USDT_GÖRLI, USDC_GÖRLI, WBTC_GÖRLI, DAI_GÖRLI],\n  [ChainId.KOVAN]: [WRAPPED_NATIVE_CURRENCY[ChainId.KOVAN], USDC_KOVAN, USDT_KOVAN, WBTC_KOVAN, DAI_KOVAN],\n  [ChainId.OPTIMISM]: [WRAPPED_NATIVE_CURRENCY[ChainId.OPTIMISM], USDC_OPTIMISM, DAI_OPTIMISM, USDT_OPTIMISM, WBTC_OPTIMISM],\n  [ChainId.ARBITRUM_ONE]: [WRAPPED_NATIVE_CURRENCY[ChainId.ARBITRUM_ONE], WBTC_ARBITRUM, DAI_ARBITRUM, USDC_ARBITRUM, USDT_ARBITRUM],\n  [ChainId.ARBITRUM_RINKEBY]: [WRAPPED_NATIVE_CURRENCY[ChainId.ARBITRUM_RINKEBY], DAI_ARBITRUM_RINKEBY, UNI_ARBITRUM_RINKEBY, USDT_ARBITRUM_RINKEBY],\n  [ChainId.OPTIMISTIC_KOVAN]: [WRAPPED_NATIVE_CURRENCY[ChainId.OPTIMISTIC_KOVAN], DAI_OPTIMISTIC_KOVAN, WBTC_OPTIMISTIC_KOVAN, USDT_OPTIMISTIC_KOVAN, USDC_OPTIMISTIC_KOVAN],\n  [ChainId.POLYGON]: [USDC_POLYGON, WETH_POLYGON, WMATIC_POLYGON],\n  [ChainId.POLYGON_MUMBAI]: [DAI_POLYGON_MUMBAI, WRAPPED_NATIVE_CURRENCY[ChainId.POLYGON_MUMBAI], WMATIC_POLYGON_MUMBAI]\n};\n/**\n * Provider that uses a hardcoded list of V3 pools to generate a list of subgraph pools.\n *\n * Since the pools are hardcoded and the data does not come from the Subgraph, the TVL values\n * are dummys and should not be depended on.\n *\n * Useful for instances where other data sources are unavailable. E.g. Subgraph not available.\n *\n * @export\n * @class StaticV3SubgraphProvider\n */\n\nexport class StaticV3SubgraphProvider {\n  constructor(chainId, poolProvider) {\n    this.chainId = chainId;\n    this.poolProvider = poolProvider;\n  }\n\n  async getPools(tokenIn, tokenOut) {\n    log.info('In static subgraph provider for V3');\n    const bases = BASES_TO_CHECK_TRADES_AGAINST[this.chainId];\n\n    let basePairs = _.flatMap(bases, base => bases.map(otherBase => [base, otherBase]));\n\n    if (tokenIn && tokenOut) {\n      basePairs.push([tokenIn, tokenOut], ...bases.map(base => [tokenIn, base]), ...bases.map(base => [tokenOut, base]));\n    }\n\n    const pairs = _(basePairs).filter(tokens => Boolean(tokens[0] && tokens[1])).filter(([tokenA, tokenB]) => tokenA.address !== tokenB.address && !tokenA.equals(tokenB)).flatMap(([tokenA, tokenB]) => {\n      return [[tokenA, tokenB, FeeAmount.LOWEST], [tokenA, tokenB, FeeAmount.LOW], [tokenA, tokenB, FeeAmount.MEDIUM], [tokenA, tokenB, FeeAmount.HIGH]];\n    }).value();\n\n    log.info(`V3 Static subgraph provider about to get ${pairs.length} pools on-chain`);\n    const poolAccessor = await this.poolProvider.getPools(pairs);\n    const pools = poolAccessor.getAllPools();\n    const poolAddressSet = new Set();\n\n    const subgraphPools = _(pools).map(pool => {\n      const {\n        token0,\n        token1,\n        fee,\n        liquidity\n      } = pool;\n      const poolAddress = Pool.getAddress(pool.token0, pool.token1, pool.fee);\n\n      if (poolAddressSet.has(poolAddress)) {\n        return undefined;\n      }\n\n      poolAddressSet.add(poolAddress);\n      const liquidityNumber = JSBI.toNumber(liquidity);\n      return {\n        id: poolAddress,\n        feeTier: unparseFeeAmount(fee),\n        liquidity: liquidity.toString(),\n        token0: {\n          id: token0.address\n        },\n        token1: {\n          id: token1.address\n        },\n        // As a very rough proxy we just use liquidity for TVL.\n        tvlETH: liquidityNumber,\n        tvlUSD: liquidityNumber\n      };\n    }).compact().value();\n\n    return subgraphPools;\n  }\n\n}","map":{"version":3,"sources":["../../../../../src/providers/v3/static-subgraph-provider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { FeeAmount, Pool } from '@uniswap/v3-sdk';\nimport JSBI from 'jsbi';\nimport _ from 'lodash';\nimport { unparseFeeAmount } from '../../util/amounts';\nimport { ChainId, WRAPPED_NATIVE_CURRENCY } from '../../util/chains';\nimport { log } from '../../util/log';\nimport { DAI_ARBITRUM, DAI_ARBITRUM_RINKEBY, DAI_GÖRLI, DAI_KOVAN, DAI_MAINNET, DAI_OPTIMISM, DAI_OPTIMISTIC_KOVAN, DAI_POLYGON_MUMBAI, DAI_RINKEBY_1, DAI_RINKEBY_2, DAI_ROPSTEN, UNI_ARBITRUM_RINKEBY, USDC_ARBITRUM, USDC_GÖRLI, USDC_KOVAN, USDC_MAINNET, USDC_OPTIMISM, USDC_OPTIMISTIC_KOVAN, USDC_POLYGON, USDC_RINKEBY, USDC_ROPSTEN, USDT_ARBITRUM, USDT_ARBITRUM_RINKEBY, USDT_GÖRLI, USDT_KOVAN, USDT_MAINNET, USDT_OPTIMISM, USDT_OPTIMISTIC_KOVAN, USDT_RINKEBY, USDT_ROPSTEN, WBTC_ARBITRUM, WBTC_GÖRLI, WBTC_KOVAN, WBTC_MAINNET, WBTC_OPTIMISM, WBTC_OPTIMISTIC_KOVAN, WETH_POLYGON, WMATIC_POLYGON, WMATIC_POLYGON_MUMBAI, } from '../token-provider';\nconst BASES_TO_CHECK_TRADES_AGAINST = {\n    [ChainId.MAINNET]: [\n        WRAPPED_NATIVE_CURRENCY[ChainId.MAINNET],\n        DAI_MAINNET,\n        USDC_MAINNET,\n        USDT_MAINNET,\n        WBTC_MAINNET,\n    ],\n    [ChainId.ROPSTEN]: [\n        WRAPPED_NATIVE_CURRENCY[ChainId.ROPSTEN],\n        DAI_ROPSTEN,\n        USDT_ROPSTEN,\n        USDC_ROPSTEN,\n    ],\n    [ChainId.RINKEBY]: [\n        WRAPPED_NATIVE_CURRENCY[ChainId.RINKEBY],\n        DAI_RINKEBY_1,\n        DAI_RINKEBY_2,\n        USDC_RINKEBY,\n        USDT_RINKEBY,\n    ],\n    [ChainId.GÖRLI]: [\n        WRAPPED_NATIVE_CURRENCY[ChainId.GÖRLI],\n        USDT_GÖRLI,\n        USDC_GÖRLI,\n        WBTC_GÖRLI,\n        DAI_GÖRLI,\n    ],\n    [ChainId.KOVAN]: [\n        WRAPPED_NATIVE_CURRENCY[ChainId.KOVAN],\n        USDC_KOVAN,\n        USDT_KOVAN,\n        WBTC_KOVAN,\n        DAI_KOVAN,\n    ],\n    [ChainId.OPTIMISM]: [\n        WRAPPED_NATIVE_CURRENCY[ChainId.OPTIMISM],\n        USDC_OPTIMISM,\n        DAI_OPTIMISM,\n        USDT_OPTIMISM,\n        WBTC_OPTIMISM,\n    ],\n    [ChainId.ARBITRUM_ONE]: [\n        WRAPPED_NATIVE_CURRENCY[ChainId.ARBITRUM_ONE],\n        WBTC_ARBITRUM,\n        DAI_ARBITRUM,\n        USDC_ARBITRUM,\n        USDT_ARBITRUM,\n    ],\n    [ChainId.ARBITRUM_RINKEBY]: [\n        WRAPPED_NATIVE_CURRENCY[ChainId.ARBITRUM_RINKEBY],\n        DAI_ARBITRUM_RINKEBY,\n        UNI_ARBITRUM_RINKEBY,\n        USDT_ARBITRUM_RINKEBY,\n    ],\n    [ChainId.OPTIMISTIC_KOVAN]: [\n        WRAPPED_NATIVE_CURRENCY[ChainId.OPTIMISTIC_KOVAN],\n        DAI_OPTIMISTIC_KOVAN,\n        WBTC_OPTIMISTIC_KOVAN,\n        USDT_OPTIMISTIC_KOVAN,\n        USDC_OPTIMISTIC_KOVAN,\n    ],\n    [ChainId.POLYGON]: [USDC_POLYGON, WETH_POLYGON, WMATIC_POLYGON],\n    [ChainId.POLYGON_MUMBAI]: [\n        DAI_POLYGON_MUMBAI,\n        WRAPPED_NATIVE_CURRENCY[ChainId.POLYGON_MUMBAI],\n        WMATIC_POLYGON_MUMBAI,\n    ],\n};\n/**\n * Provider that uses a hardcoded list of V3 pools to generate a list of subgraph pools.\n *\n * Since the pools are hardcoded and the data does not come from the Subgraph, the TVL values\n * are dummys and should not be depended on.\n *\n * Useful for instances where other data sources are unavailable. E.g. Subgraph not available.\n *\n * @export\n * @class StaticV3SubgraphProvider\n */\nexport class StaticV3SubgraphProvider {\n    constructor(chainId, poolProvider) {\n        this.chainId = chainId;\n        this.poolProvider = poolProvider;\n    }\n    async getPools(tokenIn, tokenOut) {\n        log.info('In static subgraph provider for V3');\n        const bases = BASES_TO_CHECK_TRADES_AGAINST[this.chainId];\n        let basePairs = _.flatMap(bases, (base) => bases.map((otherBase) => [base, otherBase]));\n        if (tokenIn && tokenOut) {\n            basePairs.push([tokenIn, tokenOut], ...bases.map((base) => [tokenIn, base]), ...bases.map((base) => [tokenOut, base]));\n        }\n        const pairs = _(basePairs)\n            .filter((tokens) => Boolean(tokens[0] && tokens[1]))\n            .filter(([tokenA, tokenB]) => tokenA.address !== tokenB.address && !tokenA.equals(tokenB))\n            .flatMap(([tokenA, tokenB]) => {\n            return [\n                [tokenA, tokenB, FeeAmount.LOWEST],\n                [tokenA, tokenB, FeeAmount.LOW],\n                [tokenA, tokenB, FeeAmount.MEDIUM],\n                [tokenA, tokenB, FeeAmount.HIGH],\n            ];\n        })\n            .value();\n        log.info(`V3 Static subgraph provider about to get ${pairs.length} pools on-chain`);\n        const poolAccessor = await this.poolProvider.getPools(pairs);\n        const pools = poolAccessor.getAllPools();\n        const poolAddressSet = new Set();\n        const subgraphPools = _(pools)\n            .map((pool) => {\n            const { token0, token1, fee, liquidity } = pool;\n            const poolAddress = Pool.getAddress(pool.token0, pool.token1, pool.fee);\n            if (poolAddressSet.has(poolAddress)) {\n                return undefined;\n            }\n            poolAddressSet.add(poolAddress);\n            const liquidityNumber = JSBI.toNumber(liquidity);\n            return {\n                id: poolAddress,\n                feeTier: unparseFeeAmount(fee),\n                liquidity: liquidity.toString(),\n                token0: {\n                    id: token0.address,\n                },\n                token1: {\n                    id: token1.address,\n                },\n                // As a very rough proxy we just use liquidity for TVL.\n                tvlETH: liquidityNumber,\n                tvlUSD: liquidityNumber,\n            };\n        })\n            .compact()\n            .value();\n        return subgraphPools;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGljLXN1YmdyYXBoLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy92My9zdGF0aWMtc3ViZ3JhcGgtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNsRCxPQUFPLElBQUksTUFBTSxNQUFNLENBQUM7QUFDeEIsT0FBTyxDQUFDLE1BQU0sUUFBUSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3RELE9BQU8sRUFBRSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNyRSxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDckMsT0FBTyxFQUNMLFlBQVksRUFDWixvQkFBb0IsRUFDcEIsU0FBUyxFQUNULFNBQVMsRUFDVCxXQUFXLEVBQ1gsWUFBWSxFQUNaLG9CQUFvQixFQUNwQixrQkFBa0IsRUFDbEIsYUFBYSxFQUNiLGFBQWEsRUFDYixXQUFXLEVBQ1gsb0JBQW9CLEVBQ3BCLGFBQWEsRUFDYixVQUFVLEVBQ1YsVUFBVSxFQUNWLFlBQVksRUFDWixhQUFhLEVBQ2IscUJBQXFCLEVBQ3JCLFlBQVksRUFDWixZQUFZLEVBQ1osWUFBWSxFQUNaLGFBQWEsRUFDYixxQkFBcUIsRUFDckIsVUFBVSxFQUNWLFVBQVUsRUFDVixZQUFZLEVBQ1osYUFBYSxFQUNiLHFCQUFxQixFQUNyQixZQUFZLEVBQ1osWUFBWSxFQUNaLGFBQWEsRUFDYixVQUFVLEVBQ1YsVUFBVSxFQUNWLFlBQVksRUFDWixhQUFhLEVBQ2IscUJBQXFCLEVBQ3JCLFlBQVksRUFDWixjQUFjLEVBQ2QscUJBQXFCLEdBQ3RCLE1BQU0sbUJBQW1CLENBQUM7QUFRM0IsTUFBTSw2QkFBNkIsR0FBbUI7SUFDcEQs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"]},"metadata":{},"sourceType":"module"}