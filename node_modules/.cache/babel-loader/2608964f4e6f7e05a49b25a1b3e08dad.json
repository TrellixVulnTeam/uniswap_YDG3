{"ast":null,"code":"import _slicedToArray from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{TradeType}from'@uniswap/sdk-core';import{Trade}from'@uniswap/v2-sdk';import{useMemo}from'react';import{isTradeBetter}from'utils/isTradeBetter';import{BETTER_TRADE_LESS_HOPS_THRESHOLD}from'../constants/misc';import{useAllCurrencyCombinations}from'./useAllCurrencyCombinations';import{PairState,useV2Pairs}from'./useV2Pairs';function useAllCommonPairs(currencyA,currencyB){var allCurrencyCombinations=useAllCurrencyCombinations(currencyA,currencyB);var allPairs=useV2Pairs(allCurrencyCombinations);return useMemo(function(){return Object.values(allPairs// filter out invalid pairs\n.filter(function(result){return Boolean(result[0]===PairState.EXISTS&&result[1]);}).map(function(_ref){var _ref2=_slicedToArray(_ref,2),pair=_ref2[1];return pair;}));},[allPairs]);}var MAX_HOPS=3;/**\n * Returns the best v2 trade for a desired swap\n * @param tradeType whether the swap is an exact in/out\n * @param amountSpecified the exact amount to swap in/out\n * @param otherCurrency the desired output/payment currency\n */export function useBestV2Trade(tradeType,amountSpecified,otherCurrency){var _ref3=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{},_ref3$maxHops=_ref3.maxHops,maxHops=_ref3$maxHops===void 0?MAX_HOPS:_ref3$maxHops;var _useMemo=useMemo(function(){return tradeType===TradeType.EXACT_INPUT?[amountSpecified===null||amountSpecified===void 0?void 0:amountSpecified.currency,otherCurrency]:[otherCurrency,amountSpecified===null||amountSpecified===void 0?void 0:amountSpecified.currency];},[tradeType,amountSpecified,otherCurrency]),_useMemo2=_slicedToArray(_useMemo,2),currencyIn=_useMemo2[0],currencyOut=_useMemo2[1];var allowedPairs=useAllCommonPairs(currencyIn,currencyOut);return useMemo(function(){if(amountSpecified&&currencyIn&&currencyOut&&allowedPairs.length>0){if(maxHops===1){var options={maxHops:1,maxNumResults:1};if(tradeType===TradeType.EXACT_INPUT){var _Trade$bestTradeExact;var amountIn=amountSpecified;return(_Trade$bestTradeExact=Trade.bestTradeExactIn(allowedPairs,amountIn,currencyOut,options)[0])!==null&&_Trade$bestTradeExact!==void 0?_Trade$bestTradeExact:null;}else{var _Trade$bestTradeExact2;var amountOut=amountSpecified;return(_Trade$bestTradeExact2=Trade.bestTradeExactOut(allowedPairs,currencyIn,amountOut,options)[0])!==null&&_Trade$bestTradeExact2!==void 0?_Trade$bestTradeExact2:null;}}// search through trades with varying hops, find best trade out of them\nvar bestTradeSoFar=null;for(var i=1;i<=maxHops;i++){var _options={maxHops:i,maxNumResults:1};var currentTrade=void 0;if(tradeType===TradeType.EXACT_INPUT){var _Trade$bestTradeExact3;var _amountIn=amountSpecified;currentTrade=(_Trade$bestTradeExact3=Trade.bestTradeExactIn(allowedPairs,_amountIn,currencyOut,_options)[0])!==null&&_Trade$bestTradeExact3!==void 0?_Trade$bestTradeExact3:null;}else{var _Trade$bestTradeExact4;var _amountOut=amountSpecified;currentTrade=(_Trade$bestTradeExact4=Trade.bestTradeExactOut(allowedPairs,currencyIn,_amountOut,_options)[0])!==null&&_Trade$bestTradeExact4!==void 0?_Trade$bestTradeExact4:null;}// if current trade is best yet, save it\nif(isTradeBetter(bestTradeSoFar,currentTrade,BETTER_TRADE_LESS_HOPS_THRESHOLD)){bestTradeSoFar=currentTrade;}}return bestTradeSoFar;}return null;},[tradeType,amountSpecified,currencyIn,currencyOut,allowedPairs,maxHops]);}","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/hooks/useBestV2Trade.ts"],"names":["TradeType","Trade","useMemo","isTradeBetter","BETTER_TRADE_LESS_HOPS_THRESHOLD","useAllCurrencyCombinations","PairState","useV2Pairs","useAllCommonPairs","currencyA","currencyB","allCurrencyCombinations","allPairs","Object","values","filter","result","Boolean","EXISTS","map","pair","MAX_HOPS","useBestV2Trade","tradeType","amountSpecified","otherCurrency","maxHops","EXACT_INPUT","currency","currencyIn","currencyOut","allowedPairs","length","options","maxNumResults","amountIn","bestTradeExactIn","amountOut","bestTradeExactOut","bestTradeSoFar","i","currentTrade"],"mappings":"+JAAA,OAAmCA,SAAnC,KAAoD,mBAApD,CACA,OAAeC,KAAf,KAA4B,iBAA5B,CACA,OAASC,OAAT,KAAwB,OAAxB,CACA,OAASC,aAAT,KAA8B,qBAA9B,CAEA,OAASC,gCAAT,KAAiD,mBAAjD,CACA,OAASC,0BAAT,KAA2C,8BAA3C,CACA,OAASC,SAAT,CAAoBC,UAApB,KAAsC,cAAtC,CAEA,QAASC,CAAAA,iBAAT,CAA2BC,SAA3B,CAAiDC,SAAjD,CAA+E,CAC7E,GAAMC,CAAAA,uBAAuB,CAAGN,0BAA0B,CAACI,SAAD,CAAYC,SAAZ,CAA1D,CAEA,GAAME,CAAAA,QAAQ,CAAGL,UAAU,CAACI,uBAAD,CAA3B,CAEA,MAAOT,CAAAA,OAAO,CACZ,iBACEW,CAAAA,MAAM,CAACC,MAAP,CACEF,QACE;AADM,CAELG,MAFH,CAEU,SAACC,MAAD,QAAgDC,CAAAA,OAAO,CAACD,MAAM,CAAC,CAAD,CAAN,GAAcV,SAAS,CAACY,MAAxB,EAAkCF,MAAM,CAAC,CAAD,CAAzC,CAAvD,EAFV,EAGGG,GAHH,CAGO,gDAAIC,IAAJ,gBAAcA,CAAAA,IAAd,EAHP,CADF,CADF,EADY,CAQZ,CAACR,QAAD,CARY,CAAd,CAUD,CAED,GAAMS,CAAAA,QAAQ,CAAG,CAAjB,CAEA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,SAASC,CAAAA,cAAT,CACLC,SADK,CAELC,eAFK,CAGLC,aAHK,CAK6E,qEADzD,EACyD,qBADhFC,OACgF,CADhFA,OACgF,wBADtEL,QACsE,eAClF,aAAkCnB,OAAO,CACvC,iBACEqB,CAAAA,SAAS,GAAKvB,SAAS,CAAC2B,WAAxB,CACI,CAACH,eAAD,SAACA,eAAD,iBAACA,eAAe,CAAEI,QAAlB,CAA4BH,aAA5B,CADJ,CAEI,CAACA,aAAD,CAAgBD,eAAhB,SAAgBA,eAAhB,iBAAgBA,eAAe,CAAEI,QAAjC,CAHN,EADuC,CAKvC,CAACL,SAAD,CAAYC,eAAZ,CAA6BC,aAA7B,CALuC,CAAzC,sCAAOI,UAAP,cAAmBC,WAAnB,cAOA,GAAMC,CAAAA,YAAY,CAAGvB,iBAAiB,CAACqB,UAAD,CAAaC,WAAb,CAAtC,CAEA,MAAO5B,CAAAA,OAAO,CAAC,UAAM,CACnB,GAAIsB,eAAe,EAAIK,UAAnB,EAAiCC,WAAjC,EAAgDC,YAAY,CAACC,MAAb,CAAsB,CAA1E,CAA6E,CAC3E,GAAIN,OAAO,GAAK,CAAhB,CAAmB,CACjB,GAAMO,CAAAA,OAAO,CAAG,CAAEP,OAAO,CAAE,CAAX,CAAcQ,aAAa,CAAE,CAA7B,CAAhB,CACA,GAAIX,SAAS,GAAKvB,SAAS,CAAC2B,WAA5B,CAAyC,2BACvC,GAAMQ,CAAAA,QAAQ,CAAGX,eAAjB,CACA,6BAAOvB,KAAK,CAACmC,gBAAN,CAAuBL,YAAvB,CAAqCI,QAArC,CAA+CL,WAA/C,CAA4DG,OAA5D,EAAqE,CAArE,CAAP,+DAAkF,IAAlF,CACD,CAHD,IAGO,4BACL,GAAMI,CAAAA,SAAS,CAAGb,eAAlB,CACA,8BAAOvB,KAAK,CAACqC,iBAAN,CAAwBP,YAAxB,CAAsCF,UAAtC,CAAkDQ,SAAlD,CAA6DJ,OAA7D,EAAsE,CAAtE,CAAP,iEAAmF,IAAnF,CACD,CACF,CAED;AACA,GAAIM,CAAAA,cAAgG,CAAG,IAAvG,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,EAAId,OAArB,CAA8Bc,CAAC,EAA/B,CAAmC,CACjC,GAAMP,CAAAA,QAAO,CAAG,CAAEP,OAAO,CAAEc,CAAX,CAAcN,aAAa,CAAE,CAA7B,CAAhB,CACA,GAAIO,CAAAA,YAA8F,OAAlG,CAEA,GAAIlB,SAAS,GAAKvB,SAAS,CAAC2B,WAA5B,CAAyC,4BACvC,GAAMQ,CAAAA,SAAQ,CAAGX,eAAjB,CACAiB,YAAY,yBAAGxC,KAAK,CAACmC,gBAAN,CAAuBL,YAAvB,CAAqCI,SAArC,CAA+CL,WAA/C,CAA4DG,QAA5D,EAAqE,CAArE,CAAH,iEAA8E,IAA1F,CACD,CAHD,IAGO,4BACL,GAAMI,CAAAA,UAAS,CAAGb,eAAlB,CACAiB,YAAY,yBAAGxC,KAAK,CAACqC,iBAAN,CAAwBP,YAAxB,CAAsCF,UAAtC,CAAkDQ,UAAlD,CAA6DJ,QAA7D,EAAsE,CAAtE,CAAH,iEAA+E,IAA3F,CACD,CAED;AACA,GAAI9B,aAAa,CAACoC,cAAD,CAAiBE,YAAjB,CAA+BrC,gCAA/B,CAAjB,CAAmF,CACjFmC,cAAc,CAAGE,YAAjB,CACD,CACF,CACD,MAAOF,CAAAA,cAAP,CACD,CAED,MAAO,KAAP,CACD,CApCa,CAoCX,CAAChB,SAAD,CAAYC,eAAZ,CAA6BK,UAA7B,CAAyCC,WAAzC,CAAsDC,YAAtD,CAAoEL,OAApE,CApCW,CAAd,CAqCD","sourcesContent":["import { Currency, CurrencyAmount, TradeType } from '@uniswap/sdk-core'\nimport { Pair, Trade } from '@uniswap/v2-sdk'\nimport { useMemo } from 'react'\nimport { isTradeBetter } from 'utils/isTradeBetter'\n\nimport { BETTER_TRADE_LESS_HOPS_THRESHOLD } from '../constants/misc'\nimport { useAllCurrencyCombinations } from './useAllCurrencyCombinations'\nimport { PairState, useV2Pairs } from './useV2Pairs'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const allCurrencyCombinations = useAllCurrencyCombinations(currencyA, currencyB)\n\n  const allPairs = useV2Pairs(allCurrencyCombinations)\n\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          .map(([, pair]) => pair)\n      ),\n    [allPairs]\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best v2 trade for a desired swap\n * @param tradeType whether the swap is an exact in/out\n * @param amountSpecified the exact amount to swap in/out\n * @param otherCurrency the desired output/payment currency\n */\nexport function useBestV2Trade(\n  tradeType: TradeType.EXACT_INPUT | TradeType.EXACT_OUTPUT,\n  amountSpecified?: CurrencyAmount<Currency>,\n  otherCurrency?: Currency,\n  { maxHops = MAX_HOPS } = {}\n): Trade<Currency, Currency, TradeType.EXACT_INPUT | TradeType.EXACT_OUTPUT> | null {\n  const [currencyIn, currencyOut] = useMemo(\n    () =>\n      tradeType === TradeType.EXACT_INPUT\n        ? [amountSpecified?.currency, otherCurrency]\n        : [otherCurrency, amountSpecified?.currency],\n    [tradeType, amountSpecified, otherCurrency]\n  )\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyOut)\n\n  return useMemo(() => {\n    if (amountSpecified && currencyIn && currencyOut && allowedPairs.length > 0) {\n      if (maxHops === 1) {\n        const options = { maxHops: 1, maxNumResults: 1 }\n        if (tradeType === TradeType.EXACT_INPUT) {\n          const amountIn = amountSpecified\n          return Trade.bestTradeExactIn(allowedPairs, amountIn, currencyOut, options)[0] ?? null\n        } else {\n          const amountOut = amountSpecified\n          return Trade.bestTradeExactOut(allowedPairs, currencyIn, amountOut, options)[0] ?? null\n        }\n      }\n\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade<Currency, Currency, TradeType.EXACT_INPUT | TradeType.EXACT_OUTPUT> | null = null\n      for (let i = 1; i <= maxHops; i++) {\n        const options = { maxHops: i, maxNumResults: 1 }\n        let currentTrade: Trade<Currency, Currency, TradeType.EXACT_INPUT | TradeType.EXACT_OUTPUT> | null\n\n        if (tradeType === TradeType.EXACT_INPUT) {\n          const amountIn = amountSpecified\n          currentTrade = Trade.bestTradeExactIn(allowedPairs, amountIn, currencyOut, options)[0] ?? null\n        } else {\n          const amountOut = amountSpecified\n          currentTrade = Trade.bestTradeExactOut(allowedPairs, currencyIn, amountOut, options)[0] ?? null\n        }\n\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [tradeType, amountSpecified, currencyIn, currencyOut, allowedPairs, maxHops])\n}\n"]},"metadata":{},"sourceType":"module"}