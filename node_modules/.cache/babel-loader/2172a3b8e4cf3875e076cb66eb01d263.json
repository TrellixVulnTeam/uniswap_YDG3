{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useActiveWeb3React } from 'hooks/web3';\nimport { useEffect } from 'react';\nimport { useDarkModeManager } from 'state/user/hooks';\nimport { SupportedChainId } from '../constants/chains';\nconst initialStyles = {\n  width: '200vw',\n  height: '200vh',\n  transform: 'translate(-50vw, -100vh)',\n  backgroundBlendMode: ''\n};\nconst backgroundResetStyles = {\n  width: '100vw',\n  height: '100vh',\n  transform: 'unset',\n  backgroundBlendMode: ''\n};\nconst backgroundRadialGradientElement = document.getElementById('background-radial-gradient');\n\nconst setBackground = newValues => Object.entries(newValues).forEach(([key, value]) => {\n  if (backgroundRadialGradientElement) {\n    backgroundRadialGradientElement.style[key] = value;\n  }\n});\n\nexport default function RadialGradientByChainUpdater() {\n  _s();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const [darkMode] = useDarkModeManager(); // manage background color\n\n  useEffect(() => {\n    if (!backgroundRadialGradientElement) {\n      return;\n    }\n\n    switch (chainId) {\n      case SupportedChainId.ARBITRUM_ONE:\n      case SupportedChainId.ARBITRUM_RINKEBY:\n        setBackground(backgroundResetStyles);\n        const arbitrumLightGradient = 'radial-gradient(150% 100% at 50% 0%, #CDE8FB 0%, #FCF3F9 50%, #FFFFFF 100%)';\n        const arbitrumDarkGradient = 'radial-gradient(150% 100% at 50% 0%, #0A294B 0%, #221E30 50%, #1F2128 100%)';\n        backgroundRadialGradientElement.style.background = darkMode ? arbitrumDarkGradient : arbitrumLightGradient;\n        break;\n\n      case SupportedChainId.OPTIMISM:\n      case SupportedChainId.OPTIMISTIC_KOVAN:\n        setBackground(backgroundResetStyles);\n        const optimismLightGradient = 'radial-gradient(150% 100% at 50% 0%, #FFFBF2 2%, #FFF4F9 53%, #FFFFFF 100%)';\n        const optimismDarkGradient = 'radial-gradient(150% 100% at 50% 0%, #3E2E38 2%, #2C1F2D 53%, #1F2128 100%)';\n        backgroundRadialGradientElement.style.background = darkMode ? optimismDarkGradient : optimismLightGradient;\n        break;\n\n      case SupportedChainId.POLYGON:\n      case SupportedChainId.POLYGON_MUMBAI:\n        setBackground(backgroundResetStyles);\n        const polygonLightGradient = 'radial-gradient(153.32% 100% at 47.26% 0%, rgba(130, 71, 229, 0.0864) 0%, rgba(0, 41, 255, 0.06) 48.19%, rgba(0, 41, 255, 0.012) 100%), #FFFFFF';\n        const polygonDarkGradient = 'radial-gradient(150.6% 98.22% at 48.06% 0%, rgba(130, 71, 229, 0.6) 0%, rgba(200, 168, 255, 0) 100%), #1F2128';\n        backgroundRadialGradientElement.style.background = darkMode ? polygonDarkGradient : polygonLightGradient;\n        backgroundRadialGradientElement.style.backgroundBlendMode = darkMode ? 'overlay,normal' : 'multiply,normal';\n        break;\n\n      default:\n        setBackground(initialStyles);\n        backgroundRadialGradientElement.style.background = '';\n    }\n  }, [darkMode, chainId]);\n  return null;\n}\n\n_s(RadialGradientByChainUpdater, \"XyD5Lnda2nkW7in46xJdyW95Ghw=\", false, function () {\n  return [useActiveWeb3React, useDarkModeManager];\n});\n\n_c = RadialGradientByChainUpdater;\n\nvar _c;\n\n$RefreshReg$(_c, \"RadialGradientByChainUpdater\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/theme/RadialGradientByChainUpdater.ts"],"names":["useActiveWeb3React","useEffect","useDarkModeManager","SupportedChainId","initialStyles","width","height","transform","backgroundBlendMode","backgroundResetStyles","backgroundRadialGradientElement","document","getElementById","setBackground","newValues","Object","entries","forEach","key","value","style","RadialGradientByChainUpdater","chainId","darkMode","ARBITRUM_ONE","ARBITRUM_RINKEBY","arbitrumLightGradient","arbitrumDarkGradient","background","OPTIMISM","OPTIMISTIC_KOVAN","optimismLightGradient","optimismDarkGradient","POLYGON","POLYGON_MUMBAI","polygonLightGradient","polygonDarkGradient"],"mappings":";;AAAA,SAASA,kBAAT,QAAmC,YAAnC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AAEA,SAASC,gBAAT,QAAiC,qBAAjC;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,KAAK,EAAE,OADa;AAEpBC,EAAAA,MAAM,EAAE,OAFY;AAGpBC,EAAAA,SAAS,EAAE,0BAHS;AAIpBC,EAAAA,mBAAmB,EAAE;AAJD,CAAtB;AAMA,MAAMC,qBAAqB,GAAG;AAC5BJ,EAAAA,KAAK,EAAE,OADqB;AAE5BC,EAAAA,MAAM,EAAE,OAFoB;AAG5BC,EAAAA,SAAS,EAAE,OAHiB;AAI5BC,EAAAA,mBAAmB,EAAE;AAJO,CAA9B;AASA,MAAME,+BAA+B,GAAGC,QAAQ,CAACC,cAAT,CAAwB,4BAAxB,CAAxC;;AACA,MAAMC,aAAa,GAAIC,SAAD,IACpBC,MAAM,CAACC,OAAP,CAAeF,SAAf,EAA0BG,OAA1B,CAAkC,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KAAkB;AAClD,MAAIT,+BAAJ,EAAqC;AACnCA,IAAAA,+BAA+B,CAACU,KAAhC,CAAsCF,GAAtC,IAAmFC,KAAnF;AACD;AACF,CAJD,CADF;;AAMA,eAAe,SAASE,4BAAT,GAA8C;AAAA;;AAC3D,QAAM;AAAEC,IAAAA;AAAF,MAActB,kBAAkB,EAAtC;AACA,QAAM,CAACuB,QAAD,IAAarB,kBAAkB,EAArC,CAF2D,CAG3D;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACS,+BAAL,EAAsC;AACpC;AACD;;AAED,YAAQY,OAAR;AACE,WAAKnB,gBAAgB,CAACqB,YAAtB;AACA,WAAKrB,gBAAgB,CAACsB,gBAAtB;AACEZ,QAAAA,aAAa,CAACJ,qBAAD,CAAb;AACA,cAAMiB,qBAAqB,GAAG,6EAA9B;AACA,cAAMC,oBAAoB,GAAG,6EAA7B;AACAjB,QAAAA,+BAA+B,CAACU,KAAhC,CAAsCQ,UAAtC,GAAmDL,QAAQ,GAAGI,oBAAH,GAA0BD,qBAArF;AACA;;AACF,WAAKvB,gBAAgB,CAAC0B,QAAtB;AACA,WAAK1B,gBAAgB,CAAC2B,gBAAtB;AACEjB,QAAAA,aAAa,CAACJ,qBAAD,CAAb;AACA,cAAMsB,qBAAqB,GAAG,6EAA9B;AACA,cAAMC,oBAAoB,GAAG,6EAA7B;AACAtB,QAAAA,+BAA+B,CAACU,KAAhC,CAAsCQ,UAAtC,GAAmDL,QAAQ,GAAGS,oBAAH,GAA0BD,qBAArF;AACA;;AACF,WAAK5B,gBAAgB,CAAC8B,OAAtB;AACA,WAAK9B,gBAAgB,CAAC+B,cAAtB;AACErB,QAAAA,aAAa,CAACJ,qBAAD,CAAb;AACA,cAAM0B,oBAAoB,GACxB,iJADF;AAEA,cAAMC,mBAAmB,GACvB,+GADF;AAEA1B,QAAAA,+BAA+B,CAACU,KAAhC,CAAsCQ,UAAtC,GAAmDL,QAAQ,GAAGa,mBAAH,GAAyBD,oBAApF;AACAzB,QAAAA,+BAA+B,CAACU,KAAhC,CAAsCZ,mBAAtC,GAA4De,QAAQ,GAAG,gBAAH,GAAsB,iBAA1F;AACA;;AACF;AACEV,QAAAA,aAAa,CAACT,aAAD,CAAb;AACAM,QAAAA,+BAA+B,CAACU,KAAhC,CAAsCQ,UAAtC,GAAmD,EAAnD;AA3BJ;AA6BD,GAlCQ,EAkCN,CAACL,QAAD,EAAWD,OAAX,CAlCM,CAAT;AAmCA,SAAO,IAAP;AACD;;GAxCuBD,4B;UACFrB,kB,EACDE,kB;;;KAFGmB,4B","sourcesContent":["import { useActiveWeb3React } from 'hooks/web3'\nimport { useEffect } from 'react'\nimport { useDarkModeManager } from 'state/user/hooks'\n\nimport { SupportedChainId } from '../constants/chains'\n\nconst initialStyles = {\n  width: '200vw',\n  height: '200vh',\n  transform: 'translate(-50vw, -100vh)',\n  backgroundBlendMode: '',\n}\nconst backgroundResetStyles = {\n  width: '100vw',\n  height: '100vh',\n  transform: 'unset',\n  backgroundBlendMode: '',\n}\n\ntype TargetBackgroundStyles = typeof initialStyles | typeof backgroundResetStyles\n\nconst backgroundRadialGradientElement = document.getElementById('background-radial-gradient')\nconst setBackground = (newValues: TargetBackgroundStyles) =>\n  Object.entries(newValues).forEach(([key, value]) => {\n    if (backgroundRadialGradientElement) {\n      backgroundRadialGradientElement.style[key as keyof typeof backgroundResetStyles] = value\n    }\n  })\nexport default function RadialGradientByChainUpdater(): null {\n  const { chainId } = useActiveWeb3React()\n  const [darkMode] = useDarkModeManager()\n  // manage background color\n  useEffect(() => {\n    if (!backgroundRadialGradientElement) {\n      return\n    }\n\n    switch (chainId) {\n      case SupportedChainId.ARBITRUM_ONE:\n      case SupportedChainId.ARBITRUM_RINKEBY:\n        setBackground(backgroundResetStyles)\n        const arbitrumLightGradient = 'radial-gradient(150% 100% at 50% 0%, #CDE8FB 0%, #FCF3F9 50%, #FFFFFF 100%)'\n        const arbitrumDarkGradient = 'radial-gradient(150% 100% at 50% 0%, #0A294B 0%, #221E30 50%, #1F2128 100%)'\n        backgroundRadialGradientElement.style.background = darkMode ? arbitrumDarkGradient : arbitrumLightGradient\n        break\n      case SupportedChainId.OPTIMISM:\n      case SupportedChainId.OPTIMISTIC_KOVAN:\n        setBackground(backgroundResetStyles)\n        const optimismLightGradient = 'radial-gradient(150% 100% at 50% 0%, #FFFBF2 2%, #FFF4F9 53%, #FFFFFF 100%)'\n        const optimismDarkGradient = 'radial-gradient(150% 100% at 50% 0%, #3E2E38 2%, #2C1F2D 53%, #1F2128 100%)'\n        backgroundRadialGradientElement.style.background = darkMode ? optimismDarkGradient : optimismLightGradient\n        break\n      case SupportedChainId.POLYGON:\n      case SupportedChainId.POLYGON_MUMBAI:\n        setBackground(backgroundResetStyles)\n        const polygonLightGradient =\n          'radial-gradient(153.32% 100% at 47.26% 0%, rgba(130, 71, 229, 0.0864) 0%, rgba(0, 41, 255, 0.06) 48.19%, rgba(0, 41, 255, 0.012) 100%), #FFFFFF'\n        const polygonDarkGradient =\n          'radial-gradient(150.6% 98.22% at 48.06% 0%, rgba(130, 71, 229, 0.6) 0%, rgba(200, 168, 255, 0) 100%), #1F2128'\n        backgroundRadialGradientElement.style.background = darkMode ? polygonDarkGradient : polygonLightGradient\n        backgroundRadialGradientElement.style.backgroundBlendMode = darkMode ? 'overlay,normal' : 'multiply,normal'\n        break\n      default:\n        setBackground(initialStyles)\n        backgroundRadialGradientElement.style.background = ''\n    }\n  }, [darkMode, chainId])\n  return null\n}\n"]},"metadata":{},"sourceType":"module"}