{"ast":null,"code":"import _styled from \"styled-components\";\n\nvar _jsxFileName = \"/Users/safahi/Downloads/interface-4.30.1/src/components/WalletModal/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Trans } from \"@lingui/react\";\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core';\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector';\nimport { AutoColumn } from 'components/Column';\nimport { PrivacyPolicy } from 'components/PrivacyPolicy';\nimport Row, { AutoRow, RowBetween } from 'components/Row';\nimport { useWalletConnectMonitoringEventCallback } from 'hooks/useMonitoringEventCallback';\nimport { useEffect, useState } from 'react';\nimport { ArrowLeft, ArrowRight, Info } from 'react-feather';\nimport ReactGA from 'react-ga';\nimport MetamaskIcon from '../../assets/images/metamask.png';\nimport { ReactComponent as Close } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/x.svg\";\nimport { fortmatic, injected, portis } from '../../connectors';\nimport { OVERLAY_READY } from '../../connectors/Fortmatic';\nimport { SUPPORTED_WALLETS } from '../../constants/wallet';\nimport usePrevious from '../../hooks/usePrevious';\nimport { useModalOpen, useWalletModalToggle } from '../../state/application/hooks';\nimport { ApplicationModal } from '../../state/application/reducer';\nimport { ExternalLink, ThemedText } from '../../theme';\nimport { isMobile } from '../../utils/userAgent';\nimport AccountDetails from '../AccountDetails';\nimport Card, { LightCard } from '../Card';\nimport Modal from '../Modal';\nimport Option from './Option';\nimport PendingView from './PendingView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CloseIcon = _styled.div.withConfig({\n  displayName: \"WalletModal__CloseIcon\",\n  componentId: \"sc-1hmbv05-0\"\n})([\"position:absolute;right:1rem;top:14px;&:hover{cursor:pointer;opacity:0.6;}\"]);\n\nconst CloseColor = _styled(Close).withConfig({\n  displayName: \"WalletModal__CloseColor\",\n  componentId: \"sc-1hmbv05-1\"\n})([\"path{stroke:\", \";}\"], ({\n  theme\n}) => theme.text4);\n\nconst Wrapper = _styled.div.withConfig({\n  displayName: \"WalletModal__Wrapper\",\n  componentId: \"sc-1hmbv05-2\"\n})([\"\", \" margin:0;padding:0;width:100%;\"], ({\n  theme\n}) => theme.flexColumnNoWrap);\n\nconst HeaderRow = _styled.div.withConfig({\n  displayName: \"WalletModal__HeaderRow\",\n  componentId: \"sc-1hmbv05-3\"\n})([\"\", \";padding:1rem 1rem;font-weight:500;color:\", \";\", \";\"], ({\n  theme\n}) => theme.flexRowNoWrap, props => props.color === 'blue' ? ({\n  theme\n}) => theme.primary1 : 'inherit', ({\n  theme\n}) => theme.mediaWidth.upToMedium`\n    padding: 1rem;\n  `);\n\nconst ContentWrapper = _styled.div.withConfig({\n  displayName: \"WalletModal__ContentWrapper\",\n  componentId: \"sc-1hmbv05-4\"\n})([\"background-color:\", \";padding:0 1rem 1rem 1rem;border-bottom-left-radius:20px;border-bottom-right-radius:20px;\", \";\"], ({\n  theme\n}) => theme.bg0, ({\n  theme\n}) => theme.mediaWidth.upToMedium`padding: 0 1rem 1rem 1rem`);\n\nconst UpperSection = _styled.div.withConfig({\n  displayName: \"WalletModal__UpperSection\",\n  componentId: \"sc-1hmbv05-5\"\n})([\"position:relative;h5{margin:0;margin-bottom:0.5rem;font-size:1rem;font-weight:400;}h5:last-child{margin-bottom:0px;}h4{margin-top:0;font-weight:500;}\"]);\n\nconst OptionGrid = _styled.div.withConfig({\n  displayName: \"WalletModal__OptionGrid\",\n  componentId: \"sc-1hmbv05-6\"\n})([\"display:grid;grid-gap:10px;\", \";\"], ({\n  theme\n}) => theme.mediaWidth.upToMedium`\n    grid-template-columns: 1fr;\n    grid-gap: 10px;\n  `);\n\nconst HoverText = _styled.div.withConfig({\n  displayName: \"WalletModal__HoverText\",\n  componentId: \"sc-1hmbv05-7\"\n})([\"text-decoration:none;color:\", \";display:flex;align-items:center;:hover{cursor:pointer;}\"], ({\n  theme\n}) => theme.text1);\n\nconst LinkCard = _styled(Card).withConfig({\n  displayName: \"WalletModal__LinkCard\",\n  componentId: \"sc-1hmbv05-8\"\n})([\"background-color:\", \";color:\", \";:hover{cursor:pointer;filter:brightness(0.9);}\"], ({\n  theme\n}) => theme.bg1, ({\n  theme\n}) => theme.text3);\n\nconst WALLET_VIEWS = {\n  OPTIONS: 'options',\n  OPTIONS_SECONDARY: 'options_secondary',\n  ACCOUNT: 'account',\n  PENDING: 'pending',\n  LEGAL: 'legal'\n};\nexport default function WalletModal({\n  pendingTransactions,\n  confirmedTransactions,\n  ENSName\n}) {\n  _s();\n\n  // important that these are destructed from the account-specific web3-react context\n  const {\n    active,\n    account,\n    connector,\n    activate,\n    error\n  } = useWeb3React();\n  const [walletView, setWalletView] = useState(WALLET_VIEWS.ACCOUNT);\n  const previousWalletView = usePrevious(walletView);\n  const [pendingWallet, setPendingWallet] = useState();\n  const [pendingError, setPendingError] = useState();\n  const walletModalOpen = useModalOpen(ApplicationModal.WALLET);\n  const toggleWalletModal = useWalletModalToggle();\n  const previousAccount = usePrevious(account);\n  const logMonitoringEvent = useWalletConnectMonitoringEventCallback(); // close on connection, when logged out before\n\n  useEffect(() => {\n    if (account && !previousAccount && walletModalOpen) {\n      toggleWalletModal();\n    }\n  }, [account, previousAccount, toggleWalletModal, walletModalOpen]); // always reset to account view\n\n  useEffect(() => {\n    if (walletModalOpen) {\n      setPendingError(false);\n      setWalletView(WALLET_VIEWS.ACCOUNT);\n    }\n  }, [walletModalOpen]); // close modal when a connection is successful\n\n  const activePrevious = usePrevious(active);\n  const connectorPrevious = usePrevious(connector);\n  useEffect(() => {\n    if (walletModalOpen && (active && !activePrevious || connector && connector !== connectorPrevious && !error)) {\n      setWalletView(WALLET_VIEWS.ACCOUNT);\n    }\n  }, [setWalletView, active, error, connector, walletModalOpen, activePrevious, connectorPrevious]);\n\n  const tryActivation = async connector => {\n    let name = '';\n    Object.keys(SUPPORTED_WALLETS).map(key => {\n      if (connector === SUPPORTED_WALLETS[key].connector) {\n        return name = SUPPORTED_WALLETS[key].name;\n      }\n\n      return true;\n    }); // log selected wallet\n\n    ReactGA.event({\n      category: 'Wallet',\n      action: 'Change Wallet',\n      label: name\n    });\n    setPendingWallet(connector); // set wallet for pending view\n\n    setWalletView(WALLET_VIEWS.PENDING); // if the connector is walletconnect and the user has already tried to connect, manually reset the connector\n\n    if (connector instanceof WalletConnectConnector) {\n      connector.walletConnectProvider = undefined;\n    }\n\n    connector && activate(connector, undefined, true).then(async () => {\n      const walletAddress = await connector.getAccount();\n      logMonitoringEvent({\n        walletAddress\n      });\n    }).catch(error => {\n      if (error instanceof UnsupportedChainIdError) {\n        activate(connector); // a little janky...can't use setError because the connector isn't set\n      } else {\n        setPendingError(true);\n      }\n    });\n  }; // close wallet modal if fortmatic modal is active\n\n\n  useEffect(() => {\n    fortmatic.on(OVERLAY_READY, () => {\n      toggleWalletModal();\n    });\n  }, [toggleWalletModal]); // get wallets user can switch too, depending on device/browser\n\n  function getOptions() {\n    const isMetamask = window.ethereum && window.ethereum.isMetaMask;\n    return Object.keys(SUPPORTED_WALLETS).map(key => {\n      const option = SUPPORTED_WALLETS[key]; // check for mobile options\n\n      if (isMobile) {\n        //disable portis on mobile for now\n        if (option.connector === portis) {\n          return null;\n        }\n\n        if (!window.web3 && !window.ethereum && option.mobile) {\n          return /*#__PURE__*/_jsxDEV(Option, {\n            onClick: () => {\n              option.connector !== connector && !option.href && tryActivation(option.connector);\n            },\n            id: `connect-${key}`,\n            active: option.connector && option.connector === connector,\n            color: option.color,\n            link: option.href,\n            header: option.name,\n            subheader: null,\n            icon: option.iconURL\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this);\n        }\n\n        return null;\n      } // overwrite injected when needed\n\n\n      if (option.connector === injected) {\n        // don't show injected if there's no injected provider\n        if (!(window.web3 || window.ethereum)) {\n          if (option.name === 'MetaMask') {\n            return /*#__PURE__*/_jsxDEV(Option, {\n              id: `connect-${key}`,\n              color: '#E8831D',\n              header: /*#__PURE__*/_jsxDEV(Trans, {\n                id: \"Install Metamask\"\n              }, void 0, false, void 0, this),\n              subheader: null,\n              link: 'https://metamask.io/',\n              icon: MetamaskIcon\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this);\n          } else {\n            return null; //dont want to return install twice\n          }\n        } // don't return metamask if injected provider isn't metamask\n        else if (option.name === 'MetaMask' && !isMetamask) {\n          return null;\n        } // likewise for generic\n        else if (option.name === 'Injected' && isMetamask) {\n          return null;\n        }\n      } // return rest of options\n\n\n      return !isMobile && !option.mobileOnly && /*#__PURE__*/_jsxDEV(Option, {\n        id: `connect-${key}`,\n        onClick: () => {\n          option.connector === connector ? setWalletView(WALLET_VIEWS.ACCOUNT) : !option.href && tryActivation(option.connector);\n        },\n        active: option.connector === connector,\n        color: option.color,\n        link: option.href,\n        header: option.name,\n        subheader: null //use option.descriptio to bring back multi-line\n        ,\n        icon: option.iconURL\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }, this);\n    });\n  }\n\n  function getModalContent() {\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(UpperSection, {\n        children: [/*#__PURE__*/_jsxDEV(CloseIcon, {\n          onClick: toggleWalletModal,\n          children: /*#__PURE__*/_jsxDEV(CloseColor, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HeaderRow, {\n          children: error instanceof UnsupportedChainIdError ? /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Wrong Network\"\n          }, void 0, false, void 0, this) : /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Error connecting\"\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ContentWrapper, {\n          children: error instanceof UnsupportedChainIdError ? /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"Please connect to the appropriate Ethereum network.\"\n            }, void 0, false, void 0, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Error connecting. Try refreshing the page.\"\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (walletView === WALLET_VIEWS.LEGAL) {\n      return /*#__PURE__*/_jsxDEV(UpperSection, {\n        children: [/*#__PURE__*/_jsxDEV(HeaderRow, {\n          children: [/*#__PURE__*/_jsxDEV(HoverText, {\n            onClick: () => {\n              var _ref;\n\n              setWalletView((_ref = previousWalletView === WALLET_VIEWS.LEGAL ? WALLET_VIEWS.ACCOUNT : previousWalletView) !== null && _ref !== void 0 ? _ref : WALLET_VIEWS.ACCOUNT);\n            },\n            children: /*#__PURE__*/_jsxDEV(ArrowLeft, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            justify: \"center\",\n            children: /*#__PURE__*/_jsxDEV(ThemedText.MediumHeader, {\n              children: /*#__PURE__*/_jsxDEV(Trans, {\n                id: \"Legal & Privacy\"\n              }, void 0, false, void 0, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PrivacyPolicy, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (account && walletView === WALLET_VIEWS.ACCOUNT) {\n      return /*#__PURE__*/_jsxDEV(AccountDetails, {\n        toggleWalletModal: toggleWalletModal,\n        pendingTransactions: pendingTransactions,\n        confirmedTransactions: confirmedTransactions,\n        ENSName: ENSName,\n        openOptions: () => setWalletView(WALLET_VIEWS.OPTIONS)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(UpperSection, {\n      children: [/*#__PURE__*/_jsxDEV(CloseIcon, {\n        onClick: toggleWalletModal,\n        children: /*#__PURE__*/_jsxDEV(CloseColor, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), walletView !== WALLET_VIEWS.ACCOUNT ? /*#__PURE__*/_jsxDEV(HeaderRow, {\n        color: \"blue\",\n        children: /*#__PURE__*/_jsxDEV(HoverText, {\n          onClick: () => {\n            setPendingError(false);\n            setWalletView(WALLET_VIEWS.ACCOUNT);\n          },\n          children: /*#__PURE__*/_jsxDEV(ArrowLeft, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(HeaderRow, {\n        children: /*#__PURE__*/_jsxDEV(HoverText, {\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Connect a wallet\"\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ContentWrapper, {\n        children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n          gap: \"16px\",\n          children: [/*#__PURE__*/_jsxDEV(LightCard, {\n            children: /*#__PURE__*/_jsxDEV(AutoRow, {\n              style: {\n                flexWrap: 'nowrap'\n              },\n              children: /*#__PURE__*/_jsxDEV(ThemedText.Black, {\n                fontSize: 14,\n                children: /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"By connecting a wallet, you agree to Uniswap Labs\\u2019 <0>Terms of Service</0> and acknowledge that you have read and understand the Uniswap <1>Protocol Disclaimer</1>.\",\n                  components: {\n                    0: /*#__PURE__*/_jsxDEV(ExternalLink, {\n                      href: \"https://uniswap.org/terms-of-service/\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 398,\n                      columnNumber: 21\n                    }, this),\n                    1: /*#__PURE__*/_jsxDEV(ExternalLink, {\n                      href: \"https://uniswap.org/disclaimer/\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 400,\n                      columnNumber: 21\n                    }, this)\n                  }\n                }, void 0, false, void 0, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this), walletView === WALLET_VIEWS.PENDING ? /*#__PURE__*/_jsxDEV(PendingView, {\n            connector: pendingWallet,\n            error: pendingError,\n            setPendingError: setPendingError,\n            tryActivation: tryActivation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(OptionGrid, {\n            children: getOptions()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(LinkCard, {\n            padding: \".5rem\",\n            $borderRadius: \".75rem\",\n            onClick: () => setWalletView(WALLET_VIEWS.LEGAL),\n            children: /*#__PURE__*/_jsxDEV(RowBetween, {\n              children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n                gap: \"4px\",\n                children: [/*#__PURE__*/_jsxDEV(Info, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 418,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ThemedText.Label, {\n                  fontSize: 14,\n                  children: /*#__PURE__*/_jsxDEV(Trans, {\n                    id: \"How this app uses APIs\"\n                  }, void 0, false, void 0, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ArrowRight, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: walletModalOpen,\n    onDismiss: toggleWalletModal,\n    minHeight: false,\n    maxHeight: 90,\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: getModalContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 433,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WalletModal, \"wvCHJK6pmskcI9ypnmHdeRnCMw8=\", false, function () {\n  return [useWeb3React, usePrevious, useModalOpen, useWalletModalToggle, usePrevious, useWalletConnectMonitoringEventCallback, usePrevious, usePrevious];\n});\n\n_c = WalletModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"WalletModal\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/components/WalletModal/index.tsx"],"names":["UnsupportedChainIdError","useWeb3React","WalletConnectConnector","AutoColumn","PrivacyPolicy","Row","AutoRow","RowBetween","useWalletConnectMonitoringEventCallback","useEffect","useState","ArrowLeft","ArrowRight","Info","ReactGA","MetamaskIcon","fortmatic","injected","portis","OVERLAY_READY","SUPPORTED_WALLETS","usePrevious","useModalOpen","useWalletModalToggle","ApplicationModal","ExternalLink","ThemedText","isMobile","AccountDetails","Card","LightCard","Modal","Option","PendingView","CloseIcon","styled","div","CloseColor","Close","theme","text4","Wrapper","flexColumnNoWrap","HeaderRow","flexRowNoWrap","props","color","primary1","mediaWidth","upToMedium","ContentWrapper","bg0","UpperSection","OptionGrid","HoverText","text1","LinkCard","bg1","text3","WALLET_VIEWS","OPTIONS","OPTIONS_SECONDARY","ACCOUNT","PENDING","LEGAL","WalletModal","pendingTransactions","confirmedTransactions","ENSName","active","account","connector","activate","error","walletView","setWalletView","previousWalletView","pendingWallet","setPendingWallet","pendingError","setPendingError","walletModalOpen","WALLET","toggleWalletModal","previousAccount","logMonitoringEvent","activePrevious","connectorPrevious","tryActivation","name","Object","keys","map","key","event","category","action","label","walletConnectProvider","undefined","then","walletAddress","getAccount","catch","on","getOptions","isMetamask","window","ethereum","isMetaMask","option","web3","mobile","href","iconURL","mobileOnly","getModalContent","flexWrap"],"mappings":"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","sourcesContent":["import { Trans } from '@lingui/macro'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { AutoColumn } from 'components/Column'\nimport { PrivacyPolicy } from 'components/PrivacyPolicy'\nimport Row, { AutoRow, RowBetween } from 'components/Row'\nimport { useWalletConnectMonitoringEventCallback } from 'hooks/useMonitoringEventCallback'\nimport { useEffect, useState } from 'react'\nimport { ArrowLeft, ArrowRight, Info } from 'react-feather'\nimport ReactGA from 'react-ga'\nimport styled from 'styled-components/macro'\n\nimport MetamaskIcon from '../../assets/images/metamask.png'\nimport { ReactComponent as Close } from '../../assets/images/x.svg'\nimport { fortmatic, injected, portis } from '../../connectors'\nimport { OVERLAY_READY } from '../../connectors/Fortmatic'\nimport { SUPPORTED_WALLETS } from '../../constants/wallet'\nimport usePrevious from '../../hooks/usePrevious'\nimport { useModalOpen, useWalletModalToggle } from '../../state/application/hooks'\nimport { ApplicationModal } from '../../state/application/reducer'\nimport { ExternalLink, ThemedText } from '../../theme'\nimport { isMobile } from '../../utils/userAgent'\nimport AccountDetails from '../AccountDetails'\nimport Card, { LightCard } from '../Card'\nimport Modal from '../Modal'\nimport Option from './Option'\nimport PendingView from './PendingView'\n\nconst CloseIcon = styled.div`\n  position: absolute;\n  right: 1rem;\n  top: 14px;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nconst CloseColor = styled(Close)`\n  path {\n    stroke: ${({ theme }) => theme.text4};\n  }\n`\n\nconst Wrapper = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  margin: 0;\n  padding: 0;\n  width: 100%;\n`\n\nconst HeaderRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  padding: 1rem 1rem;\n  font-weight: 500;\n  color: ${(props) => (props.color === 'blue' ? ({ theme }) => theme.primary1 : 'inherit')};\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    padding: 1rem;\n  `};\n`\n\nconst ContentWrapper = styled.div`\n  background-color: ${({ theme }) => theme.bg0};\n  padding: 0 1rem 1rem 1rem;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`padding: 0 1rem 1rem 1rem`};\n`\n\nconst UpperSection = styled.div`\n  position: relative;\n\n  h5 {\n    margin: 0;\n    margin-bottom: 0.5rem;\n    font-size: 1rem;\n    font-weight: 400;\n  }\n\n  h5:last-child {\n    margin-bottom: 0px;\n  }\n\n  h4 {\n    margin-top: 0;\n    font-weight: 500;\n  }\n`\n\nconst OptionGrid = styled.div`\n  display: grid;\n  grid-gap: 10px;\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    grid-template-columns: 1fr;\n    grid-gap: 10px;\n  `};\n`\n\nconst HoverText = styled.div`\n  text-decoration: none;\n  color: ${({ theme }) => theme.text1};\n  display: flex;\n  align-items: center;\n\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst LinkCard = styled(Card)`\n  background-color: ${({ theme }) => theme.bg1};\n  color: ${({ theme }) => theme.text3};\n\n  :hover {\n    cursor: pointer;\n    filter: brightness(0.9);\n  }\n`\n\nconst WALLET_VIEWS = {\n  OPTIONS: 'options',\n  OPTIONS_SECONDARY: 'options_secondary',\n  ACCOUNT: 'account',\n  PENDING: 'pending',\n  LEGAL: 'legal',\n}\n\nexport default function WalletModal({\n  pendingTransactions,\n  confirmedTransactions,\n  ENSName,\n}: {\n  pendingTransactions: string[] // hashes of pending\n  confirmedTransactions: string[] // hashes of confirmed\n  ENSName?: string\n}) {\n  // important that these are destructed from the account-specific web3-react context\n  const { active, account, connector, activate, error } = useWeb3React()\n\n  const [walletView, setWalletView] = useState(WALLET_VIEWS.ACCOUNT)\n  const previousWalletView = usePrevious(walletView)\n\n  const [pendingWallet, setPendingWallet] = useState<AbstractConnector | undefined>()\n\n  const [pendingError, setPendingError] = useState<boolean>()\n\n  const walletModalOpen = useModalOpen(ApplicationModal.WALLET)\n  const toggleWalletModal = useWalletModalToggle()\n\n  const previousAccount = usePrevious(account)\n\n  const logMonitoringEvent = useWalletConnectMonitoringEventCallback()\n\n  // close on connection, when logged out before\n  useEffect(() => {\n    if (account && !previousAccount && walletModalOpen) {\n      toggleWalletModal()\n    }\n  }, [account, previousAccount, toggleWalletModal, walletModalOpen])\n\n  // always reset to account view\n  useEffect(() => {\n    if (walletModalOpen) {\n      setPendingError(false)\n      setWalletView(WALLET_VIEWS.ACCOUNT)\n    }\n  }, [walletModalOpen])\n\n  // close modal when a connection is successful\n  const activePrevious = usePrevious(active)\n  const connectorPrevious = usePrevious(connector)\n  useEffect(() => {\n    if (walletModalOpen && ((active && !activePrevious) || (connector && connector !== connectorPrevious && !error))) {\n      setWalletView(WALLET_VIEWS.ACCOUNT)\n    }\n  }, [setWalletView, active, error, connector, walletModalOpen, activePrevious, connectorPrevious])\n\n  const tryActivation = async (connector: AbstractConnector | undefined) => {\n    let name = ''\n    Object.keys(SUPPORTED_WALLETS).map((key) => {\n      if (connector === SUPPORTED_WALLETS[key].connector) {\n        return (name = SUPPORTED_WALLETS[key].name)\n      }\n      return true\n    })\n    // log selected wallet\n    ReactGA.event({\n      category: 'Wallet',\n      action: 'Change Wallet',\n      label: name,\n    })\n    setPendingWallet(connector) // set wallet for pending view\n    setWalletView(WALLET_VIEWS.PENDING)\n\n    // if the connector is walletconnect and the user has already tried to connect, manually reset the connector\n    if (connector instanceof WalletConnectConnector) {\n      connector.walletConnectProvider = undefined\n    }\n\n    connector &&\n      activate(connector, undefined, true)\n        .then(async () => {\n          const walletAddress = await connector.getAccount()\n          logMonitoringEvent({ walletAddress })\n        })\n        .catch((error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            activate(connector) // a little janky...can't use setError because the connector isn't set\n          } else {\n            setPendingError(true)\n          }\n        })\n  }\n\n  // close wallet modal if fortmatic modal is active\n  useEffect(() => {\n    fortmatic.on(OVERLAY_READY, () => {\n      toggleWalletModal()\n    })\n  }, [toggleWalletModal])\n\n  // get wallets user can switch too, depending on device/browser\n  function getOptions() {\n    const isMetamask = window.ethereum && window.ethereum.isMetaMask\n    return Object.keys(SUPPORTED_WALLETS).map((key) => {\n      const option = SUPPORTED_WALLETS[key]\n      // check for mobile options\n      if (isMobile) {\n        //disable portis on mobile for now\n        if (option.connector === portis) {\n          return null\n        }\n\n        if (!window.web3 && !window.ethereum && option.mobile) {\n          return (\n            <Option\n              onClick={() => {\n                option.connector !== connector && !option.href && tryActivation(option.connector)\n              }}\n              id={`connect-${key}`}\n              key={key}\n              active={option.connector && option.connector === connector}\n              color={option.color}\n              link={option.href}\n              header={option.name}\n              subheader={null}\n              icon={option.iconURL}\n            />\n          )\n        }\n        return null\n      }\n\n      // overwrite injected when needed\n      if (option.connector === injected) {\n        // don't show injected if there's no injected provider\n        if (!(window.web3 || window.ethereum)) {\n          if (option.name === 'MetaMask') {\n            return (\n              <Option\n                id={`connect-${key}`}\n                key={key}\n                color={'#E8831D'}\n                header={<Trans>Install Metamask</Trans>}\n                subheader={null}\n                link={'https://metamask.io/'}\n                icon={MetamaskIcon}\n              />\n            )\n          } else {\n            return null //dont want to return install twice\n          }\n        }\n        // don't return metamask if injected provider isn't metamask\n        else if (option.name === 'MetaMask' && !isMetamask) {\n          return null\n        }\n        // likewise for generic\n        else if (option.name === 'Injected' && isMetamask) {\n          return null\n        }\n      }\n\n      // return rest of options\n      return (\n        !isMobile &&\n        !option.mobileOnly && (\n          <Option\n            id={`connect-${key}`}\n            onClick={() => {\n              option.connector === connector\n                ? setWalletView(WALLET_VIEWS.ACCOUNT)\n                : !option.href && tryActivation(option.connector)\n            }}\n            key={key}\n            active={option.connector === connector}\n            color={option.color}\n            link={option.href}\n            header={option.name}\n            subheader={null} //use option.descriptio to bring back multi-line\n            icon={option.iconURL}\n          />\n        )\n      )\n    })\n  }\n\n  function getModalContent() {\n    if (error) {\n      return (\n        <UpperSection>\n          <CloseIcon onClick={toggleWalletModal}>\n            <CloseColor />\n          </CloseIcon>\n          <HeaderRow>\n            {error instanceof UnsupportedChainIdError ? <Trans>Wrong Network</Trans> : <Trans>Error connecting</Trans>}\n          </HeaderRow>\n          <ContentWrapper>\n            {error instanceof UnsupportedChainIdError ? (\n              <h5>\n                <Trans>Please connect to the appropriate Ethereum network.</Trans>\n              </h5>\n            ) : (\n              <Trans>Error connecting. Try refreshing the page.</Trans>\n            )}\n          </ContentWrapper>\n        </UpperSection>\n      )\n    }\n    if (walletView === WALLET_VIEWS.LEGAL) {\n      return (\n        <UpperSection>\n          <HeaderRow>\n            <HoverText\n              onClick={() => {\n                setWalletView(\n                  (previousWalletView === WALLET_VIEWS.LEGAL ? WALLET_VIEWS.ACCOUNT : previousWalletView) ??\n                    WALLET_VIEWS.ACCOUNT\n                )\n              }}\n            >\n              <ArrowLeft />\n            </HoverText>\n            <Row justify=\"center\">\n              <ThemedText.MediumHeader>\n                <Trans>Legal & Privacy</Trans>\n              </ThemedText.MediumHeader>\n            </Row>\n          </HeaderRow>\n          <PrivacyPolicy />\n        </UpperSection>\n      )\n    }\n    if (account && walletView === WALLET_VIEWS.ACCOUNT) {\n      return (\n        <AccountDetails\n          toggleWalletModal={toggleWalletModal}\n          pendingTransactions={pendingTransactions}\n          confirmedTransactions={confirmedTransactions}\n          ENSName={ENSName}\n          openOptions={() => setWalletView(WALLET_VIEWS.OPTIONS)}\n        />\n      )\n    }\n    return (\n      <UpperSection>\n        <CloseIcon onClick={toggleWalletModal}>\n          <CloseColor />\n        </CloseIcon>\n        {walletView !== WALLET_VIEWS.ACCOUNT ? (\n          <HeaderRow color=\"blue\">\n            <HoverText\n              onClick={() => {\n                setPendingError(false)\n                setWalletView(WALLET_VIEWS.ACCOUNT)\n              }}\n            >\n              <ArrowLeft />\n            </HoverText>\n          </HeaderRow>\n        ) : (\n          <HeaderRow>\n            <HoverText>\n              <Trans>Connect a wallet</Trans>\n            </HoverText>\n          </HeaderRow>\n        )}\n\n        <ContentWrapper>\n          <AutoColumn gap=\"16px\">\n            <LightCard>\n              <AutoRow style={{ flexWrap: 'nowrap' }}>\n                <ThemedText.Black fontSize={14}>\n                  <Trans>\n                    By connecting a wallet, you agree to Uniswap Labs’{' '}\n                    <ExternalLink href=\"https://uniswap.org/terms-of-service/\">Terms of Service</ExternalLink> and\n                    acknowledge that you have read and understand the Uniswap{' '}\n                    <ExternalLink href=\"https://uniswap.org/disclaimer/\">Protocol Disclaimer</ExternalLink>.\n                  </Trans>\n                </ThemedText.Black>\n              </AutoRow>\n            </LightCard>\n            {walletView === WALLET_VIEWS.PENDING ? (\n              <PendingView\n                connector={pendingWallet}\n                error={pendingError}\n                setPendingError={setPendingError}\n                tryActivation={tryActivation}\n              />\n            ) : (\n              <OptionGrid>{getOptions()}</OptionGrid>\n            )}\n            <LinkCard padding=\".5rem\" $borderRadius=\".75rem\" onClick={() => setWalletView(WALLET_VIEWS.LEGAL)}>\n              <RowBetween>\n                <AutoRow gap=\"4px\">\n                  <Info size={20} />\n                  <ThemedText.Label fontSize={14}>\n                    <Trans>How this app uses APIs</Trans>\n                  </ThemedText.Label>\n                </AutoRow>\n                <ArrowRight size={16} />\n              </RowBetween>\n            </LinkCard>\n          </AutoColumn>\n        </ContentWrapper>\n      </UpperSection>\n    )\n  }\n\n  return (\n    <Modal isOpen={walletModalOpen} onDismiss={toggleWalletModal} minHeight={false} maxHeight={90}>\n      <Wrapper>{getModalContent()}</Wrapper>\n    </Modal>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}