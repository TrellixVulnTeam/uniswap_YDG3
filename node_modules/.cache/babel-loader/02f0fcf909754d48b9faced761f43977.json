{"ast":null,"code":"import _styled from \"styled-components\";\n\nvar _jsxFileName = \"/Users/safahi/Downloads/interface-4.30.1/src/components/RoutingDiagram/RoutingDiagram.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { Trans } from \"@lingui/react\";\nimport Badge from 'components/Badge';\nimport CurrencyLogo from 'components/CurrencyLogo';\nimport DoubleCurrencyLogo from 'components/DoubleLogo';\nimport Row, { AutoRow } from 'components/Row';\nimport { useTokenInfoFromActiveList } from 'hooks/useTokenInfoFromActiveList';\nimport { Box } from 'rebass';\nimport { ThemedText, Z_INDEX } from 'theme';\nimport { ReactComponent as DotLine } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/svg/dot_line.svg\";\nimport { MouseoverTooltip } from '../Tooltip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Wrapper = _styled(Box).withConfig({\n  displayName: \"RoutingDiagram__Wrapper\",\n  componentId: \"sc-o1ook0-0\"\n})([\"align-items:center;width:100%;\"]);\n\nconst RouteContainerRow = _styled(Row).withConfig({\n  displayName: \"RoutingDiagram__RouteContainerRow\",\n  componentId: \"sc-o1ook0-1\"\n})([\"display:grid;grid-template-columns:24px 1fr 24px;\"]);\n\nconst RouteRow = _styled(Row).withConfig({\n  displayName: \"RoutingDiagram__RouteRow\",\n  componentId: \"sc-o1ook0-2\"\n})([\"align-items:center;display:flex;justify-content:center;padding:0.1rem 0.5rem;position:relative;\"]);\n\nconst PoolBadge = _styled(Badge).withConfig({\n  displayName: \"RoutingDiagram__PoolBadge\",\n  componentId: \"sc-o1ook0-3\"\n})([\"display:flex;padding:4px 4px;\"]);\n\nconst DottedLine = _styled.div.withConfig({\n  displayName: \"RoutingDiagram__DottedLine\",\n  componentId: \"sc-o1ook0-4\"\n})([\"display:flex;align-items:center;position:absolute;width:calc(100%);z-index:1;opacity:0.5;\"]);\n\nconst DotColor = _styled(DotLine).withConfig({\n  displayName: \"RoutingDiagram__DotColor\",\n  componentId: \"sc-o1ook0-5\"\n})([\"path{stroke:\", \";}\"], ({\n  theme\n}) => theme.bg4);\n\nconst OpaqueBadge = _styled(Badge).withConfig({\n  displayName: \"RoutingDiagram__OpaqueBadge\",\n  componentId: \"sc-o1ook0-6\"\n})([\"background-color:\", \";border-radius:8px;display:grid;font-size:12px;grid-gap:4px;grid-auto-flow:column;justify-content:start;padding:4px 6px 4px 4px;z-index:\", \";\"], ({\n  theme\n}) => theme.bg2, Z_INDEX.sticky);\n\nconst ProtocolBadge = _styled(Badge).withConfig({\n  displayName: \"RoutingDiagram__ProtocolBadge\",\n  componentId: \"sc-o1ook0-7\"\n})([\"background-color:\", \";border-radius:4px;color:\", \";font-size:10px;padding:2px 4px;z-index:\", \";\"], ({\n  theme\n}) => theme.bg3, ({\n  theme\n}) => theme.text2, Z_INDEX.sticky + 1);\n\nconst BadgeText = _styled(ThemedText.Small).withConfig({\n  displayName: \"RoutingDiagram__BadgeText\",\n  componentId: \"sc-o1ook0-8\"\n})([\"word-break:normal;\"]);\n\nexport default function RoutingDiagram({\n  currencyIn,\n  currencyOut,\n  routes\n}) {\n  _s();\n\n  const tokenIn = useTokenInfoFromActiveList(currencyIn);\n  const tokenOut = useTokenInfoFromActiveList(currencyOut);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: routes.map((entry, index) => /*#__PURE__*/_jsxDEV(RouteContainerRow, {\n      children: [/*#__PURE__*/_jsxDEV(CurrencyLogo, {\n        currency: tokenIn,\n        size: '20px'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        entry: entry\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CurrencyLogo, {\n        currency: tokenOut,\n        size: '20px'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RoutingDiagram, \"CQ0mEofP1dG1E1Y14V6REUb4UtY=\", false, function () {\n  return [useTokenInfoFromActiveList, useTokenInfoFromActiveList];\n});\n\n_c = RoutingDiagram;\n\nfunction Route({\n  entry: {\n    percent,\n    path,\n    protocol\n  }\n}) {\n  return /*#__PURE__*/_jsxDEV(RouteRow, {\n    children: [/*#__PURE__*/_jsxDEV(DottedLine, {\n      children: /*#__PURE__*/_jsxDEV(DotColor, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OpaqueBadge, {\n      children: [/*#__PURE__*/_jsxDEV(ProtocolBadge, {\n        children: /*#__PURE__*/_jsxDEV(BadgeText, {\n          fontSize: 12,\n          children: protocol.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BadgeText, {\n        fontSize: 14,\n        style: {\n          minWidth: 'auto'\n        },\n        children: [percent.toSignificant(2), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AutoRow, {\n      gap: \"1px\",\n      width: \"100%\",\n      style: {\n        justifyContent: 'space-evenly',\n        zIndex: 2\n      },\n      children: path.map(([currency0, currency1, feeAmount], index) => /*#__PURE__*/_jsxDEV(Pool, {\n        currency0: currency0,\n        currency1: currency1,\n        feeAmount: feeAmount\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Route;\n\nfunction Pool({\n  currency0,\n  currency1,\n  feeAmount\n}) {\n  _s2();\n\n  const tokenInfo0 = useTokenInfoFromActiveList(currency0);\n  const tokenInfo1 = useTokenInfoFromActiveList(currency1); // TODO - link pool icon to info.uniswap.org via query params\n\n  return /*#__PURE__*/_jsxDEV(MouseoverTooltip, {\n    text: /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"{0}% pool\",\n      values: {\n        0: (tokenInfo0 === null || tokenInfo0 === void 0 ? void 0 : tokenInfo0.symbol) + '/' + (tokenInfo1 === null || tokenInfo1 === void 0 ? void 0 : tokenInfo1.symbol) + ' ' + feeAmount / 10000\n      }\n    }, void 0, false, void 0, this),\n    children: /*#__PURE__*/_jsxDEV(PoolBadge, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        margin: \"0 4px 0 12px\",\n        children: /*#__PURE__*/_jsxDEV(DoubleCurrencyLogo, {\n          currency0: tokenInfo1,\n          currency1: tokenInfo0,\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ThemedText.Small, {\n        fontSize: 14,\n        children: [feeAmount / 10000, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Pool, \"nXH41txbfI7gRvSyr4drvFwAOYY=\", false, function () {\n  return [useTokenInfoFromActiveList, useTokenInfoFromActiveList];\n});\n\n_c3 = Pool;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"RoutingDiagram\");\n$RefreshReg$(_c2, \"Route\");\n$RefreshReg$(_c3, \"Pool\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/components/RoutingDiagram/RoutingDiagram.tsx"],"names":["Badge","CurrencyLogo","DoubleCurrencyLogo","Row","AutoRow","useTokenInfoFromActiveList","Box","ThemedText","Z_INDEX","MouseoverTooltip","Wrapper","styled","RouteContainerRow","RouteRow","PoolBadge","DottedLine","div","DotColor","DotLine","theme","bg4","OpaqueBadge","bg2","sticky","ProtocolBadge","bg3","text2","BadgeText","Small","RoutingDiagram","currencyIn","currencyOut","routes","tokenIn","tokenOut","map","entry","index","Route","percent","path","protocol","toUpperCase","minWidth","toSignificant","justifyContent","zIndex","currency0","currency1","feeAmount","Pool","tokenInfo0","tokenInfo1","symbol"],"mappings":"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","sourcesContent":["import { Trans } from '@lingui/macro'\nimport { Protocol } from '@uniswap/router-sdk'\nimport { Currency, Percent } from '@uniswap/sdk-core'\nimport { FeeAmount } from '@uniswap/v3-sdk'\nimport Badge from 'components/Badge'\nimport CurrencyLogo from 'components/CurrencyLogo'\nimport DoubleCurrencyLogo from 'components/DoubleLogo'\nimport Row, { AutoRow } from 'components/Row'\nimport { useTokenInfoFromActiveList } from 'hooks/useTokenInfoFromActiveList'\nimport { Box } from 'rebass'\nimport styled from 'styled-components/macro'\nimport { ThemedText, Z_INDEX } from 'theme'\n\nimport { ReactComponent as DotLine } from '../../assets/svg/dot_line.svg'\nimport { MouseoverTooltip } from '../Tooltip'\n\nexport interface RoutingDiagramEntry {\n  percent: Percent\n  path: [Currency, Currency, FeeAmount][]\n  protocol: Protocol\n}\n\nconst Wrapper = styled(Box)`\n  align-items: center;\n  width: 100%;\n`\n\nconst RouteContainerRow = styled(Row)`\n  display: grid;\n  grid-template-columns: 24px 1fr 24px;\n`\n\nconst RouteRow = styled(Row)`\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  padding: 0.1rem 0.5rem;\n  position: relative;\n`\n\nconst PoolBadge = styled(Badge)`\n  display: flex;\n  padding: 4px 4px;\n`\n\nconst DottedLine = styled.div`\n  display: flex;\n  align-items: center;\n  position: absolute;\n  width: calc(100%);\n  z-index: 1;\n  opacity: 0.5;\n`\n\nconst DotColor = styled(DotLine)`\n  path {\n    stroke: ${({ theme }) => theme.bg4};\n  }\n`\n\nconst OpaqueBadge = styled(Badge)`\n  background-color: ${({ theme }) => theme.bg2};\n  border-radius: 8px;\n  display: grid;\n  font-size: 12px;\n  grid-gap: 4px;\n  grid-auto-flow: column;\n  justify-content: start;\n  padding: 4px 6px 4px 4px;\n  z-index: ${Z_INDEX.sticky};\n`\n\nconst ProtocolBadge = styled(Badge)`\n  background-color: ${({ theme }) => theme.bg3};\n  border-radius: 4px;\n  color: ${({ theme }) => theme.text2};\n  font-size: 10px;\n  padding: 2px 4px;\n  z-index: ${Z_INDEX.sticky + 1};\n`\n\nconst BadgeText = styled(ThemedText.Small)`\n  word-break: normal;\n`\n\nexport default function RoutingDiagram({\n  currencyIn,\n  currencyOut,\n  routes,\n}: {\n  currencyIn: Currency\n  currencyOut: Currency\n  routes: RoutingDiagramEntry[]\n}) {\n  const tokenIn = useTokenInfoFromActiveList(currencyIn)\n  const tokenOut = useTokenInfoFromActiveList(currencyOut)\n\n  return (\n    <Wrapper>\n      {routes.map((entry, index) => (\n        <RouteContainerRow key={index}>\n          <CurrencyLogo currency={tokenIn} size={'20px'} />\n          <Route entry={entry} />\n          <CurrencyLogo currency={tokenOut} size={'20px'} />\n        </RouteContainerRow>\n      ))}\n    </Wrapper>\n  )\n}\n\nfunction Route({ entry: { percent, path, protocol } }: { entry: RoutingDiagramEntry }) {\n  return (\n    <RouteRow>\n      <DottedLine>\n        <DotColor />\n      </DottedLine>\n      <OpaqueBadge>\n        <ProtocolBadge>\n          <BadgeText fontSize={12}>{protocol.toUpperCase()}</BadgeText>\n        </ProtocolBadge>\n        <BadgeText fontSize={14} style={{ minWidth: 'auto' }}>\n          {percent.toSignificant(2)}%\n        </BadgeText>\n      </OpaqueBadge>\n      <AutoRow gap=\"1px\" width=\"100%\" style={{ justifyContent: 'space-evenly', zIndex: 2 }}>\n        {path.map(([currency0, currency1, feeAmount], index) => (\n          <Pool key={index} currency0={currency0} currency1={currency1} feeAmount={feeAmount} />\n        ))}\n      </AutoRow>\n    </RouteRow>\n  )\n}\n\nfunction Pool({ currency0, currency1, feeAmount }: { currency0: Currency; currency1: Currency; feeAmount: FeeAmount }) {\n  const tokenInfo0 = useTokenInfoFromActiveList(currency0)\n  const tokenInfo1 = useTokenInfoFromActiveList(currency1)\n\n  // TODO - link pool icon to info.uniswap.org via query params\n  return (\n    <MouseoverTooltip\n      text={<Trans>{tokenInfo0?.symbol + '/' + tokenInfo1?.symbol + ' ' + feeAmount / 10000}% pool</Trans>}\n    >\n      <PoolBadge>\n        <Box margin=\"0 4px 0 12px\">\n          <DoubleCurrencyLogo currency0={tokenInfo1} currency1={tokenInfo0} size={20} />\n        </Box>\n        <ThemedText.Small fontSize={14}>{feeAmount / 10000}%</ThemedText.Small>\n      </PoolBadge>\n    </MouseoverTooltip>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}