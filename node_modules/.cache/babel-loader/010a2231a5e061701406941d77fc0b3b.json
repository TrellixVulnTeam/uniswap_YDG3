{"ast":null,"code":"import _objectSpread from \"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _asyncToGenerator from \"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _excluded = [\"totalValueLockedETH\", \"totalValueLockedUSD\"];\n\nvar _SUBGRAPH_URL_BY_CHAI, _templateObject;\n\nimport { default as retry } from 'async-retry';\nimport Timeout from 'await-timeout';\nimport { gql, GraphQLClient } from 'graphql-request';\nimport _ from 'lodash';\nimport { ChainId } from '../../util/chains';\nimport { log } from '../../util/log';\nexport var printV3SubgraphPool = function printV3SubgraphPool(s) {\n  return \"\".concat(s.token0.id, \"/\").concat(s.token1.id, \"/\").concat(s.feeTier);\n};\nexport var printV2SubgraphPool = function printV2SubgraphPool(s) {\n  return \"\".concat(s.token0.id, \"/\").concat(s.token1.id);\n};\nvar SUBGRAPH_URL_BY_CHAIN = (_SUBGRAPH_URL_BY_CHAI = {}, _defineProperty(_SUBGRAPH_URL_BY_CHAI, ChainId.MAINNET, 'https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v3'), _defineProperty(_SUBGRAPH_URL_BY_CHAI, ChainId.RINKEBY, 'https://api.thegraph.com/subgraphs/name/ianlapham/uniswap-v3-rinkeby'), _defineProperty(_SUBGRAPH_URL_BY_CHAI, ChainId.OPTIMISM, 'https://api.thegraph.com/subgraphs/name/ianlapham/uniswap-optmism-regen'), _defineProperty(_SUBGRAPH_URL_BY_CHAI, ChainId.ARBITRUM_ONE, 'https://api.thegraph.com/subgraphs/name/ianlapham/arbitrum-minimal'), _defineProperty(_SUBGRAPH_URL_BY_CHAI, ChainId.POLYGON, 'https://api.thegraph.com/subgraphs/name/ianlapham/uniswap-v3-polygon'), _SUBGRAPH_URL_BY_CHAI);\nvar PAGE_SIZE = 1000; // 1k is max possible query size from subgraph.\n\nexport var V3SubgraphProvider = /*#__PURE__*/function () {\n  function V3SubgraphProvider(chainId) {\n    var retries = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n    var timeout = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 30000;\n    var rollback = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n    _classCallCheck(this, V3SubgraphProvider);\n\n    this.chainId = chainId;\n    this.retries = retries;\n    this.timeout = timeout;\n    this.rollback = rollback;\n    var subgraphUrl = SUBGRAPH_URL_BY_CHAIN[this.chainId];\n\n    if (!subgraphUrl) {\n      throw new Error(\"No subgraph url for chain id: \".concat(this.chainId));\n    }\n\n    this.client = new GraphQLClient(subgraphUrl);\n  }\n\n  _createClass(V3SubgraphProvider, [{\n    key: \"getPools\",\n    value: function () {\n      var _getPools = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_tokenIn, _tokenOut, providerConfig) {\n        var _this = this;\n\n        var blockNumber, query, pools, poolsSanitized;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber)) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                _context3.next = 3;\n                return providerConfig.blockNumber;\n\n              case 3:\n                _context3.t0 = _context3.sent;\n                _context3.next = 7;\n                break;\n\n              case 6:\n                _context3.t0 = undefined;\n\n              case 7:\n                blockNumber = _context3.t0;\n                query = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      query getPools($pageSize: Int!, $id: String) {\\n        pools(\\n          first: $pageSize\\n          \", \"\\n          where: { id_gt: $id }\\n        ) {\\n          id\\n          token0 {\\n            symbol\\n            id\\n          }\\n          token1 {\\n            symbol\\n            id\\n          }\\n          feeTier\\n          liquidity\\n          totalValueLockedUSD\\n          totalValueLockedETH\\n        }\\n      }\\n    \"])), blockNumber ? \"block: { number: \".concat(blockNumber, \" }\") : \"\");\n                pools = [];\n                log.info(\"Getting V3 pools from the subgraph with page size \".concat(PAGE_SIZE).concat((providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber) ? \" as of block \".concat(providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber) : '', \".\"));\n                _context3.next = 13;\n                return retry( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                  var timeout, getPools, getPoolsPromise, timerPromise;\n                  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          timeout = new Timeout();\n\n                          getPools = /*#__PURE__*/function () {\n                            var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                              var lastId, pools, poolsPage, poolsResult;\n                              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                                while (1) {\n                                  switch (_context.prev = _context.next) {\n                                    case 0:\n                                      lastId = '';\n                                      pools = [];\n                                      poolsPage = [];\n\n                                    case 3:\n                                      _context.next = 5;\n                                      return _this.client.request(query, {\n                                        pageSize: PAGE_SIZE,\n                                        id: lastId\n                                      });\n\n                                    case 5:\n                                      poolsResult = _context.sent;\n                                      poolsPage = poolsResult.pools;\n                                      pools = pools.concat(poolsPage);\n                                      lastId = pools[pools.length - 1].id;\n\n                                    case 9:\n                                      if (poolsPage.length > 0) {\n                                        _context.next = 3;\n                                        break;\n                                      }\n\n                                    case 10:\n                                      return _context.abrupt(\"return\", pools);\n\n                                    case 11:\n                                    case \"end\":\n                                      return _context.stop();\n                                  }\n                                }\n                              }, _callee);\n                            }));\n\n                            return function getPools() {\n                              return _ref2.apply(this, arguments);\n                            };\n                          }();\n\n                          _context2.prev = 2;\n                          getPoolsPromise = getPools();\n                          timerPromise = timeout.set(_this.timeout).then(function () {\n                            throw new Error(\"Timed out getting pools from subgraph: \".concat(_this.timeout));\n                          });\n                          _context2.next = 7;\n                          return Promise.race([getPoolsPromise, timerPromise]);\n\n                        case 7:\n                          pools = _context2.sent;\n                          return _context2.abrupt(\"return\");\n\n                        case 11:\n                          _context2.prev = 11;\n                          _context2.t0 = _context2[\"catch\"](2);\n                          throw _context2.t0;\n\n                        case 14:\n                          _context2.prev = 14;\n                          timeout.clear();\n                          return _context2.finish(14);\n\n                        case 17:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2, null, [[2, 11, 14, 17]]);\n                })), {\n                  retries: this.retries,\n                  onRetry: function onRetry(err, retry) {\n                    if (_this.rollback && blockNumber && _.includes(err.message, 'indexed up to')) {\n                      blockNumber = blockNumber - 10;\n                      log.info(\"Detected subgraph indexing error. Rolled back block number to: \".concat(blockNumber));\n                    }\n\n                    pools = [];\n                    log.info({\n                      err: err\n                    }, \"Failed to get pools from subgraph. Retry attempt: \".concat(retry));\n                  }\n                });\n\n              case 13:\n                poolsSanitized = pools.filter(function (pool) {\n                  return parseInt(pool.liquidity) > 0;\n                }).map(function (pool) {\n                  var totalValueLockedETH = pool.totalValueLockedETH,\n                      totalValueLockedUSD = pool.totalValueLockedUSD,\n                      rest = _objectWithoutProperties(pool, _excluded);\n\n                  return _objectSpread(_objectSpread({}, rest), {}, {\n                    id: pool.id.toLowerCase(),\n                    token0: {\n                      id: pool.token0.id.toLowerCase()\n                    },\n                    token1: {\n                      id: pool.token1.id.toLowerCase()\n                    },\n                    tvlETH: parseFloat(totalValueLockedETH),\n                    tvlUSD: parseFloat(totalValueLockedUSD)\n                  });\n                });\n                log.info(\"Got \".concat(pools.length, \" V3 pools from the subgraph. \").concat(poolsSanitized.length, \" after filtering\"));\n                return _context3.abrupt(\"return\", poolsSanitized);\n\n              case 16:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getPools(_x, _x2, _x3) {\n        return _getPools.apply(this, arguments);\n      }\n\n      return getPools;\n    }()\n  }]);\n\n  return V3SubgraphProvider;\n}();","map":{"version":3,"sources":["../../../../../src/providers/v3/subgraph-provider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { default as retry } from 'async-retry';\nimport Timeout from 'await-timeout';\nimport { gql, GraphQLClient } from 'graphql-request';\nimport _ from 'lodash';\nimport { ChainId } from '../../util/chains';\nimport { log } from '../../util/log';\nexport const printV3SubgraphPool = (s) => `${s.token0.id}/${s.token1.id}/${s.feeTier}`;\nexport const printV2SubgraphPool = (s) => `${s.token0.id}/${s.token1.id}`;\nconst SUBGRAPH_URL_BY_CHAIN = {\n    [ChainId.MAINNET]: 'https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v3',\n    [ChainId.RINKEBY]: 'https://api.thegraph.com/subgraphs/name/ianlapham/uniswap-v3-rinkeby',\n    [ChainId.OPTIMISM]: 'https://api.thegraph.com/subgraphs/name/ianlapham/uniswap-optmism-regen',\n    [ChainId.ARBITRUM_ONE]: 'https://api.thegraph.com/subgraphs/name/ianlapham/arbitrum-minimal',\n    [ChainId.POLYGON]: 'https://api.thegraph.com/subgraphs/name/ianlapham/uniswap-v3-polygon',\n};\nconst PAGE_SIZE = 1000; // 1k is max possible query size from subgraph.\nexport class V3SubgraphProvider {\n    constructor(chainId, retries = 2, timeout = 30000, rollback = true) {\n        this.chainId = chainId;\n        this.retries = retries;\n        this.timeout = timeout;\n        this.rollback = rollback;\n        const subgraphUrl = SUBGRAPH_URL_BY_CHAIN[this.chainId];\n        if (!subgraphUrl) {\n            throw new Error(`No subgraph url for chain id: ${this.chainId}`);\n        }\n        this.client = new GraphQLClient(subgraphUrl);\n    }\n    async getPools(_tokenIn, _tokenOut, providerConfig) {\n        let blockNumber = (providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber)\n            ? await providerConfig.blockNumber\n            : undefined;\n        const query = gql `\n      query getPools($pageSize: Int!, $id: String) {\n        pools(\n          first: $pageSize\n          ${blockNumber ? `block: { number: ${blockNumber} }` : ``}\n          where: { id_gt: $id }\n        ) {\n          id\n          token0 {\n            symbol\n            id\n          }\n          token1 {\n            symbol\n            id\n          }\n          feeTier\n          liquidity\n          totalValueLockedUSD\n          totalValueLockedETH\n        }\n      }\n    `;\n        let pools = [];\n        log.info(`Getting V3 pools from the subgraph with page size ${PAGE_SIZE}${(providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber)\n            ? ` as of block ${providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber}`\n            : ''}.`);\n        await retry(async () => {\n            const timeout = new Timeout();\n            const getPools = async () => {\n                let lastId = '';\n                let pools = [];\n                let poolsPage = [];\n                do {\n                    const poolsResult = await this.client.request(query, {\n                        pageSize: PAGE_SIZE,\n                        id: lastId,\n                    });\n                    poolsPage = poolsResult.pools;\n                    pools = pools.concat(poolsPage);\n                    lastId = pools[pools.length - 1].id;\n                } while (poolsPage.length > 0);\n                return pools;\n            };\n            try {\n                const getPoolsPromise = getPools();\n                const timerPromise = timeout.set(this.timeout).then(() => {\n                    throw new Error(`Timed out getting pools from subgraph: ${this.timeout}`);\n                });\n                pools = await Promise.race([getPoolsPromise, timerPromise]);\n                return;\n            }\n            catch (err) {\n                throw err;\n            }\n            finally {\n                timeout.clear();\n            }\n        }, {\n            retries: this.retries,\n            onRetry: (err, retry) => {\n                if (this.rollback &&\n                    blockNumber &&\n                    _.includes(err.message, 'indexed up to')) {\n                    blockNumber = blockNumber - 10;\n                    log.info(`Detected subgraph indexing error. Rolled back block number to: ${blockNumber}`);\n                }\n                pools = [];\n                log.info({ err }, `Failed to get pools from subgraph. Retry attempt: ${retry}`);\n            },\n        });\n        const poolsSanitized = pools\n            .filter((pool) => parseInt(pool.liquidity) > 0)\n            .map((pool) => {\n            const { totalValueLockedETH, totalValueLockedUSD, ...rest } = pool;\n            return {\n                ...rest,\n                id: pool.id.toLowerCase(),\n                token0: {\n                    id: pool.token0.id.toLowerCase(),\n                },\n                token1: {\n                    id: pool.token1.id.toLowerCase(),\n                },\n                tvlETH: parseFloat(totalValueLockedETH),\n                tvlUSD: parseFloat(totalValueLockedUSD),\n            };\n        });\n        log.info(`Got ${pools.length} V3 pools from the subgraph. ${poolsSanitized.length} after filtering`);\n        return poolsSanitized;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViZ3JhcGgtcHJvdmlkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvcHJvdmlkZXJzL3YzL3N1YmdyYXBoLXByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxPQUFPLElBQUksS0FBSyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQy9DLE9BQU8sT0FBTyxNQUFNLGVBQWUsQ0FBQztBQUNwQyxPQUFPLEVBQUUsR0FBRyxFQUFFLGFBQWEsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3JELE9BQU8sQ0FBQyxNQUFNLFFBQVEsQ0FBQztBQUN2QixPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDNUMsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBa0NyQyxNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRyxDQUFDLENBQWlCLEVBQUUsRUFBRSxDQUN2RCxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxNQUFNLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztBQUUvQyxNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRyxDQUFDLENBQWlCLEVBQUUsRUFBRSxDQUN2RCxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLENBQUM7QUFFbEMsTUFBTSxxQkFBcUIsR0FBc0M7SUFDL0QsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQ2YsNERBQTREO0lBQzlELENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUNmLHNFQUFzRTtJQUN4RSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsRUFDaEIseUVBQXlFO0lBQzNFLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxFQUNwQixvRUFBb0U7SUFDdEUsQ0FBQyxPQUFPLENBQUMs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"]},"metadata":{},"sourceType":"module"}