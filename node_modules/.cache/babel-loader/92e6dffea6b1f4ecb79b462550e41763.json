{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _defineProperty from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{arrayify}from'@ethersproject/bytes';import{parseBytes32String}from'@ethersproject/strings';import{Token}from'@uniswap/sdk-core';import{CHAIN_INFO,L2_CHAIN_IDS,SupportedChainId}from'constants/chains';import{useMemo}from'react';import{createTokenFilterFunction}from'../components/SearchModal/filtering';import{nativeOnChain}from'../constants/tokens';import{useAllLists,useCombinedActiveList,useInactiveListUrls}from'../state/lists/hooks';import{WrappedTokenInfo}from'../state/lists/wrappedTokenInfo';import{NEVER_RELOAD,useSingleCallResult}from'../state/multicall/hooks';import{useUserAddedTokens}from'../state/user/hooks';import{isAddress}from'../utils';import{useUnsupportedTokenList}from'./../state/lists/hooks';import{useBytes32TokenContract,useTokenContract}from'./useContract';import{useActiveWeb3React}from'./web3';// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap,includeUserAdded){var _useActiveWeb3React=useActiveWeb3React(),chainId=_useActiveWeb3React.chainId;var userAddedTokens=useUserAddedTokens();return useMemo(function(){var _tokenMap$chainId;if(!chainId)return{};// reduce to just tokens\nvar mapWithoutUrls=Object.keys((_tokenMap$chainId=tokenMap[chainId])!==null&&_tokenMap$chainId!==void 0?_tokenMap$chainId:{}).reduce(function(newMap,address){newMap[address]=tokenMap[chainId][address].token;return newMap;},{});if(includeUserAdded){return userAddedTokens// reduce into all ALL_TOKENS filtered by the current chain\n.reduce(function(tokenMap,token){tokenMap[token.address]=token;return tokenMap;},// must make a copy because reduce modifies the map, and we do not\n// want to make a copy in every iteration\n_objectSpread({},mapWithoutUrls));}return mapWithoutUrls;},[chainId,userAddedTokens,tokenMap,includeUserAdded]);}export function useAllTokens(){var allTokens=useCombinedActiveList();return useTokensFromMap(allTokens,true);}export function useUnsupportedTokens(){var _useActiveWeb3React2=useActiveWeb3React(),chainId=_useActiveWeb3React2.chainId;var listsByUrl=useAllLists();var unsupportedTokensMap=useUnsupportedTokenList();var unsupportedTokens=useTokensFromMap(unsupportedTokensMap,false);// checks the default L2 lists to see if `bridgeInfo` has an L1 address value that is unsupported\nvar l2InferredBlockedTokens=useMemo(function(){if(!chainId||!L2_CHAIN_IDS.includes(chainId)){return{};}if(!listsByUrl){return{};}var listUrl=CHAIN_INFO[chainId].defaultListUrl;var list=listsByUrl[listUrl].current;if(!list){return{};}var unsupportedSet=new Set(Object.keys(unsupportedTokens));return list.tokens.reduce(function(acc,tokenInfo){var _tokenInfo$extensions;var bridgeInfo=(_tokenInfo$extensions=tokenInfo.extensions)===null||_tokenInfo$extensions===void 0?void 0:_tokenInfo$extensions.bridgeInfo;if(bridgeInfo&&bridgeInfo[SupportedChainId.MAINNET]&&bridgeInfo[SupportedChainId.MAINNET].tokenAddress&&unsupportedSet.has(bridgeInfo[SupportedChainId.MAINNET].tokenAddress)){var _address=bridgeInfo[SupportedChainId.MAINNET].tokenAddress;// don't rely on decimals--it's possible that a token could be bridged w/ different decimals on the L2\nreturn _objectSpread(_objectSpread({},acc),{},_defineProperty({},_address,new Token(SupportedChainId.MAINNET,_address,tokenInfo.decimals)));}return acc;},{});},[chainId,listsByUrl,unsupportedTokens]);return _objectSpread(_objectSpread({},unsupportedTokens),l2InferredBlockedTokens);}export function useSearchInactiveTokenLists(search){var minResults=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;var lists=useAllLists();var inactiveUrls=useInactiveListUrls();var _useActiveWeb3React3=useActiveWeb3React(),chainId=_useActiveWeb3React3.chainId;var activeTokens=useAllTokens();return useMemo(function(){if(!search||search.trim().length===0)return[];var tokenFilter=createTokenFilterFunction(search);var result=[];var addressSet={};var _iterator=_createForOfIteratorHelper(inactiveUrls),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var url=_step.value;var list=lists[url].current;if(!list)continue;var _iterator2=_createForOfIteratorHelper(list.tokens),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var tokenInfo=_step2.value;if(tokenInfo.chainId===chainId&&tokenFilter(tokenInfo)){var wrapped=new WrappedTokenInfo(tokenInfo,list);if(!(wrapped.address in activeTokens)&&!addressSet[wrapped.address]){addressSet[wrapped.address]=true;result.push(wrapped);if(result.length>=minResults)return result;}}}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}}}catch(err){_iterator.e(err);}finally{_iterator.f();}return result;},[activeTokens,chainId,inactiveUrls,lists,minResults,search]);}export function useIsTokenActive(token){var activeTokens=useAllTokens();if(!activeTokens||!token){return false;}return!!activeTokens[token.address];}// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency){var userAddedTokens=useUserAddedTokens();if(!currency){return false;}return!!userAddedTokens.find(function(token){return currency.equals(token);});}// parse a name or symbol from a token response\nvar BYTES32_REGEX=/^0x[a-fA-F0-9]{64}$/;function parseStringOrBytes32(str,bytes32,defaultValue){return str&&str.length>0?str:// need to check for proper bytes string and valid terminator\nbytes32&&BYTES32_REGEX.test(bytes32)&&arrayify(bytes32)[31]===0?parseBytes32String(bytes32):defaultValue;}// undefined if invalid or does not exist\n// null if loading or null was passed\n// otherwise returns the token\nexport function useToken(tokenAddress){var _useActiveWeb3React4=useActiveWeb3React(),chainId=_useActiveWeb3React4.chainId;var tokens=useAllTokens();var address=isAddress(tokenAddress);var tokenContract=useTokenContract(address?address:undefined,false);var tokenContractBytes32=useBytes32TokenContract(address?address:undefined,false);var token=address?tokens[address]:undefined;var tokenName=useSingleCallResult(token?undefined:tokenContract,'name',undefined,NEVER_RELOAD);var tokenNameBytes32=useSingleCallResult(token?undefined:tokenContractBytes32,'name',undefined,NEVER_RELOAD);var symbol=useSingleCallResult(token?undefined:tokenContract,'symbol',undefined,NEVER_RELOAD);var symbolBytes32=useSingleCallResult(token?undefined:tokenContractBytes32,'symbol',undefined,NEVER_RELOAD);var decimals=useSingleCallResult(token?undefined:tokenContract,'decimals',undefined,NEVER_RELOAD);return useMemo(function(){if(token)return token;if(tokenAddress===null)return null;if(!chainId||!address)return undefined;if(decimals.loading||symbol.loading||tokenName.loading)return null;if(decimals.result){var _symbol$result,_symbolBytes32$result,_tokenName$result,_tokenNameBytes32$res;return new Token(chainId,address,decimals.result[0],parseStringOrBytes32((_symbol$result=symbol.result)===null||_symbol$result===void 0?void 0:_symbol$result[0],(_symbolBytes32$result=symbolBytes32.result)===null||_symbolBytes32$result===void 0?void 0:_symbolBytes32$result[0],'UNKNOWN'),parseStringOrBytes32((_tokenName$result=tokenName.result)===null||_tokenName$result===void 0?void 0:_tokenName$result[0],(_tokenNameBytes32$res=tokenNameBytes32.result)===null||_tokenNameBytes32$res===void 0?void 0:_tokenNameBytes32$res[0],'Unknown Token'));}return undefined;},[address,chainId,decimals.loading,decimals.result,symbol.loading,symbol.result,symbolBytes32.result,token,tokenAddress,tokenName.loading,tokenName.result,tokenNameBytes32.result]);}export function useNativeCurrency(){var _useActiveWeb3React5=useActiveWeb3React(),chainId=_useActiveWeb3React5.chainId;return useMemo(function(){return chainId?nativeOnChain(chainId):// display mainnet when not connected\nnativeOnChain(SupportedChainId.MAINNET);},[chainId]);}export function useCurrency(currencyId){var _wrappedNative$addres;var nativeCurrency=useNativeCurrency();var isNative=Boolean(nativeCurrency&&(currencyId===null||currencyId===void 0?void 0:currencyId.toUpperCase())==='ETH');var token=useToken(isNative?undefined:currencyId);if(currencyId===null||currencyId===undefined)return currencyId;// this case so we use our builtin wrapped token instead of wrapped tokens on token lists\nvar wrappedNative=nativeCurrency===null||nativeCurrency===void 0?void 0:nativeCurrency.wrapped;if((wrappedNative===null||wrappedNative===void 0?void 0:(_wrappedNative$addres=wrappedNative.address)===null||_wrappedNative$addres===void 0?void 0:_wrappedNative$addres.toUpperCase())===(currencyId===null||currencyId===void 0?void 0:currencyId.toUpperCase()))return wrappedNative;return isNative?nativeCurrency:token;}","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/hooks/Tokens.ts"],"names":["arrayify","parseBytes32String","Token","CHAIN_INFO","L2_CHAIN_IDS","SupportedChainId","useMemo","createTokenFilterFunction","nativeOnChain","useAllLists","useCombinedActiveList","useInactiveListUrls","WrappedTokenInfo","NEVER_RELOAD","useSingleCallResult","useUserAddedTokens","isAddress","useUnsupportedTokenList","useBytes32TokenContract","useTokenContract","useActiveWeb3React","useTokensFromMap","tokenMap","includeUserAdded","chainId","userAddedTokens","mapWithoutUrls","Object","keys","reduce","newMap","address","token","useAllTokens","allTokens","useUnsupportedTokens","listsByUrl","unsupportedTokensMap","unsupportedTokens","l2InferredBlockedTokens","includes","listUrl","defaultListUrl","list","current","unsupportedSet","Set","tokens","acc","tokenInfo","bridgeInfo","extensions","MAINNET","tokenAddress","has","decimals","useSearchInactiveTokenLists","search","minResults","lists","inactiveUrls","activeTokens","trim","length","tokenFilter","result","addressSet","url","wrapped","push","useIsTokenActive","useIsUserAddedToken","currency","find","equals","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","test","useToken","tokenContract","undefined","tokenContractBytes32","tokenName","tokenNameBytes32","symbol","symbolBytes32","loading","useNativeCurrency","useCurrency","currencyId","nativeCurrency","isNative","Boolean","toUpperCase","wrappedNative"],"mappings":"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","sourcesContent":["import { arrayify } from '@ethersproject/bytes'\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, Token } from '@uniswap/sdk-core'\nimport { CHAIN_INFO, L2_CHAIN_IDS, SupportedChainId, SupportedL2ChainId } from 'constants/chains'\nimport { useMemo } from 'react'\n\nimport { createTokenFilterFunction } from '../components/SearchModal/filtering'\nimport { nativeOnChain } from '../constants/tokens'\nimport { useAllLists, useCombinedActiveList, useInactiveListUrls } from '../state/lists/hooks'\nimport { WrappedTokenInfo } from '../state/lists/wrappedTokenInfo'\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport { useUserAddedTokens } from '../state/user/hooks'\nimport { isAddress } from '../utils'\nimport { TokenAddressMap, useUnsupportedTokenList } from './../state/lists/hooks'\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\nimport { useActiveWeb3React } from './web3'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId] ?? {}).reduce<{ [address: string]: Token }>(\n      (newMap, address) => {\n        newMap[address] = tokenMap[chainId][address].token\n        return newMap\n      },\n      {}\n    )\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap, token) => {\n              tokenMap[token.address] = token\n              return tokenMap\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls }\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\ntype BridgeInfo = Record<\n  SupportedChainId,\n  {\n    tokenAddress: string\n    originBridgeAddress: string\n    destBridgeAddress: string\n  }\n>\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const listsByUrl = useAllLists()\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  const unsupportedTokens = useTokensFromMap(unsupportedTokensMap, false)\n\n  // checks the default L2 lists to see if `bridgeInfo` has an L1 address value that is unsupported\n  const l2InferredBlockedTokens: typeof unsupportedTokens = useMemo(() => {\n    if (!chainId || !L2_CHAIN_IDS.includes(chainId)) {\n      return {}\n    }\n\n    if (!listsByUrl) {\n      return {}\n    }\n\n    const listUrl = CHAIN_INFO[chainId as SupportedL2ChainId].defaultListUrl\n    const { current: list } = listsByUrl[listUrl]\n    if (!list) {\n      return {}\n    }\n\n    const unsupportedSet = new Set(Object.keys(unsupportedTokens))\n\n    return list.tokens.reduce((acc, tokenInfo) => {\n      const bridgeInfo = tokenInfo.extensions?.bridgeInfo as unknown as BridgeInfo\n      if (\n        bridgeInfo &&\n        bridgeInfo[SupportedChainId.MAINNET] &&\n        bridgeInfo[SupportedChainId.MAINNET].tokenAddress &&\n        unsupportedSet.has(bridgeInfo[SupportedChainId.MAINNET].tokenAddress)\n      ) {\n        const address = bridgeInfo[SupportedChainId.MAINNET].tokenAddress\n        // don't rely on decimals--it's possible that a token could be bridged w/ different decimals on the L2\n        return { ...acc, [address]: new Token(SupportedChainId.MAINNET, address, tokenInfo.decimals) }\n      }\n      return acc\n    }, {})\n  }, [chainId, listsByUrl, unsupportedTokens])\n\n  return { ...unsupportedTokens, ...l2InferredBlockedTokens }\n}\n\nexport function useSearchInactiveTokenLists(search: string | undefined, minResults = 10): WrappedTokenInfo[] {\n  const lists = useAllLists()\n  const inactiveUrls = useInactiveListUrls()\n  const { chainId } = useActiveWeb3React()\n  const activeTokens = useAllTokens()\n  return useMemo(() => {\n    if (!search || search.trim().length === 0) return []\n    const tokenFilter = createTokenFilterFunction(search)\n    const result: WrappedTokenInfo[] = []\n    const addressSet: { [address: string]: true } = {}\n    for (const url of inactiveUrls) {\n      const list = lists[url].current\n      if (!list) continue\n      for (const tokenInfo of list.tokens) {\n        if (tokenInfo.chainId === chainId && tokenFilter(tokenInfo)) {\n          const wrapped: WrappedTokenInfo = new WrappedTokenInfo(tokenInfo, list)\n          if (!(wrapped.address in activeTokens) && !addressSet[wrapped.address]) {\n            addressSet[wrapped.address] = true\n            result.push(wrapped)\n            if (result.length >= minResults) return result\n          }\n        }\n      }\n    }\n    return result\n  }, [activeTokens, chainId, inactiveUrls, lists, minResults, search])\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currency.equals(token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading or null was passed\n// otherwise returns the token\nexport function useToken(tokenAddress?: string | null): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address ? address : undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address ? address : undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (tokenAddress === null) return null\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token')\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenAddress,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useNativeCurrency(): Currency {\n  const { chainId } = useActiveWeb3React()\n  return useMemo(\n    () =>\n      chainId\n        ? nativeOnChain(chainId)\n        : // display mainnet when not connected\n          nativeOnChain(SupportedChainId.MAINNET),\n    [chainId]\n  )\n}\n\nexport function useCurrency(currencyId: string | null | undefined): Currency | null | undefined {\n  const nativeCurrency = useNativeCurrency()\n  const isNative = Boolean(nativeCurrency && currencyId?.toUpperCase() === 'ETH')\n  const token = useToken(isNative ? undefined : currencyId)\n\n  if (currencyId === null || currencyId === undefined) return currencyId\n\n  // this case so we use our builtin wrapped token instead of wrapped tokens on token lists\n  const wrappedNative = nativeCurrency?.wrapped\n  if (wrappedNative?.address?.toUpperCase() === currencyId?.toUpperCase()) return wrappedNative\n\n  return isNative ? nativeCurrency : token\n}\n"]},"metadata":{},"sourceType":"module"}