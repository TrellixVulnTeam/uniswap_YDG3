{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { Token } from '@uniswap/sdk-core';\nimport { SOCKS_CONTROLLER_ADDRESSES } from 'constants/addresses';\nimport { SupportedChainId } from 'constants/chains';\nimport { useMemo } from 'react';\nimport { useTokenBalance } from 'state/wallet/hooks';\nimport { useActiveWeb3React } from './web3'; // technically a 721, not an ERC20, but suffices for our purposes\n\nconst SOCKS = new Token(SupportedChainId.MAINNET, SOCKS_CONTROLLER_ADDRESSES[SupportedChainId.MAINNET], 0);\nexport function useHasSocks() {\n  _s();\n\n  const {\n    account,\n    chainId\n  } = useActiveWeb3React();\n  const balance = useTokenBalance(account !== null && account !== void 0 ? account : undefined, chainId === SupportedChainId.MAINNET ? SOCKS : undefined);\n  return useMemo(() => Boolean(balance === null || balance === void 0 ? void 0 : balance.greaterThan(0)), [balance]);\n}\n\n_s(useHasSocks, \"C7VtLT/72RCbKlatiPMjwsyfUQo=\", false, function () {\n  return [useActiveWeb3React, useTokenBalance];\n});","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/hooks/useSocksBalance.ts"],"names":["Token","SOCKS_CONTROLLER_ADDRESSES","SupportedChainId","useMemo","useTokenBalance","useActiveWeb3React","SOCKS","MAINNET","useHasSocks","account","chainId","balance","undefined","Boolean","greaterThan"],"mappings":";;AAAA,SAASA,KAAT,QAAsB,mBAAtB;AACA,SAASC,0BAAT,QAA2C,qBAA3C;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,eAAT,QAAgC,oBAAhC;AAEA,SAASC,kBAAT,QAAmC,QAAnC,C,CAEA;;AACA,MAAMC,KAAK,GAAG,IAAIN,KAAJ,CAAUE,gBAAgB,CAACK,OAA3B,EAAoCN,0BAA0B,CAACC,gBAAgB,CAACK,OAAlB,CAA9D,EAA0F,CAA1F,CAAd;AAEA,OAAO,SAASC,WAAT,GAA4C;AAAA;;AACjD,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAuBL,kBAAkB,EAA/C;AAEA,QAAMM,OAAO,GAAGP,eAAe,CAACK,OAAD,aAACA,OAAD,cAACA,OAAD,GAAYG,SAAZ,EAAuBF,OAAO,KAAKR,gBAAgB,CAACK,OAA7B,GAAuCD,KAAvC,GAA+CM,SAAtE,CAA/B;AAEA,SAAOT,OAAO,CAAC,MAAMU,OAAO,CAACF,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEG,WAAT,CAAqB,CAArB,CAAD,CAAd,EAAyC,CAACH,OAAD,CAAzC,CAAd;AACD;;GANeH,W;UACeH,kB,EAEbD,e","sourcesContent":["import { Token } from '@uniswap/sdk-core'\nimport { SOCKS_CONTROLLER_ADDRESSES } from 'constants/addresses'\nimport { SupportedChainId } from 'constants/chains'\nimport { useMemo } from 'react'\nimport { useTokenBalance } from 'state/wallet/hooks'\n\nimport { useActiveWeb3React } from './web3'\n\n// technically a 721, not an ERC20, but suffices for our purposes\nconst SOCKS = new Token(SupportedChainId.MAINNET, SOCKS_CONTROLLER_ADDRESSES[SupportedChainId.MAINNET], 0)\n\nexport function useHasSocks(): boolean | undefined {\n  const { account, chainId } = useActiveWeb3React()\n\n  const balance = useTokenBalance(account ?? undefined, chainId === SupportedChainId.MAINNET ? SOCKS : undefined)\n\n  return useMemo(() => Boolean(balance?.greaterThan(0)), [balance])\n}\n"]},"metadata":{},"sourceType":"module"}