{"ast":null,"code":"var _jsxFileName = \"/Users/safahi/Downloads/interface-4.30.1/src/state/multicall/updater.tsx\",\n    _s = $RefreshSig$();\n\nimport { useInterfaceMulticall } from '../../hooks/useContract';\nimport { useActiveWeb3React } from '../../hooks/web3';\nimport { useBlockNumber } from '../application/hooks';\nimport { multicall } from './instance'; // Create Updater wrappers that pull needed info from store\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Updater() {\n  _s();\n\n  const latestBlockNumber = useBlockNumber();\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const multicall2Contract = useInterfaceMulticall();\n  return /*#__PURE__*/_jsxDEV(multicall.Updater, {\n    chainId: chainId,\n    latestBlockNumber: latestBlockNumber,\n    contract: multicall2Contract\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Updater, \"c5IqrS5lwdhAgcVu1ooLdcKeCEM=\", false, function () {\n  return [useBlockNumber, useActiveWeb3React, useInterfaceMulticall];\n});\n\n_c = Updater;\n\nvar _c;\n\n$RefreshReg$(_c, \"Updater\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/state/multicall/updater.tsx"],"names":["useInterfaceMulticall","useActiveWeb3React","useBlockNumber","multicall","Updater","latestBlockNumber","chainId","multicall2Contract"],"mappings":";;;AAAA,SAASA,qBAAT,QAAsC,yBAAtC;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,SAAT,QAA0B,YAA1B,C,CAEA;;;AACA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAChC,QAAMC,iBAAiB,GAAGH,cAAc,EAAxC;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAcL,kBAAkB,EAAtC;AACA,QAAMM,kBAAkB,GAAGP,qBAAqB,EAAhD;AACA,sBAAO,QAAC,SAAD,CAAW,OAAX;AAAmB,IAAA,OAAO,EAAEM,OAA5B;AAAqC,IAAA,iBAAiB,EAAED,iBAAxD;AAA2E,IAAA,QAAQ,EAAEE;AAArF;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GALuBH,O;UACIF,c,EACND,kB,EACOD,qB;;;KAHLI,O","sourcesContent":["import { useInterfaceMulticall } from '../../hooks/useContract'\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport { useBlockNumber } from '../application/hooks'\nimport { multicall } from './instance'\n\n// Create Updater wrappers that pull needed info from store\nexport default function Updater() {\n  const latestBlockNumber = useBlockNumber()\n  const { chainId } = useActiveWeb3React()\n  const multicall2Contract = useInterfaceMulticall()\n  return <multicall.Updater chainId={chainId} latestBlockNumber={latestBlockNumber} contract={multicall2Contract} />\n}\n"]},"metadata":{},"sourceType":"module"}