{"ast":null,"code":"import { Protocol } from '@uniswap/router-sdk';\nimport { routeAmountsToString } from '@uniswap/smart-order-router';\n// from routing-api (https://github.com/Uniswap/routing-api/blob/main/lib/handlers/quote/quote.ts#L243-L311)\nexport function transformSwapRouteToGetQuoteResult(type, amount, {\n  quote,\n  quoteGasAdjusted,\n  route,\n  estimatedGasUsed,\n  estimatedGasUsedQuoteToken,\n  estimatedGasUsedUSD,\n  gasPriceWei,\n  methodParameters,\n  blockNumber\n}) {\n  const routeResponse = [];\n\n  for (const subRoute of route) {\n    const {\n      amount,\n      quote,\n      tokenPath\n    } = subRoute;\n\n    if (subRoute.protocol === Protocol.V3) {\n      const pools = subRoute.route.pools;\n      const curRoute = [];\n\n      for (let i = 0; i < pools.length; i++) {\n        const nextPool = pools[i];\n        const tokenIn = tokenPath[i];\n        const tokenOut = tokenPath[i + 1];\n        let edgeAmountIn = undefined;\n\n        if (i === 0) {\n          edgeAmountIn = type === 'exactIn' ? amount.quotient.toString() : quote.quotient.toString();\n        }\n\n        let edgeAmountOut = undefined;\n\n        if (i === pools.length - 1) {\n          edgeAmountOut = type === 'exactIn' ? quote.quotient.toString() : amount.quotient.toString();\n        }\n\n        curRoute.push({\n          type: 'v3-pool',\n          tokenIn: {\n            chainId: tokenIn.chainId,\n            decimals: tokenIn.decimals,\n            address: tokenIn.address,\n            symbol: tokenIn.symbol\n          },\n          tokenOut: {\n            chainId: tokenOut.chainId,\n            decimals: tokenOut.decimals,\n            address: tokenOut.address,\n            symbol: tokenOut.symbol\n          },\n          fee: nextPool.fee.toString(),\n          liquidity: nextPool.liquidity.toString(),\n          sqrtRatioX96: nextPool.sqrtRatioX96.toString(),\n          tickCurrent: nextPool.tickCurrent.toString(),\n          amountIn: edgeAmountIn,\n          amountOut: edgeAmountOut\n        });\n      }\n\n      routeResponse.push(curRoute);\n    } else if (subRoute.protocol === Protocol.V2) {\n      const pools = subRoute.route.pairs;\n      const curRoute = [];\n\n      for (let i = 0; i < pools.length; i++) {\n        const nextPool = pools[i];\n        const tokenIn = tokenPath[i];\n        const tokenOut = tokenPath[i + 1];\n        let edgeAmountIn = undefined;\n\n        if (i === 0) {\n          edgeAmountIn = type === 'exactIn' ? amount.quotient.toString() : quote.quotient.toString();\n        }\n\n        let edgeAmountOut = undefined;\n\n        if (i === pools.length - 1) {\n          edgeAmountOut = type === 'exactIn' ? quote.quotient.toString() : amount.quotient.toString();\n        }\n\n        const reserve0 = nextPool.reserve0;\n        const reserve1 = nextPool.reserve1;\n        curRoute.push({\n          type: 'v2-pool',\n          tokenIn: {\n            chainId: tokenIn.chainId,\n            decimals: tokenIn.decimals,\n            address: tokenIn.address,\n            symbol: tokenIn.symbol\n          },\n          tokenOut: {\n            chainId: tokenOut.chainId,\n            decimals: tokenOut.decimals,\n            address: tokenOut.address,\n            symbol: tokenOut.symbol\n          },\n          reserve0: {\n            token: {\n              chainId: reserve0.currency.wrapped.chainId,\n              decimals: reserve0.currency.wrapped.decimals,\n              address: reserve0.currency.wrapped.address,\n              symbol: reserve0.currency.wrapped.symbol\n            },\n            quotient: reserve0.quotient.toString()\n          },\n          reserve1: {\n            token: {\n              chainId: reserve1.currency.wrapped.chainId,\n              decimals: reserve1.currency.wrapped.decimals,\n              address: reserve1.currency.wrapped.address,\n              symbol: reserve1.currency.wrapped.symbol\n            },\n            quotient: reserve1.quotient.toString()\n          },\n          amountIn: edgeAmountIn,\n          amountOut: edgeAmountOut\n        });\n      }\n\n      routeResponse.push(curRoute);\n    }\n  }\n\n  const result = {\n    methodParameters,\n    blockNumber: blockNumber.toString(),\n    amount: amount.quotient.toString(),\n    amountDecimals: amount.toExact(),\n    quote: quote.quotient.toString(),\n    quoteDecimals: quote.toExact(),\n    quoteGasAdjusted: quoteGasAdjusted.quotient.toString(),\n    quoteGasAdjustedDecimals: quoteGasAdjusted.toExact(),\n    gasUseEstimateQuote: estimatedGasUsedQuoteToken.quotient.toString(),\n    gasUseEstimateQuoteDecimals: estimatedGasUsedQuoteToken.toExact(),\n    gasUseEstimate: estimatedGasUsed.toString(),\n    gasUseEstimateUSD: estimatedGasUsedUSD.toExact(),\n    gasPriceWei: gasPriceWei.toString(),\n    route: routeResponse,\n    routeString: routeAmountsToString(route)\n  };\n  return result;\n}","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/utils/transformSwapRouteToGetQuoteResult.ts"],"names":["Protocol","routeAmountsToString","transformSwapRouteToGetQuoteResult","type","amount","quote","quoteGasAdjusted","route","estimatedGasUsed","estimatedGasUsedQuoteToken","estimatedGasUsedUSD","gasPriceWei","methodParameters","blockNumber","routeResponse","subRoute","tokenPath","protocol","V3","pools","curRoute","i","length","nextPool","tokenIn","tokenOut","edgeAmountIn","undefined","quotient","toString","edgeAmountOut","push","chainId","decimals","address","symbol","fee","liquidity","sqrtRatioX96","tickCurrent","amountIn","amountOut","V2","pairs","reserve0","reserve1","token","currency","wrapped","result","amountDecimals","toExact","quoteDecimals","quoteGasAdjustedDecimals","gasUseEstimateQuote","gasUseEstimateQuoteDecimals","gasUseEstimate","gasUseEstimateUSD","routeString"],"mappings":"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","sourcesContent":["import { Protocol } from '@uniswap/router-sdk'\nimport { Currency, CurrencyAmount } from '@uniswap/sdk-core'\nimport { routeAmountsToString, SwapRoute } from '@uniswap/smart-order-router'\nimport { GetQuoteResult, V2PoolInRoute, V3PoolInRoute } from 'state/routing/types'\n\n// from routing-api (https://github.com/Uniswap/routing-api/blob/main/lib/handlers/quote/quote.ts#L243-L311)\nexport function transformSwapRouteToGetQuoteResult(\n  type: 'exactIn' | 'exactOut',\n  amount: CurrencyAmount<Currency>,\n  {\n    quote,\n    quoteGasAdjusted,\n    route,\n    estimatedGasUsed,\n    estimatedGasUsedQuoteToken,\n    estimatedGasUsedUSD,\n    gasPriceWei,\n    methodParameters,\n    blockNumber,\n  }: SwapRoute\n): GetQuoteResult {\n  const routeResponse: Array<V3PoolInRoute[] | V2PoolInRoute[]> = []\n\n  for (const subRoute of route) {\n    const { amount, quote, tokenPath } = subRoute\n\n    if (subRoute.protocol === Protocol.V3) {\n      const pools = subRoute.route.pools\n      const curRoute: V3PoolInRoute[] = []\n      for (let i = 0; i < pools.length; i++) {\n        const nextPool = pools[i]\n        const tokenIn = tokenPath[i]\n        const tokenOut = tokenPath[i + 1]\n\n        let edgeAmountIn = undefined\n        if (i === 0) {\n          edgeAmountIn = type === 'exactIn' ? amount.quotient.toString() : quote.quotient.toString()\n        }\n\n        let edgeAmountOut = undefined\n        if (i === pools.length - 1) {\n          edgeAmountOut = type === 'exactIn' ? quote.quotient.toString() : amount.quotient.toString()\n        }\n\n        curRoute.push({\n          type: 'v3-pool',\n          tokenIn: {\n            chainId: tokenIn.chainId,\n            decimals: tokenIn.decimals,\n            address: tokenIn.address,\n            symbol: tokenIn.symbol,\n          },\n          tokenOut: {\n            chainId: tokenOut.chainId,\n            decimals: tokenOut.decimals,\n            address: tokenOut.address,\n            symbol: tokenOut.symbol,\n          },\n          fee: nextPool.fee.toString(),\n          liquidity: nextPool.liquidity.toString(),\n          sqrtRatioX96: nextPool.sqrtRatioX96.toString(),\n          tickCurrent: nextPool.tickCurrent.toString(),\n          amountIn: edgeAmountIn,\n          amountOut: edgeAmountOut,\n        })\n      }\n\n      routeResponse.push(curRoute)\n    } else if (subRoute.protocol === Protocol.V2) {\n      const pools = subRoute.route.pairs\n      const curRoute: V2PoolInRoute[] = []\n      for (let i = 0; i < pools.length; i++) {\n        const nextPool = pools[i]\n        const tokenIn = tokenPath[i]\n        const tokenOut = tokenPath[i + 1]\n\n        let edgeAmountIn = undefined\n        if (i === 0) {\n          edgeAmountIn = type === 'exactIn' ? amount.quotient.toString() : quote.quotient.toString()\n        }\n\n        let edgeAmountOut = undefined\n        if (i === pools.length - 1) {\n          edgeAmountOut = type === 'exactIn' ? quote.quotient.toString() : amount.quotient.toString()\n        }\n\n        const reserve0 = nextPool.reserve0\n        const reserve1 = nextPool.reserve1\n\n        curRoute.push({\n          type: 'v2-pool',\n          tokenIn: {\n            chainId: tokenIn.chainId,\n            decimals: tokenIn.decimals,\n            address: tokenIn.address,\n            symbol: tokenIn.symbol,\n          },\n          tokenOut: {\n            chainId: tokenOut.chainId,\n            decimals: tokenOut.decimals,\n            address: tokenOut.address,\n            symbol: tokenOut.symbol,\n          },\n          reserve0: {\n            token: {\n              chainId: reserve0.currency.wrapped.chainId,\n              decimals: reserve0.currency.wrapped.decimals,\n              address: reserve0.currency.wrapped.address,\n              symbol: reserve0.currency.wrapped.symbol,\n            },\n            quotient: reserve0.quotient.toString(),\n          },\n          reserve1: {\n            token: {\n              chainId: reserve1.currency.wrapped.chainId,\n              decimals: reserve1.currency.wrapped.decimals,\n              address: reserve1.currency.wrapped.address,\n              symbol: reserve1.currency.wrapped.symbol,\n            },\n            quotient: reserve1.quotient.toString(),\n          },\n          amountIn: edgeAmountIn,\n          amountOut: edgeAmountOut,\n        })\n      }\n\n      routeResponse.push(curRoute)\n    }\n  }\n\n  const result: GetQuoteResult = {\n    methodParameters,\n    blockNumber: blockNumber.toString(),\n    amount: amount.quotient.toString(),\n    amountDecimals: amount.toExact(),\n    quote: quote.quotient.toString(),\n    quoteDecimals: quote.toExact(),\n    quoteGasAdjusted: quoteGasAdjusted.quotient.toString(),\n    quoteGasAdjustedDecimals: quoteGasAdjusted.toExact(),\n    gasUseEstimateQuote: estimatedGasUsedQuoteToken.quotient.toString(),\n    gasUseEstimateQuoteDecimals: estimatedGasUsedQuoteToken.toExact(),\n    gasUseEstimate: estimatedGasUsed.toString(),\n    gasUseEstimateUSD: estimatedGasUsedUSD.toExact(),\n    gasPriceWei: gasPriceWei.toString(),\n    route: routeResponse,\n    routeString: routeAmountsToString(route),\n  }\n\n  return result\n}\n"]},"metadata":{},"sourceType":"module"}