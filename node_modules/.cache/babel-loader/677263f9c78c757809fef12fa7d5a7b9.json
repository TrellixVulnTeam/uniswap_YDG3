{"ast":null,"code":"import _styled from \"styled-components\";\n\nvar _jsxFileName = \"/Users/safahi/Downloads/interface-4.30.1/src/pages/Earn/Manage.tsx\",\n    _s = $RefreshSig$();\n\nimport { Trans } from \"@lingui/react\";\nimport { CurrencyAmount } from '@uniswap/sdk-core';\nimport JSBI from 'jsbi';\nimport { useCallback, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { CountUp } from 'use-count-up';\nimport { ButtonEmpty, ButtonPrimary } from '../../components/Button';\nimport { AutoColumn } from '../../components/Column';\nimport DoubleCurrencyLogo from '../../components/DoubleLogo';\nimport ClaimRewardModal from '../../components/earn/ClaimRewardModal';\nimport StakingModal from '../../components/earn/StakingModal';\nimport { CardBGImage, CardNoise, CardSection, DataCard } from '../../components/earn/styled';\nimport UnstakingModal from '../../components/earn/UnstakingModal';\nimport { RowBetween } from '../../components/Row';\nimport { BIG_INT_SECONDS_IN_WEEK, BIG_INT_ZERO } from '../../constants/misc';\nimport { useCurrency } from '../../hooks/Tokens';\nimport { useColor } from '../../hooks/useColor';\nimport usePrevious from '../../hooks/usePrevious';\nimport { useTotalSupply } from '../../hooks/useTotalSupply';\nimport useUSDCPrice from '../../hooks/useUSDCPrice';\nimport { useV2Pair } from '../../hooks/useV2Pairs';\nimport { useActiveWeb3React } from '../../hooks/web3';\nimport { useWalletModalToggle } from '../../state/application/hooks';\nimport { useStakingInfo } from '../../state/stake/hooks';\nimport { useTokenBalance } from '../../state/wallet/hooks';\nimport { ThemedText } from '../../theme';\nimport { currencyId } from '../../utils/currencyId';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PageWrapper = _styled(AutoColumn).withConfig({\n  displayName: \"Manage__PageWrapper\",\n  componentId: \"sc-j87c2z-0\"\n})([\"max-width:640px;width:100%;\"]);\n\nconst PositionInfo = _styled(AutoColumn).withConfig({\n  displayName: \"Manage__PositionInfo\",\n  componentId: \"sc-j87c2z-1\"\n})([\"position:relative;max-width:640px;width:100%;opacity:\", \";\"], ({\n  dim\n}) => dim ? 0.6 : 1);\n\nconst BottomSection = _styled(AutoColumn).withConfig({\n  displayName: \"Manage__BottomSection\",\n  componentId: \"sc-j87c2z-2\"\n})([\"border-radius:12px;width:100%;position:relative;\"]);\n\nconst StyledDataCard = _styled(DataCard).withConfig({\n  displayName: \"Manage__StyledDataCard\",\n  componentId: \"sc-j87c2z-3\"\n})([\"background:radial-gradient(76.02% 75.41% at 1.84% 0%,#1e1a31 0%,#3d51a5 100%);z-index:2;box-shadow:0px 4px 10px rgba(0,0,0,0.1);background:\", \";\"], ({\n  theme,\n  bgColor,\n  showBackground\n}) => `radial-gradient(91.85% 100% at 1.84% 0%, ${bgColor} 0%,  ${showBackground ? theme.black : theme.bg5} 100%) `);\n\nconst StyledBottomCard = _styled(DataCard).withConfig({\n  displayName: \"Manage__StyledBottomCard\",\n  componentId: \"sc-j87c2z-4\"\n})([\"background:\", \";opacity:\", \";margin-top:-40px;padding:0 1.25rem 1rem 1.25rem;padding-top:32px;z-index:1;\"], ({\n  theme\n}) => theme.bg3, ({\n  dim\n}) => dim ? 0.4 : 1);\n\nconst PoolData = _styled(DataCard).withConfig({\n  displayName: \"Manage__PoolData\",\n  componentId: \"sc-j87c2z-5\"\n})([\"background:none;border:1px solid \", \";padding:1rem;z-index:1;\"], ({\n  theme\n}) => theme.bg4);\n\nconst VoteCard = _styled(DataCard).withConfig({\n  displayName: \"Manage__VoteCard\",\n  componentId: \"sc-j87c2z-6\"\n})([\"background:radial-gradient(76.02% 75.41% at 1.84% 0%,#27ae60 0%,#000000 100%);overflow:hidden;\"]);\n\nconst DataRow = _styled(RowBetween).withConfig({\n  displayName: \"Manage__DataRow\",\n  componentId: \"sc-j87c2z-7\"\n})([\"justify-content:center;gap:12px;\", \";\"], ({\n  theme\n}) => theme.mediaWidth.upToSmall`\n    flex-direction: column;\n    gap: 12px;\n  `);\n\nexport default function Manage({\n  match: {\n    params: {\n      currencyIdA,\n      currencyIdB\n    }\n  }\n}) {\n  _s();\n\n  var _ref, _ref2, _useStakingInfo, _stakingInfo$stakedAm, _stakingInfo$stakedAm2, _stakingInfo$stakedAm3, _stakingInfo$earnedAm, _stakingInfo$earnedAm2, _usePrevious, _valueOfTotalStakedAm, _valueOfTotalStakedAm2, _stakingInfo$totalRew, _stakingInfo$totalRew2, _stakingInfo$stakedAm4, _stakingInfo$stakedAm5, _stakingInfo$stakedAm6, _stakingInfo$earnedAm3, _stakingInfo$rewardRa, _stakingInfo$rewardRa2, _stakingInfo$stakedAm7, _stakingInfo$stakedAm8;\n\n  const {\n    account\n  } = useActiveWeb3React(); // get currencies and pair\n\n  const [currencyA, currencyB] = [useCurrency(currencyIdA), useCurrency(currencyIdB)];\n  const tokenA = (_ref = currencyA !== null && currencyA !== void 0 ? currencyA : undefined) === null || _ref === void 0 ? void 0 : _ref.wrapped;\n  const tokenB = (_ref2 = currencyB !== null && currencyB !== void 0 ? currencyB : undefined) === null || _ref2 === void 0 ? void 0 : _ref2.wrapped;\n  const [, stakingTokenPair] = useV2Pair(tokenA, tokenB);\n  const stakingInfo = (_useStakingInfo = useStakingInfo(stakingTokenPair)) === null || _useStakingInfo === void 0 ? void 0 : _useStakingInfo[0]; // detect existing unstaked LP position to show add button if none found\n\n  const userLiquidityUnstaked = useTokenBalance(account !== null && account !== void 0 ? account : undefined, stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$stakedAm = stakingInfo.stakedAmount) === null || _stakingInfo$stakedAm === void 0 ? void 0 : _stakingInfo$stakedAm.currency);\n  const showAddLiquidityButton = Boolean((stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$stakedAm2 = stakingInfo.stakedAmount) === null || _stakingInfo$stakedAm2 === void 0 ? void 0 : _stakingInfo$stakedAm2.equalTo('0')) && (userLiquidityUnstaked === null || userLiquidityUnstaked === void 0 ? void 0 : userLiquidityUnstaked.equalTo('0'))); // toggle for staking modal and unstaking modal\n\n  const [showStakingModal, setShowStakingModal] = useState(false);\n  const [showUnstakingModal, setShowUnstakingModal] = useState(false);\n  const [showClaimRewardModal, setShowClaimRewardModal] = useState(false); // fade cards if nothing staked or nothing earned yet\n\n  const disableTop = !(stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.stakedAmount) || stakingInfo.stakedAmount.equalTo(JSBI.BigInt(0));\n  const token = (currencyA === null || currencyA === void 0 ? void 0 : currencyA.isNative) ? tokenB : tokenA;\n  const WETH = (currencyA === null || currencyA === void 0 ? void 0 : currencyA.isNative) ? tokenA : tokenB;\n  const backgroundColor = useColor(token); // get WETH value of staked LP tokens\n\n  const totalSupplyOfStakingToken = useTotalSupply(stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$stakedAm3 = stakingInfo.stakedAmount) === null || _stakingInfo$stakedAm3 === void 0 ? void 0 : _stakingInfo$stakedAm3.currency);\n  let valueOfTotalStakedAmountInWETH;\n\n  if (totalSupplyOfStakingToken && stakingTokenPair && stakingInfo && WETH) {\n    // take the total amount of LP tokens staked, multiply by ETH value of all LP tokens, divide by all LP tokens\n    valueOfTotalStakedAmountInWETH = CurrencyAmount.fromRawAmount(WETH, JSBI.divide(JSBI.multiply(JSBI.multiply(stakingInfo.totalStakedAmount.quotient, stakingTokenPair.reserveOf(WETH).quotient), JSBI.BigInt(2) // this is b/c the value of LP shares are ~double the value of the WETH they entitle owner to\n    ), totalSupplyOfStakingToken.quotient));\n  }\n\n  const countUpAmount = (_stakingInfo$earnedAm = stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$earnedAm2 = stakingInfo.earnedAmount) === null || _stakingInfo$earnedAm2 === void 0 ? void 0 : _stakingInfo$earnedAm2.toFixed(6)) !== null && _stakingInfo$earnedAm !== void 0 ? _stakingInfo$earnedAm : '0';\n  const countUpAmountPrevious = (_usePrevious = usePrevious(countUpAmount)) !== null && _usePrevious !== void 0 ? _usePrevious : '0'; // get the USD value of staked WETH\n\n  const USDPrice = useUSDCPrice(WETH);\n  const valueOfTotalStakedAmountInUSDC = valueOfTotalStakedAmountInWETH && (USDPrice === null || USDPrice === void 0 ? void 0 : USDPrice.quote(valueOfTotalStakedAmountInWETH));\n  const toggleWalletModal = useWalletModalToggle();\n  const handleDepositClick = useCallback(() => {\n    if (account) {\n      setShowStakingModal(true);\n    } else {\n      toggleWalletModal();\n    }\n  }, [account, toggleWalletModal]);\n  return /*#__PURE__*/_jsxDEV(PageWrapper, {\n    gap: \"lg\",\n    justify: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n      style: {\n        gap: '24px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(ThemedText.MediumHeader, {\n        style: {\n          margin: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(Trans, {\n          id: \"{0}-{1} Liquidity Mining\",\n          values: {\n            0: currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol,\n            1: currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol\n          }\n        }, void 0, false, void 0, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DoubleCurrencyLogo, {\n        currency0: currencyA !== null && currencyA !== void 0 ? currencyA : undefined,\n        currency1: currencyB !== null && currencyB !== void 0 ? currencyB : undefined,\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataRow, {\n      style: {\n        gap: '24px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(PoolData, {\n        children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n          gap: \"sm\",\n          children: [/*#__PURE__*/_jsxDEV(ThemedText.Body, {\n            style: {\n              margin: 0\n            },\n            children: /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"Total deposits\"\n            }, void 0, false, void 0, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ThemedText.Body, {\n            fontSize: 24,\n            fontWeight: 500,\n            children: valueOfTotalStakedAmountInUSDC ? `$${valueOfTotalStakedAmountInUSDC.toFixed(0, {\n              groupSeparator: ','\n            })}` : `${(_valueOfTotalStakedAm = (_valueOfTotalStakedAm2 = valueOfTotalStakedAmountInWETH) === null || _valueOfTotalStakedAm2 === void 0 ? void 0 : _valueOfTotalStakedAm2.toSignificant(4, {\n              groupSeparator: ','\n            })) !== null && _valueOfTotalStakedAm !== void 0 ? _valueOfTotalStakedAm : '-'} ETH`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PoolData, {\n        children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n          gap: \"sm\",\n          children: [/*#__PURE__*/_jsxDEV(ThemedText.Body, {\n            style: {\n              margin: 0\n            },\n            children: /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"Pool Rate\"\n            }, void 0, false, void 0, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ThemedText.Body, {\n            fontSize: 24,\n            fontWeight: 500,\n            children: (stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.active) ? /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"{0} UNI / week\",\n              values: {\n                0: (_stakingInfo$totalRew = stakingInfo.totalRewardRate) === null || _stakingInfo$totalRew === void 0 ? void 0 : (_stakingInfo$totalRew2 = _stakingInfo$totalRew.multiply(BIG_INT_SECONDS_IN_WEEK)) === null || _stakingInfo$totalRew2 === void 0 ? void 0 : _stakingInfo$totalRew2.toFixed(0, {\n                  groupSeparator: ','\n                })\n              }\n            }, void 0, false, void 0, this) : /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"0 UNI / week\"\n            }, void 0, false, void 0, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), showAddLiquidityButton && /*#__PURE__*/_jsxDEV(VoteCard, {\n      children: [/*#__PURE__*/_jsxDEV(CardBGImage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CardNoise, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CardSection, {\n        children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n          gap: \"md\",\n          children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n            children: /*#__PURE__*/_jsxDEV(ThemedText.White, {\n              fontWeight: 600,\n              children: /*#__PURE__*/_jsxDEV(Trans, {\n                id: \"Step 1. Get UNI-V2 Liquidity tokens\"\n              }, void 0, false, void 0, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n            style: {\n              marginBottom: '1rem'\n            },\n            children: /*#__PURE__*/_jsxDEV(ThemedText.White, {\n              fontSize: 14,\n              children: /*#__PURE__*/_jsxDEV(Trans, {\n                id: \"UNI-V2 LP tokens are required. Once you've added liquidity to the {0}-{1} pool you can stake your liquidity tokens on this page.\",\n                values: {\n                  0: currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol,\n                  1: currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol\n                }\n              }, void 0, false, void 0, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n            padding: \"8px\",\n            $borderRadius: \"8px\",\n            width: 'fit-content',\n            as: Link,\n            to: `/add/${currencyA && currencyId(currencyA)}/${currencyB && currencyId(currencyB)}`,\n            children: /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"Add {0}-{1} liquidity\",\n              values: {\n                0: currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol,\n                1: currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol\n              }\n            }, void 0, false, void 0, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CardBGImage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CardNoise, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this), stakingInfo && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(StakingModal, {\n        isOpen: showStakingModal,\n        onDismiss: () => setShowStakingModal(false),\n        stakingInfo: stakingInfo,\n        userLiquidityUnstaked: userLiquidityUnstaked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(UnstakingModal, {\n        isOpen: showUnstakingModal,\n        onDismiss: () => setShowUnstakingModal(false),\n        stakingInfo: stakingInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ClaimRewardModal, {\n        isOpen: showClaimRewardModal,\n        onDismiss: () => setShowClaimRewardModal(false),\n        stakingInfo: stakingInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(PositionInfo, {\n      gap: \"lg\",\n      justify: \"center\",\n      dim: showAddLiquidityButton,\n      children: [/*#__PURE__*/_jsxDEV(BottomSection, {\n        gap: \"lg\",\n        justify: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(StyledDataCard, {\n          disabled: disableTop,\n          bgColor: backgroundColor,\n          showBackground: !showAddLiquidityButton,\n          children: /*#__PURE__*/_jsxDEV(CardSection, {\n            children: [/*#__PURE__*/_jsxDEV(CardBGImage, {\n              desaturate: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardNoise, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n              gap: \"md\",\n              children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n                children: /*#__PURE__*/_jsxDEV(ThemedText.White, {\n                  fontWeight: 600,\n                  children: /*#__PURE__*/_jsxDEV(Trans, {\n                    id: \"Your liquidity deposits\"\n                  }, void 0, false, void 0, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n                style: {\n                  alignItems: 'baseline'\n                },\n                children: [/*#__PURE__*/_jsxDEV(ThemedText.White, {\n                  fontSize: 36,\n                  fontWeight: 600,\n                  children: (_stakingInfo$stakedAm4 = stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$stakedAm5 = stakingInfo.stakedAmount) === null || _stakingInfo$stakedAm5 === void 0 ? void 0 : _stakingInfo$stakedAm5.toSignificant(6)) !== null && _stakingInfo$stakedAm4 !== void 0 ? _stakingInfo$stakedAm4 : '-'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ThemedText.White, {\n                  children: /*#__PURE__*/_jsxDEV(Trans, {\n                    id: \"UNI-V2 {0}-{1}\",\n                    values: {\n                      0: currencyA === null || currencyA === void 0 ? void 0 : currencyA.symbol,\n                      1: currencyB === null || currencyB === void 0 ? void 0 : currencyB.symbol\n                    }\n                  }, void 0, false, void 0, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledBottomCard, {\n          dim: stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$stakedAm6 = stakingInfo.stakedAmount) === null || _stakingInfo$stakedAm6 === void 0 ? void 0 : _stakingInfo$stakedAm6.equalTo(JSBI.BigInt(0)),\n          children: [/*#__PURE__*/_jsxDEV(CardBGImage, {\n            desaturate: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardNoise, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n            gap: \"sm\",\n            children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(ThemedText.Black, {\n                  children: /*#__PURE__*/_jsxDEV(Trans, {\n                    id: \"Your unclaimed UNI\"\n                  }, void 0, false, void 0, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 17\n              }, this), (stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.earnedAmount) && JSBI.notEqual(BIG_INT_ZERO, stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$earnedAm3 = stakingInfo.earnedAmount) === null || _stakingInfo$earnedAm3 === void 0 ? void 0 : _stakingInfo$earnedAm3.quotient) && /*#__PURE__*/_jsxDEV(ButtonEmpty, {\n                padding: \"8px\",\n                $borderRadius: \"8px\",\n                width: \"fit-content\",\n                onClick: () => setShowClaimRewardModal(true),\n                children: /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"Claim\"\n                }, void 0, false, void 0, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RowBetween, {\n              style: {\n                alignItems: 'baseline'\n              },\n              children: [/*#__PURE__*/_jsxDEV(ThemedText.LargeHeader, {\n                fontSize: 36,\n                fontWeight: 600,\n                children: /*#__PURE__*/_jsxDEV(CountUp, {\n                  isCounting: true,\n                  decimalPlaces: 4,\n                  start: parseFloat(countUpAmountPrevious),\n                  end: parseFloat(countUpAmount),\n                  thousandsSeparator: ',',\n                  duration: 1\n                }, countUpAmount, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ThemedText.Black, {\n                fontSize: 16,\n                fontWeight: 500,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  role: \"img\",\n                  \"aria-label\": \"wizard-icon\",\n                  style: {\n                    marginRight: '8px '\n                  },\n                  children: \"\\u26A1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 19\n                }, this), (stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.active) ? /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"{0} UNI / week\",\n                  values: {\n                    0: (_stakingInfo$rewardRa = stakingInfo.rewardRate) === null || _stakingInfo$rewardRa === void 0 ? void 0 : (_stakingInfo$rewardRa2 = _stakingInfo$rewardRa.multiply(BIG_INT_SECONDS_IN_WEEK)) === null || _stakingInfo$rewardRa2 === void 0 ? void 0 : _stakingInfo$rewardRa2.toFixed(0, {\n                      groupSeparator: ','\n                    })\n                  }\n                }, void 0, false, void 0, this) : /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"0 UNI / week\"\n                }, void 0, false, void 0, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ThemedText.Main, {\n        style: {\n          textAlign: 'center'\n        },\n        fontSize: 14,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"wizard-icon\",\n          style: {\n            marginRight: '8px'\n          },\n          children: \"\\u2B50\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Trans, {\n          id: \"When you withdraw, the contract will automagically claim UNI on your behalf!\"\n        }, void 0, false, void 0, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this), !showAddLiquidityButton && /*#__PURE__*/_jsxDEV(DataRow, {\n        style: {\n          marginBottom: '1rem'\n        },\n        children: [stakingInfo && stakingInfo.active && /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n          padding: \"8px\",\n          $borderRadius: \"8px\",\n          width: \"160px\",\n          onClick: handleDepositClick,\n          children: (stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$stakedAm7 = stakingInfo.stakedAmount) === null || _stakingInfo$stakedAm7 === void 0 ? void 0 : _stakingInfo$stakedAm7.greaterThan(JSBI.BigInt(0))) ? /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Deposit\"\n          }, void 0, false, void 0, this) : /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Deposit UNI-V2 LP Tokens\"\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 15\n        }, this), (stakingInfo === null || stakingInfo === void 0 ? void 0 : (_stakingInfo$stakedAm8 = stakingInfo.stakedAmount) === null || _stakingInfo$stakedAm8 === void 0 ? void 0 : _stakingInfo$stakedAm8.greaterThan(JSBI.BigInt(0))) && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n            padding: \"8px\",\n            $borderRadius: \"8px\",\n            width: \"160px\",\n            onClick: () => setShowUnstakingModal(true),\n            children: /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"Withdraw\"\n            }, void 0, false, void 0, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 17\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 11\n      }, this), !userLiquidityUnstaked ? null : userLiquidityUnstaked.equalTo('0') ? null : !(stakingInfo === null || stakingInfo === void 0 ? void 0 : stakingInfo.active) ? null : /*#__PURE__*/_jsxDEV(ThemedText.Main, {\n        children: /*#__PURE__*/_jsxDEV(Trans, {\n          id: \"{0} UNI-V2 LP tokens available\",\n          values: {\n            0: userLiquidityUnstaked.toSignificant(6)\n          }\n        }, void 0, false, void 0, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Manage, \"mvZYKB0HUZ7f9tJWN7w2/tC/jtQ=\", false, function () {\n  return [useActiveWeb3React, useCurrency, useCurrency, useV2Pair, useStakingInfo, useTokenBalance, useColor, useTotalSupply, usePrevious, useUSDCPrice, useWalletModalToggle];\n});\n\n_c = Manage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Manage\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/pages/Earn/Manage.tsx"],"names":["CurrencyAmount","JSBI","useCallback","useState","Link","CountUp","ButtonEmpty","ButtonPrimary","AutoColumn","DoubleCurrencyLogo","ClaimRewardModal","StakingModal","CardBGImage","CardNoise","CardSection","DataCard","UnstakingModal","RowBetween","BIG_INT_SECONDS_IN_WEEK","BIG_INT_ZERO","useCurrency","useColor","usePrevious","useTotalSupply","useUSDCPrice","useV2Pair","useActiveWeb3React","useWalletModalToggle","useStakingInfo","useTokenBalance","ThemedText","currencyId","PageWrapper","styled","PositionInfo","dim","BottomSection","StyledDataCard","theme","bgColor","showBackground","black","bg5","StyledBottomCard","bg3","PoolData","bg4","VoteCard","DataRow","mediaWidth","upToSmall","Manage","match","params","currencyIdA","currencyIdB","account","currencyA","currencyB","tokenA","undefined","wrapped","tokenB","stakingTokenPair","stakingInfo","userLiquidityUnstaked","stakedAmount","currency","showAddLiquidityButton","Boolean","equalTo","showStakingModal","setShowStakingModal","showUnstakingModal","setShowUnstakingModal","showClaimRewardModal","setShowClaimRewardModal","disableTop","BigInt","token","isNative","WETH","backgroundColor","totalSupplyOfStakingToken","valueOfTotalStakedAmountInWETH","fromRawAmount","divide","multiply","totalStakedAmount","quotient","reserveOf","countUpAmount","earnedAmount","toFixed","countUpAmountPrevious","USDPrice","valueOfTotalStakedAmountInUSDC","quote","toggleWalletModal","handleDepositClick","gap","margin","symbol","groupSeparator","toSignificant","active","totalRewardRate","marginBottom","alignItems","notEqual","parseFloat","marginRight","rewardRate","textAlign","greaterThan"],"mappings":"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","sourcesContent":["import { Trans } from '@lingui/macro'\nimport { CurrencyAmount, Token } from '@uniswap/sdk-core'\nimport JSBI from 'jsbi'\nimport { useCallback, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { RouteComponentProps } from 'react-router-dom'\nimport styled from 'styled-components/macro'\nimport { CountUp } from 'use-count-up'\n\nimport { ButtonEmpty, ButtonPrimary } from '../../components/Button'\nimport { AutoColumn } from '../../components/Column'\nimport DoubleCurrencyLogo from '../../components/DoubleLogo'\nimport ClaimRewardModal from '../../components/earn/ClaimRewardModal'\nimport StakingModal from '../../components/earn/StakingModal'\nimport { CardBGImage, CardNoise, CardSection, DataCard } from '../../components/earn/styled'\nimport UnstakingModal from '../../components/earn/UnstakingModal'\nimport { RowBetween } from '../../components/Row'\nimport { BIG_INT_SECONDS_IN_WEEK, BIG_INT_ZERO } from '../../constants/misc'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { useColor } from '../../hooks/useColor'\nimport usePrevious from '../../hooks/usePrevious'\nimport { useTotalSupply } from '../../hooks/useTotalSupply'\nimport useUSDCPrice from '../../hooks/useUSDCPrice'\nimport { useV2Pair } from '../../hooks/useV2Pairs'\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport { useWalletModalToggle } from '../../state/application/hooks'\nimport { useStakingInfo } from '../../state/stake/hooks'\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { ThemedText } from '../../theme'\nimport { currencyId } from '../../utils/currencyId'\n\nconst PageWrapper = styled(AutoColumn)`\n  max-width: 640px;\n  width: 100%;\n`\n\nconst PositionInfo = styled(AutoColumn)<{ dim: any }>`\n  position: relative;\n  max-width: 640px;\n  width: 100%;\n  opacity: ${({ dim }) => (dim ? 0.6 : 1)};\n`\n\nconst BottomSection = styled(AutoColumn)`\n  border-radius: 12px;\n  width: 100%;\n  position: relative;\n`\n\nconst StyledDataCard = styled(DataCard)<{ bgColor?: any; showBackground?: any }>`\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #1e1a31 0%, #3d51a5 100%);\n  z-index: 2;\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n  background: ${({ theme, bgColor, showBackground }) =>\n    `radial-gradient(91.85% 100% at 1.84% 0%, ${bgColor} 0%,  ${showBackground ? theme.black : theme.bg5} 100%) `};\n`\n\nconst StyledBottomCard = styled(DataCard)<{ dim: any }>`\n  background: ${({ theme }) => theme.bg3};\n  opacity: ${({ dim }) => (dim ? 0.4 : 1)};\n  margin-top: -40px;\n  padding: 0 1.25rem 1rem 1.25rem;\n  padding-top: 32px;\n  z-index: 1;\n`\n\nconst PoolData = styled(DataCard)`\n  background: none;\n  border: 1px solid ${({ theme }) => theme.bg4};\n  padding: 1rem;\n  z-index: 1;\n`\n\nconst VoteCard = styled(DataCard)`\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #27ae60 0%, #000000 100%);\n  overflow: hidden;\n`\n\nconst DataRow = styled(RowBetween)`\n  justify-content: center;\n  gap: 12px;\n\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    flex-direction: column;\n    gap: 12px;\n  `};\n`\n\nexport default function Manage({\n  match: {\n    params: { currencyIdA, currencyIdB },\n  },\n}: RouteComponentProps<{ currencyIdA: string; currencyIdB: string }>) {\n  const { account } = useActiveWeb3React()\n\n  // get currencies and pair\n  const [currencyA, currencyB] = [useCurrency(currencyIdA), useCurrency(currencyIdB)]\n  const tokenA = (currencyA ?? undefined)?.wrapped\n  const tokenB = (currencyB ?? undefined)?.wrapped\n\n  const [, stakingTokenPair] = useV2Pair(tokenA, tokenB)\n  const stakingInfo = useStakingInfo(stakingTokenPair)?.[0]\n\n  // detect existing unstaked LP position to show add button if none found\n  const userLiquidityUnstaked = useTokenBalance(account ?? undefined, stakingInfo?.stakedAmount?.currency)\n  const showAddLiquidityButton = Boolean(stakingInfo?.stakedAmount?.equalTo('0') && userLiquidityUnstaked?.equalTo('0'))\n\n  // toggle for staking modal and unstaking modal\n  const [showStakingModal, setShowStakingModal] = useState(false)\n  const [showUnstakingModal, setShowUnstakingModal] = useState(false)\n  const [showClaimRewardModal, setShowClaimRewardModal] = useState(false)\n\n  // fade cards if nothing staked or nothing earned yet\n  const disableTop = !stakingInfo?.stakedAmount || stakingInfo.stakedAmount.equalTo(JSBI.BigInt(0))\n\n  const token = currencyA?.isNative ? tokenB : tokenA\n  const WETH = currencyA?.isNative ? tokenA : tokenB\n  const backgroundColor = useColor(token)\n\n  // get WETH value of staked LP tokens\n  const totalSupplyOfStakingToken = useTotalSupply(stakingInfo?.stakedAmount?.currency)\n  let valueOfTotalStakedAmountInWETH: CurrencyAmount<Token> | undefined\n  if (totalSupplyOfStakingToken && stakingTokenPair && stakingInfo && WETH) {\n    // take the total amount of LP tokens staked, multiply by ETH value of all LP tokens, divide by all LP tokens\n    valueOfTotalStakedAmountInWETH = CurrencyAmount.fromRawAmount(\n      WETH,\n      JSBI.divide(\n        JSBI.multiply(\n          JSBI.multiply(stakingInfo.totalStakedAmount.quotient, stakingTokenPair.reserveOf(WETH).quotient),\n          JSBI.BigInt(2) // this is b/c the value of LP shares are ~double the value of the WETH they entitle owner to\n        ),\n        totalSupplyOfStakingToken.quotient\n      )\n    )\n  }\n\n  const countUpAmount = stakingInfo?.earnedAmount?.toFixed(6) ?? '0'\n  const countUpAmountPrevious = usePrevious(countUpAmount) ?? '0'\n\n  // get the USD value of staked WETH\n  const USDPrice = useUSDCPrice(WETH)\n  const valueOfTotalStakedAmountInUSDC =\n    valueOfTotalStakedAmountInWETH && USDPrice?.quote(valueOfTotalStakedAmountInWETH)\n\n  const toggleWalletModal = useWalletModalToggle()\n\n  const handleDepositClick = useCallback(() => {\n    if (account) {\n      setShowStakingModal(true)\n    } else {\n      toggleWalletModal()\n    }\n  }, [account, toggleWalletModal])\n\n  return (\n    <PageWrapper gap=\"lg\" justify=\"center\">\n      <RowBetween style={{ gap: '24px' }}>\n        <ThemedText.MediumHeader style={{ margin: 0 }}>\n          <Trans>\n            {currencyA?.symbol}-{currencyB?.symbol} Liquidity Mining\n          </Trans>\n        </ThemedText.MediumHeader>\n        <DoubleCurrencyLogo currency0={currencyA ?? undefined} currency1={currencyB ?? undefined} size={24} />\n      </RowBetween>\n\n      <DataRow style={{ gap: '24px' }}>\n        <PoolData>\n          <AutoColumn gap=\"sm\">\n            <ThemedText.Body style={{ margin: 0 }}>\n              <Trans>Total deposits</Trans>\n            </ThemedText.Body>\n            <ThemedText.Body fontSize={24} fontWeight={500}>\n              {valueOfTotalStakedAmountInUSDC\n                ? `$${valueOfTotalStakedAmountInUSDC.toFixed(0, { groupSeparator: ',' })}`\n                : `${valueOfTotalStakedAmountInWETH?.toSignificant(4, { groupSeparator: ',' }) ?? '-'} ETH`}\n            </ThemedText.Body>\n          </AutoColumn>\n        </PoolData>\n        <PoolData>\n          <AutoColumn gap=\"sm\">\n            <ThemedText.Body style={{ margin: 0 }}>\n              <Trans>Pool Rate</Trans>\n            </ThemedText.Body>\n            <ThemedText.Body fontSize={24} fontWeight={500}>\n              {stakingInfo?.active ? (\n                <Trans>\n                  {stakingInfo.totalRewardRate?.multiply(BIG_INT_SECONDS_IN_WEEK)?.toFixed(0, { groupSeparator: ',' })}{' '}\n                  UNI / week\n                </Trans>\n              ) : (\n                <Trans>0 UNI / week</Trans>\n              )}\n            </ThemedText.Body>\n          </AutoColumn>\n        </PoolData>\n      </DataRow>\n\n      {showAddLiquidityButton && (\n        <VoteCard>\n          <CardBGImage />\n          <CardNoise />\n          <CardSection>\n            <AutoColumn gap=\"md\">\n              <RowBetween>\n                <ThemedText.White fontWeight={600}>\n                  <Trans>Step 1. Get UNI-V2 Liquidity tokens</Trans>\n                </ThemedText.White>\n              </RowBetween>\n              <RowBetween style={{ marginBottom: '1rem' }}>\n                <ThemedText.White fontSize={14}>\n                  <Trans>\n                    UNI-V2 LP tokens are required. Once you&apos;ve added liquidity to the {currencyA?.symbol}-\n                    {currencyB?.symbol} pool you can stake your liquidity tokens on this page.\n                  </Trans>\n                </ThemedText.White>\n              </RowBetween>\n              <ButtonPrimary\n                padding=\"8px\"\n                $borderRadius=\"8px\"\n                width={'fit-content'}\n                as={Link}\n                to={`/add/${currencyA && currencyId(currencyA)}/${currencyB && currencyId(currencyB)}`}\n              >\n                <Trans>\n                  Add {currencyA?.symbol}-{currencyB?.symbol} liquidity\n                </Trans>\n              </ButtonPrimary>\n            </AutoColumn>\n          </CardSection>\n          <CardBGImage />\n          <CardNoise />\n        </VoteCard>\n      )}\n\n      {stakingInfo && (\n        <>\n          <StakingModal\n            isOpen={showStakingModal}\n            onDismiss={() => setShowStakingModal(false)}\n            stakingInfo={stakingInfo}\n            userLiquidityUnstaked={userLiquidityUnstaked}\n          />\n          <UnstakingModal\n            isOpen={showUnstakingModal}\n            onDismiss={() => setShowUnstakingModal(false)}\n            stakingInfo={stakingInfo}\n          />\n          <ClaimRewardModal\n            isOpen={showClaimRewardModal}\n            onDismiss={() => setShowClaimRewardModal(false)}\n            stakingInfo={stakingInfo}\n          />\n        </>\n      )}\n\n      <PositionInfo gap=\"lg\" justify=\"center\" dim={showAddLiquidityButton}>\n        <BottomSection gap=\"lg\" justify=\"center\">\n          <StyledDataCard disabled={disableTop} bgColor={backgroundColor} showBackground={!showAddLiquidityButton}>\n            <CardSection>\n              <CardBGImage desaturate />\n              <CardNoise />\n              <AutoColumn gap=\"md\">\n                <RowBetween>\n                  <ThemedText.White fontWeight={600}>\n                    <Trans>Your liquidity deposits</Trans>\n                  </ThemedText.White>\n                </RowBetween>\n                <RowBetween style={{ alignItems: 'baseline' }}>\n                  <ThemedText.White fontSize={36} fontWeight={600}>\n                    {stakingInfo?.stakedAmount?.toSignificant(6) ?? '-'}\n                  </ThemedText.White>\n                  <ThemedText.White>\n                    <Trans>\n                      UNI-V2 {currencyA?.symbol}-{currencyB?.symbol}\n                    </Trans>\n                  </ThemedText.White>\n                </RowBetween>\n              </AutoColumn>\n            </CardSection>\n          </StyledDataCard>\n          <StyledBottomCard dim={stakingInfo?.stakedAmount?.equalTo(JSBI.BigInt(0))}>\n            <CardBGImage desaturate />\n            <CardNoise />\n            <AutoColumn gap=\"sm\">\n              <RowBetween>\n                <div>\n                  <ThemedText.Black>\n                    <Trans>Your unclaimed UNI</Trans>\n                  </ThemedText.Black>\n                </div>\n                {stakingInfo?.earnedAmount && JSBI.notEqual(BIG_INT_ZERO, stakingInfo?.earnedAmount?.quotient) && (\n                  <ButtonEmpty\n                    padding=\"8px\"\n                    $borderRadius=\"8px\"\n                    width=\"fit-content\"\n                    onClick={() => setShowClaimRewardModal(true)}\n                  >\n                    <Trans>Claim</Trans>\n                  </ButtonEmpty>\n                )}\n              </RowBetween>\n              <RowBetween style={{ alignItems: 'baseline' }}>\n                <ThemedText.LargeHeader fontSize={36} fontWeight={600}>\n                  <CountUp\n                    key={countUpAmount}\n                    isCounting\n                    decimalPlaces={4}\n                    start={parseFloat(countUpAmountPrevious)}\n                    end={parseFloat(countUpAmount)}\n                    thousandsSeparator={','}\n                    duration={1}\n                  />\n                </ThemedText.LargeHeader>\n                <ThemedText.Black fontSize={16} fontWeight={500}>\n                  <span role=\"img\" aria-label=\"wizard-icon\" style={{ marginRight: '8px ' }}>\n                    ⚡\n                  </span>\n\n                  {stakingInfo?.active ? (\n                    <Trans>\n                      {stakingInfo.rewardRate?.multiply(BIG_INT_SECONDS_IN_WEEK)?.toFixed(0, { groupSeparator: ',' })}{' '}\n                      UNI / week\n                    </Trans>\n                  ) : (\n                    <Trans>0 UNI / week</Trans>\n                  )}\n                </ThemedText.Black>\n              </RowBetween>\n            </AutoColumn>\n          </StyledBottomCard>\n        </BottomSection>\n        <ThemedText.Main style={{ textAlign: 'center' }} fontSize={14}>\n          <span role=\"img\" aria-label=\"wizard-icon\" style={{ marginRight: '8px' }}>\n            ⭐️\n          </span>\n          <Trans>When you withdraw, the contract will automagically claim UNI on your behalf!</Trans>\n        </ThemedText.Main>\n\n        {!showAddLiquidityButton && (\n          <DataRow style={{ marginBottom: '1rem' }}>\n            {stakingInfo && stakingInfo.active && (\n              <ButtonPrimary padding=\"8px\" $borderRadius=\"8px\" width=\"160px\" onClick={handleDepositClick}>\n                {stakingInfo?.stakedAmount?.greaterThan(JSBI.BigInt(0)) ? (\n                  <Trans>Deposit</Trans>\n                ) : (\n                  <Trans>Deposit UNI-V2 LP Tokens</Trans>\n                )}\n              </ButtonPrimary>\n            )}\n\n            {stakingInfo?.stakedAmount?.greaterThan(JSBI.BigInt(0)) && (\n              <>\n                <ButtonPrimary\n                  padding=\"8px\"\n                  $borderRadius=\"8px\"\n                  width=\"160px\"\n                  onClick={() => setShowUnstakingModal(true)}\n                >\n                  <Trans>Withdraw</Trans>\n                </ButtonPrimary>\n              </>\n            )}\n          </DataRow>\n        )}\n        {!userLiquidityUnstaked ? null : userLiquidityUnstaked.equalTo('0') ? null : !stakingInfo?.active ? null : (\n          <ThemedText.Main>\n            <Trans>{userLiquidityUnstaked.toSignificant(6)} UNI-V2 LP tokens available</Trans>\n          </ThemedText.Main>\n        )}\n      </PositionInfo>\n    </PageWrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}