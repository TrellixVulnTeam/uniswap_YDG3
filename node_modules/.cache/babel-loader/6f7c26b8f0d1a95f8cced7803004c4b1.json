{"ast":null,"code":"import{ApprovalState}from'hooks/useApproveCallback';export var SwapRouterVersion;/**\n * Returns the swap router that will result in the least amount of txs (less gas) for a given swap.\n * Heuristic:\n * - if trade contains a single v2-only trade & V2 SwapRouter is approved: use V2 SwapRouter\n * - if trade contains only v3 & V3 SwapRouter is approved: use V3 SwapRouter\n * - else: approve and use V2+V3 SwapRouter\n */(function(SwapRouterVersion){SwapRouterVersion[SwapRouterVersion[\"V2\"]=0]=\"V2\";SwapRouterVersion[SwapRouterVersion[\"V3\"]=1]=\"V3\";SwapRouterVersion[SwapRouterVersion[\"V2V3\"]=2]=\"V2V3\";})(SwapRouterVersion||(SwapRouterVersion={}));export function getTxOptimizedSwapRouter(_ref){var onlyV2Routes=_ref.onlyV2Routes,onlyV3Routes=_ref.onlyV3Routes,tradeHasSplits=_ref.tradeHasSplits,approvalStates=_ref.approvalStates;if([approvalStates.v2,approvalStates.v3,approvalStates.v2V3].includes(ApprovalState.PENDING))return undefined;if(approvalStates.v2V3===ApprovalState.APPROVED)return SwapRouterVersion.V2V3;if(approvalStates.v2===ApprovalState.APPROVED&&onlyV2Routes&&!tradeHasSplits)return SwapRouterVersion.V2;if(approvalStates.v3===ApprovalState.APPROVED&&onlyV3Routes)return SwapRouterVersion.V3;return SwapRouterVersion.V2V3;}","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/utils/getTxOptimizedSwapRouter.ts"],"names":["ApprovalState","SwapRouterVersion","getTxOptimizedSwapRouter","onlyV2Routes","onlyV3Routes","tradeHasSplits","approvalStates","v2","v3","v2V3","includes","PENDING","undefined","APPROVED","V2V3","V2","V3"],"mappings":"AAAA,OAASA,aAAT,KAA8B,0BAA9B,CAEA,UAAYC,CAAAA,iBAAZ,CAMA;AACA;AACA;AACA;AACA;AACA;AACA,G,UAZYA,iB,EAAAA,iB,CAAAA,iB,eAAAA,iB,CAAAA,iB,eAAAA,iB,CAAAA,iB,sBAAAA,iB,GAAAA,iB,MAaZ,MAAO,SAASC,CAAAA,wBAAT,MAU2B,IAThCC,CAAAA,YASgC,MAThCA,YASgC,CARhCC,YAQgC,MARhCA,YAQgC,CAPhCC,cAOgC,MAPhCA,cAOgC,CANhCC,cAMgC,MANhCA,cAMgC,CAChC,GAAI,CAACA,cAAc,CAACC,EAAhB,CAAoBD,cAAc,CAACE,EAAnC,CAAuCF,cAAc,CAACG,IAAtD,EAA4DC,QAA5D,CAAqEV,aAAa,CAACW,OAAnF,CAAJ,CAAiG,MAAOC,CAAAA,SAAP,CACjG,GAAIN,cAAc,CAACG,IAAf,GAAwBT,aAAa,CAACa,QAA1C,CAAoD,MAAOZ,CAAAA,iBAAiB,CAACa,IAAzB,CACpD,GAAIR,cAAc,CAACC,EAAf,GAAsBP,aAAa,CAACa,QAApC,EAAgDV,YAAhD,EAAgE,CAACE,cAArE,CAAqF,MAAOJ,CAAAA,iBAAiB,CAACc,EAAzB,CACrF,GAAIT,cAAc,CAACE,EAAf,GAAsBR,aAAa,CAACa,QAApC,EAAgDT,YAApD,CAAkE,MAAOH,CAAAA,iBAAiB,CAACe,EAAzB,CAClE,MAAOf,CAAAA,iBAAiB,CAACa,IAAzB,CACD","sourcesContent":["import { ApprovalState } from 'hooks/useApproveCallback'\n\nexport enum SwapRouterVersion {\n  V2,\n  V3,\n  V2V3,\n}\n\n/**\n * Returns the swap router that will result in the least amount of txs (less gas) for a given swap.\n * Heuristic:\n * - if trade contains a single v2-only trade & V2 SwapRouter is approved: use V2 SwapRouter\n * - if trade contains only v3 & V3 SwapRouter is approved: use V3 SwapRouter\n * - else: approve and use V2+V3 SwapRouter\n */\nexport function getTxOptimizedSwapRouter({\n  onlyV2Routes,\n  onlyV3Routes,\n  tradeHasSplits,\n  approvalStates,\n}: {\n  onlyV2Routes: boolean | undefined\n  onlyV3Routes: boolean | undefined\n  tradeHasSplits: boolean | undefined\n  approvalStates: { v2: ApprovalState; v3: ApprovalState; v2V3: ApprovalState }\n}): SwapRouterVersion | undefined {\n  if ([approvalStates.v2, approvalStates.v3, approvalStates.v2V3].includes(ApprovalState.PENDING)) return undefined\n  if (approvalStates.v2V3 === ApprovalState.APPROVED) return SwapRouterVersion.V2V3\n  if (approvalStates.v2 === ApprovalState.APPROVED && onlyV2Routes && !tradeHasSplits) return SwapRouterVersion.V2\n  if (approvalStates.v3 === ApprovalState.APPROVED && onlyV3Routes) return SwapRouterVersion.V3\n  return SwapRouterVersion.V2V3\n}\n"]},"metadata":{},"sourceType":"module"}