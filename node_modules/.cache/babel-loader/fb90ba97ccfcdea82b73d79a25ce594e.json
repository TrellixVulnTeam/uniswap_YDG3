{"ast":null,"code":"import { Percent } from '@uniswap/sdk-core';\nimport JSBI from 'jsbi';\nexport const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000';\nexport const NetworkContextName = 'NETWORK';\nexport const IS_IN_IFRAME = window.parent !== window; // 30 minutes, denominated in seconds\n\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 30;\nexport const L2_DEADLINE_FROM_NOW = 60 * 5; // transaction popup dismisal amounts\n\nexport const DEFAULT_TXN_DISMISS_MS = 25000;\nexport const L2_TXN_DISMISS_MS = 5000; // used for rewards deadlines\n\nexport const BIG_INT_SECONDS_IN_WEEK = JSBI.BigInt(60 * 60 * 24 * 7);\nexport const BIG_INT_ZERO = JSBI.BigInt(0); // one basis JSBI.BigInt\n\nconst BIPS_BASE = JSBI.BigInt(10000);\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), BIPS_BASE); // used for warning states\n\nexport const ALLOWED_PRICE_IMPACT_LOW = new Percent(JSBI.BigInt(100), BIPS_BASE); // 1%\n\nexport const ALLOWED_PRICE_IMPACT_MEDIUM = new Percent(JSBI.BigInt(300), BIPS_BASE); // 3%\n\nexport const ALLOWED_PRICE_IMPACT_HIGH = new Percent(JSBI.BigInt(500), BIPS_BASE); // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\n\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN = new Percent(JSBI.BigInt(1000), BIPS_BASE); // 10%\n// for non expert mode disable swaps above this\n\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT = new Percent(JSBI.BigInt(1500), BIPS_BASE); // 15%\n\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), BIPS_BASE);\nexport const ZERO_PERCENT = new Percent('0');\nexport const TWO_PERCENT = new Percent(JSBI.BigInt(200), BIPS_BASE);\nexport const ONE_HUNDRED_PERCENT = new Percent('1');","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/constants/misc.ts"],"names":["Percent","JSBI","ZERO_ADDRESS","NetworkContextName","IS_IN_IFRAME","window","parent","DEFAULT_DEADLINE_FROM_NOW","L2_DEADLINE_FROM_NOW","DEFAULT_TXN_DISMISS_MS","L2_TXN_DISMISS_MS","BIG_INT_SECONDS_IN_WEEK","BigInt","BIG_INT_ZERO","BIPS_BASE","ONE_BIPS","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","BETTER_TRADE_LESS_HOPS_THRESHOLD","ZERO_PERCENT","TWO_PERCENT","ONE_HUNDRED_PERCENT"],"mappings":"AAAA,SAASA,OAAT,QAAwB,mBAAxB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,OAAO,MAAMC,YAAY,GAAG,4CAArB;AAEP,OAAO,MAAMC,kBAAkB,GAAG,SAA3B;AAEP,OAAO,MAAMC,YAAY,GAAGC,MAAM,CAACC,MAAP,KAAkBD,MAAvC,C,CAEP;;AACA,OAAO,MAAME,yBAAyB,GAAG,KAAK,EAAvC;AACP,OAAO,MAAMC,oBAAoB,GAAG,KAAK,CAAlC,C,CAEP;;AACA,OAAO,MAAMC,sBAAsB,GAAG,KAA/B;AACP,OAAO,MAAMC,iBAAiB,GAAG,IAA1B,C,CAEP;;AACA,OAAO,MAAMC,uBAAuB,GAAGV,IAAI,CAACW,MAAL,CAAY,KAAK,EAAL,GAAU,EAAV,GAAe,CAA3B,CAAhC;AAEP,OAAO,MAAMC,YAAY,GAAGZ,IAAI,CAACW,MAAL,CAAY,CAAZ,CAArB,C,CAEP;;AACA,MAAME,SAAS,GAAGb,IAAI,CAACW,MAAL,CAAY,KAAZ,CAAlB;AACA,OAAO,MAAMG,QAAQ,GAAG,IAAIf,OAAJ,CAAYC,IAAI,CAACW,MAAL,CAAY,CAAZ,CAAZ,EAA4BE,SAA5B,CAAjB,C,CAEP;;AACA,OAAO,MAAME,wBAAiC,GAAG,IAAIhB,OAAJ,CAAYC,IAAI,CAACW,MAAL,CAAY,GAAZ,CAAZ,EAA8BE,SAA9B,CAA1C,C,CAAmF;;AAC1F,OAAO,MAAMG,2BAAoC,GAAG,IAAIjB,OAAJ,CAAYC,IAAI,CAACW,MAAL,CAAY,GAAZ,CAAZ,EAA8BE,SAA9B,CAA7C,C,CAAsF;;AAC7F,OAAO,MAAMI,yBAAkC,GAAG,IAAIlB,OAAJ,CAAYC,IAAI,CAACW,MAAL,CAAY,GAAZ,CAAZ,EAA8BE,SAA9B,CAA3C,C,CAAoF;AAC3F;;AACA,OAAO,MAAMK,oCAA6C,GAAG,IAAInB,OAAJ,CAAYC,IAAI,CAACW,MAAL,CAAY,IAAZ,CAAZ,EAA+BE,SAA/B,CAAtD,C,CAAgG;AACvG;;AACA,OAAO,MAAMM,+BAAwC,GAAG,IAAIpB,OAAJ,CAAYC,IAAI,CAACW,MAAL,CAAY,IAAZ,CAAZ,EAA+BE,SAA/B,CAAjD,C,CAA2F;;AAElG,OAAO,MAAMO,gCAAgC,GAAG,IAAIrB,OAAJ,CAAYC,IAAI,CAACW,MAAL,CAAY,EAAZ,CAAZ,EAA6BE,SAA7B,CAAzC;AAEP,OAAO,MAAMQ,YAAY,GAAG,IAAItB,OAAJ,CAAY,GAAZ,CAArB;AACP,OAAO,MAAMuB,WAAW,GAAG,IAAIvB,OAAJ,CAAYC,IAAI,CAACW,MAAL,CAAY,GAAZ,CAAZ,EAA8BE,SAA9B,CAApB;AACP,OAAO,MAAMU,mBAAmB,GAAG,IAAIxB,OAAJ,CAAY,GAAZ,CAA5B","sourcesContent":["import { Percent } from '@uniswap/sdk-core'\nimport JSBI from 'jsbi'\n\nexport const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000'\n\nexport const NetworkContextName = 'NETWORK'\n\nexport const IS_IN_IFRAME = window.parent !== window\n\n// 30 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 30\nexport const L2_DEADLINE_FROM_NOW = 60 * 5\n\n// transaction popup dismisal amounts\nexport const DEFAULT_TXN_DISMISS_MS = 25000\nexport const L2_TXN_DISMISS_MS = 5000\n\n// used for rewards deadlines\nexport const BIG_INT_SECONDS_IN_WEEK = JSBI.BigInt(60 * 60 * 24 * 7)\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis JSBI.BigInt\nconst BIPS_BASE = JSBI.BigInt(10000)\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), BIPS_BASE)\n\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), BIPS_BASE)\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const TWO_PERCENT = new Percent(JSBI.BigInt(200), BIPS_BASE)\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n"]},"metadata":{},"sourceType":"module"}