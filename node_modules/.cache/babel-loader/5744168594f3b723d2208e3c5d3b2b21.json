{"ast":null,"code":"import _styled from \"styled-components\";\n\nvar _jsxFileName = \"/Users/safahi/Downloads/interface-4.30.1/src/components/SearchModal/ImportList.tsx\",\n    _s = $RefreshSig$();\n\nimport { Trans } from \"@lingui/react\";\nimport { ButtonPrimary } from 'components/Button';\nimport Card from 'components/Card';\nimport { AutoColumn } from 'components/Column';\nimport ListLogo from 'components/ListLogo';\nimport { AutoRow, RowBetween, RowFixed } from 'components/Row';\nimport { SectionBreak } from 'components/swap/styleds';\nimport { useFetchListCallback } from 'hooks/useFetchListCallback';\nimport useTheme from 'hooks/useTheme';\nimport { transparentize } from 'polished';\nimport { useCallback, useState } from 'react';\nimport { AlertTriangle, ArrowLeft } from 'react-feather';\nimport ReactGA from 'react-ga';\nimport { useAppDispatch } from 'state/hooks';\nimport { enableList, removeList } from 'state/lists/actions';\nimport { useAllLists } from 'state/lists/hooks';\nimport { CloseIcon, ThemedText } from 'theme';\nimport { ExternalLink } from '../../theme';\nimport { CurrencyModalView } from './CurrencySearchModal';\nimport { Checkbox, PaddedColumn, TextDot } from './styleds';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Wrapper = _styled.div.withConfig({\n  displayName: \"ImportList__Wrapper\",\n  componentId: \"sc-11ypl1h-0\"\n})([\"position:relative;width:100%;overflow:auto;\"]);\n\nexport function ImportList({\n  listURL,\n  list,\n  setModalView,\n  onDismiss\n}) {\n  _s();\n\n  var _lists$listURL;\n\n  const theme = useTheme();\n  const dispatch = useAppDispatch(); // user must accept\n\n  const [confirmed, setConfirmed] = useState(false);\n  const lists = useAllLists();\n  const fetchList = useFetchListCallback(); // monitor is list is loading\n\n  const adding = Boolean((_lists$listURL = lists[listURL]) === null || _lists$listURL === void 0 ? void 0 : _lists$listURL.loadingRequestId);\n  const [addError, setAddError] = useState(null);\n  const handleAddList = useCallback(() => {\n    if (adding) return;\n    setAddError(null);\n    fetchList(listURL).then(() => {\n      ReactGA.event({\n        category: 'Lists',\n        action: 'Add List',\n        label: listURL\n      }); // turn list on\n\n      dispatch(enableList(listURL)); // go back to lists\n\n      setModalView(CurrencyModalView.manage);\n    }).catch(error => {\n      ReactGA.event({\n        category: 'Lists',\n        action: 'Add List Failed',\n        label: listURL\n      });\n      setAddError(error.message);\n      dispatch(removeList(listURL));\n    });\n  }, [adding, dispatch, fetchList, listURL, setModalView]);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(PaddedColumn, {\n      gap: \"14px\",\n      style: {\n        width: '100%',\n        flex: '1 1'\n      },\n      children: /*#__PURE__*/_jsxDEV(RowBetween, {\n        children: [/*#__PURE__*/_jsxDEV(ArrowLeft, {\n          style: {\n            cursor: 'pointer'\n          },\n          onClick: () => setModalView(CurrencyModalView.manage)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ThemedText.MediumHeader, {\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Import List\"\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CloseIcon, {\n          onClick: onDismiss\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SectionBreak, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PaddedColumn, {\n      gap: \"md\",\n      children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n        gap: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          backgroundColor: theme.bg2,\n          padding: \"12px 20px\",\n          children: /*#__PURE__*/_jsxDEV(RowBetween, {\n            children: /*#__PURE__*/_jsxDEV(RowFixed, {\n              children: [list.logoURI && /*#__PURE__*/_jsxDEV(ListLogo, {\n                logoURI: list.logoURI,\n                size: \"40px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n                gap: \"sm\",\n                style: {\n                  marginLeft: '20px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n                  children: [/*#__PURE__*/_jsxDEV(ThemedText.Body, {\n                    fontWeight: 600,\n                    mr: \"6px\",\n                    children: list.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TextDot, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ThemedText.Main, {\n                    fontSize: '16px',\n                    ml: \"6px\",\n                    children: /*#__PURE__*/_jsxDEV(Trans, {\n                      id: \"{0} tokens\",\n                      values: {\n                        0: list.tokens.length\n                      }\n                    }, void 0, false, void 0, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ExternalLink, {\n                  href: `https://tokenlists.org/token-list?url=${listURL}`,\n                  children: /*#__PURE__*/_jsxDEV(ThemedText.Main, {\n                    fontSize: '12px',\n                    color: theme.blue1,\n                    children: listURL\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            backgroundColor: transparentize(0.8, theme.red1)\n          },\n          children: [/*#__PURE__*/_jsxDEV(AutoColumn, {\n            justify: \"center\",\n            style: {\n              textAlign: 'center',\n              gap: '16px',\n              marginBottom: '12px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n              stroke: theme.red1,\n              size: 32\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ThemedText.Body, {\n              fontWeight: 500,\n              fontSize: 20,\n              color: theme.red1,\n              children: /*#__PURE__*/_jsxDEV(Trans, {\n                id: \"Import at your own risk\"\n              }, void 0, false, void 0, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n            style: {\n              textAlign: 'center',\n              gap: '16px',\n              marginBottom: '12px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(ThemedText.Body, {\n              fontWeight: 500,\n              color: theme.red1,\n              children: /*#__PURE__*/_jsxDEV(Trans, {\n                id: \"By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.\"\n              }, void 0, false, void 0, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ThemedText.Body, {\n              fontWeight: 600,\n              color: theme.red1,\n              children: /*#__PURE__*/_jsxDEV(Trans, {\n                id: \"If you purchase a token from this list, you may not be able to sell it back.\"\n              }, void 0, false, void 0, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AutoRow, {\n            justify: \"center\",\n            style: {\n              cursor: 'pointer'\n            },\n            onClick: () => setConfirmed(!confirmed),\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              name: \"confirmed\",\n              type: \"checkbox\",\n              checked: confirmed,\n              onChange: () => setConfirmed(!confirmed)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ThemedText.Body, {\n              ml: \"10px\",\n              fontSize: \"16px\",\n              color: theme.red1,\n              fontWeight: 500,\n              children: /*#__PURE__*/_jsxDEV(Trans, {\n                id: \"I understand\"\n              }, void 0, false, void 0, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n          disabled: !confirmed,\n          altDisabledStyle: true,\n          $borderRadius: \"20px\",\n          padding: \"10px 1rem\",\n          onClick: handleAddList,\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Import\"\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), addError ? /*#__PURE__*/_jsxDEV(ThemedText.Error, {\n          title: addError,\n          style: {\n            textOverflow: 'ellipsis',\n            overflow: 'hidden'\n          },\n          error: true,\n          children: addError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ImportList, \"D/LVlQ3Si3PT6XtSLLWfKkco7a0=\", false, function () {\n  return [useTheme, useAppDispatch, useAllLists, useFetchListCallback];\n});\n\n_c = ImportList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImportList\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/components/SearchModal/ImportList.tsx"],"names":["ButtonPrimary","Card","AutoColumn","ListLogo","AutoRow","RowBetween","RowFixed","SectionBreak","useFetchListCallback","useTheme","transparentize","useCallback","useState","AlertTriangle","ArrowLeft","ReactGA","useAppDispatch","enableList","removeList","useAllLists","CloseIcon","ThemedText","ExternalLink","CurrencyModalView","Checkbox","PaddedColumn","TextDot","Wrapper","styled","div","ImportList","listURL","list","setModalView","onDismiss","theme","dispatch","confirmed","setConfirmed","lists","fetchList","adding","Boolean","loadingRequestId","addError","setAddError","handleAddList","then","event","category","action","label","manage","catch","error","message","width","flex","cursor","bg2","logoURI","marginLeft","name","tokens","length","blue1","backgroundColor","red1","textAlign","gap","marginBottom","textOverflow","overflow"],"mappings":"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","sourcesContent":["import { Trans } from '@lingui/macro'\nimport { TokenList } from '@uniswap/token-lists'\nimport { ButtonPrimary } from 'components/Button'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Column'\nimport ListLogo from 'components/ListLogo'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Row'\nimport { SectionBreak } from 'components/swap/styleds'\nimport { useFetchListCallback } from 'hooks/useFetchListCallback'\nimport useTheme from 'hooks/useTheme'\nimport { transparentize } from 'polished'\nimport { useCallback, useState } from 'react'\nimport { AlertTriangle, ArrowLeft } from 'react-feather'\nimport ReactGA from 'react-ga'\nimport { useAppDispatch } from 'state/hooks'\nimport { enableList, removeList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks'\nimport styled from 'styled-components/macro'\nimport { CloseIcon, ThemedText } from 'theme'\n\nimport { ExternalLink } from '../../theme'\nimport { CurrencyModalView } from './CurrencySearchModal'\nimport { Checkbox, PaddedColumn, TextDot } from './styleds'\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n  overflow: auto;\n`\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onDismiss: () => void\n  setModalView: (view: CurrencyModalView) => void\n}\n\nexport function ImportList({ listURL, list, setModalView, onDismiss }: ImportProps) {\n  const theme = useTheme()\n  const dispatch = useAppDispatch()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        ReactGA.event({\n          category: 'Lists',\n          action: 'Add List',\n          label: listURL,\n        })\n\n        // turn list on\n        dispatch(enableList(listURL))\n        // go back to lists\n        setModalView(CurrencyModalView.manage)\n      })\n      .catch((error) => {\n        ReactGA.event({\n          category: 'Lists',\n          action: 'Add List Failed',\n          label: listURL,\n        })\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, setModalView])\n\n  return (\n    <Wrapper>\n      <PaddedColumn gap=\"14px\" style={{ width: '100%', flex: '1 1' }}>\n        <RowBetween>\n          <ArrowLeft style={{ cursor: 'pointer' }} onClick={() => setModalView(CurrencyModalView.manage)} />\n          <ThemedText.MediumHeader>\n            <Trans>Import List</Trans>\n          </ThemedText.MediumHeader>\n          <CloseIcon onClick={onDismiss} />\n        </RowBetween>\n      </PaddedColumn>\n      <SectionBreak />\n      <PaddedColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card backgroundColor={theme.bg2} padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <ThemedText.Body fontWeight={600} mr=\"6px\">\n                      {list.name}\n                    </ThemedText.Body>\n                    <TextDot />\n                    <ThemedText.Main fontSize={'16px'} ml=\"6px\">\n                      <Trans>{list.tokens.length} tokens</Trans>\n                    </ThemedText.Main>\n                  </RowFixed>\n                  <ExternalLink href={`https://tokenlists.org/token-list?url=${listURL}`}>\n                    <ThemedText.Main fontSize={'12px'} color={theme.blue1}>\n                      {listURL}\n                    </ThemedText.Main>\n                  </ExternalLink>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n          <Card style={{ backgroundColor: transparentize(0.8, theme.red1) }}>\n            <AutoColumn justify=\"center\" style={{ textAlign: 'center', gap: '16px', marginBottom: '12px' }}>\n              <AlertTriangle stroke={theme.red1} size={32} />\n              <ThemedText.Body fontWeight={500} fontSize={20} color={theme.red1}>\n                <Trans>Import at your own risk</Trans>\n              </ThemedText.Body>\n            </AutoColumn>\n\n            <AutoColumn style={{ textAlign: 'center', gap: '16px', marginBottom: '12px' }}>\n              <ThemedText.Body fontWeight={500} color={theme.red1}>\n                <Trans>\n                  By adding this list you are implicitly trusting that the data is correct. Anyone can create a list,\n                  including creating fake versions of existing lists and lists that claim to represent projects that do\n                  not have one.\n                </Trans>\n              </ThemedText.Body>\n              <ThemedText.Body fontWeight={600} color={theme.red1}>\n                <Trans>If you purchase a token from this list, you may not be able to sell it back.</Trans>\n              </ThemedText.Body>\n            </AutoColumn>\n            <AutoRow justify=\"center\" style={{ cursor: 'pointer' }} onClick={() => setConfirmed(!confirmed)}>\n              <Checkbox\n                name=\"confirmed\"\n                type=\"checkbox\"\n                checked={confirmed}\n                onChange={() => setConfirmed(!confirmed)}\n              />\n              <ThemedText.Body ml=\"10px\" fontSize=\"16px\" color={theme.red1} fontWeight={500}>\n                <Trans>I understand</Trans>\n              </ThemedText.Body>\n            </AutoRow>\n          </Card>\n\n          <ButtonPrimary\n            disabled={!confirmed}\n            altDisabledStyle={true}\n            $borderRadius=\"20px\"\n            padding=\"10px 1rem\"\n            onClick={handleAddList}\n          >\n            <Trans>Import</Trans>\n          </ButtonPrimary>\n          {addError ? (\n            <ThemedText.Error title={addError} style={{ textOverflow: 'ellipsis', overflow: 'hidden' }} error>\n              {addError}\n            </ThemedText.Error>\n          ) : null}\n        </AutoColumn>\n        {/* </Card> */}\n      </PaddedColumn>\n    </Wrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}