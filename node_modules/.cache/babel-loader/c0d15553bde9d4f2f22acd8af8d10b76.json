{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/safahi/Downloads/interface-4.30.1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import{Protocol}from'@uniswap/router-sdk';import{routeAmountsToString}from'@uniswap/smart-order-router';// from routing-api (https://github.com/Uniswap/routing-api/blob/main/lib/handlers/quote/quote.ts#L243-L311)\nexport function transformSwapRouteToGetQuoteResult(type,amount,_ref){var quote=_ref.quote,quoteGasAdjusted=_ref.quoteGasAdjusted,route=_ref.route,estimatedGasUsed=_ref.estimatedGasUsed,estimatedGasUsedQuoteToken=_ref.estimatedGasUsedQuoteToken,estimatedGasUsedUSD=_ref.estimatedGasUsedUSD,gasPriceWei=_ref.gasPriceWei,methodParameters=_ref.methodParameters,blockNumber=_ref.blockNumber;var routeResponse=[];var _iterator=_createForOfIteratorHelper(route),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var subRoute=_step.value;var _amount=subRoute.amount,_quote=subRoute.quote,tokenPath=subRoute.tokenPath;if(subRoute.protocol===Protocol.V3){var pools=subRoute.route.pools;var curRoute=[];for(var i=0;i<pools.length;i++){var nextPool=pools[i];var tokenIn=tokenPath[i];var tokenOut=tokenPath[i+1];var edgeAmountIn=undefined;if(i===0){edgeAmountIn=type==='exactIn'?_amount.quotient.toString():_quote.quotient.toString();}var edgeAmountOut=undefined;if(i===pools.length-1){edgeAmountOut=type==='exactIn'?_quote.quotient.toString():_amount.quotient.toString();}curRoute.push({type:'v3-pool',tokenIn:{chainId:tokenIn.chainId,decimals:tokenIn.decimals,address:tokenIn.address,symbol:tokenIn.symbol},tokenOut:{chainId:tokenOut.chainId,decimals:tokenOut.decimals,address:tokenOut.address,symbol:tokenOut.symbol},fee:nextPool.fee.toString(),liquidity:nextPool.liquidity.toString(),sqrtRatioX96:nextPool.sqrtRatioX96.toString(),tickCurrent:nextPool.tickCurrent.toString(),amountIn:edgeAmountIn,amountOut:edgeAmountOut});}routeResponse.push(curRoute);}else if(subRoute.protocol===Protocol.V2){var _pools=subRoute.route.pairs;var _curRoute=[];for(var _i=0;_i<_pools.length;_i++){var _nextPool=_pools[_i];var _tokenIn=tokenPath[_i];var _tokenOut=tokenPath[_i+1];var _edgeAmountIn=undefined;if(_i===0){_edgeAmountIn=type==='exactIn'?_amount.quotient.toString():_quote.quotient.toString();}var _edgeAmountOut=undefined;if(_i===_pools.length-1){_edgeAmountOut=type==='exactIn'?_quote.quotient.toString():_amount.quotient.toString();}var reserve0=_nextPool.reserve0;var reserve1=_nextPool.reserve1;_curRoute.push({type:'v2-pool',tokenIn:{chainId:_tokenIn.chainId,decimals:_tokenIn.decimals,address:_tokenIn.address,symbol:_tokenIn.symbol},tokenOut:{chainId:_tokenOut.chainId,decimals:_tokenOut.decimals,address:_tokenOut.address,symbol:_tokenOut.symbol},reserve0:{token:{chainId:reserve0.currency.wrapped.chainId,decimals:reserve0.currency.wrapped.decimals,address:reserve0.currency.wrapped.address,symbol:reserve0.currency.wrapped.symbol},quotient:reserve0.quotient.toString()},reserve1:{token:{chainId:reserve1.currency.wrapped.chainId,decimals:reserve1.currency.wrapped.decimals,address:reserve1.currency.wrapped.address,symbol:reserve1.currency.wrapped.symbol},quotient:reserve1.quotient.toString()},amountIn:_edgeAmountIn,amountOut:_edgeAmountOut});}routeResponse.push(_curRoute);}}}catch(err){_iterator.e(err);}finally{_iterator.f();}var result={methodParameters:methodParameters,blockNumber:blockNumber.toString(),amount:amount.quotient.toString(),amountDecimals:amount.toExact(),quote:quote.quotient.toString(),quoteDecimals:quote.toExact(),quoteGasAdjusted:quoteGasAdjusted.quotient.toString(),quoteGasAdjustedDecimals:quoteGasAdjusted.toExact(),gasUseEstimateQuote:estimatedGasUsedQuoteToken.quotient.toString(),gasUseEstimateQuoteDecimals:estimatedGasUsedQuoteToken.toExact(),gasUseEstimate:estimatedGasUsed.toString(),gasUseEstimateUSD:estimatedGasUsedUSD.toExact(),gasPriceWei:gasPriceWei.toString(),route:routeResponse,routeString:routeAmountsToString(route)};return result;}","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/utils/transformSwapRouteToGetQuoteResult.ts"],"names":["Protocol","routeAmountsToString","transformSwapRouteToGetQuoteResult","type","amount","quote","quoteGasAdjusted","route","estimatedGasUsed","estimatedGasUsedQuoteToken","estimatedGasUsedUSD","gasPriceWei","methodParameters","blockNumber","routeResponse","subRoute","tokenPath","protocol","V3","pools","curRoute","i","length","nextPool","tokenIn","tokenOut","edgeAmountIn","undefined","quotient","toString","edgeAmountOut","push","chainId","decimals","address","symbol","fee","liquidity","sqrtRatioX96","tickCurrent","amountIn","amountOut","V2","pairs","reserve0","reserve1","token","currency","wrapped","result","amountDecimals","toExact","quoteDecimals","quoteGasAdjustedDecimals","gasUseEstimateQuote","gasUseEstimateQuoteDecimals","gasUseEstimate","gasUseEstimateUSD","routeString"],"mappings":"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","sourcesContent":["import { Protocol } from '@uniswap/router-sdk'\nimport { Currency, CurrencyAmount } from '@uniswap/sdk-core'\nimport { routeAmountsToString, SwapRoute } from '@uniswap/smart-order-router'\nimport { GetQuoteResult, V2PoolInRoute, V3PoolInRoute } from 'state/routing/types'\n\n// from routing-api (https://github.com/Uniswap/routing-api/blob/main/lib/handlers/quote/quote.ts#L243-L311)\nexport function transformSwapRouteToGetQuoteResult(\n  type: 'exactIn' | 'exactOut',\n  amount: CurrencyAmount<Currency>,\n  {\n    quote,\n    quoteGasAdjusted,\n    route,\n    estimatedGasUsed,\n    estimatedGasUsedQuoteToken,\n    estimatedGasUsedUSD,\n    gasPriceWei,\n    methodParameters,\n    blockNumber,\n  }: SwapRoute\n): GetQuoteResult {\n  const routeResponse: Array<V3PoolInRoute[] | V2PoolInRoute[]> = []\n\n  for (const subRoute of route) {\n    const { amount, quote, tokenPath } = subRoute\n\n    if (subRoute.protocol === Protocol.V3) {\n      const pools = subRoute.route.pools\n      const curRoute: V3PoolInRoute[] = []\n      for (let i = 0; i < pools.length; i++) {\n        const nextPool = pools[i]\n        const tokenIn = tokenPath[i]\n        const tokenOut = tokenPath[i + 1]\n\n        let edgeAmountIn = undefined\n        if (i === 0) {\n          edgeAmountIn = type === 'exactIn' ? amount.quotient.toString() : quote.quotient.toString()\n        }\n\n        let edgeAmountOut = undefined\n        if (i === pools.length - 1) {\n          edgeAmountOut = type === 'exactIn' ? quote.quotient.toString() : amount.quotient.toString()\n        }\n\n        curRoute.push({\n          type: 'v3-pool',\n          tokenIn: {\n            chainId: tokenIn.chainId,\n            decimals: tokenIn.decimals,\n            address: tokenIn.address,\n            symbol: tokenIn.symbol,\n          },\n          tokenOut: {\n            chainId: tokenOut.chainId,\n            decimals: tokenOut.decimals,\n            address: tokenOut.address,\n            symbol: tokenOut.symbol,\n          },\n          fee: nextPool.fee.toString(),\n          liquidity: nextPool.liquidity.toString(),\n          sqrtRatioX96: nextPool.sqrtRatioX96.toString(),\n          tickCurrent: nextPool.tickCurrent.toString(),\n          amountIn: edgeAmountIn,\n          amountOut: edgeAmountOut,\n        })\n      }\n\n      routeResponse.push(curRoute)\n    } else if (subRoute.protocol === Protocol.V2) {\n      const pools = subRoute.route.pairs\n      const curRoute: V2PoolInRoute[] = []\n      for (let i = 0; i < pools.length; i++) {\n        const nextPool = pools[i]\n        const tokenIn = tokenPath[i]\n        const tokenOut = tokenPath[i + 1]\n\n        let edgeAmountIn = undefined\n        if (i === 0) {\n          edgeAmountIn = type === 'exactIn' ? amount.quotient.toString() : quote.quotient.toString()\n        }\n\n        let edgeAmountOut = undefined\n        if (i === pools.length - 1) {\n          edgeAmountOut = type === 'exactIn' ? quote.quotient.toString() : amount.quotient.toString()\n        }\n\n        const reserve0 = nextPool.reserve0\n        const reserve1 = nextPool.reserve1\n\n        curRoute.push({\n          type: 'v2-pool',\n          tokenIn: {\n            chainId: tokenIn.chainId,\n            decimals: tokenIn.decimals,\n            address: tokenIn.address,\n            symbol: tokenIn.symbol,\n          },\n          tokenOut: {\n            chainId: tokenOut.chainId,\n            decimals: tokenOut.decimals,\n            address: tokenOut.address,\n            symbol: tokenOut.symbol,\n          },\n          reserve0: {\n            token: {\n              chainId: reserve0.currency.wrapped.chainId,\n              decimals: reserve0.currency.wrapped.decimals,\n              address: reserve0.currency.wrapped.address,\n              symbol: reserve0.currency.wrapped.symbol,\n            },\n            quotient: reserve0.quotient.toString(),\n          },\n          reserve1: {\n            token: {\n              chainId: reserve1.currency.wrapped.chainId,\n              decimals: reserve1.currency.wrapped.decimals,\n              address: reserve1.currency.wrapped.address,\n              symbol: reserve1.currency.wrapped.symbol,\n            },\n            quotient: reserve1.quotient.toString(),\n          },\n          amountIn: edgeAmountIn,\n          amountOut: edgeAmountOut,\n        })\n      }\n\n      routeResponse.push(curRoute)\n    }\n  }\n\n  const result: GetQuoteResult = {\n    methodParameters,\n    blockNumber: blockNumber.toString(),\n    amount: amount.quotient.toString(),\n    amountDecimals: amount.toExact(),\n    quote: quote.quotient.toString(),\n    quoteDecimals: quote.toExact(),\n    quoteGasAdjusted: quoteGasAdjusted.quotient.toString(),\n    quoteGasAdjustedDecimals: quoteGasAdjusted.toExact(),\n    gasUseEstimateQuote: estimatedGasUsedQuoteToken.quotient.toString(),\n    gasUseEstimateQuoteDecimals: estimatedGasUsedQuoteToken.toExact(),\n    gasUseEstimate: estimatedGasUsed.toString(),\n    gasUseEstimateUSD: estimatedGasUsedUSD.toExact(),\n    gasPriceWei: gasPriceWei.toString(),\n    route: routeResponse,\n    routeString: routeAmountsToString(route),\n  }\n\n  return result\n}\n"]},"metadata":{},"sourceType":"module"}