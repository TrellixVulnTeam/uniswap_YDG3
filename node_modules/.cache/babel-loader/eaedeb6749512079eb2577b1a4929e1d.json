{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$(),\n    _s8 = $RefreshSig$(),\n    _s9 = $RefreshSig$(),\n    _s10 = $RefreshSig$(),\n    _s11 = $RefreshSig$(),\n    _s12 = $RefreshSig$(),\n    _s13 = $RefreshSig$(),\n    _s14 = $RefreshSig$(),\n    _s15 = $RefreshSig$(),\n    _s16 = $RefreshSig$(),\n    _s17 = $RefreshSig$(),\n    _s18 = $RefreshSig$();\n\nimport { Percent, Token } from '@uniswap/sdk-core';\nimport { computePairAddress } from '@uniswap/v2-sdk';\nimport { L2_CHAIN_IDS } from 'constants/chains';\nimport { L2_DEADLINE_FROM_NOW } from 'constants/misc';\nimport JSBI from 'jsbi';\nimport { useCallback, useMemo } from 'react';\nimport { shallowEqual } from 'react-redux';\nimport { useAppDispatch, useAppSelector } from 'state/hooks';\nimport { V2_FACTORY_ADDRESSES } from '../../constants/addresses';\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from '../../constants/routing';\nimport { useAllTokens } from '../../hooks/Tokens';\nimport { useActiveWeb3React } from '../../hooks/web3';\nimport { addSerializedPair, addSerializedToken, removeSerializedToken, updateHideClosedPositions, updateUserClientSideRouter, updateUserDarkMode, updateUserDeadline, updateUserExpertMode, updateUserLocale, updateUserSlippageTolerance } from './actions';\n\nfunction serializeToken(token) {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name\n  };\n}\n\nfunction deserializeToken(serializedToken) {\n  return new Token(serializedToken.chainId, serializedToken.address, serializedToken.decimals, serializedToken.symbol, serializedToken.name);\n}\n\nexport function useIsDarkMode() {\n  _s();\n\n  const {\n    userDarkMode,\n    matchesDarkMode\n  } = useAppSelector(({\n    user: {\n      matchesDarkMode,\n      userDarkMode\n    }\n  }) => ({\n    userDarkMode,\n    matchesDarkMode\n  }), shallowEqual);\n  return userDarkMode === null ? matchesDarkMode : userDarkMode;\n}\n\n_s(useIsDarkMode, \"kDetlrcb1KAucqiqqWhHZNG5DvE=\", false, function () {\n  return [useAppSelector];\n});\n\nexport function useDarkModeManager() {\n  _s2();\n\n  const dispatch = useAppDispatch();\n  const darkMode = useIsDarkMode();\n  const toggleSetDarkMode = useCallback(() => {\n    dispatch(updateUserDarkMode({\n      userDarkMode: !darkMode\n    }));\n  }, [darkMode, dispatch]);\n  return [darkMode, toggleSetDarkMode];\n}\n\n_s2(useDarkModeManager, \"yb97mOnsvylpbPbKPKVpk4l7+/E=\", false, function () {\n  return [useAppDispatch, useIsDarkMode];\n});\n\nexport function useUserLocale() {\n  _s3();\n\n  return useAppSelector(state => state.user.userLocale);\n}\n\n_s3(useUserLocale, \"bRaY7Fsh/GrWHjZMhGvF04Z7BZI=\", false, function () {\n  return [useAppSelector];\n});\n\nexport function useUserLocaleManager() {\n  _s4();\n\n  const dispatch = useAppDispatch();\n  const locale = useUserLocale();\n  const setLocale = useCallback(newLocale => {\n    dispatch(updateUserLocale({\n      userLocale: newLocale\n    }));\n  }, [dispatch]);\n  return [locale, setLocale];\n}\n\n_s4(useUserLocaleManager, \"/2yPrtUZ6T42PZGdNtf19U6ueCI=\", false, function () {\n  return [useAppDispatch, useUserLocale];\n});\n\nexport function useIsExpertMode() {\n  _s5();\n\n  return useAppSelector(state => state.user.userExpertMode);\n}\n\n_s5(useIsExpertMode, \"bRaY7Fsh/GrWHjZMhGvF04Z7BZI=\", false, function () {\n  return [useAppSelector];\n});\n\nexport function useExpertModeManager() {\n  _s6();\n\n  const dispatch = useAppDispatch();\n  const expertMode = useIsExpertMode();\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({\n      userExpertMode: !expertMode\n    }));\n  }, [expertMode, dispatch]);\n  return [expertMode, toggleSetExpertMode];\n}\n\n_s6(useExpertModeManager, \"NICgZLOjDAdTnm82TefdTjIHIEc=\", false, function () {\n  return [useAppDispatch, useIsExpertMode];\n});\n\nexport function useClientSideRouter() {\n  _s7();\n\n  const dispatch = useAppDispatch();\n  const clientSideRouter = useAppSelector(state => Boolean(state.user.userClientSideRouter));\n  const setClientSideRouter = useCallback(newClientSideRouter => {\n    dispatch(updateUserClientSideRouter({\n      userClientSideRouter: newClientSideRouter\n    }));\n  }, [dispatch]);\n  return [clientSideRouter, setClientSideRouter];\n}\n\n_s7(useClientSideRouter, \"HynwrfgFKtwvLSLWNwQjeHFl0Wo=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\n\nexport function useSetUserSlippageTolerance() {\n  _s8();\n\n  const dispatch = useAppDispatch();\n  return useCallback(userSlippageTolerance => {\n    let value;\n\n    try {\n      value = userSlippageTolerance === 'auto' ? 'auto' : JSBI.toNumber(userSlippageTolerance.multiply(10000).quotient);\n    } catch (error) {\n      value = 'auto';\n    }\n\n    dispatch(updateUserSlippageTolerance({\n      userSlippageTolerance: value\n    }));\n  }, [dispatch]);\n}\n/**\n * Return the user's slippage tolerance, from the redux store, and a function to update the slippage tolerance\n */\n\n_s8(useSetUserSlippageTolerance, \"OqBVLt6aN3sywE9xSMcloJ9SYsA=\", false, function () {\n  return [useAppDispatch];\n});\n\nexport function useUserSlippageTolerance() {\n  _s9();\n\n  const userSlippageTolerance = useAppSelector(state => {\n    return state.user.userSlippageTolerance;\n  });\n  return useMemo(() => userSlippageTolerance === 'auto' ? 'auto' : new Percent(userSlippageTolerance, 10000), [userSlippageTolerance]);\n}\n\n_s9(useUserSlippageTolerance, \"Sz528My4Rp9s1UoF5vWM/RqrAi4=\", false, function () {\n  return [useAppSelector];\n});\n\nexport function useUserHideClosedPositions() {\n  _s10();\n\n  const dispatch = useAppDispatch();\n  const hideClosedPositions = useAppSelector(state => state.user.userHideClosedPositions);\n  const setHideClosedPositions = useCallback(newHideClosedPositions => {\n    dispatch(updateHideClosedPositions({\n      userHideClosedPositions: newHideClosedPositions\n    }));\n  }, [dispatch]);\n  return [hideClosedPositions, setHideClosedPositions];\n}\n/**\n * Same as above but replaces the auto with a default value\n * @param defaultSlippageTolerance the default value to replace auto with\n */\n\n_s10(useUserHideClosedPositions, \"Vcmo1HP+P+HDRDTxyVzY57SqCS0=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\n\nexport function useUserSlippageToleranceWithDefault(defaultSlippageTolerance) {\n  _s11();\n\n  const allowedSlippage = useUserSlippageTolerance();\n  return useMemo(() => allowedSlippage === 'auto' ? defaultSlippageTolerance : allowedSlippage, [allowedSlippage, defaultSlippageTolerance]);\n}\n\n_s11(useUserSlippageToleranceWithDefault, \"d7hL9RU2rCPhBQs8VeQJ2aEGhoU=\", false, function () {\n  return [useUserSlippageTolerance];\n});\n\nexport function useUserTransactionTTL() {\n  _s12();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const dispatch = useAppDispatch();\n  const userDeadline = useAppSelector(state => state.user.userDeadline);\n  const onL2 = Boolean(chainId && L2_CHAIN_IDS.includes(chainId));\n  const deadline = onL2 ? L2_DEADLINE_FROM_NOW : userDeadline;\n  const setUserDeadline = useCallback(userDeadline => {\n    dispatch(updateUserDeadline({\n      userDeadline\n    }));\n  }, [dispatch]);\n  return [deadline, setUserDeadline];\n}\n\n_s12(useUserTransactionTTL, \"M/bIlMqqTIZqoBWZ79iJLTXPT+k=\", false, function () {\n  return [useActiveWeb3React, useAppDispatch, useAppSelector];\n});\n\nexport function useAddUserToken() {\n  _s13();\n\n  const dispatch = useAppDispatch();\n  return useCallback(token => {\n    dispatch(addSerializedToken({\n      serializedToken: serializeToken(token)\n    }));\n  }, [dispatch]);\n}\n\n_s13(useAddUserToken, \"OqBVLt6aN3sywE9xSMcloJ9SYsA=\", false, function () {\n  return [useAppDispatch];\n});\n\nexport function useRemoveUserAddedToken() {\n  _s14();\n\n  const dispatch = useAppDispatch();\n  return useCallback((chainId, address) => {\n    dispatch(removeSerializedToken({\n      chainId,\n      address\n    }));\n  }, [dispatch]);\n}\n\n_s14(useRemoveUserAddedToken, \"OqBVLt6aN3sywE9xSMcloJ9SYsA=\", false, function () {\n  return [useAppDispatch];\n});\n\nexport function useUserAddedTokens() {\n  _s15();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const serializedTokensMap = useAppSelector(({\n    user: {\n      tokens\n    }\n  }) => tokens);\n  return useMemo(() => {\n    var _serializedTokensMap$;\n\n    if (!chainId) return [];\n    return Object.values((_serializedTokensMap$ = serializedTokensMap === null || serializedTokensMap === void 0 ? void 0 : serializedTokensMap[chainId]) !== null && _serializedTokensMap$ !== void 0 ? _serializedTokensMap$ : {}).map(deserializeToken);\n  }, [serializedTokensMap, chainId]);\n}\n\n_s15(useUserAddedTokens, \"vRUjVmoviITFf1GxjdsmM90SW7I=\", false, function () {\n  return [useActiveWeb3React, useAppSelector];\n});\n\nfunction serializePair(pair) {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1)\n  };\n}\n\nexport function usePairAdder() {\n  _s16();\n\n  const dispatch = useAppDispatch();\n  return useCallback(pair => {\n    dispatch(addSerializedPair({\n      serializedPair: serializePair(pair)\n    }));\n  }, [dispatch]);\n}\n\n_s16(usePairAdder, \"OqBVLt6aN3sywE9xSMcloJ9SYsA=\", false, function () {\n  return [useAppDispatch];\n});\n\nexport function useURLWarningVisible() {\n  _s17();\n\n  return useAppSelector(state => state.user.URLWarningVisible);\n}\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\n\n_s17(useURLWarningVisible, \"bRaY7Fsh/GrWHjZMhGvF04Z7BZI=\", false, function () {\n  return [useAppSelector];\n});\n\nexport function toV2LiquidityToken([tokenA, tokenB]) {\n  if (tokenA.chainId !== tokenB.chainId) throw new Error('Not matching chain IDs');\n  if (tokenA.equals(tokenB)) throw new Error('Tokens cannot be equal');\n  if (!V2_FACTORY_ADDRESSES[tokenA.chainId]) throw new Error('No V2 factory address on this chain');\n  return new Token(tokenA.chainId, computePairAddress({\n    factoryAddress: V2_FACTORY_ADDRESSES[tokenA.chainId],\n    tokenA,\n    tokenB\n  }), 18, 'UNI-V2', 'Uniswap V2');\n}\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\n\nexport function useTrackedTokenPairs() {\n  _s18();\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const tokens = useAllTokens(); // pinned pairs\n\n  const pinnedPairs = useMemo(() => {\n    var _PINNED_PAIRS$chainId;\n\n    return chainId ? (_PINNED_PAIRS$chainId = PINNED_PAIRS[chainId]) !== null && _PINNED_PAIRS$chainId !== void 0 ? _PINNED_PAIRS$chainId : [] : [];\n  }, [chainId]); // pairs for every token against every base\n\n  const generatedPairs = useMemo(() => chainId ? Object.keys(tokens).flatMap(tokenAddress => {\n    var _BASES_TO_TRACK_LIQUI;\n\n    const token = tokens[tokenAddress]; // for each token on the current chain,\n\n    return (// loop though all bases on the current chain\n      ((_BASES_TO_TRACK_LIQUI = BASES_TO_TRACK_LIQUIDITY_FOR[chainId]) !== null && _BASES_TO_TRACK_LIQUI !== void 0 ? _BASES_TO_TRACK_LIQUI : []).map(base => {\n        if (base.address === token.address) {\n          return null;\n        } else {\n          return [base, token];\n        }\n      }).filter(p => p !== null)\n    );\n  }) : [], [tokens, chainId]); // pairs saved by users\n\n  const savedSerializedPairs = useAppSelector(({\n    user: {\n      pairs\n    }\n  }) => pairs);\n  const userPairs = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return [];\n    const forChain = savedSerializedPairs[chainId];\n    if (!forChain) return [];\n    return Object.keys(forChain).map(pairId => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)];\n    });\n  }, [savedSerializedPairs, chainId]);\n  const combinedList = useMemo(() => userPairs.concat(generatedPairs).concat(pinnedPairs), [generatedPairs, pinnedPairs, userPairs]);\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB);\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`;\n      if (memo[key]) return memo;\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA];\n      return memo;\n    }, {});\n    return Object.keys(keyed).map(key => keyed[key]);\n  }, [combinedList]);\n}\n\n_s18(useTrackedTokenPairs, \"qiHiICRpt90Dre7r4IglEsLOL4Q=\", false, function () {\n  return [useActiveWeb3React, useAllTokens, useAppSelector];\n});","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/state/user/hooks.tsx"],"names":["Percent","Token","computePairAddress","L2_CHAIN_IDS","L2_DEADLINE_FROM_NOW","JSBI","useCallback","useMemo","shallowEqual","useAppDispatch","useAppSelector","V2_FACTORY_ADDRESSES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","useAllTokens","useActiveWeb3React","addSerializedPair","addSerializedToken","removeSerializedToken","updateHideClosedPositions","updateUserClientSideRouter","updateUserDarkMode","updateUserDeadline","updateUserExpertMode","updateUserLocale","updateUserSlippageTolerance","serializeToken","token","chainId","address","decimals","symbol","name","deserializeToken","serializedToken","useIsDarkMode","userDarkMode","matchesDarkMode","user","useDarkModeManager","dispatch","darkMode","toggleSetDarkMode","useUserLocale","state","userLocale","useUserLocaleManager","locale","setLocale","newLocale","useIsExpertMode","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","useClientSideRouter","clientSideRouter","Boolean","userClientSideRouter","setClientSideRouter","newClientSideRouter","useSetUserSlippageTolerance","userSlippageTolerance","value","toNumber","multiply","quotient","error","useUserSlippageTolerance","useUserHideClosedPositions","hideClosedPositions","userHideClosedPositions","setHideClosedPositions","newHideClosedPositions","useUserSlippageToleranceWithDefault","defaultSlippageTolerance","allowedSlippage","useUserTransactionTTL","userDeadline","onL2","includes","deadline","setUserDeadline","useAddUserToken","useRemoveUserAddedToken","useUserAddedTokens","serializedTokensMap","tokens","Object","values","map","serializePair","pair","token0","token1","usePairAdder","serializedPair","useURLWarningVisible","URLWarningVisible","toV2LiquidityToken","tokenA","tokenB","Error","equals","factoryAddress","useTrackedTokenPairs","pinnedPairs","generatedPairs","keys","flatMap","tokenAddress","base","filter","p","savedSerializedPairs","pairs","userPairs","forChain","pairId","combinedList","concat","keyed","reduce","memo","sorted","sortsBefore","key"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,SAASA,OAAT,EAAkBC,KAAlB,QAA+B,mBAA/B;AACA,SAASC,kBAAT,QAAyC,iBAAzC;AACA,SAASC,YAAT,QAA6B,kBAA7B;AAEA,SAASC,oBAAT,QAAqC,gBAArC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,OAArC;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,aAA/C;AAEA,SAASC,oBAAT,QAAqC,2BAArC;AACA,SAASC,4BAAT,EAAuCC,YAAvC,QAA2D,yBAA3D;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AAEA,SACEC,iBADF,EAEEC,kBAFF,EAGEC,qBAHF,EAMEC,yBANF,EAOEC,0BAPF,EAQEC,kBARF,EASEC,kBATF,EAUEC,oBAVF,EAWEC,gBAXF,EAYEC,2BAZF,QAaO,WAbP;;AAeA,SAASC,cAAT,CAAwBC,KAAxB,EAAuD;AACrD,SAAO;AACLC,IAAAA,OAAO,EAAED,KAAK,CAACC,OADV;AAELC,IAAAA,OAAO,EAAEF,KAAK,CAACE,OAFV;AAGLC,IAAAA,QAAQ,EAAEH,KAAK,CAACG,QAHX;AAILC,IAAAA,MAAM,EAAEJ,KAAK,CAACI,MAJT;AAKLC,IAAAA,IAAI,EAAEL,KAAK,CAACK;AALP,GAAP;AAOD;;AAED,SAASC,gBAAT,CAA0BC,eAA1B,EAAmE;AACjE,SAAO,IAAIjC,KAAJ,CACLiC,eAAe,CAACN,OADX,EAELM,eAAe,CAACL,OAFX,EAGLK,eAAe,CAACJ,QAHX,EAILI,eAAe,CAACH,MAJX,EAKLG,eAAe,CAACF,IALX,CAAP;AAOD;;AAED,OAAO,SAASG,aAAT,GAAkC;AAAA;;AACvC,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAoC3B,cAAc,CACtD,CAAC;AAAE4B,IAAAA,IAAI,EAAE;AAAED,MAAAA,eAAF;AAAmBD,MAAAA;AAAnB;AAAR,GAAD,MAAkD;AAChDA,IAAAA,YADgD;AAEhDC,IAAAA;AAFgD,GAAlD,CADsD,EAKtD7B,YALsD,CAAxD;AAQA,SAAO4B,YAAY,KAAK,IAAjB,GAAwBC,eAAxB,GAA0CD,YAAjD;AACD;;GAVeD,a;UAC4BzB,c;;;AAW5C,OAAO,SAAS6B,kBAAT,GAAqD;AAAA;;AAC1D,QAAMC,QAAQ,GAAG/B,cAAc,EAA/B;AACA,QAAMgC,QAAQ,GAAGN,aAAa,EAA9B;AAEA,QAAMO,iBAAiB,GAAGpC,WAAW,CAAC,MAAM;AAC1CkC,IAAAA,QAAQ,CAACnB,kBAAkB,CAAC;AAAEe,MAAAA,YAAY,EAAE,CAACK;AAAjB,KAAD,CAAnB,CAAR;AACD,GAFoC,EAElC,CAACA,QAAD,EAAWD,QAAX,CAFkC,CAArC;AAIA,SAAO,CAACC,QAAD,EAAWC,iBAAX,CAAP;AACD;;IATeH,kB;UACG9B,c,EACA0B,a;;;AASnB,OAAO,SAASQ,aAAT,GAAiD;AAAA;;AACtD,SAAOjC,cAAc,CAAEkC,KAAD,IAAWA,KAAK,CAACN,IAAN,CAAWO,UAAvB,CAArB;AACD;;IAFeF,a;UACPjC,c;;;AAGT,OAAO,SAASoC,oBAAT,GAAgG;AAAA;;AACrG,QAAMN,QAAQ,GAAG/B,cAAc,EAA/B;AACA,QAAMsC,MAAM,GAAGJ,aAAa,EAA5B;AAEA,QAAMK,SAAS,GAAG1C,WAAW,CAC1B2C,SAAD,IAAgC;AAC9BT,IAAAA,QAAQ,CAAChB,gBAAgB,CAAC;AAAEqB,MAAAA,UAAU,EAAEI;AAAd,KAAD,CAAjB,CAAR;AACD,GAH0B,EAI3B,CAACT,QAAD,CAJ2B,CAA7B;AAOA,SAAO,CAACO,MAAD,EAASC,SAAT,CAAP;AACD;;IAZeF,oB;UACGrC,c,EACFkC,a;;;AAYjB,OAAO,SAASO,eAAT,GAAoC;AAAA;;AACzC,SAAOxC,cAAc,CAAEkC,KAAD,IAAWA,KAAK,CAACN,IAAN,CAAWa,cAAvB,CAArB;AACD;;IAFeD,e;UACPxC,c;;;AAGT,OAAO,SAAS0C,oBAAT,GAAuD;AAAA;;AAC5D,QAAMZ,QAAQ,GAAG/B,cAAc,EAA/B;AACA,QAAM4C,UAAU,GAAGH,eAAe,EAAlC;AAEA,QAAMI,mBAAmB,GAAGhD,WAAW,CAAC,MAAM;AAC5CkC,IAAAA,QAAQ,CAACjB,oBAAoB,CAAC;AAAE4B,MAAAA,cAAc,EAAE,CAACE;AAAnB,KAAD,CAArB,CAAR;AACD,GAFsC,EAEpC,CAACA,UAAD,EAAab,QAAb,CAFoC,CAAvC;AAIA,SAAO,CAACa,UAAD,EAAaC,mBAAb,CAAP;AACD;;IATeF,oB;UACG3C,c,EACEyC,e;;;AASrB,OAAO,SAASK,mBAAT,GAAmF;AAAA;;AACxF,QAAMf,QAAQ,GAAG/B,cAAc,EAA/B;AAEA,QAAM+C,gBAAgB,GAAG9C,cAAc,CAAEkC,KAAD,IAAWa,OAAO,CAACb,KAAK,CAACN,IAAN,CAAWoB,oBAAZ,CAAnB,CAAvC;AAEA,QAAMC,mBAAmB,GAAGrD,WAAW,CACpCsD,mBAAD,IAAkC;AAChCpB,IAAAA,QAAQ,CAACpB,0BAA0B,CAAC;AAAEsC,MAAAA,oBAAoB,EAAEE;AAAxB,KAAD,CAA3B,CAAR;AACD,GAHoC,EAIrC,CAACpB,QAAD,CAJqC,CAAvC;AAOA,SAAO,CAACgB,gBAAD,EAAmBG,mBAAnB,CAAP;AACD;;IAbeJ,mB;UACG9C,c,EAEQC,c;;;AAY3B,OAAO,SAASmD,2BAAT,GAAsF;AAAA;;AAC3F,QAAMrB,QAAQ,GAAG/B,cAAc,EAA/B;AAEA,SAAOH,WAAW,CACfwD,qBAAD,IAA6C;AAC3C,QAAIC,KAAJ;;AACA,QAAI;AACFA,MAAAA,KAAK,GACHD,qBAAqB,KAAK,MAA1B,GAAmC,MAAnC,GAA4CzD,IAAI,CAAC2D,QAAL,CAAcF,qBAAqB,CAACG,QAAtB,CAA+B,KAA/B,EAAuCC,QAArD,CAD9C;AAED,KAHD,CAGE,OAAOC,KAAP,EAAc;AACdJ,MAAAA,KAAK,GAAG,MAAR;AACD;;AACDvB,IAAAA,QAAQ,CACNf,2BAA2B,CAAC;AAC1BqC,MAAAA,qBAAqB,EAAEC;AADG,KAAD,CADrB,CAAR;AAKD,GAde,EAehB,CAACvB,QAAD,CAfgB,CAAlB;AAiBD;AAED;AACA;AACA;;IAxBgBqB,2B;UACGpD,c;;;AAwBnB,OAAO,SAAS2D,wBAAT,GAAsD;AAAA;;AAC3D,QAAMN,qBAAqB,GAAGpD,cAAc,CAAEkC,KAAD,IAAW;AACtD,WAAOA,KAAK,CAACN,IAAN,CAAWwB,qBAAlB;AACD,GAF2C,CAA5C;AAIA,SAAOvD,OAAO,CACZ,MAAOuD,qBAAqB,KAAK,MAA1B,GAAmC,MAAnC,GAA4C,IAAI9D,OAAJ,CAAY8D,qBAAZ,EAAmC,KAAnC,CADvC,EAEZ,CAACA,qBAAD,CAFY,CAAd;AAID;;IATeM,wB;UACgB1D,c;;;AAUhC,OAAO,SAAS2D,0BAAT,GAA4F;AAAA;;AACjG,QAAM7B,QAAQ,GAAG/B,cAAc,EAA/B;AAEA,QAAM6D,mBAAmB,GAAG5D,cAAc,CAAEkC,KAAD,IAAWA,KAAK,CAACN,IAAN,CAAWiC,uBAAvB,CAA1C;AAEA,QAAMC,sBAAsB,GAAGlE,WAAW,CACvCmE,sBAAD,IAAqC;AACnCjC,IAAAA,QAAQ,CAACrB,yBAAyB,CAAC;AAAEoD,MAAAA,uBAAuB,EAAEE;AAA3B,KAAD,CAA1B,CAAR;AACD,GAHuC,EAIxC,CAACjC,QAAD,CAJwC,CAA1C;AAOA,SAAO,CAAC8B,mBAAD,EAAsBE,sBAAtB,CAAP;AACD;AAED;AACA;AACA;AACA;;KAlBgBH,0B;UACG5D,c,EAEWC,c;;;AAgB9B,OAAO,SAASgE,mCAAT,CAA6CC,wBAA7C,EAAyF;AAAA;;AAC9F,QAAMC,eAAe,GAAGR,wBAAwB,EAAhD;AACA,SAAO7D,OAAO,CACZ,MAAOqE,eAAe,KAAK,MAApB,GAA6BD,wBAA7B,GAAwDC,eADnD,EAEZ,CAACA,eAAD,EAAkBD,wBAAlB,CAFY,CAAd;AAID;;KANeD,mC;UACUN,wB;;;AAO1B,OAAO,SAASS,qBAAT,GAAuE;AAAA;;AAC5E,QAAM;AAAEjD,IAAAA;AAAF,MAAcb,kBAAkB,EAAtC;AACA,QAAMyB,QAAQ,GAAG/B,cAAc,EAA/B;AACA,QAAMqE,YAAY,GAAGpE,cAAc,CAAEkC,KAAD,IAAWA,KAAK,CAACN,IAAN,CAAWwC,YAAvB,CAAnC;AACA,QAAMC,IAAI,GAAGtB,OAAO,CAAC7B,OAAO,IAAIzB,YAAY,CAAC6E,QAAb,CAAsBpD,OAAtB,CAAZ,CAApB;AACA,QAAMqD,QAAQ,GAAGF,IAAI,GAAG3E,oBAAH,GAA0B0E,YAA/C;AAEA,QAAMI,eAAe,GAAG5E,WAAW,CAChCwE,YAAD,IAA0B;AACxBtC,IAAAA,QAAQ,CAAClB,kBAAkB,CAAC;AAAEwD,MAAAA;AAAF,KAAD,CAAnB,CAAR;AACD,GAHgC,EAIjC,CAACtC,QAAD,CAJiC,CAAnC;AAOA,SAAO,CAACyC,QAAD,EAAWC,eAAX,CAAP;AACD;;KAfeL,qB;UACM9D,kB,EACHN,c,EACIC,c;;;AAcvB,OAAO,SAASyE,eAAT,GAAmD;AAAA;;AACxD,QAAM3C,QAAQ,GAAG/B,cAAc,EAA/B;AACA,SAAOH,WAAW,CACfqB,KAAD,IAAkB;AAChBa,IAAAA,QAAQ,CAACvB,kBAAkB,CAAC;AAAEiB,MAAAA,eAAe,EAAER,cAAc,CAACC,KAAD;AAAjC,KAAD,CAAnB,CAAR;AACD,GAHe,EAIhB,CAACa,QAAD,CAJgB,CAAlB;AAMD;;KARe2C,e;UACG1E,c;;;AASnB,OAAO,SAAS2E,uBAAT,GAA+E;AAAA;;AACpF,QAAM5C,QAAQ,GAAG/B,cAAc,EAA/B;AACA,SAAOH,WAAW,CAChB,CAACsB,OAAD,EAAkBC,OAAlB,KAAsC;AACpCW,IAAAA,QAAQ,CAACtB,qBAAqB,CAAC;AAAEU,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAAD,CAAtB,CAAR;AACD,GAHe,EAIhB,CAACW,QAAD,CAJgB,CAAlB;AAMD;;KARe4C,uB;UACG3E,c;;;AASnB,OAAO,SAAS4E,kBAAT,GAAuC;AAAA;;AAC5C,QAAM;AAAEzD,IAAAA;AAAF,MAAcb,kBAAkB,EAAtC;AACA,QAAMuE,mBAAmB,GAAG5E,cAAc,CAAC,CAAC;AAAE4B,IAAAA,IAAI,EAAE;AAAEiD,MAAAA;AAAF;AAAR,GAAD,KAA0BA,MAA3B,CAA1C;AAEA,SAAOhF,OAAO,CAAC,MAAM;AAAA;;AACnB,QAAI,CAACqB,OAAL,EAAc,OAAO,EAAP;AACd,WAAO4D,MAAM,CAACC,MAAP,0BAAcH,mBAAd,aAAcA,mBAAd,uBAAcA,mBAAmB,CAAG1D,OAAH,CAAjC,yEAAgD,EAAhD,EAAoD8D,GAApD,CAAwDzD,gBAAxD,CAAP;AACD,GAHa,EAGX,CAACqD,mBAAD,EAAsB1D,OAAtB,CAHW,CAAd;AAID;;KAReyD,kB;UACMtE,kB,EACQL,c;;;AAQ9B,SAASiF,aAAT,CAAuBC,IAAvB,EAAmD;AACjD,SAAO;AACLC,IAAAA,MAAM,EAAEnE,cAAc,CAACkE,IAAI,CAACC,MAAN,CADjB;AAELC,IAAAA,MAAM,EAAEpE,cAAc,CAACkE,IAAI,CAACE,MAAN;AAFjB,GAAP;AAID;;AAED,OAAO,SAASC,YAAT,GAA8C;AAAA;;AACnD,QAAMvD,QAAQ,GAAG/B,cAAc,EAA/B;AAEA,SAAOH,WAAW,CACfsF,IAAD,IAAgB;AACdpD,IAAAA,QAAQ,CAACxB,iBAAiB,CAAC;AAAEgF,MAAAA,cAAc,EAAEL,aAAa,CAACC,IAAD;AAA/B,KAAD,CAAlB,CAAR;AACD,GAHe,EAIhB,CAACpD,QAAD,CAJgB,CAAlB;AAMD;;KATeuD,Y;UACGtF,c;;;AAUnB,OAAO,SAASwF,oBAAT,GAAyC;AAAA;;AAC9C,SAAOvF,cAAc,CAAEkC,KAAD,IAAqBA,KAAK,CAACN,IAAN,CAAW4D,iBAAjC,CAArB;AACD;AAED;AACA;AACA;AACA;AACA;;KARgBD,oB;UACPvF,c;;;AAQT,OAAO,SAASyF,kBAAT,CAA4B,CAACC,MAAD,EAASC,MAAT,CAA5B,EAAqE;AAC1E,MAAID,MAAM,CAACxE,OAAP,KAAmByE,MAAM,CAACzE,OAA9B,EAAuC,MAAM,IAAI0E,KAAJ,CAAU,wBAAV,CAAN;AACvC,MAAIF,MAAM,CAACG,MAAP,CAAcF,MAAd,CAAJ,EAA2B,MAAM,IAAIC,KAAJ,CAAU,wBAAV,CAAN;AAC3B,MAAI,CAAC3F,oBAAoB,CAACyF,MAAM,CAACxE,OAAR,CAAzB,EAA2C,MAAM,IAAI0E,KAAJ,CAAU,qCAAV,CAAN;AAE3C,SAAO,IAAIrG,KAAJ,CACLmG,MAAM,CAACxE,OADF,EAEL1B,kBAAkB,CAAC;AAAEsG,IAAAA,cAAc,EAAE7F,oBAAoB,CAACyF,MAAM,CAACxE,OAAR,CAAtC;AAAwDwE,IAAAA,MAAxD;AAAgEC,IAAAA;AAAhE,GAAD,CAFb,EAGL,EAHK,EAIL,QAJK,EAKL,YALK,CAAP;AAOD;AAED;AACA;AACA;;AACA,OAAO,SAASI,oBAAT,GAAkD;AAAA;;AACvD,QAAM;AAAE7E,IAAAA;AAAF,MAAcb,kBAAkB,EAAtC;AACA,QAAMwE,MAAM,GAAGzE,YAAY,EAA3B,CAFuD,CAIvD;;AACA,QAAM4F,WAAW,GAAGnG,OAAO,CAAC;AAAA;;AAAA,WAAOqB,OAAO,4BAAGf,YAAY,CAACe,OAAD,CAAf,yEAA4B,EAA5B,GAAiC,EAA/C;AAAA,GAAD,EAAqD,CAACA,OAAD,CAArD,CAA3B,CALuD,CAOvD;;AACA,QAAM+E,cAAgC,GAAGpG,OAAO,CAC9C,MACEqB,OAAO,GACH4D,MAAM,CAACoB,IAAP,CAAYrB,MAAZ,EAAoBsB,OAApB,CAA6BC,YAAD,IAAkB;AAAA;;AAC5C,UAAMnF,KAAK,GAAG4D,MAAM,CAACuB,YAAD,CAApB,CAD4C,CAE5C;;AACA,WACE;AACA,gCAAClG,4BAA4B,CAACgB,OAAD,CAA7B,yEAA0C,EAA1C,EAEG8D,GAFH,CAEQqB,IAAD,IAAU;AACb,YAAIA,IAAI,CAAClF,OAAL,KAAiBF,KAAK,CAACE,OAA3B,EAAoC;AAClC,iBAAO,IAAP;AACD,SAFD,MAEO;AACL,iBAAO,CAACkF,IAAD,EAAOpF,KAAP,CAAP;AACD;AACF,OARH,EASGqF,MATH,CASWC,CAAD,IAA4BA,CAAC,KAAK,IAT5C;AAFF;AAaD,GAhBD,CADG,GAkBH,EApBwC,EAqB9C,CAAC1B,MAAD,EAAS3D,OAAT,CArB8C,CAAhD,CARuD,CAgCvD;;AACA,QAAMsF,oBAAoB,GAAGxG,cAAc,CAAC,CAAC;AAAE4B,IAAAA,IAAI,EAAE;AAAE6E,MAAAA;AAAF;AAAR,GAAD,KAAyBA,KAA1B,CAA3C;AAEA,QAAMC,SAA2B,GAAG7G,OAAO,CAAC,MAAM;AAChD,QAAI,CAACqB,OAAD,IAAY,CAACsF,oBAAjB,EAAuC,OAAO,EAAP;AACvC,UAAMG,QAAQ,GAAGH,oBAAoB,CAACtF,OAAD,CAArC;AACA,QAAI,CAACyF,QAAL,EAAe,OAAO,EAAP;AAEf,WAAO7B,MAAM,CAACoB,IAAP,CAAYS,QAAZ,EAAsB3B,GAAtB,CAA2B4B,MAAD,IAAY;AAC3C,aAAO,CAACrF,gBAAgB,CAACoF,QAAQ,CAACC,MAAD,CAAR,CAAiBzB,MAAlB,CAAjB,EAA4C5D,gBAAgB,CAACoF,QAAQ,CAACC,MAAD,CAAR,CAAiBxB,MAAlB,CAA5D,CAAP;AACD,KAFM,CAAP;AAGD,GAR0C,EAQxC,CAACoB,oBAAD,EAAuBtF,OAAvB,CARwC,CAA3C;AAUA,QAAM2F,YAAY,GAAGhH,OAAO,CAC1B,MAAM6G,SAAS,CAACI,MAAV,CAAiBb,cAAjB,EAAiCa,MAAjC,CAAwCd,WAAxC,CADoB,EAE1B,CAACC,cAAD,EAAiBD,WAAjB,EAA8BU,SAA9B,CAF0B,CAA5B;AAKA,SAAO7G,OAAO,CAAC,MAAM;AACnB;AACA,UAAMkH,KAAK,GAAGF,YAAY,CAACG,MAAb,CAAuD,CAACC,IAAD,EAAO,CAACvB,MAAD,EAASC,MAAT,CAAP,KAA4B;AAC/F,YAAMuB,MAAM,GAAGxB,MAAM,CAACyB,WAAP,CAAmBxB,MAAnB,CAAf;AACA,YAAMyB,GAAG,GAAGF,MAAM,GAAI,GAAExB,MAAM,CAACvE,OAAQ,IAAGwE,MAAM,CAACxE,OAAQ,EAAvC,GAA4C,GAAEwE,MAAM,CAACxE,OAAQ,IAAGuE,MAAM,CAACvE,OAAQ,EAAjG;AACA,UAAI8F,IAAI,CAACG,GAAD,CAAR,EAAe,OAAOH,IAAP;AACfA,MAAAA,IAAI,CAACG,GAAD,CAAJ,GAAYF,MAAM,GAAG,CAACxB,MAAD,EAASC,MAAT,CAAH,GAAsB,CAACA,MAAD,EAASD,MAAT,CAAxC;AACA,aAAOuB,IAAP;AACD,KANa,EAMX,EANW,CAAd;AAQA,WAAOnC,MAAM,CAACoB,IAAP,CAAYa,KAAZ,EAAmB/B,GAAnB,CAAwBoC,GAAD,IAASL,KAAK,CAACK,GAAD,CAArC,CAAP;AACD,GAXa,EAWX,CAACP,YAAD,CAXW,CAAd;AAYD;;KA9Ded,oB;UACM1F,kB,EACLD,Y,EA+BcJ,c","sourcesContent":["import { Percent, Token } from '@uniswap/sdk-core'\nimport { computePairAddress, Pair } from '@uniswap/v2-sdk'\nimport { L2_CHAIN_IDS } from 'constants/chains'\nimport { SupportedLocale } from 'constants/locales'\nimport { L2_DEADLINE_FROM_NOW } from 'constants/misc'\nimport JSBI from 'jsbi'\nimport { useCallback, useMemo } from 'react'\nimport { shallowEqual } from 'react-redux'\nimport { useAppDispatch, useAppSelector } from 'state/hooks'\n\nimport { V2_FACTORY_ADDRESSES } from '../../constants/addresses'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from '../../constants/routing'\nimport { useAllTokens } from '../../hooks/Tokens'\nimport { useActiveWeb3React } from '../../hooks/web3'\nimport { AppState } from '../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  updateHideClosedPositions,\n  updateUserClientSideRouter,\n  updateUserDarkMode,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserLocale,\n  updateUserSlippageTolerance,\n} from './actions'\n\nfunction serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nfunction deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name\n  )\n}\n\nexport function useIsDarkMode(): boolean {\n  const { userDarkMode, matchesDarkMode } = useAppSelector(\n    ({ user: { matchesDarkMode, userDarkMode } }) => ({\n      userDarkMode,\n      matchesDarkMode,\n    }),\n    shallowEqual\n  )\n\n  return userDarkMode === null ? matchesDarkMode : userDarkMode\n}\n\nexport function useDarkModeManager(): [boolean, () => void] {\n  const dispatch = useAppDispatch()\n  const darkMode = useIsDarkMode()\n\n  const toggleSetDarkMode = useCallback(() => {\n    dispatch(updateUserDarkMode({ userDarkMode: !darkMode }))\n  }, [darkMode, dispatch])\n\n  return [darkMode, toggleSetDarkMode]\n}\n\nexport function useUserLocale(): SupportedLocale | null {\n  return useAppSelector((state) => state.user.userLocale)\n}\n\nexport function useUserLocaleManager(): [SupportedLocale | null, (newLocale: SupportedLocale) => void] {\n  const dispatch = useAppDispatch()\n  const locale = useUserLocale()\n\n  const setLocale = useCallback(\n    (newLocale: SupportedLocale) => {\n      dispatch(updateUserLocale({ userLocale: newLocale }))\n    },\n    [dispatch]\n  )\n\n  return [locale, setLocale]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useAppSelector((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useAppDispatch()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useClientSideRouter(): [boolean, (userClientSideRouter: boolean) => void] {\n  const dispatch = useAppDispatch()\n\n  const clientSideRouter = useAppSelector((state) => Boolean(state.user.userClientSideRouter))\n\n  const setClientSideRouter = useCallback(\n    (newClientSideRouter: boolean) => {\n      dispatch(updateUserClientSideRouter({ userClientSideRouter: newClientSideRouter }))\n    },\n    [dispatch]\n  )\n\n  return [clientSideRouter, setClientSideRouter]\n}\n\nexport function useSetUserSlippageTolerance(): (slippageTolerance: Percent | 'auto') => void {\n  const dispatch = useAppDispatch()\n\n  return useCallback(\n    (userSlippageTolerance: Percent | 'auto') => {\n      let value: 'auto' | number\n      try {\n        value =\n          userSlippageTolerance === 'auto' ? 'auto' : JSBI.toNumber(userSlippageTolerance.multiply(10_000).quotient)\n      } catch (error) {\n        value = 'auto'\n      }\n      dispatch(\n        updateUserSlippageTolerance({\n          userSlippageTolerance: value,\n        })\n      )\n    },\n    [dispatch]\n  )\n}\n\n/**\n * Return the user's slippage tolerance, from the redux store, and a function to update the slippage tolerance\n */\nexport function useUserSlippageTolerance(): Percent | 'auto' {\n  const userSlippageTolerance = useAppSelector((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  return useMemo(\n    () => (userSlippageTolerance === 'auto' ? 'auto' : new Percent(userSlippageTolerance, 10_000)),\n    [userSlippageTolerance]\n  )\n}\n\nexport function useUserHideClosedPositions(): [boolean, (newHideClosedPositions: boolean) => void] {\n  const dispatch = useAppDispatch()\n\n  const hideClosedPositions = useAppSelector((state) => state.user.userHideClosedPositions)\n\n  const setHideClosedPositions = useCallback(\n    (newHideClosedPositions: boolean) => {\n      dispatch(updateHideClosedPositions({ userHideClosedPositions: newHideClosedPositions }))\n    },\n    [dispatch]\n  )\n\n  return [hideClosedPositions, setHideClosedPositions]\n}\n\n/**\n * Same as above but replaces the auto with a default value\n * @param defaultSlippageTolerance the default value to replace auto with\n */\nexport function useUserSlippageToleranceWithDefault(defaultSlippageTolerance: Percent): Percent {\n  const allowedSlippage = useUserSlippageTolerance()\n  return useMemo(\n    () => (allowedSlippage === 'auto' ? defaultSlippageTolerance : allowedSlippage),\n    [allowedSlippage, defaultSlippageTolerance]\n  )\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useAppDispatch()\n  const userDeadline = useAppSelector((state) => state.user.userDeadline)\n  const onL2 = Boolean(chainId && L2_CHAIN_IDS.includes(chainId))\n  const deadline = onL2 ? L2_DEADLINE_FROM_NOW : userDeadline\n\n  const setUserDeadline = useCallback(\n    (userDeadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline }))\n    },\n    [dispatch]\n  )\n\n  return [deadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useAppDispatch()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useAppDispatch()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useAppSelector(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useAppDispatch()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useURLWarningVisible(): boolean {\n  return useAppSelector((state: AppState) => state.user.URLWarningVisible)\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  if (tokenA.chainId !== tokenB.chainId) throw new Error('Not matching chain IDs')\n  if (tokenA.equals(tokenB)) throw new Error('Tokens cannot be equal')\n  if (!V2_FACTORY_ADDRESSES[tokenA.chainId]) throw new Error('No V2 factory address on this chain')\n\n  return new Token(\n    tokenA.chainId,\n    computePairAddress({ factoryAddress: V2_FACTORY_ADDRESSES[tokenA.chainId], tokenA, tokenB }),\n    18,\n    'UNI-V2',\n    'Uniswap V2'\n  )\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? Object.keys(tokens).flatMap((tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  } else {\n                    return [base, token]\n                  }\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId]\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useAppSelector(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs]\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n"]},"metadata":{},"sourceType":"module"}