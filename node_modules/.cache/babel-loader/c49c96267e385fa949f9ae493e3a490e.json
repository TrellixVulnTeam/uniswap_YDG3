{"ast":null,"code":"import _styled from \"styled-components\";\nvar _jsxFileName = \"/Users/safahi/Downloads/interface-4.30.1/src/components/Toggle/ListToggle.tsx\";\nimport { Trans } from \"@lingui/react\";\nimport { ThemedText } from '../../theme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Wrapper = _styled.button.withConfig({\n  displayName: \"ListToggle__Wrapper\",\n  componentId: \"sc-1ahjqam-0\"\n})([\"border-radius:20px;border:none;background:\", \";display:flex;width:fit-content;cursor:pointer;outline:none;padding:0.4rem 0.4rem;align-items:center;\"], ({\n  theme\n}) => theme.bg1);\n\nconst ToggleElement = _styled.span.withConfig({\n  displayName: \"ListToggle__ToggleElement\",\n  componentId: \"sc-1ahjqam-1\"\n})([\"border-radius:50%;height:24px;width:24px;background-color:\", \";:hover{opacity:0.8;}\"], ({\n  isActive,\n  bgColor,\n  theme\n}) => isActive ? bgColor : theme.bg4);\n\nconst StatusText = _styled(ThemedText.Main).withConfig({\n  displayName: \"ListToggle__StatusText\",\n  componentId: \"sc-1ahjqam-2\"\n})([\"margin:0 10px;width:24px;color:\", \";\"], ({\n  theme,\n  isActive\n}) => isActive ? theme.text1 : theme.text3);\n\nexport default function ListToggle({\n  id,\n  isActive,\n  bgColor,\n  toggle\n}) {\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    id: id,\n    isActive: isActive,\n    onClick: toggle,\n    children: [isActive && /*#__PURE__*/_jsxDEV(StatusText, {\n      fontWeight: \"600\",\n      margin: \"0 6px\",\n      isActive: true,\n      children: /*#__PURE__*/_jsxDEV(Trans, {\n        id: \"ON\"\n      }, void 0, false, void 0, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToggleElement, {\n      isActive: isActive,\n      bgColor: bgColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), !isActive && /*#__PURE__*/_jsxDEV(StatusText, {\n      fontWeight: \"600\",\n      margin: \"0 6px\",\n      isActive: false,\n      children: /*#__PURE__*/_jsxDEV(Trans, {\n        id: \"OFF\"\n      }, void 0, false, void 0, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_c = ListToggle;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListToggle\");","map":{"version":3,"sources":["/Users/safahi/Downloads/interface-4.30.1/src/components/Toggle/ListToggle.tsx"],"names":["ThemedText","Wrapper","styled","button","theme","bg1","ToggleElement","span","isActive","bgColor","bg4","StatusText","Main","text1","text3","ListToggle","id","toggle"],"mappings":";;;AAGA,SAASA,UAAT,QAA2B,aAA3B;;;AAEA,MAAMC,OAAO,GAAGC,OAAM,CAACC,MAAV;AAAA;AAAA;AAAA,4JAGG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,GAHxB,CAAb;;AAYA,MAAMC,aAAa,GAAGJ,OAAM,CAACK,IAAV;AAAA;AAAA;AAAA,4FAIG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,OAAZ;AAAqBL,EAAAA;AAArB,CAAD,KAAmCI,QAAQ,GAAGC,OAAH,GAAaL,KAAK,CAACM,GAJjE,CAAnB;;AAUA,MAAMC,UAAU,GAAGT,OAAM,CAACF,UAAU,CAACY,IAAZ,CAAT;AAAA;AAAA;AAAA,6CAGL,CAAC;AAAER,EAAAA,KAAF;AAASI,EAAAA;AAAT,CAAD,KAA0BA,QAAQ,GAAGJ,KAAK,CAACS,KAAT,GAAiBT,KAAK,CAACU,KAHpD,CAAhB;;AAaA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA,EAAF;AAAMR,EAAAA,QAAN;AAAgBC,EAAAA,OAAhB;AAAyBQ,EAAAA;AAAzB,CAApB,EAAoE;AACjF,sBACE,QAAC,OAAD;AAAS,IAAA,EAAE,EAAED,EAAb;AAAiB,IAAA,QAAQ,EAAER,QAA3B;AAAqC,IAAA,OAAO,EAAES,MAA9C;AAAA,eACGT,QAAQ,iBACP,QAAC,UAAD;AAAY,MAAA,UAAU,EAAC,KAAvB;AAA6B,MAAA,MAAM,EAAC,OAApC;AAA4C,MAAA,QAAQ,EAAE,IAAtD;AAAA,6BACE;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFJ,eAME,QAAC,aAAD;AAAe,MAAA,QAAQ,EAAEA,QAAzB;AAAmC,MAAA,OAAO,EAAEC;AAA5C;AAAA;AAAA;AAAA;AAAA,YANF,EAOG,CAACD,QAAD,iBACC,QAAC,UAAD;AAAY,MAAA,UAAU,EAAC,KAAvB;AAA6B,MAAA,MAAM,EAAC,OAApC;AAA4C,MAAA,QAAQ,EAAE,KAAtD;AAAA,6BACE;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;KAhBuBO,U","sourcesContent":["import { Trans } from '@lingui/macro'\nimport styled from 'styled-components/macro'\n\nimport { ThemedText } from '../../theme'\n\nconst Wrapper = styled.button<{ isActive?: boolean; activeElement?: boolean }>`\n  border-radius: 20px;\n  border: none;\n  background: ${({ theme }) => theme.bg1};\n  display: flex;\n  width: fit-content;\n  cursor: pointer;\n  outline: none;\n  padding: 0.4rem 0.4rem;\n  align-items: center;\n`\n\nconst ToggleElement = styled.span<{ isActive?: boolean; bgColor?: string }>`\n  border-radius: 50%;\n  height: 24px;\n  width: 24px;\n  background-color: ${({ isActive, bgColor, theme }) => (isActive ? bgColor : theme.bg4)};\n  :hover {\n    opacity: 0.8;\n  }\n`\n\nconst StatusText = styled(ThemedText.Main)<{ isActive?: boolean }>`\n  margin: 0 10px;\n  width: 24px;\n  color: ${({ theme, isActive }) => (isActive ? theme.text1 : theme.text3)};\n`\n\ninterface ToggleProps {\n  id?: string\n  isActive: boolean\n  bgColor: string\n  toggle: () => void\n}\n\nexport default function ListToggle({ id, isActive, bgColor, toggle }: ToggleProps) {\n  return (\n    <Wrapper id={id} isActive={isActive} onClick={toggle}>\n      {isActive && (\n        <StatusText fontWeight=\"600\" margin=\"0 6px\" isActive={true}>\n          <Trans>ON</Trans>\n        </StatusText>\n      )}\n      <ToggleElement isActive={isActive} bgColor={bgColor} />\n      {!isActive && (\n        <StatusText fontWeight=\"600\" margin=\"0 6px\" isActive={false}>\n          <Trans>OFF</Trans>\n        </StatusText>\n      )}\n    </Wrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}